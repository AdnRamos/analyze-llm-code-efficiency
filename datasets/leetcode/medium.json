[
    {
        "id": 3572,
        "slug": "maximize-ysum-by-picking-a-triplet-of-distinct-xvalues",
        "url": "https://leetcode.com/problems/maximize-ysum-by-picking-a-triplet-of-distinct-xvalues/",
        "titulo": "Maximize Y‑Sum by Picking a Triplet of Distinct X‑Values",
        "enunciado": "You are given two integer arrays \nx\n and \ny\n, each of length \nn\n. You must choose three \ndistinct\n indices \ni\n, \nj\n, and \nk\n such that:\n\n\n\n\nx[i] != x[j]\n\n\nx[j] != x[k]\n\n\nx[k] != x[i]\n\n\n\n\nYour goal is to \nmaximize\n the value of \ny[i] + y[j] + y[k]\n under these conditions. Return the \nmaximum\n possible sum that can be obtained by choosing such a triplet of indices.\n\n\nIf no such triplet exists, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nx = [1,2,1,3,2], y = [5,3,4,6,2]\n\n\nOutput:\n \n14\n\n\nExplanation:\n\n\n\n\nChoose \ni = 0\n (\nx[i] = 1\n, \ny[i] = 5\n), \nj = 1\n (\nx[j] = 2\n, \ny[j] = 3\n), \nk = 3\n (\nx[k] = 3\n, \ny[k] = 6\n).\n\n\nAll three values chosen from \nx\n are distinct. \n5 + 3 + 6 = 14\n is the maximum we can obtain. Hence, the output is 14.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nx = [1,2,1,2], y = [4,5,6,7]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\n\n\nThere are only two distinct values in \nx\n. Hence, the output is -1.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == x.length == y.length\n\n\n3 <= n <= 10\n5\n\n\n1 <= x[i], y[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3573,
        "slug": "best-time-to-buy-and-sell-stock-v",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-v/",
        "titulo": "Best Time to Buy and Sell Stock V",
        "enunciado": "You are given an integer array \nprices\n where \nprices[i]\n is the price of a stock in dollars on the \ni\nth\n day, and an integer \nk\n.\n\n\nYou are allowed to make at most \nk\n transactions, where each transaction can be either of the following:\n\n\n\n\n\n\nNormal transaction\n: Buy on day \ni\n, then sell on a later day \nj\n where \ni < j\n. You profit \nprices[j] - prices[i]\n.\n\n\n\n\n\n\nShort selling transaction\n: Sell on day \ni\n, then buy back on a later day \nj\n where \ni < j\n. You profit \nprices[i] - prices[j]\n.\n\n\n\n\n\n\nNote\n that you must complete each transaction before starting another. Additionally, you can't buy or sell on the same day you are selling or buying back as part of a previous transaction.\n\n\nReturn the \nmaximum\n total profit you can earn by making \nat most\n \nk\n transactions.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nprices = [1,7,9,8,2], k = 2\n\n\nOutput:\n \n14\n\n\nExplanation:\n\nWe can make $14 of profit through 2 transactions:\n\n\n\n\nA normal transaction: buy the stock on day 0 for $1 then sell it on day 2 for $9.\n\n\nA short selling transaction: sell the stock on day 3 for $8 then buy back on day 4 for $2.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nprices = [12,16,19,19,8,1,19,13,9], k = 3\n\n\nOutput:\n \n36\n\n\nExplanation:\n\nWe can make $36 of profit through 3 transactions:\n\n\n\n\nA normal transaction: buy the stock on day 0 for $12 then sell it on day 2 for $19.\n\n\nA short selling transaction: sell the stock on day 3 for $19 then buy back on day 4 for $8.\n\n\nA normal transaction: buy the stock on day 5 for $1 then sell it on day 6 for $19.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= prices.length <= 10\n3\n\n\n1 <= prices[i] <= 10\n9\n\n\n1 <= k <= prices.length / 2",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3567,
        "slug": "minimum-absolute-difference-in-sliding-submatrix",
        "url": "https://leetcode.com/problems/minimum-absolute-difference-in-sliding-submatrix/",
        "titulo": "Minimum Absolute Difference in Sliding Submatrix",
        "enunciado": "You are given an \nm x n\n integer matrix \ngrid\n and an integer \nk\n.\n\n\nFor every contiguous \nk x k\n \nsubmatrix\n of \ngrid\n, compute the \nminimum absolute\n difference between any two \ndistinct\n values within that \nsubmatrix\n.\n\n\nReturn a 2D array \nans\n of size \n(m - k + 1) x (n - k + 1)\n, where \nans[i][j]\n is the minimum absolute difference in the submatrix whose top-left corner is \n(i, j)\n in \ngrid\n.\n\n\nNote\n: If all elements in the submatrix have the same value, the answer will be 0.\n\nA submatrix \n(x1, y1, x2, y2)\n is a matrix that is formed by choosing all cells \nmatrix[x][y]\n where \nx1 <= x <= x2\n and \ny1 <= y <= y2\n.\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,8],[3,-2]], k = 2\n\n\nOutput:\n \n[[2]]\n\n\nExplanation:\n\n\n\n\nThere is only one possible \nk x k\n submatrix: \n[[1, 8], [3, -2]]\n.\n\n\nDistinct values in the submatrix are\n \n[1, 8, 3, -2]\n.\n\n\nThe minimum absolute difference in the submatrix is \n|1 - 3| = 2\n. Thus, the answer is \n[[2]]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[3,-1]], k = 1\n\n\nOutput:\n \n[[0,0]]\n\n\nExplanation:\n\n\n\n\nBoth \nk x k\n submatrix has only one distinct element.\n\n\nThus, the answer is \n[[0, 0]]\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1,-2,3],[2,3,5]], k = 2\n\n\nOutput:\n \n[[1,2]]\n\n\nExplanation:\n\n\n\n\nThere are two possible \nk × k\n submatrix:\n\n\t\n\n\nStarting at \n(0, 0)\n: \n[[1, -2], [2, 3]]\n.\n\n\t\t\n\n\nDistinct values in the submatrix are \n[1, -2, 2, 3]\n.\n\n\nThe minimum absolute difference in the submatrix is \n|1 - 2| = 1\n.\n\n\n\n\n\n\nStarting at \n(0, 1)\n: \n[[-2, 3], [3, 5]]\n.\n\t\t\n\n\nDistinct values in the submatrix are \n[-2, 3, 5]\n.\n\n\nThe minimum absolute difference in the submatrix is \n|3 - 5| = 2\n.\n\n\n\n\n\n\n\n\n\n\nThus, the answer is \n[[1, 2]]\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m == grid.length <= 30\n\n\n1 <= n == grid[i].length <= 30\n\n\n-10\n5\n <= grid[i][j] <= 10\n5\n\n\n1 <= k <= min(m, n)",
        "temas": [
            "Array",
            "Sorting",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3576,
        "slug": "transform-array-to-all-equal-elements",
        "url": "https://leetcode.com/problems/transform-array-to-all-equal-elements/",
        "titulo": "Transform Array to All Equal Elements",
        "enunciado": "You are given an integer array \nnums\n of size \nn\n containing only \n1\n and \n-1\n, and an integer \nk\n.\n\n\nYou can perform the following operation at most \nk\n times:\n\n\n\n\n\n\nChoose an index \ni\n (\n0 <= i < n - 1\n), and \nmultiply\n both \nnums[i]\n and \nnums[i + 1]\n by \n-1\n.\n\n\n\n\n\n\nNote\n that you can choose the same index \ni\n more than once in \ndifferent\n operations.\n\n\nReturn \ntrue\n if it is possible to make all elements of the array \nequal\n after at most \nk\n operations, and \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,-1,1,-1,1], k = 3\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\nWe can make all elements in the array equal in 2 operations as follows:\n\n\n\n\nChoose index \ni = 1\n, and multiply both \nnums[1]\n and \nnums[2]\n by -1. Now \nnums = [1,1,-1,-1,1]\n.\n\n\nChoose index \ni = 2\n, and multiply both \nnums[2]\n and \nnums[3]\n by -1. Now \nnums = [1,1,1,1,1]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [-1,-1,-1,1,1,1], k = 5\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nIt is not possible to make all array elements equal in at most 5 operations.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\nnums[i]\n is either -1 or 1.\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3568,
        "slug": "minimum-moves-to-clean-the-classroom",
        "url": "https://leetcode.com/problems/minimum-moves-to-clean-the-classroom/",
        "titulo": "Minimum Moves to Clean the Classroom",
        "enunciado": "You are given an \nm x n\n grid \nclassroom\n where a student volunteer is tasked with cleaning up litter scattered around the room. Each cell in the grid is one of the following:\n\n\n\n\n'S'\n: Starting position of the student\n\n\n'L'\n: Litter that must be collected (once collected, the cell becomes empty)\n\n\n'R'\n: Reset area that restores the student's energy to full capacity, regardless of their current energy level (can be used multiple times)\n\n\n'X'\n: Obstacle the student cannot pass through\n\n\n'.'\n: Empty space\n\n\n\n\nYou are also given an integer \nenergy\n, representing the student's maximum energy capacity. The student starts with this energy from the starting position \n'S'\n.\n\n\nEach move to an adjacent cell (up, down, left, or right) costs 1 unit of energy. If the energy reaches 0, the student can only continue if they are on a reset area \n'R'\n, which resets the energy to its \nmaximum\n capacity \nenergy\n.\n\n\nReturn the \nminimum\n number of moves required to collect all litter items, or \n-1\n if it's impossible.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nclassroom = [\"S.\", \"XL\"], energy = 2\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nThe student starts at cell \n(0, 0)\n with 2 units of energy.\n\n\nSince cell \n(1, 0)\n contains an obstacle 'X', the student cannot move directly downward.\n\n\nA valid sequence of moves to collect all litter is as follows:\n\t\n\n\nMove 1: From \n(0, 0)\n → \n(0, 1)\n with 1 unit of energy and 1 unit remaining.\n\n\nMove 2: From \n(0, 1)\n → \n(1, 1)\n to collect the litter \n'L'\n.\n\n\n\n\n\n\nThe student collects all the litter using 2 moves. Thus, the output is 2.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nclassroom = [\"LS\", \"RL\"], energy = 4\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nThe student starts at cell \n(0, 1)\n with 4 units of energy.\n\n\nA valid sequence of moves to collect all litter is as follows:\n\t\n\n\nMove 1: From \n(0, 1)\n → \n(0, 0)\n to collect the first litter \n'L'\n with 1 unit of energy used and 3 units remaining.\n\n\nMove 2: From \n(0, 0)\n → \n(1, 0)\n to \n'R'\n to reset and restore energy back to 4.\n\n\nMove 3: From \n(1, 0)\n → \n(1, 1)\n to collect the second litter \n'L'\n.\n\n\n\n\n\n\nThe student collects all the litter using 3 moves. Thus, the output is 3.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nclassroom = [\"L.S\", \"RXL\"], energy = 3\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nNo valid path collects all \n'L'\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m == classroom.length <= 20\n\n\n1 <= n == classroom[i].length <= 20\n\n\nclassroom[i][j]\n is one of \n'S'\n, \n'L'\n, \n'R'\n, \n'X'\n, or \n'.'\n\n\n1 <= energy <= 50\n\n\nThere is exactly \none\n \n'S'\n in the grid.\n\n\nThere are \nat most\n 10 \n'L'\n cells in the grid.",
        "temas": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3577,
        "slug": "count-the-number-of-computer-unlocking-permutations",
        "url": "https://leetcode.com/problems/count-the-number-of-computer-unlocking-permutations/",
        "titulo": "Count the Number of Computer Unlocking Permutations",
        "enunciado": "You are given an array \ncomplexity\n of length \nn\n.\n\n\nThere are \nn\n \nlocked\n computers in a room with labels from 0 to \nn - 1\n, each with its own \nunique\n password. The password of the computer \ni\n has a complexity \ncomplexity[i]\n.\n\n\nThe password for the computer labeled 0 is \nalready\n decrypted and serves as the root. All other computers must be unlocked using it or another previously unlocked computer, following this information:\n\n\n\n\nYou can decrypt the password for the computer \ni\n using the password for computer \nj\n, where \nj\n is \nany\n integer less than \ni\n with a lower complexity. (i.e. \nj < i\n and \ncomplexity[j] < complexity[i]\n)\n\n\nTo decrypt the password for computer \ni\n, you must have already unlocked a computer \nj\n such that \nj < i\n and \ncomplexity[j] < complexity[i]\n.\n\n\n\n\nFind the number of \npermutations\n of \n[0, 1, 2, ..., (n - 1)]\n that represent a valid order in which the computers can be unlocked, starting from computer 0 as the only initially unlocked one.\n\n\nSince the answer may be large, return it \nmodulo\n 10\n9\n + 7.\n\n\nNote\n that the password for the computer \nwith label\n 0 is decrypted, and \nnot\n the computer with the first position in the permutation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncomplexity = [1,2,3]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe valid permutations are:\n\n\n\n\n[0, 1, 2]\n\t\n\n\nUnlock computer 0 first with root password.\n\n\nUnlock computer 1 with password of computer 0 since \ncomplexity[0] < complexity[1]\n.\n\n\nUnlock computer 2 with password of computer 1 since \ncomplexity[1] < complexity[2]\n.\n\n\n\n\n\n\n[0, 2, 1]\n\t\n\n\nUnlock computer 0 first with root password.\n\n\nUnlock computer 2 with password of computer 0 since \ncomplexity[0] < complexity[2]\n.\n\n\nUnlock computer 1 with password of computer 0 since \ncomplexity[0] < complexity[1]\n.\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncomplexity = [3,3,3,4,4,4]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere are no possible permutations which can unlock all computers.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= complexity.length <= 10\n5\n\n\n1 <= complexity[i] <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Brainteaser",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3561,
        "slug": "resulting-string-after-adjacent-removals",
        "url": "https://leetcode.com/problems/resulting-string-after-adjacent-removals/",
        "titulo": "Resulting String After Adjacent Removals",
        "enunciado": "You are given a string \ns\n consisting of lowercase English letters.\n\n\nYou \nmust\n repeatedly perform the following operation while the string \ns\n has \nat least\n two \nconsecutive \ncharacters:\n\n\n\n\nRemove the \nleftmost\n pair of \nadjacent\n characters in the string that are \nconsecutive\n in the alphabet, in either order (e.g., \n'a'\n and \n'b'\n, or \n'b'\n and \n'a'\n).\n\n\nShift the remaining characters to the left to fill the gap.\n\n\n\n\nReturn the resulting string after no more operations can be performed.\n\n\nNote:\n Consider the alphabet as circular, thus \n'a'\n and \n'z'\n are consecutive.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abc\"\n\n\nOutput:\n \n\"c\"\n\n\nExplanation:\n\n\n\n\nRemove \n\"ab\"\n from the string, leaving \n\"c\"\n as the remaining string.\n\n\nNo further operations are possible. Thus, the resulting string after all possible removals is \n\"c\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"adcb\"\n\n\nOutput:\n \n\"\"\n\n\nExplanation:\n\n\n\n\nRemove \n\"dc\"\n from the string, leaving \n\"ab\"\n as the remaining string.\n\n\nRemove \n\"ab\"\n from the string, leaving \n\"\"\n as the remaining string.\n\n\nNo further operations are possible. Thus, the resulting string after all possible removals is \n\"\"\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"zadb\"\n\n\nOutput:\n \n\"db\"\n\n\nExplanation:\n\n\n\n\nRemove \n\"za\"\n from the string, leaving \n\"db\"\n as the remaining string.\n\n\nNo further operations are possible. Thus, the resulting string after all possible removals is \n\"db\"\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3557,
        "slug": "find-maximum-number-of-non-intersecting-substrings",
        "url": "https://leetcode.com/problems/find-maximum-number-of-non-intersecting-substrings/",
        "titulo": "Find Maximum Number of Non Intersecting Substrings",
        "enunciado": "You are given a string \nword\n.\n\n\nReturn the \nmaximum\n number of non-intersecting \nsubstrings\n of word that are at \nleast\n four characters long and start and end with the same letter.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"abcdeafdef\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe two substrings are \n\"abcdea\"\n and \n\"fdef\"\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"bcdaaaab\"\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe only substring is \n\"aaaa\"\n. Note that we cannot \nalso\n choose \n\"bcdaaaab\"\n since it intersects with the other substring.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 2 * 10\n5\n\n\nword\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3543,
        "slug": "maximum-weighted-k-edge-path",
        "url": "https://leetcode.com/problems/maximum-weighted-k-edge-path/",
        "titulo": "Maximum Weighted K-Edge Path",
        "enunciado": "You are given an integer \nn\n and a \nDirected Acyclic Graph (DAG)\n with \nn\n nodes labeled from 0 to \nn - 1\n. This is represented by a 2D array \nedges\n, where \nedges[i] = [u\ni\n, v\ni\n, w\ni\n]\n indicates a directed edge from node \nu\ni\n to \nv\ni\n with weight \nw\ni\n.\n\n\nYou are also given two integers, \nk\n and \nt\n.\n\n\nYour task is to determine the \nmaximum\n possible sum of edge weights for any path in the graph such that:\n\n\n\n\nThe path contains \nexactly\n \nk\n edges.\n\n\nThe total sum of edge weights in the path is \nstrictly\n less than \nt\n.\n\n\n\n\nReturn the \nmaximum\n possible sum of weights for such a path. If no such path exists, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 3, edges = [[0,1,1],[1,2,2]], k = 2, t = 4\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\n\n\nThe only path with \nk = 2\n edges is \n0 -> 1 -> 2\n with weight \n1 + 2 = 3 < t\n.\n\n\nThus, the maximum possible sum of weights less than \nt\n is 3.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 3, edges = [[0,1,2],[0,2,3]], k = 1, t = 3\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\n\n\nThere are two paths with \nk = 1\n edge:\n\n\t\n\n\n0 -> 1\n with weight \n2 < t\n.\n\n\n0 -> 2\n with weight \n3 = t\n, which is not strictly less than \nt\n.\n\n\n\n\n\n\nThus, the maximum possible sum of weights less than \nt\n is 2.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 3, edges = [[0,1,6],[1,2,8]], k = 1, t = 6\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\n\n\n\n\nThere are two paths with k = 1 edge:\n\t\n\n\n0 -> 1\n with weight \n6 = t\n, which is not strictly less than \nt\n.\n\n\n1 -> 2\n with weight \n8 > t\n, which is not strictly less than \nt\n.\n\n\n\n\n\n\nSince there is no path with sum of weights strictly less than \nt\n, the answer is -1.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 300\n\n\n0 <= edges.length <= 300\n\n\nedges[i] = [u\ni\n, v\ni\n, w\ni\n]\n\n\n0 <= u\ni\n, v\ni\n < n\n\n\nu\ni\n != v\ni\n\n\n1 <= w\ni\n <= 10\n\n\n0 <= k <= 300\n\n\n1 <= t <= 600\n\n\nThe input graph is \nguaranteed\n to be a \nDAG\n.\n\n\nThere are no duplicate edges.",
        "temas": [
            "Hash Table",
            "Dynamic Programming",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 3546,
        "slug": "equal-sum-grid-partition-i",
        "url": "https://leetcode.com/problems/equal-sum-grid-partition-i/",
        "titulo": "Equal Sum Grid Partition I",
        "enunciado": "You are given an \nm x n\n matrix \ngrid\n of positive integers. Your task is to determine if it is possible to make \neither one horizontal or one vertical cut\n on the grid such that:\n\n\n\n\nEach of the two resulting sections formed by the cut is \nnon-empty\n.\n\n\nThe sum of the elements in both sections is \nequal\n.\n\n\n\n\nReturn \ntrue\n if such a partition exists; otherwise return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,4],[2,3]]\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nA horizontal cut between row 0 and row 1 results in two non-empty sections, each with a sum of 5. Thus, the answer is \ntrue\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[1,3],[2,4]]\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nNo horizontal or vertical cut results in two non-empty sections with equal sums. Thus, the answer is \nfalse\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m == grid.length <= 10\n5\n\n\n1 <= n == grid[i].length <= 10\n5\n\n\n2 <= m * n <= 10\n5\n\n\n1 <= grid[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Matrix",
            "Enumeration",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3551,
        "slug": "minimum-swaps-to-sort-by-digit-sum",
        "url": "https://leetcode.com/problems/minimum-swaps-to-sort-by-digit-sum/",
        "titulo": "Minimum Swaps to Sort by Digit Sum",
        "enunciado": "You are given an array \nnums\n of \ndistinct\n positive integers. You need to sort the array in \nincreasing\n order based on the sum of the digits of each number. If two numbers have the same digit sum, the \nsmaller\n number appears first in the sorted order.\n\n\nReturn the \nminimum\n number of swaps required to rearrange \nnums\n into this sorted order.\n\n\nA \nswap\n is defined as exchanging the values at two distinct positions in the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [37,100]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nCompute the digit sum for each integer: \n[3 + 7 = 10, 1 + 0 + 0 = 1] → [10, 1]\n\n\nSort the integers based on digit sum: \n[100, 37]\n. Swap \n37\n with \n100\n to obtain the sorted order.\n\n\nThus, the minimum number of swaps required to rearrange \nnums\n is 1.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [22,14,33,7]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\nCompute the digit sum for each integer: \n[2 + 2 = 4, 1 + 4 = 5, 3 + 3 = 6, 7 = 7] → [4, 5, 6, 7]\n\n\nSort the integers based on digit sum: \n[22, 14, 33, 7]\n. The array is already sorted.\n\n\nThus, the minimum number of swaps required to rearrange \nnums\n is 0.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [18,43,34,16]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nCompute the digit sum for each integer: \n[1 + 8 = 9, 4 + 3 = 7, 3 + 4 = 7, 1 + 6 = 7] → [9, 7, 7, 7]\n\n\nSort the integers based on digit sum: \n[16, 34, 43, 18]\n. Swap \n18\n with \n16\n, and swap \n43\n with \n34\n to obtain the sorted order.\n\n\nThus, the minimum number of swaps required to rearrange \nnums\n is 2.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\nnums\n consists of \ndistinct\n positive integers.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3558,
        "slug": "number-of-ways-to-assign-edge-weights-i",
        "url": "https://leetcode.com/problems/number-of-ways-to-assign-edge-weights-i/",
        "titulo": "Number of Ways to Assign Edge Weights I",
        "enunciado": "There is an undirected tree with \nn\n nodes labeled from 1 to \nn\n, rooted at node 1. The tree is represented by a 2D integer array \nedges\n of length \nn - 1\n, where \nedges[i] = [u\ni\n, v\ni\n]\n indicates that there is an edge between nodes \nu\ni\n and \nv\ni\n.\n\n\nInitially, all edges have a weight of 0. You must assign each edge a weight of either \n1\n or \n2\n.\n\n\nThe \ncost\n of a path between any two nodes \nu\n and \nv\n is the total weight of all edges in the path connecting them.\n\n\nSelect any one node \nx\n at the \nmaximum\n depth. Return the number of ways to assign edge weights in the path from node 1 to \nx\n such that its total cost is \nodd\n.\n\n\nSince the answer may be large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nNote:\n Ignore all edges \nnot\n in the path from node 1 to \nx\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \nedges = [[1,2]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nThe path from Node 1 to Node 2 consists of one edge (\n1 → 2\n).\n\n\nAssigning weight 1 makes the cost odd, while 2 makes it even. Thus, the number of valid assignments is 1.\n\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \nedges = [[1,2],[1,3],[3,4],[3,5]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nThe maximum depth is 2, with nodes 4 and 5 at the same depth. Either node can be selected for processing.\n\n\nFor example, the path from Node 1 to Node 4 consists of two edges (\n1 → 3\n and \n3 → 4\n).\n\n\nAssigning weights (1,2) or (2,1) results in an odd cost. Thus, the number of valid assignments is 2.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\nedges.length == n - 1\n\n\nedges[i] == [u\ni\n, v\ni\n]\n\n\n1 <= u\ni\n, v\ni\n <= n\n\n\nedges\n represents a valid tree.",
        "temas": [
            "Math",
            "Tree",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 3566,
        "slug": "partition-array-into-two-equal-product-subsets",
        "url": "https://leetcode.com/problems/partition-array-into-two-equal-product-subsets/",
        "titulo": "Partition Array into Two Equal Product Subsets",
        "enunciado": "You are given an integer array \nnums\n containing \ndistinct\n positive integers and an integer \ntarget\n.\n\n\nDetermine if you can partition \nnums\n into two \nnon-empty\n \ndisjoint\n \nsubsets\n, with each element belonging to \nexactly one\n subset, such that the product of the elements in each subset is equal to \ntarget\n.\n\n\nReturn \ntrue\n if such a partition exists and \nfalse\n otherwise.\n\nA \nsubset\n of an array is a selection of elements of the array.\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [3,1,6,8,4], target = 24\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n The subsets \n[3, 8]\n and \n[1, 6, 4]\n each have a product of 24. Hence, the output is true.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,5,3,7], target = 15\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n There is no way to partition \nnums\n into two non-empty disjoint subsets such that both subsets have a product of 15. Hence, the output is false.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 12\n\n\n1 <= target <= 10\n15\n\n\n1 <= nums[i] <= 100\n\n\nAll elements of \nnums\n are \ndistinct\n.",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Recursion",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3532,
        "slug": "path-existence-queries-in-a-graph-i",
        "url": "https://leetcode.com/problems/path-existence-queries-in-a-graph-i/",
        "titulo": "Path Existence Queries in a Graph I",
        "enunciado": "You are given an integer \nn\n representing the number of nodes in a graph, labeled from 0 to \nn - 1\n.\n\n\nYou are also given an integer array \nnums\n of length \nn\n sorted in \nnon-decreasing\n order, and an integer \nmaxDiff\n.\n\n\nAn \nundirected \nedge exists between nodes \ni\n and \nj\n if the \nabsolute\n difference between \nnums[i]\n and \nnums[j]\n is \nat most\n \nmaxDiff\n (i.e., \n|nums[i] - nums[j]| <= maxDiff\n).\n\n\nYou are also given a 2D integer array \nqueries\n. For each \nqueries[i] = [u\ni\n, v\ni\n]\n, determine whether there exists a path between nodes \nu\ni\n and \nv\ni\n.\n\n\nReturn a boolean array \nanswer\n, where \nanswer[i]\n is \ntrue\n if there exists a path between \nu\ni\n and \nv\ni\n in the \ni\nth\n query and \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 2, nums = [1,3], maxDiff = 1, queries = [[0,0],[0,1]]\n\n\nOutput:\n \n[true,false]\n\n\nExplanation:\n\n\n\n\nQuery \n[0,0]\n: Node 0 has a trivial path to itself.\n\n\nQuery \n[0,1]\n: There is no edge between Node 0 and Node 1 because \n|nums[0] - nums[1]| = |1 - 3| = 2\n, which is greater than \nmaxDiff\n.\n\n\nThus, the final answer after processing all the queries is \n[true, false]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 4, nums = [2,5,6,8], maxDiff = 2, queries = [[0,1],[0,2],[1,3],[2,3]]\n\n\nOutput:\n \n[false,false,true,true]\n\n\nExplanation:\n\n\nThe resulting graph is:\n\n\n\n\n\n\nQuery \n[0,1]\n: There is no edge between Node 0 and Node 1 because \n|nums[0] - nums[1]| = |2 - 5| = 3\n, which is greater than \nmaxDiff\n.\n\n\nQuery \n[0,2]\n: There is no edge between Node 0 and Node 2 because \n|nums[0] - nums[2]| = |2 - 6| = 4\n, which is greater than \nmaxDiff\n.\n\n\nQuery \n[1,3]\n: There is a path between Node 1 and Node 3 through Node 2 since \n|nums[1] - nums[2]| = |5 - 6| = 1\n and \n|nums[2] - nums[3]| = |6 - 8| = 2\n, both of which are within \nmaxDiff\n.\n\n\nQuery \n[2,3]\n: There is an edge between Node 2 and Node 3 because \n|nums[2] - nums[3]| = |6 - 8| = 2\n, which is equal to \nmaxDiff\n.\n\n\nThus, the final answer after processing all the queries is \n[false, false, true, true]\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5\n\n\nnums\n is sorted in \nnon-decreasing\n order.\n\n\n0 <= maxDiff <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i] == [u\ni\n, v\ni\n]\n\n\n0 <= u\ni\n, v\ni\n < n",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3552,
        "slug": "grid-teleportation-traversal",
        "url": "https://leetcode.com/problems/grid-teleportation-traversal/",
        "titulo": "Grid Teleportation Traversal",
        "enunciado": "You are given a 2D character grid \nmatrix\n of size \nm x n\n, represented as an array of strings, where \nmatrix[i][j]\n represents the cell at the intersection of the \ni\nth\n row and \nj\nth\n column. Each cell is one of the following:\n\n\n\n\n'.'\n representing an empty cell.\n\n\n'#'\n representing an obstacle.\n\n\nAn uppercase letter (\n'A'\n-\n'Z'\n) representing a teleportation portal.\n\n\n\n\nYou start at the top-left cell \n(0, 0)\n, and your goal is to reach the bottom-right cell \n(m - 1, n - 1)\n. You can move from the current cell to any adjacent cell (up, down, left, right) as long as the destination cell is within the grid bounds and is not an obstacle\n.\n\n\nIf you step on a cell containing a portal letter and you haven't used that portal letter before, you may instantly teleport to any other cell in the grid with the same letter. This teleportation does not count as a move, but each portal letter can be used\n at most \nonce during your journey.\n\n\nReturn the \nminimum\n number of moves required to reach the bottom-right cell. If it is not possible to reach the destination, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nmatrix = [\"A..\",\".A.\",\"...\"]\n\n\nOutput:\n 2\n\n\nExplanation:\n\n\n\n\n\n\nBefore the first move, teleport from \n(0, 0)\n to \n(1, 1)\n.\n\n\nIn the first move, move from \n(1, 1)\n to \n(1, 2)\n.\n\n\nIn the second move, move from \n(1, 2)\n to \n(2, 2)\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nmatrix = [\".#...\",\".#.#.\",\".#.#.\",\"...#.\"]\n\n\nOutput:\n \n13\n\n\nExplanation:\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m == matrix.length <= 10\n3\n\n\n1 <= n == matrix[i].length <= 10\n3\n\n\nmatrix[i][j]\n is either \n'#'\n, \n'.'\n, or an uppercase English letter.\n\n\nmatrix[0][0]\n is not an obstacle.",
        "temas": [
            "Array",
            "Hash Table",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3578,
        "slug": "count-partitions-with-max-min-difference-at-most-k",
        "url": "https://leetcode.com/problems/count-partitions-with-max-min-difference-at-most-k/",
        "titulo": "Count Partitions With Max-Min Difference at Most K",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n. Your task is to partition \nnums\n into one or more \nnon-empty\n contiguous segments such that in each segment, the difference between its \nmaximum\n and \nminimum\n elements is \nat most\n \nk\n.\n\n\nReturn the total number of ways to partition \nnums\n under this condition.\n\n\nSince the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [9,4,1,3,7], k = 4\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nThere are 6 valid partitions where the difference between the maximum and minimum elements in each segment is at most \nk = 4\n:\n\n\n\n\n[[9], [4], [1], [3], [7]]\n\n\n[[9], [4], [1], [3, 7]]\n\n\n[[9], [4], [1, 3], [7]]\n\n\n[[9], [4, 1], [3], [7]]\n\n\n[[9], [4, 1], [3, 7]]\n\n\n[[9], [4, 1, 3], [7]]\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [3,3,4], k = 0\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThere are 2 valid partitions that satisfy the given conditions:\n\n\n\n\n[[3], [3], [4]]\n\n\n[[3, 3], [4]]\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 5 * 10\n4\n\n\n1 <= nums[i] <= 10\n9\n\n\n0 <= k <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Sliding Window",
            "Prefix Sum",
            "Monotonic Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3542,
        "slug": "minimum-operations-to-convert-all-elements-to-zero",
        "url": "https://leetcode.com/problems/minimum-operations-to-convert-all-elements-to-zero/",
        "titulo": "Minimum Operations to Convert All Elements to Zero",
        "enunciado": "You are given an array \nnums\n of size \nn\n, consisting of \nnon-negative\n integers. Your task is to apply some (possibly zero) operations on the array so that \nall\n elements become 0.\n\n\nIn one operation, you can select a \nsubarray\n \n[i, j]\n (where \n0 <= i <= j < n\n) and set all occurrences of the \nminimum\n \nnon-negative\n integer in that subarray to 0.\n\n\nReturn the \nminimum\n number of operations required to make all elements in the array 0.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [0,2]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nSelect the subarray \n[1,1]\n (which is \n[2]\n), where the minimum non-negative integer is 2. Setting all occurrences of 2 to 0 results in \n[0,0]\n.\n\n\nThus, the minimum number of operations required is 1.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [3,1,2,1]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nSelect subarray \n[1,3]\n (which is \n[1,2,1]\n), where the minimum non-negative integer is 1. Setting all occurrences of 1 to 0 results in \n[3,0,2,0]\n.\n\n\nSelect subarray \n[2,2]\n (which is \n[2]\n), where the minimum non-negative integer is 2. Setting all occurrences of 2 to 0 results in \n[3,0,0,0]\n.\n\n\nSelect subarray \n[0,0]\n (which is \n[3]\n), where the minimum non-negative integer is 3. Setting all occurrences of 3 to 0 results in \n[0,0,0,0]\n.\n\n\nThus, the minimum number of operations required is 3.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,2,1,2,1,2]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\nSelect subarray \n[0,5]\n (which is \n[1,2,1,2,1,2]\n), where the minimum non-negative integer is 1. Setting all occurrences of 1 to 0 results in \n[0,2,0,2,0,2]\n.\n\n\nSelect subarray \n[1,1]\n (which is \n[2]\n), where the minimum non-negative integer is 2. Setting all occurrences of 2 to 0 results in \n[0,0,0,2,0,2]\n.\n\n\nSelect subarray \n[3,3]\n (which is \n[2]\n), where the minimum non-negative integer is 2. Setting all occurrences of 2 to 0 results in \n[0,0,0,0,0,2]\n.\n\n\nSelect subarray \n[5,5]\n (which is \n[2]\n), where the minimum non-negative integer is 2. Setting all occurrences of 2 to 0 results in \n[0,0,0,0,0,0]\n.\n\n\nThus, the minimum number of operations required is 4.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3524,
        "slug": "find-x-value-of-array-i",
        "url": "https://leetcode.com/problems/find-x-value-of-array-i/",
        "titulo": "Find X Value of Array I",
        "enunciado": "You are given an array of \npositive\n integers \nnums\n, and a \npositive\n integer \nk\n.\n\n\nYou are allowed to perform an operation \nonce\n on \nnums\n, where in each operation you can remove any \nnon-overlapping\n prefix and suffix from \nnums\n such that \nnums\n remains \nnon-empty\n.\n\n\nYou need to find the \nx-value\n of \nnums\n, which is the number of ways to perform this operation so that the \nproduct\n of the remaining elements leaves a \nremainder\n of \nx\n when divided by \nk\n.\n\n\nReturn an array \nresult\n of size \nk\n where \nresult[x]\n is the \nx-value\n of \nnums\n for \n0 <= x <= k - 1\n.\n\n\nA \nprefix\n of an array is a \nsubarray\n that starts from the beginning of the array and extends to any point within it.\n\n\nA \nsuffix\n of an array is a \nsubarray\n that starts at any point within the array and extends to the end of the array.\n\n\nNote\n that the prefix and suffix to be chosen for the operation can be \nempty\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,5], k = 3\n\n\nOutput:\n \n[9,2,4]\n\n\nExplanation:\n\n\n\n\nFor \nx = 0\n, the possible operations include all possible ways to remove non-overlapping prefix/suffix that do not remove \nnums[2] == 3\n.\n\n\nFor \nx = 1\n, the possible operations are:\n\t\n\n\nRemove the empty prefix and the suffix \n[2, 3, 4, 5]\n. \nnums\n becomes \n[1]\n.\n\n\nRemove the prefix \n[1, 2, 3]\n and the suffix \n[5]\n. \nnums\n becomes \n[4]\n.\n\n\n\n\n\n\nFor \nx = 2\n, the possible operations are:\n\t\n\n\nRemove the empty prefix and the suffix \n[3, 4, 5]\n. \nnums\n becomes \n[1, 2]\n.\n\n\nRemove the prefix \n[1]\n and the suffix \n[3, 4, 5]\n. \nnums\n becomes \n[2]\n.\n\n\nRemove the prefix \n[1, 2, 3]\n and the empty suffix. \nnums\n becomes \n[4, 5]\n.\n\n\nRemove the prefix \n[1, 2, 3, 4]\n and the empty suffix. \nnums\n becomes \n[5]\n.\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,4,8,16,32], k = 4\n\n\nOutput:\n \n[18,1,2,0]\n\n\nExplanation:\n\n\n\n\nFor \nx = 0\n, the only operations that \ndo not\n result in \nx = 0\n are:\n\n\t\n\n\nRemove the empty prefix and the suffix \n[4, 8, 16, 32]\n. \nnums\n becomes \n[1, 2]\n.\n\n\nRemove the empty prefix and the suffix \n[2, 4, 8, 16, 32]\n. \nnums\n becomes \n[1]\n.\n\n\nRemove the prefix \n[1]\n and the suffix \n[4, 8, 16, 32]\n. \nnums\n becomes \n[2]\n.\n\n\n\n\n\n\nFor \nx = 1\n, the only possible operation is:\n\t\n\n\nRemove the empty prefix and the suffix \n[2, 4, 8, 16, 32]\n. \nnums\n becomes \n[1]\n.\n\n\n\n\n\n\nFor \nx = 2\n, the possible operations are:\n\t\n\n\nRemove the empty prefix and the suffix \n[4, 8, 16, 32]\n. \nnums\n becomes \n[1, 2]\n.\n\n\nRemove the prefix \n[1]\n and the suffix \n[4, 8, 16, 32]\n. \nnums\n becomes \n[2]\n.\n\n\n\n\n\n\nFor \nx = 3\n, there is no possible way to perform the operation.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,1,2,1,1], k = 2\n\n\nOutput:\n \n[9,6]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= k <= 5",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3508,
        "slug": "implement-router",
        "url": "https://leetcode.com/problems/implement-router/",
        "titulo": "Implement Router",
        "enunciado": "Design a data structure that can efficiently manage data packets in a network router. Each data packet consists of the following attributes:\n\n\n\n\nsource\n: A unique identifier for the machine that generated the packet.\n\n\ndestination\n: A unique identifier for the target machine.\n\n\ntimestamp\n: The time at which the packet arrived at the router.\n\n\n\n\nImplement the \nRouter\n class:\n\n\nRouter(int memoryLimit)\n: Initializes the Router object with a fixed memory limit.\n\n\n\n\nmemoryLimit\n is the \nmaximum\n number of packets the router can store at any given time.\n\n\nIf adding a new packet would exceed this limit, the \noldest\n packet must be removed to free up space.\n\n\n\n\nbool addPacket(int source, int destination, int timestamp)\n: Adds a packet with the given attributes to the router.\n\n\n\n\nA packet is considered a duplicate if another packet with the same \nsource\n, \ndestination\n, and \ntimestamp\n already exists in the router.\n\n\nReturn \ntrue\n if the packet is successfully added (i.e., it is not a duplicate); otherwise return \nfalse\n.\n\n\n\n\nint[] forwardPacket()\n: Forwards the next packet in FIFO (First In First Out) order.\n\n\n\n\nRemove the packet from storage.\n\n\nReturn the packet as an array \n[source, destination, timestamp]\n.\n\n\nIf there are no packets to forward, return an empty array.\n\n\n\n\nint getCount(int destination, int startTime, int endTime)\n:\n\n\n\n\nReturns the number of packets currently stored in the router (i.e., not yet forwarded) that have the specified destination and have timestamps in the inclusive range \n[startTime, endTime]\n.\n\n\n\n\nNote\n that queries for \naddPacket\n will be made in increasing order of \ntimestamp\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n\n\n[\"Router\", \"addPacket\", \"addPacket\", \"addPacket\", \"addPacket\", \"addPacket\", \"forwardPacket\", \"addPacket\", \"getCount\"]\n\n[[3], [1, 4, 90], [2, 5, 90], [1, 4, 90], [3, 5, 95], [4, 5, 105], [], [5, 2, 110], [5, 100, 110]]\n\n\nOutput:\n\n\n[null, true, true, false, true, true, [2, 5, 90], true, 1] \n\n\nExplanation\n\nRouter router = new Router(3); // Initialize Router with memoryLimit of 3.\n\nrouter.addPacket(1, 4, 90); // Packet is added. Return True.\n\nrouter.addPacket(2, 5, 90); // Packet is added. Return True.\n\nrouter.addPacket(1, 4, 90); // This is a duplicate packet. Return False.\n\nrouter.addPacket(3, 5, 95); // Packet is added. Return True\n\nrouter.addPacket(4, 5, 105); // Packet is added, \n[1, 4, 90]\n is removed as number of packets exceeds memoryLimit. Return True.\n\nrouter.forwardPacket(); // Return \n[2, 5, 90]\n and remove it from router.\n\nrouter.addPacket(5, 2, 110); // Packet is added. Return True.\n\nrouter.getCount(5, 100, 110); // The only packet with destination 5 and timestamp in the inclusive range \n[100, 110]\n is \n[4, 5, 105]\n. Return 1.\n\n\nExample 2:\n\n\n\n\nInput:\n\n\n[\"Router\", \"addPacket\", \"forwardPacket\", \"forwardPacket\"]\n\n[[2], [7, 4, 90], [], []]\n\n\nOutput:\n\n\n[null, true, [7, 4, 90], []] \n\n\nExplanation\n\nRouter router = new Router(2); // Initialize \nRouter\n with \nmemoryLimit\n of 2.\n\nrouter.addPacket(7, 4, 90); // Return True.\n\nrouter.forwardPacket(); // Return \n[7, 4, 90]\n.\n\nrouter.forwardPacket(); // There are no packets left, return \n[]\n.\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= memoryLimit <= 10\n5\n\n\n1 <= source, destination <= 2 * 10\n5\n\n\n1 <= timestamp <= 10\n9\n\n\n1 <= startTime <= endTime <= 10\n9\n\n\nAt most \n10\n5\n calls will be made to \naddPacket\n, \nforwardPacket\n, and \ngetCount\n methods altogether.\n\n\nqueries for \naddPacket\n will be made in increasing order of \ntimestamp\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design",
            "Queue",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3513,
        "slug": "number-of-unique-xor-triplets-i",
        "url": "https://leetcode.com/problems/number-of-unique-xor-triplets-i/",
        "titulo": "Number of Unique XOR Triplets I",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n, where \nnums\n is a \npermutation\n of the numbers in the range \n[1, n]\n.\n\n\nA \nXOR triplet\n is defined as the XOR of three elements \nnums[i] XOR nums[j] XOR nums[k]\n where \ni <= j <= k\n.\n\n\nReturn the number of \nunique\n XOR triplet values from all possible triplets \n(i, j, k)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe possible XOR triplet values are:\n\n\n\n\n(0, 0, 0) → 1 XOR 1 XOR 1 = 1\n\n\n(0, 0, 1) → 1 XOR 1 XOR 2 = 2\n\n\n(0, 1, 1) → 1 XOR 2 XOR 2 = 1\n\n\n(1, 1, 1) → 2 XOR 2 XOR 2 = 2\n\n\n\n\nThe unique XOR values are \n{1, 2}\n, so the output is 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [3,1,2]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe possible XOR triplet values include:\n\n\n\n\n(0, 0, 0) → 3 XOR 3 XOR 3 = 3\n\n\n(0, 0, 1) → 3 XOR 3 XOR 1 = 1\n\n\n(0, 0, 2) → 3 XOR 3 XOR 2 = 2\n\n\n(0, 1, 2) → 3 XOR 1 XOR 2 = 0\n\n\n\n\nThe unique XOR values are \n{0, 1, 2, 3}\n, so the output is 4.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n1 <= nums[i] <= n\n\n\nnums\n is a permutation of integers from \n1\n to \nn\n.",
        "temas": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3537,
        "slug": "fill-a-special-grid",
        "url": "https://leetcode.com/problems/fill-a-special-grid/",
        "titulo": "Fill a Special Grid",
        "enunciado": "You are given a non-negative integer \nn\n representing a \n2\nn\n x 2\nn\n grid. You must fill the grid with integers from 0 to \n2\n2n\n - 1\n to make it \nspecial\n. A grid is \nspecial\n if it satisfies \nall\n the following conditions:\n\n\n\n\nAll numbers in the top-right quadrant are smaller than those in the bottom-right quadrant.\n\n\nAll numbers in the bottom-right quadrant are smaller than those in the bottom-left quadrant.\n\n\nAll numbers in the bottom-left quadrant are smaller than those in the top-left quadrant.\n\n\nEach of its quadrants is also a special grid.\n\n\n\n\nReturn the \nspecial\n \n2\nn\n x 2\nn\n grid.\n\n\nNote\n: Any 1x1 grid is special.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 0\n\n\nOutput:\n \n[[0]]\n\n\nExplanation:\n\n\nThe only number that can be placed is 0, and there is only one possible position in the grid.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 1\n\n\nOutput:\n \n[[3,0],[2,1]]\n\n\nExplanation:\n\n\nThe numbers in each quadrant are:\n\n\n\n\nTop-right: 0\n\n\nBottom-right: 1\n\n\nBottom-left: 2\n\n\nTop-left: 3\n\n\n\n\nSince \n0 < 1 < 2 < 3\n, this satisfies the given constraints.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 2\n\n\nOutput:\n \n[[15,12,3,0],[14,13,2,1],[11,8,7,4],[10,9,6,5]]\n\n\nExplanation:\n\n\n\n\nThe numbers in each quadrant are:\n\n\n\n\nTop-right: 3, 0, 2, 1\n\n\nBottom-right: 7, 4, 6, 5\n\n\nBottom-left: 11, 8, 10, 9\n\n\nTop-left: 15, 12, 14, 13\n\n\nmax(3, 0, 2, 1) < min(7, 4, 6, 5)\n\n\nmax(7, 4, 6, 5) < min(11, 8, 10, 9)\n\n\nmax(11, 8, 10, 9) < min(15, 12, 14, 13)\n\n\n\n\nThis satisfies the first three requirements. Additionally, each quadrant is also a special grid. Thus, this is a special grid.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3529,
        "slug": "count-cells-in-overlapping-horizontal-and-vertical-substrings",
        "url": "https://leetcode.com/problems/count-cells-in-overlapping-horizontal-and-vertical-substrings/",
        "titulo": "Count Cells in Overlapping Horizontal and Vertical Substrings",
        "enunciado": "You are given an \nm x n\n matrix \ngrid\n consisting of characters and a string \npattern\n.\n\n\nA \nhorizontal substring\n is a contiguous sequence of characters read from left to right. If the end of a row is reached before the substring is complete, it wraps to the first column of the next row and continues as needed. You do \nnot\n wrap from the bottom row back to the top.\n\n\nA \nvertical substring\n is a contiguous sequence of characters read from top to bottom. If the bottom of a column is reached before the substring is complete, it wraps to the first row of the next column and continues as needed. You do \nnot\n wrap from the last column back to the first.\n\n\nCount the number of cells in the matrix that satisfy the following condition:\n\n\n\n\nThe cell must be part of \nat least\n one horizontal substring and \nat least\n one vertical substring, where \nboth\n substrings are equal to the given \npattern\n.\n\n\n\n\nReturn the count of these cells.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \ngrid = [[\"a\",\"a\",\"c\",\"c\"],[\"b\",\"b\",\"b\",\"c\"],[\"a\",\"a\",\"b\",\"a\"],[\"c\",\"a\",\"a\",\"c\"],[\"a\",\"a\",\"b\",\"a\"]], pattern = \"abaca\"\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe pattern \n\"abaca\"\n appears once as a horizontal substring (colored blue) and once as a vertical substring (colored red), intersecting at one cell (colored purple).\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \ngrid = [[\"c\",\"a\",\"a\",\"a\"],[\"a\",\"a\",\"b\",\"a\"],[\"b\",\"b\",\"a\",\"a\"],[\"a\",\"a\",\"b\",\"a\"]], pattern = \"aba\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe cells colored above are all part of at least one horizontal and one vertical substring matching the pattern \n\"aba\"\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[\"a\"]], pattern = \"a\"\n\n\nOutput:\n 1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 1000\n\n\n1 <= m * n <= 10\n5\n\n\n1 <= pattern.length <= m * n\n\n\ngrid\n and \npattern\n consist of only lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Rolling Hash",
            "String Matching",
            "Matrix",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3514,
        "slug": "number-of-unique-xor-triplets-ii",
        "url": "https://leetcode.com/problems/number-of-unique-xor-triplets-ii/",
        "titulo": "Number of Unique XOR Triplets II",
        "enunciado": "You are given an integer array \nnums\n.\n\n\nA \nXOR triplet\n is defined as the XOR of three elements \nnums[i] XOR nums[j] XOR nums[k]\n where \ni <= j <= k\n.\n\n\nReturn the number of \nunique\n XOR triplet values from all possible triplets \n(i, j, k)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,3]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe possible XOR triplet values are:\n\n\n\n\n(0, 0, 0) → 1 XOR 1 XOR 1 = 1\n\n\n(0, 0, 1) → 1 XOR 1 XOR 3 = 3\n\n\n(0, 1, 1) → 1 XOR 3 XOR 3 = 1\n\n\n(1, 1, 1) → 3 XOR 3 XOR 3 = 3\n\n\n\n\nThe unique XOR values are \n{1, 3}\n. Thus, the output is 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [6,7,8,9]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe possible XOR triplet values are \n{6, 7, 8, 9}\n. Thus, the output is 4.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1500\n\n\n1 <= nums[i] <= 1500",
        "temas": [
            "Array",
            "Math",
            "Bit Manipulation",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3531,
        "slug": "count-covered-buildings",
        "url": "https://leetcode.com/problems/count-covered-buildings/",
        "titulo": "Count Covered Buildings",
        "enunciado": "You are given a positive integer \nn\n, representing an \nn x n\n city. You are also given a 2D grid \nbuildings\n, where \nbuildings[i] = [x, y]\n denotes a \nunique\n building located at coordinates \n[x, y]\n.\n\n\nA building is \ncovered\n if there is at least one building in all \nfour\n directions: left, right, above, and below.\n\n\nReturn the number of \ncovered\n buildings.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \nn = 3, buildings = [[1,2],[2,2],[3,2],[2,1],[2,3]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nOnly building \n[2,2]\n is covered as it has at least one building:\n\n\t\n\n\nabove (\n[1,2]\n)\n\n\nbelow (\n[3,2]\n)\n\n\nleft (\n[2,1]\n)\n\n\nright (\n[2,3]\n)\n\n\n\n\n\n\nThus, the count of covered buildings is 1.\n\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \nn = 3, buildings = [[1,1],[1,2],[2,1],[2,2]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\nNo building has at least one building in all four directions.\n\n\n\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n \nn = 5, buildings = [[1,3],[3,2],[3,3],[3,5],[5,3]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nOnly building \n[3,3]\n is covered as it has at least one building:\n\n\t\n\n\nabove (\n[1,3]\n)\n\n\nbelow (\n[5,3]\n)\n\n\nleft (\n[3,2]\n)\n\n\nright (\n[3,5]\n)\n\n\n\n\n\n\nThus, the count of covered buildings is 1.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\n1 <= buildings.length <= 10\n5\n \n\n\nbuildings[i] = [x, y]\n\n\n1 <= x, y <= n\n\n\nAll coordinates of \nbuildings\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3556,
        "slug": "sum-of-largest-prime-substrings",
        "url": "https://leetcode.com/problems/sum-of-largest-prime-substrings/",
        "titulo": "Sum of Largest Prime Substrings",
        "enunciado": "Given a string \ns\n, find the sum of the \n3 largest unique \nprime numbers\n that can be formed using any of its\n \nsubstrings\n.\n\n\nReturn the \nsum\n of the three largest unique prime numbers that can be formed. If fewer than three exist, return the sum of \nall\n available primes. If no prime numbers can be formed, return 0.\n\n\nNote:\n Each prime number should be counted only \nonce\n, even if it appears in \nmultiple\n substrings. Additionally, when converting a substring to an integer, any leading zeros are ignored.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"12234\"\n\n\nOutput:\n \n1469\n\n\nExplanation:\n\n\n\n\nThe unique prime numbers formed from the substrings of \n\"12234\"\n are 2, 3, 23, 223, and 1223.\n\n\nThe 3 largest primes are 1223, 223, and 23. Their sum is 1469.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"111\"\n\n\nOutput:\n \n11\n\n\nExplanation:\n\n\n\n\nThe unique prime number formed from the substrings of \n\"111\"\n is 11.\n\n\nSince there is only one prime number, the sum is 11.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n\n\ns\n consists of only digits.",
        "temas": [
            "Hash Table",
            "Math",
            "String",
            "Sorting",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3517,
        "slug": "smallest-palindromic-rearrangement-i",
        "url": "https://leetcode.com/problems/smallest-palindromic-rearrangement-i/",
        "titulo": "Smallest Palindromic Rearrangement I",
        "enunciado": "You are given a \npalindromic\n string \ns\n.\n\n\nReturn the \nlexicographically smallest\n palindromic \npermutation\n of \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"z\"\n\n\nOutput:\n \n\"z\"\n\n\nExplanation:\n\n\nA string of only one character is already the lexicographically smallest palindrome.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"babab\"\n\n\nOutput:\n \n\"abbba\"\n\n\nExplanation:\n\n\nRearranging \n\"babab\"\n → \n\"abbba\"\n gives the smallest lexicographic palindrome.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"daccad\"\n\n\nOutput:\n \n\"acddca\"\n\n\nExplanation:\n\n\nRearranging \n\"daccad\"\n → \n\"acddca\"\n gives the smallest lexicographic palindrome.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters.\n\n\ns\n is guaranteed to be palindromic.",
        "temas": [
            "String",
            "Sorting",
            "Counting Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3493,
        "slug": "properties-graph",
        "url": "https://leetcode.com/problems/properties-graph/",
        "titulo": "Properties Graph",
        "enunciado": "You are given a 2D integer array \nproperties\n having dimensions \nn x m\n and an integer \nk\n.\n\n\nDefine a function \nintersect(a, b)\n that returns the \nnumber of distinct integers\n common to both arrays \na\n and \nb\n.\n\n\nConstruct an \nundirected\n graph where each index \ni\n corresponds to \nproperties[i]\n. There is an edge between node \ni\n and node \nj\n if and only if \nintersect(properties[i], properties[j]) >= k\n, where \ni\n and \nj\n are in the range \n[0, n - 1]\n and \ni != j\n.\n\n\nReturn the number of \nconnected components\n in the resulting graph.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nproperties = [[1,2],[1,1],[3,4],[4,5],[5,6],[7,7]], k = 1\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe graph formed has 3 connected components:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nproperties = [[1,2,3],[2,3,4],[4,3,5]], k = 2\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe graph formed has 1 connected component:\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nproperties = [[1,1],[1,1]], k = 2\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nintersect(properties[0], properties[1]) = 1\n, which is less than \nk\n. This means there is no edge between \nproperties[0]\n and \nproperties[1]\n in the graph.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == properties.length <= 100\n\n\n1 <= m == properties[i].length <= 100\n\n\n1 <= properties[i][j] <= 100\n\n\n1 <= k <= m",
        "temas": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3499,
        "slug": "maximize-active-section-with-trade-i",
        "url": "https://leetcode.com/problems/maximize-active-section-with-trade-i/",
        "titulo": "Maximize Active Section with Trade I",
        "enunciado": "You are given a binary string \ns\n of length \nn\n, where:\n\n\n\n\n'1'\n represents an \nactive\n section.\n\n\n'0'\n represents an \ninactive\n section.\n\n\n\n\nYou can perform \nat most one trade\n to maximize the number of active sections in \ns\n. In a trade, you:\n\n\n\n\nConvert a contiguous block of \n'1'\ns that is surrounded by \n'0'\ns to all \n'0'\ns.\n\n\nAfterward, convert a contiguous block of \n'0'\ns that is surrounded by \n'1'\ns to all \n'1'\ns.\n\n\n\n\nReturn the \nmaximum\n number of active sections in \ns\n after making the optimal trade.\n\n\nNote:\n Treat \ns\n as if it is \naugmented\n with a \n'1'\n at both ends, forming \nt = '1' + s + '1'\n. The augmented \n'1'\ns \ndo not\n contribute to the final count.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"01\"\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nBecause there is no block of \n'1'\ns surrounded by \n'0'\ns, no valid trade is possible. The maximum number of active sections is 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"0100\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\nString \n\"0100\"\n → Augmented to \n\"101001\"\n.\n\n\nChoose \n\"0100\"\n, convert \n\"10\n1\n001\"\n → \n\"1\n0000\n1\"\n → \n\"1\n1111\n1\"\n.\n\n\nThe final string without augmentation is \n\"1111\"\n. The maximum number of active sections is 4.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"1000100\"\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\n\n\nString \n\"1000100\"\n → Augmented to \n\"110001001\"\n.\n\n\nChoose \n\"000100\"\n, convert \n\"11000\n1\n001\"\n → \n\"11\n000000\n1\"\n → \n\"11\n111111\n1\"\n.\n\n\nThe final string without augmentation is \n\"1111111\"\n. The maximum number of active sections is 7.\n\n\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \ns = \"01010\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\nString \n\"01010\"\n → Augmented to \n\"1010101\"\n.\n\n\nChoose \n\"010\"\n, convert \n\"10\n1\n0101\"\n → \n\"1\n000\n101\"\n → \n\"1\n111\n101\"\n.\n\n\nThe final string without augmentation is \n\"11110\"\n. The maximum number of active sections is 4.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'",
        "temas": [
            "String",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3484,
        "slug": "design-spreadsheet",
        "url": "https://leetcode.com/problems/design-spreadsheet/",
        "titulo": "Design Spreadsheet",
        "enunciado": "A spreadsheet is a grid with 26 columns (labeled from \n'A'\n to \n'Z'\n) and a given number of \nrows\n. Each cell in the spreadsheet can hold an integer value between 0 and 10\n5\n.\n\n\nImplement the \nSpreadsheet\n class:\n\n\n\n\nSpreadsheet(int rows)\n Initializes a spreadsheet with 26 columns (labeled \n'A'\n to \n'Z'\n) and the specified number of rows. All cells are initially set to 0.\n\n\nvoid setCell(String cell, int value)\n Sets the value of the specified \ncell\n. The cell reference is provided in the format \n\"AX\"\n (e.g., \n\"A1\"\n, \n\"B10\"\n), where the letter represents the column (from \n'A'\n to \n'Z'\n) and the number represents a \n1-indexed\n row.\n\n\nvoid resetCell(String cell)\n Resets the specified cell to 0.\n\n\nint getValue(String formula)\n Evaluates a formula of the form \n\"=X+Y\"\n, where \nX\n and \nY\n are \neither\n cell references or non-negative integers, and returns the computed sum.\n\n\n\n\nNote:\n If \ngetValue\n references a cell that has not been explicitly set using \nsetCell\n, its value is considered 0.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n\n\n[\"Spreadsheet\", \"getValue\", \"setCell\", \"getValue\", \"setCell\", \"getValue\", \"resetCell\", \"getValue\"]\n\n[[3], [\"=5+7\"], [\"A1\", 10], [\"=A1+6\"], [\"B2\", 15], [\"=A1+B2\"], [\"A1\"], [\"=A1+B2\"]]\n\n\nOutput:\n\n\n[null, 12, null, 16, null, 25, null, 15] \n\n\nExplanation\n\nSpreadsheet spreadsheet = new Spreadsheet(3); // Initializes a spreadsheet with 3 rows and 26 columns\n\nspreadsheet.getValue(\"=5+7\"); // returns 12 (5+7)\n\nspreadsheet.setCell(\"A1\", 10); // sets A1 to 10\n\nspreadsheet.getValue(\"=A1+6\"); // returns 16 (10+6)\n\nspreadsheet.setCell(\"B2\", 15); // sets B2 to 15\n\nspreadsheet.getValue(\"=A1+B2\"); // returns 25 (10+15)\n\nspreadsheet.resetCell(\"A1\"); // resets A1 to 0\n\nspreadsheet.getValue(\"=A1+B2\"); // returns 15 (0+15)\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rows <= 10\n3\n\n\n0 <= value <= 10\n5\n\n\nThe formula is always in the format \n\"=X+Y\"\n, where \nX\n and \nY\n are either valid cell references or \nnon-negative\n integers with values less than or equal to \n10\n5\n.\n\n\nEach cell reference consists of a capital letter from \n'A'\n to \n'Z'\n followed by a row number between \n1\n and \nrows\n.\n\n\nAt most \n10\n4\n calls will be made in \ntotal\n to \nsetCell\n, \nresetCell\n, and \ngetValue\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Design",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3489,
        "slug": "zero-array-transformation-iv",
        "url": "https://leetcode.com/problems/zero-array-transformation-iv/",
        "titulo": "Zero Array Transformation IV",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n and a 2D array \nqueries\n, where \nqueries[i] = [l\ni\n, r\ni\n, val\ni\n]\n.\n\n\nEach \nqueries[i]\n represents the following action on \nnums\n:\n\n\n\n\nSelect a \nsubset\n of indices in the range \n[l\ni\n, r\ni\n]\n from \nnums\n.\n\n\nDecrement the value at each selected index by \nexactly\n \nval\ni\n.\n\n\n\n\nA \nZero Array\n is an array with all its elements equal to 0.\n\n\nReturn the \nminimum\n possible \nnon-negative\n value of \nk\n, such that after processing the first \nk\n queries in \nsequence\n, \nnums\n becomes a \nZero Array\n. If no such \nk\n exists, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,0,2], queries = [[0,2,1],[0,2,1],[1,1,3]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nFor query 0 (l = 0, r = 2, val = 1):\n\n\n\n\nDecrement the values at indices \n[0, 2]\n by 1.\n\n\nThe array will become \n[1, 0, 1]\n.\n\n\n\n\n\n\nFor query 1 (l = 0, r = 2, val = 1):\n\n\n\n\nDecrement the values at indices \n[0, 2]\n by 1.\n\n\nThe array will become \n[0, 0, 0]\n, which is a Zero Array. Therefore, the minimum value of \nk\n is 2.\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,3,2,1], queries = [[1,3,2],[0,2,1]]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nIt is impossible to make nums a Zero Array even after all the queries.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,2,3,2,1], queries = [[0,1,1],[1,2,1],[2,3,2],[3,4,1],[4,4,1]]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\nFor query 0 (l = 0, r = 1, val = 1):\n\n\n\n\nDecrement the values at indices \n[0, 1]\n by \n1\n.\n\n\nThe array will become \n[0, 1, 3, 2, 1]\n.\n\n\n\n\n\n\nFor query 1 (l = 1, r = 2, val = 1):\n\n\n\n\nDecrement the values at indices \n[1, 2]\n by 1.\n\n\nThe array will become \n[0, 0, 2, 2, 1]\n.\n\n\n\n\n\n\nFor query 2 (l = 2, r = 3, val = 2):\n\n\n\n\nDecrement the values at indices \n[2, 3]\n by 2.\n\n\nThe array will become \n[0, 0, 0, 0, 1]\n.\n\n\n\n\n\n\nFor query 3 (l = 3, r = 4, val = 1):\n\n\n\n\nDecrement the value at index 4 by 1.\n\n\nThe array will become \n[0, 0, 0, 0, 0]\n. Therefore, the minimum value of \nk\n is 4.\n\n\n\n\n\n\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nnums = [1,2,3,2,6], queries = [[0,1,1],[0,2,1],[1,4,2],[4,4,4],[3,4,1],[4,4,5]]\n\n\nOutput:\n \n4\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n\n\n0 <= nums[i] <= 1000\n\n\n1 <= queries.length <= 1000\n\n\nqueries[i] = [l\ni\n, r\ni\n, val\ni\n]\n\n\n0 <= l\ni\n <= r\ni\n < nums.length\n\n\n1 <= val\ni\n <= 10",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3494,
        "slug": "find-the-minimum-amount-of-time-to-brew-potions",
        "url": "https://leetcode.com/problems/find-the-minimum-amount-of-time-to-brew-potions/",
        "titulo": "Find the Minimum Amount of Time to Brew Potions",
        "enunciado": "You are given two integer arrays, \nskill\n and \nmana\n, of length \nn\n and \nm\n, respectively.\n\n\nIn a laboratory, \nn\n wizards must brew \nm\n potions \nin order\n. Each potion has a mana capacity \nmana[j]\n and \nmust\n pass through \nall\n the wizards sequentially to be brewed properly. The time taken by the \ni\nth\n wizard on the \nj\nth\n potion is \ntime\nij\n = skill[i] * mana[j]\n.\n\n\nSince the brewing process is delicate, a potion \nmust\n be passed to the next wizard immediately after the current wizard completes their work. This means the timing must be \nsynchronized\n so that each wizard begins working on a potion \nexactly\n when it arrives. ​\n\n\nReturn the \nminimum\n amount of time required for the potions to be brewed properly.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nskill = [1,5,2,4], mana = [5,1,4,2]\n\n\nOutput:\n \n110\n\n\nExplanation:\n\n\n\n\n\n\n\n\nPotion Number\n\n\nStart time\n\n\nWizard 0 done by\n\n\nWizard 1 done by\n\n\nWizard 2 done by\n\n\nWizard 3 done by\n\n\n\n\n\n\n0\n\n\n0\n\n\n5\n\n\n30\n\n\n40\n\n\n60\n\n\n\n\n\n\n1\n\n\n52\n\n\n53\n\n\n58\n\n\n60\n\n\n64\n\n\n\n\n\n\n2\n\n\n54\n\n\n58\n\n\n78\n\n\n86\n\n\n102\n\n\n\n\n\n\n3\n\n\n86\n\n\n88\n\n\n98\n\n\n102\n\n\n110\n\n\n\n\n\n\n\n\nAs an example for why wizard 0 cannot start working on the 1\nst\n potion before time \nt = 52\n, consider the case where the wizards started preparing the 1\nst\n potion at time \nt = 50\n. At time \nt = 58\n, wizard 2 is done with the 1\nst\n potion, but wizard 3 will still be working on the 0\nth\n potion till time \nt = 60\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nskill = [1,1,1], mana = [1,1,1]\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\n\n\nPreparation of the 0\nth\n potion begins at time \nt = 0\n, and is completed by time \nt = 3\n.\n\n\nPreparation of the 1\nst\n potion begins at time \nt = 1\n, and is completed by time \nt = 4\n.\n\n\nPreparation of the 2\nnd\n potion begins at time \nt = 2\n, and is completed by time \nt = 5\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nskill = [1,2,3,4], mana = [1,2]\n\n\nOutput:\n 21\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == skill.length\n\n\nm == mana.length\n\n\n1 <= n, m <= 5000\n\n\n1 <= mana[i], skill[i] <= 5000",
        "temas": [
            "Array",
            "Simulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3503,
        "slug": "longest-palindrome-after-substring-concatenation-i",
        "url": "https://leetcode.com/problems/longest-palindrome-after-substring-concatenation-i/",
        "titulo": "Longest Palindrome After Substring Concatenation I",
        "enunciado": "You are given two strings, \ns\n and \nt\n.\n\n\nYou can create a new string by selecting a \nsubstring\n from \ns\n (possibly empty) and a substring from \nt\n (possibly empty), then concatenating them \nin order\n.\n\n\nReturn the length of the \nlongest\n \npalindrome\n that can be formed this way.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"a\", t = \"a\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nConcatenating \n\"a\"\n from \ns\n and \n\"a\"\n from \nt\n results in \n\"aa\"\n, which is a palindrome of length 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"abc\", t = \"def\"\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nSince all characters are different, the longest palindrome is any single character, so the answer is 1.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"b\", t = \"aaaa\"\n\n\nOutput:\n 4\n\n\nExplanation:\n\n\nSelecting \"\naaaa\n\" from \nt\n is the longest palindrome, so the answer is 4.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \ns = \"abcde\", t = \"ecdba\"\n\n\nOutput:\n 5\n\n\nExplanation:\n\n\nConcatenating \n\"abc\"\n from \ns\n and \n\"ba\"\n from \nt\n results in \n\"abcba\"\n, which is a palindrome of length 5.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, t.length <= 30\n\n\ns\n and \nt\n consist of lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 3479,
        "slug": "fruits-into-baskets-iii",
        "url": "https://leetcode.com/problems/fruits-into-baskets-iii/",
        "titulo": "Fruits Into Baskets III",
        "enunciado": "You are given two arrays of integers, \nfruits\n and \nbaskets\n, each of length \nn\n, where \nfruits[i]\n represents the \nquantity\n of the \ni\nth\n type of fruit, and \nbaskets[j]\n represents the \ncapacity\n of the \nj\nth\n basket.\n\n\nFrom left to right, place the fruits according to these rules:\n\n\n\n\nEach fruit type must be placed in the \nleftmost available basket\n with a capacity \ngreater than or equal\n to the quantity of that fruit type.\n\n\nEach basket can hold \nonly one\n type of fruit.\n\n\nIf a fruit type \ncannot be placed\n in any basket, it remains \nunplaced\n.\n\n\n\n\nReturn the number of fruit types that remain unplaced after all possible allocations are made.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nfruits = [4,2,5], baskets = [3,5,4]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nfruits[0] = 4\n is placed in \nbaskets[1] = 5\n.\n\n\nfruits[1] = 2\n is placed in \nbaskets[0] = 3\n.\n\n\nfruits[2] = 5\n cannot be placed in \nbaskets[2] = 4\n.\n\n\n\n\nSince one fruit type remains unplaced, we return 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nfruits = [3,6,1], baskets = [6,4,7]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\nfruits[0] = 3\n is placed in \nbaskets[0] = 6\n.\n\n\nfruits[1] = 6\n cannot be placed in \nbaskets[1] = 4\n (insufficient capacity) but can be placed in the next available basket, \nbaskets[2] = 7\n.\n\n\nfruits[2] = 1\n is placed in \nbaskets[1] = 4\n.\n\n\n\n\nSince all fruits are successfully placed, we return 0.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == fruits.length == baskets.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= fruits[i], baskets[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Segment Tree",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3472,
        "slug": "longest-palindromic-subsequence-after-at-most-k-operations",
        "url": "https://leetcode.com/problems/longest-palindromic-subsequence-after-at-most-k-operations/",
        "titulo": "Longest Palindromic Subsequence After at Most K Operations",
        "enunciado": "You are given a string \ns\n and an integer \nk\n.\n\n\nIn one operation, you can replace the character at any position with the next or previous letter in the alphabet (wrapping around so that \n'a'\n is after \n'z'\n). For example, replacing \n'a'\n with the next letter results in \n'b'\n, and replacing \n'a'\n with the previous letter results in \n'z'\n. Similarly, replacing \n'z'\n with the next letter results in \n'a'\n, and replacing \n'z'\n with the previous letter results in \n'y'\n.\n\n\nReturn the length of the \nlongest \npalindromic\n \nsubsequence\n of \ns\n that can be obtained after performing \nat most\n \nk\n operations.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abced\", k = 2\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nReplace \ns[1]\n with the next letter, and \ns\n becomes \n\"acced\"\n.\n\n\nReplace \ns[4]\n with the previous letter, and \ns\n becomes \n\"accec\"\n.\n\n\n\n\nThe subsequence \n\"ccc\"\n forms a palindrome of length 3, which is the maximum.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"\naaazzz\n\", k = 4\n\n\nOutput:\n 6\n\n\nExplanation:\n\n\n\n\nReplace \ns[0]\n with the previous letter, and \ns\n becomes \n\"zaazzz\"\n.\n\n\nReplace \ns[4]\n with the next letter, and \ns\n becomes \n\"zaazaz\"\n.\n\n\nReplace \ns[3]\n with the next letter, and \ns\n becomes \n\"zaaaaz\"\n.\n\n\n\n\nThe entire string forms a palindrome of length 6.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 200\n\n\n1 <= k <= 200\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3468,
        "slug": "find-the-number-of-copy-arrays",
        "url": "https://leetcode.com/problems/find-the-number-of-copy-arrays/",
        "titulo": "Find the Number of Copy Arrays",
        "enunciado": "You are given an array \noriginal\n of length \nn\n and a 2D array \nbounds\n of length \nn x 2\n, where \nbounds[i] = [u\ni\n, v\ni\n]\n.\n\n\nYou need to find the number of \npossible\n arrays \ncopy\n of length \nn\n such that:\n\n\n\n\n(copy[i] - copy[i - 1]) == (original[i] - original[i - 1])\n for \n1 <= i <= n - 1\n.\n\n\nu\ni\n <= copy[i] <= v\ni\n for \n0 <= i <= n - 1\n.\n\n\n\n\nReturn the number of such arrays.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \noriginal = [1,2,3,4], bounds = [[1,2],[2,3],[3,4],[4,5]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe possible arrays are:\n\n\n\n\n[1, 2, 3, 4]\n\n\n[2, 3, 4, 5]\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \noriginal = [1,2,3,4], bounds = [[1,10],[2,9],[3,8],[4,7]]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe possible arrays are:\n\n\n\n\n[1, 2, 3, 4]\n\n\n[2, 3, 4, 5]\n\n\n[3, 4, 5, 6]\n\n\n[4, 5, 6, 7]\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \noriginal = [1,2,1,2], bounds = [[1,1],[2,3],[3,3],[2,3]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nNo array is possible.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == original.length <= 10\n5\n\n\n1 <= original[i] <= 10\n9\n\n\nbounds.length == n\n\n\nbounds[i].length == 2\n\n\n1 <= bounds[i][0] <= bounds[i][1] <= 10\n9",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3457,
        "slug": "eat-pizzas",
        "url": "https://leetcode.com/problems/eat-pizzas/",
        "titulo": "Eat Pizzas!",
        "enunciado": "You are given an integer array \npizzas\n of size \nn\n, where \npizzas[i]\n represents the weight of the \ni\nth\n pizza. Every day, you eat \nexactly\n 4 pizzas. Due to your incredible metabolism, when you eat pizzas of weights \nW\n, \nX\n, \nY\n, and \nZ\n, where \nW <= X <= Y <= Z\n, you gain the weight of only 1 pizza!\n\n\n\n\nOn \nodd-numbered\n days \n(1-indexed)\n, you gain a weight of \nZ\n.\n\n\nOn \neven-numbered\n days, you gain a weight of \nY\n.\n\n\n\n\nFind the \nmaximum\n total weight you can gain by eating \nall\n pizzas optimally.\n\n\nNote\n: It is guaranteed that \nn\n is a multiple of 4, and each pizza can be eaten only once.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npizzas = [1,2,3,4,5,6,7,8]\n\n\nOutput:\n \n14\n\n\nExplanation:\n\n\n\n\nOn day 1, you eat pizzas at indices \n[1, 2, 4, 7] = [2, 3, 5, 8]\n. You gain a weight of 8.\n\n\nOn day 2, you eat pizzas at indices \n[0, 3, 5, 6] = [1, 4, 6, 7]\n. You gain a weight of 6.\n\n\n\n\nThe total weight gained after eating all the pizzas is \n8 + 6 = 14\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npizzas = [2,1,1,1,1,1,1,1]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nOn day 1, you eat pizzas at indices \n[4, 5, 6, 0] = [1, 1, 1, 2]\n. You gain a weight of 2.\n\n\nOn day 2, you eat pizzas at indices \n[1, 2, 3, 7] = [1, 1, 1, 1]\n. You gain a weight of 1.\n\n\n\n\nThe total weight gained after eating all the pizzas is \n2 + 1 = 3.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n4 <= n == pizzas.length <= 2 * 10\n5\n\n\n1 <= pizzas[i] <= 10\n5\n\n\nn\n is a multiple of 4.",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3469,
        "slug": "find-minimum-cost-to-remove-array-elements",
        "url": "https://leetcode.com/problems/find-minimum-cost-to-remove-array-elements/",
        "titulo": "Find Minimum Cost to Remove Array Elements",
        "enunciado": "You are given an integer array \nnums\n. Your task is to remove \nall elements\n from the array by performing one of the following operations at each step until \nnums\n is empty:\n\n\n\n\nChoose any two elements from the first three elements of \nnums\n and remove them. The cost of this operation is the \nmaximum\n of the two elements removed.\n\n\nIf fewer than three elements remain in \nnums\n, remove all the remaining elements in a single operation. The cost of this operation is the \nmaximum\n of the remaining elements.\n\n\n\n\nReturn the \nminimum\n cost required to remove all the elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [6,2,8,4]\n\n\nOutput:\n \n12\n\n\nExplanation:\n\n\nInitially, \nnums = [6, 2, 8, 4]\n.\n\n\n\n\nIn the first operation, remove \nnums[0] = 6\n and \nnums[2] = 8\n with a cost of \nmax(6, 8) = 8\n. Now, \nnums = [2, 4]\n.\n\n\nIn the second operation, remove the remaining elements with a cost of \nmax(2, 4) = 4\n.\n\n\n\n\nThe cost to remove all elements is \n8 + 4 = 12\n. This is the minimum cost to remove all elements in \nnums\n. Hence, the output is 12.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,1,3,3]\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nInitially, \nnums = [2, 1, 3, 3]\n.\n\n\n\n\nIn the first operation, remove \nnums[0] = 2\n and \nnums[1] = 1\n with a cost of \nmax(2, 1) = 2\n. Now, \nnums = [3, 3]\n.\n\n\nIn the second operation remove the remaining elements with a cost of \nmax(3, 3) = 3\n.\n\n\n\n\nThe cost to remove all elements is \n2 + 3 = 5\n. This is the minimum cost to remove all elements in \nnums\n. Hence, the output is 5.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3458,
        "slug": "select-k-disjoint-special-substrings",
        "url": "https://leetcode.com/problems/select-k-disjoint-special-substrings/",
        "titulo": "Select K Disjoint Special Substrings",
        "enunciado": "Given a string \ns\n of length \nn\n and an integer \nk\n, determine whether it is possible to select \nk\n disjoint \nspecial substrings\n.\n\n\nA \nspecial substring\n is a \nsubstring\n where:\n\n\n\n\nAny character present inside the substring should not appear outside it in the string.\n\n\nThe substring is not the entire string \ns\n.\n\n\n\n\nNote\n that all \nk\n substrings must be disjoint, meaning they cannot overlap.\n\n\nReturn \ntrue\n if it is possible to select \nk\n such disjoint special substrings; otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abcdbaefab\", k = 2\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nWe can select two disjoint special substrings: \n\"cd\"\n and \n\"ef\"\n.\n\n\n\"cd\"\n contains the characters \n'c'\n and \n'd'\n, which do not appear elsewhere in \ns\n.\n\n\n\"ef\"\n contains the characters \n'e'\n and \n'f'\n, which do not appear elsewhere in \ns\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"cdefdc\", k = 3\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nThere can be at most 2 disjoint special substrings: \n\"e\"\n and \n\"f\"\n. Since \nk = 3\n, the output is \nfalse\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"abeabe\", k = 0\n\n\nOutput:\n \ntrue\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == s.length <= 5 * 10\n4\n\n\n0 <= k <= 26\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3462,
        "slug": "maximum-sum-with-at-most-k-elements",
        "url": "https://leetcode.com/problems/maximum-sum-with-at-most-k-elements/",
        "titulo": "Maximum Sum With at Most K Elements",
        "enunciado": "You are given a 2D integer matrix \ngrid\n of size \nn x m\n, an integer array \nlimits\n of length \nn\n, and an integer \nk\n. The task is to find the \nmaximum sum\n of \nat most\n \nk\n elements from the matrix \ngrid\n such that:\n\n\n\n\n\n\nThe number of elements taken from the \ni\nth\n row of \ngrid\n does not exceed \nlimits[i]\n.\n\n\n\n\n\n\nReturn the \nmaximum sum\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,2],[3,4]], limits = [1,2], k = 2\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\n\n\nFrom the second row, we can take at most 2 elements. The elements taken are 4 and 3.\n\n\nThe maximum possible sum of at most 2 selected elements is \n4 + 3 = 7\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[5,3,7],[8,2,6]], limits = [2,2], k = 3\n\n\nOutput:\n \n21\n\n\nExplanation:\n\n\n\n\nFrom the first row, we can take at most 2 elements. The element taken is 7.\n\n\nFrom the second row, we can take at most 2 elements. The elements taken are 8 and 6.\n\n\nThe maximum possible sum of at most 3 selected elements is \n7 + 8 + 6 = 21\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length == limits.length\n\n\nm == grid[i].length\n\n\n1 <= n, m <= 500\n\n\n0 <= grid[i][j] <= 10\n5\n\n\n0 <= limits[i] <= m\n\n\n0 <= k <= min(n * m, sum(limits))",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3453,
        "slug": "separate-squares-i",
        "url": "https://leetcode.com/problems/separate-squares-i/",
        "titulo": "Separate Squares I",
        "enunciado": "You are given a 2D integer array \nsquares\n. Each \nsquares[i] = [x\ni\n, y\ni\n, l\ni\n]\n represents the coordinates of the bottom-left point and the side length of a square parallel to the x-axis.\n\n\nFind the \nminimum\n y-coordinate value of a horizontal line such that the total area of the squares above the line \nequals\n the total area of the squares below the line.\n\n\nAnswers within \n10\n-5\n of the actual answer will be accepted.\n\n\nNote\n: Squares \nmay\n overlap. Overlapping areas should be counted \nmultiple times\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nsquares = [[0,0,1],[2,2,1]]\n\n\nOutput:\n \n1.00000\n\n\nExplanation:\n\n\n\n\nAny horizontal line between \ny = 1\n and \ny = 2\n will have 1 square unit above it and 1 square unit below it. The lowest option is 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nsquares = [[0,0,2],[1,1,1]]\n\n\nOutput:\n \n1.16667\n\n\nExplanation:\n\n\n\n\nThe areas are:\n\n\n\n\nBelow the line: \n7/6 * 2 (Red) + 1/6 (Blue) = 15/6 = 2.5\n.\n\n\nAbove the line: \n5/6 * 2 (Red) + 5/6 (Blue) = 15/6 = 2.5\n.\n\n\n\n\nSince the areas above and below the line are equal, the output is \n7/6 = 1.16667\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= squares.length <= 5 * 10\n4\n\n\nsquares[i] = [x\ni\n, y\ni\n, l\ni\n]\n\n\nsquares[i].length == 3\n\n\n0 <= x\ni\n, y\ni\n <= 10\n9\n\n\n1 <= l\ni\n <= 10\n9\n\n\nThe total area of all the squares will not exceed \n10\n12\n.",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3447,
        "slug": "assign-elements-to-groups-with-constraints",
        "url": "https://leetcode.com/problems/assign-elements-to-groups-with-constraints/",
        "titulo": "Assign Elements to Groups with Constraints",
        "enunciado": "You are given an integer array \ngroups\n, where \ngroups[i]\n represents the size of the \ni\nth\n group. You are also given an integer array \nelements\n.\n\n\nYour task is to assign \none\n element to each group based on the following rules:\n\n\n\n\nAn element at index \nj\n can be assigned to a group \ni\n if \ngroups[i]\n is \ndivisible\n by \nelements[j]\n.\n\n\nIf there are multiple elements that can be assigned, assign the element with the \nsmallest index\n \nj\n.\n\n\nIf no element satisfies the condition for a group, assign -1 to that group.\n\n\n\n\nReturn an integer array \nassigned\n, where \nassigned[i]\n is the index of the element chosen for group \ni\n, or -1 if no suitable element exists.\n\n\nNote\n: An element may be assigned to more than one group.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngroups = [8,4,3,2,4], elements = [4,2]\n\n\nOutput:\n \n[0,0,-1,1,0]\n\n\nExplanation:\n\n\n\n\nelements[0] = 4\n is assigned to groups 0, 1, and 4.\n\n\nelements[1] = 2\n is assigned to group 3.\n\n\nGroup 2 cannot be assigned any element.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngroups = [2,3,5,7], elements = [5,3,3]\n\n\nOutput:\n \n[-1,1,0,-1]\n\n\nExplanation:\n\n\n\n\nelements[1] = 3\n is assigned to group 1.\n\n\nelements[0] = 5\n is assigned to group 2.\n\n\nGroups 0 and 3 cannot be assigned any element.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngroups = [10,21,30,41], elements = [2,1]\n\n\nOutput:\n \n[0,1,0,1]\n\n\nExplanation:\n\n\nelements[0] = 2\n is assigned to the groups with even values, and \nelements[1] = 1\n is assigned to the groups with odd values.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= groups.length <= 10\n5\n\n\n1 <= elements.length <= 10\n5\n\n\n1 <= groups[i] <= 10\n5\n\n\n1 <= elements[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3478,
        "slug": "choose-k-elements-with-maximum-sum",
        "url": "https://leetcode.com/problems/choose-k-elements-with-maximum-sum/",
        "titulo": "Choose K Elements With Maximum Sum",
        "enunciado": "You are given two integer arrays, \nnums1\n and \nnums2\n, both of length \nn\n, along with a positive integer \nk\n.\n\n\nFor each index \ni\n from \n0\n to \nn - 1\n, perform the following:\n\n\n\n\nFind \nall\n indices \nj\n where \nnums1[j]\n is less than \nnums1[i]\n.\n\n\nChoose \nat most\n \nk\n values of \nnums2[j]\n at these indices to \nmaximize\n the total sum.\n\n\n\n\nReturn an array \nanswer\n of size \nn\n, where \nanswer[i]\n represents the result for the corresponding index \ni\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums1 = [4,2,1,5,3], nums2 = [10,20,30,40,50], k = 2\n\n\nOutput:\n \n[80,30,0,80,50]\n\n\nExplanation:\n\n\n\n\nFor \ni = 0\n: Select the 2 largest values from \nnums2\n at indices \n[1, 2, 4]\n where \nnums1[j] < nums1[0]\n, resulting in \n50 + 30 = 80\n.\n\n\nFor \ni = 1\n: Select the 2 largest values from \nnums2\n at index \n[2]\n where \nnums1[j] < nums1[1]\n, resulting in 30.\n\n\nFor \ni = 2\n: No indices satisfy \nnums1[j] < nums1[2]\n, resulting in 0.\n\n\nFor \ni = 3\n: Select the 2 largest values from \nnums2\n at indices \n[0, 1, 2, 4]\n where \nnums1[j] < nums1[3]\n, resulting in \n50 + 30 = 80\n.\n\n\nFor \ni = 4\n: Select the 2 largest values from \nnums2\n at indices \n[1, 2]\n where \nnums1[j] < nums1[4]\n, resulting in \n30 + 20 = 50\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums1 = [2,2,2,2], nums2 = [3,1,2,3], k = 1\n\n\nOutput:\n \n[0,0,0,0]\n\n\nExplanation:\n\n\nSince all elements in \nnums1\n are equal, no indices satisfy the condition \nnums1[j] < nums1[i]\n for any \ni\n, resulting in 0 for all positions.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length == nums2.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= nums1[i], nums2[i] <= 10\n6\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3443,
        "slug": "maximum-manhattan-distance-after-k-changes",
        "url": "https://leetcode.com/problems/maximum-manhattan-distance-after-k-changes/",
        "titulo": "Maximum Manhattan Distance After K Changes",
        "enunciado": "You are given a string \ns\n consisting of the characters \n'N'\n, \n'S'\n, \n'E'\n, and \n'W'\n, where \ns[i]\n indicates movements in an infinite grid:\n\n\n\n\n'N'\n : Move north by 1 unit.\n\n\n'S'\n : Move south by 1 unit.\n\n\n'E'\n : Move east by 1 unit.\n\n\n'W'\n : Move west by 1 unit.\n\n\n\n\nInitially, you are at the origin \n(0, 0)\n. You can change \nat most\n \nk\n characters to any of the four directions.\n\n\nFind the \nmaximum\n \nManhattan distance\n from the origin that can be achieved \nat any time\n while performing the movements \nin order\n.\n\nThe \nManhattan Distance\n between two cells \n(x\ni\n, y\ni\n)\n and \n(x\nj\n, y\nj\n)\n is \n|x\ni\n - x\nj\n| + |y\ni\n - y\nj\n|\n.\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"NWSE\", k = 1\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nChange \ns[2]\n from \n'S'\n to \n'N'\n. The string \ns\n becomes \n\"NWNE\"\n.\n\n\n\n\n\n\n\n\nMovement\n\n\nPosition (x, y)\n\n\nManhattan Distance\n\n\nMaximum\n\n\n\n\n\n\n\n\n\n\ns[0] == 'N'\n\n\n(0, 1)\n\n\n0 + 1 = 1\n\n\n1\n\n\n\n\n\n\ns[1] == 'W'\n\n\n(-1, 1)\n\n\n1 + 1 = 2\n\n\n2\n\n\n\n\n\n\ns[2] == 'N'\n\n\n(-1, 2)\n\n\n1 + 2 = 3\n\n\n3\n\n\n\n\n\n\ns[3] == 'E'\n\n\n(0, 2)\n\n\n0 + 2 = 2\n\n\n3\n\n\n\n\n\n\n\n\nThe maximum Manhattan distance from the origin that can be achieved is 3. Hence, 3 is the output.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"NSWWEW\", k = 3\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nChange \ns[1]\n from \n'S'\n to \n'N'\n, and \ns[4]\n from \n'E'\n to \n'W'\n. The string \ns\n becomes \n\"NNWWWW\"\n.\n\n\nThe maximum Manhattan distance from the origin that can be achieved is 6. Hence, 6 is the output.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\n0 <= k <= s.length\n\n\ns\n consists of only \n'N'\n, \n'S'\n, \n'E'\n, and \n'W'\n.",
        "temas": [
            "Hash Table",
            "Math",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3434,
        "slug": "maximum-frequency-after-subarray-operation",
        "url": "https://leetcode.com/problems/maximum-frequency-after-subarray-operation/",
        "titulo": "Maximum Frequency After Subarray Operation",
        "enunciado": "You are given an array \nnums\n of length \nn\n. You are also given an integer \nk\n.\n\n\nYou perform the following operation on \nnums\n \nonce\n:\n\n\n\n\nSelect a \nsubarray\n \nnums[i..j]\n where \n0 <= i <= j <= n - 1\n.\n\n\nSelect an integer \nx\n and add \nx\n to \nall\n the elements in \nnums[i..j]\n.\n\n\n\n\nFind the \nmaximum\n frequency of the value \nk\n after the operation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,5,6], k = 1\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nAfter adding -5 to \nnums[2..5]\n, 1 has a frequency of 2 in \n[1, 2, -2, -1, 0, 1]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [10,2,3,4,5,5,4,3,2,2], k = 10\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nAfter adding 8 to \nnums[1..9]\n, 10 has a frequency of 4 in \n[10, 10, 11, 12, 13, 13, 12, 11, 10, 10]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n1 <= nums[i] <= 50\n\n\n1 <= k <= 50",
        "temas": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Greedy",
            "Enumeration",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3488,
        "slug": "closest-equal-element-queries",
        "url": "https://leetcode.com/problems/closest-equal-element-queries/",
        "titulo": "Closest Equal Element Queries",
        "enunciado": "You are given a \ncircular\n array \nnums\n and an array \nqueries\n.\n\n\nFor each query \ni\n, you have to find the following:\n\n\n\n\nThe \nminimum\n distance between the element at index \nqueries[i]\n and \nany\n other index \nj\n in the \ncircular\n array, where \nnums[j] == nums[queries[i]]\n. If no such index exists, the answer for that query should be -1.\n\n\n\n\nReturn an array \nanswer\n of the \nsame\n size as \nqueries\n, where \nanswer[i]\n represents the result for query \ni\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,3,1,4,1,3,2], queries = [0,3,5]\n\n\nOutput:\n \n[2,-1,3]\n\n\nExplanation:\n\n\n\n\nQuery 0: The element at \nqueries[0] = 0\n is \nnums[0] = 1\n. The nearest index with the same value is 2, and the distance between them is 2.\n\n\nQuery 1: The element at \nqueries[1] = 3\n is \nnums[3] = 4\n. No other index contains 4, so the result is -1.\n\n\nQuery 2: The element at \nqueries[2] = 5\n is \nnums[5] = 3\n. The nearest index with the same value is 1, and the distance between them is 3 (following the circular path: \n5 -> 6 -> 0 -> 1\n).\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3,4], queries = [0,1,2,3]\n\n\nOutput:\n \n[-1,-1,-1,-1]\n\n\nExplanation:\n\n\nEach value in \nnums\n is unique, so no index shares the same value as the queried element. This results in -1 for all queries.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= queries.length <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6\n\n\n0 <= queries[i] < nums.length",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3446,
        "slug": "sort-matrix-by-diagonals",
        "url": "https://leetcode.com/problems/sort-matrix-by-diagonals/",
        "titulo": "Sort Matrix by Diagonals",
        "enunciado": "You are given an \nn x n\n square matrix of integers \ngrid\n. Return the matrix such that:\n\n\n\n\nThe diagonals in the \nbottom-left triangle\n (including the middle diagonal) are sorted in \nnon-increasing order\n.\n\n\nThe diagonals in the \ntop-right triangle\n are sorted in \nnon-decreasing order\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,7,3],[9,8,2],[4,5,6]]\n\n\nOutput:\n \n[[8,2,3],[9,6,7],[4,5,1]]\n\n\nExplanation:\n\n\n\n\nThe diagonals with a black arrow (bottom-left triangle) should be sorted in non-increasing order:\n\n\n\n\n[1, 8, 6]\n becomes \n[8, 6, 1]\n.\n\n\n[9, 5]\n and \n[4]\n remain unchanged.\n\n\n\n\nThe diagonals with a blue arrow (top-right triangle) should be sorted in non-decreasing order:\n\n\n\n\n[7, 2]\n becomes \n[2, 7]\n.\n\n\n[3]\n remains unchanged.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[0,1],[1,2]]\n\n\nOutput:\n \n[[2,1],[1,0]]\n\n\nExplanation:\n\n\n\n\nThe diagonals with a black arrow must be non-increasing, so \n[0, 2]\n is changed to \n[2, 0]\n. The other diagonals are already in the correct order.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1]]\n\n\nOutput:\n \n[[1]]\n\n\nExplanation:\n\n\nDiagonals with exactly one element are already in order, so no changes are needed.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\ngrid.length == grid[i].length == n\n\n\n1 <= n <= 10\n\n\n-10\n5\n <= grid[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Sorting",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3439,
        "slug": "reschedule-meetings-for-maximum-free-time-i",
        "url": "https://leetcode.com/problems/reschedule-meetings-for-maximum-free-time-i/",
        "titulo": "Reschedule Meetings for Maximum Free Time I",
        "enunciado": "You are given an integer \neventTime\n denoting the duration of an event, where the event occurs from time \nt = 0\n to time \nt = eventTime\n.\n\n\nYou are also given two integer arrays \nstartTime\n and \nendTime\n, each of length \nn\n. These represent the start and end time of \nn\n \nnon-overlapping\n meetings, where the \ni\nth\n meeting occurs during the time \n[startTime[i], endTime[i]]\n.\n\n\nYou can reschedule \nat most\n \nk\n meetings by moving their start time while maintaining the \nsame duration\n, to \nmaximize\n the \nlongest\n \ncontinuous period of free time\n during the event.\n\n\nThe \nrelative\n order of all the meetings should stay the\n same\n and they should remain non-overlapping.\n\n\nReturn the \nmaximum\n amount of free time possible after rearranging the meetings.\n\n\nNote\n that the meetings can \nnot\n be rescheduled to a time outside the event.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \neventTime = 5, k = 1, startTime = [1,3], endTime = [2,5]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nReschedule the meeting at \n[1, 2]\n to \n[2, 3]\n, leaving no meetings during the time \n[0, 2]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \neventTime = 10, k = 1, startTime = [0,2,9], endTime = [1,4,10]\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\n\n\nReschedule the meeting at \n[2, 4]\n to \n[1, 3]\n, leaving no meetings during the time \n[3, 9]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \neventTime = 5, k = 2, startTime = [0,1,2,3,4], endTime = [1,2,3,4,5]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere is no time during the event not occupied by meetings.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= eventTime <= 10\n9\n\n\nn == startTime.length == endTime.length\n\n\n2 <= n <= 10\n5\n\n\n1 <= k <= n\n\n\n0 <= startTime[i] < endTime[i] <= eventTime\n\n\nendTime[i] <= startTime[i + 1]\n where \ni\n lies in the range \n[0, n - 2]\n.",
        "temas": [
            "Array",
            "Greedy",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3440,
        "slug": "reschedule-meetings-for-maximum-free-time-ii",
        "url": "https://leetcode.com/problems/reschedule-meetings-for-maximum-free-time-ii/",
        "titulo": "Reschedule Meetings for Maximum Free Time II",
        "enunciado": "You are given an integer \neventTime\n denoting the duration of an event. You are also given two integer arrays \nstartTime\n and \nendTime\n, each of length \nn\n.\n\n\nThese represent the start and end times of \nn\n \nnon-overlapping\n meetings that occur during the event between time \nt = 0\n and time \nt = eventTime\n, where the \ni\nth\n meeting occurs during the time \n[startTime[i], endTime[i]].\n\n\nYou can reschedule \nat most \none meeting by moving its start time while maintaining the \nsame duration\n, such that the meetings remain non-overlapping, to \nmaximize\n the \nlongest\n \ncontinuous period of free time\n during the event.\n\n\nReturn the \nmaximum\n amount of free time possible after rearranging the meetings.\n\n\nNote\n that the meetings can \nnot\n be rescheduled to a time outside the event and they should remain non-overlapping.\n\n\nNote:\n \nIn this version\n, it is \nvalid\n for the relative ordering of the meetings to change after rescheduling one meeting.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \neventTime = 5, startTime = [1,3], endTime = [2,5]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nReschedule the meeting at \n[1, 2]\n to \n[2, 3]\n, leaving no meetings during the time \n[0, 2]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \neventTime = 10, startTime = [0,7,9], endTime = [1,8,10]\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\n\n\nReschedule the meeting at \n[0, 1]\n to \n[8, 9]\n, leaving no meetings during the time \n[0, 7]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \neventTime = 10, startTime = [0,3,7,9], endTime = [1,4,8,10]\n\n\nOutput:\n 6\n\n\nExplanation:\n\n\n\n\nReschedule the meeting at \n[3, 4]\n to \n[8, 9]\n, leaving no meetings during the time \n[1, 7]\n.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \neventTime = 5, startTime = [0,1,2,3,4], endTime = [1,2,3,4,5]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere is no time during the event not occupied by meetings.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= eventTime <= 10\n9\n\n\nn == startTime.length == endTime.length\n\n\n2 <= n <= 10\n5\n\n\n0 <= startTime[i] < endTime[i] <= eventTime\n\n\nendTime[i] <= startTime[i + 1]\n where \ni\n lies in the range \n[0, n - 2]\n.",
        "temas": [
            "Array",
            "Greedy",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3523,
        "slug": "make-array-non-decreasing",
        "url": "https://leetcode.com/problems/make-array-non-decreasing/",
        "titulo": "Make Array Non-decreasing",
        "enunciado": "You are given an integer array \nnums\n. In one operation, you can select a \nsubarray\n and replace it with a single element equal to its \nmaximum\n value.\n\n\nReturn the \nmaximum possible size\n of the array after performing zero or more operations such that the resulting array is \nnon-decreasing\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [4,2,5,3,5]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nOne way to achieve the maximum size is:\n\n\n\n\nReplace subarray \nnums[1..2] = [2, 5]\n with \n5\n → \n[4, 5, 3, 5]\n.\n\n\nReplace subarray \nnums[2..3] = [3, 5]\n with \n5\n → \n[4, 5, 5]\n.\n\n\n\n\nThe final array \n[4, 5, 5]\n is non-decreasing with size \n3.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nNo operation is needed as the array \n[1,2,3]\n is already non-decreasing.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n5\n\n\n1 <= nums[i] <= 2 * 10\n5",
        "temas": [
            "Array",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3429,
        "slug": "paint-house-iv",
        "url": "https://leetcode.com/problems/paint-house-iv/",
        "titulo": "Paint House IV",
        "enunciado": "You are given an \neven\n integer \nn\n representing the number of houses arranged in a straight line, and a 2D array \ncost\n of size \nn x 3\n, where \ncost[i][j]\n represents the cost of painting house \ni\n with color \nj + 1\n.\n\n\nThe houses will look \nbeautiful\n if they satisfy the following conditions:\n\n\n\n\nNo \ntwo\n adjacent houses are painted the same color.\n\n\nHouses \nequidistant\n from the ends of the row are \nnot\n painted the same color. For example, if \nn = 6\n, houses at positions \n(0, 5)\n, \n(1, 4)\n, and \n(2, 3)\n are considered equidistant.\n\n\n\n\nReturn the \nminimum\n cost to paint the houses such that they look \nbeautiful\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 4, cost = [[3,5,7],[6,2,9],[4,8,1],[7,3,5]]\n\n\nOutput:\n \n9\n\n\nExplanation:\n\n\nThe optimal painting sequence is \n[1, 2, 3, 2]\n with corresponding costs \n[3, 2, 1, 3]\n. This satisfies the following conditions:\n\n\n\n\nNo adjacent houses have the same color.\n\n\nHouses at positions 0 and 3 (equidistant from the ends) are not painted the same color \n(1 != 2)\n.\n\n\nHouses at positions 1 and 2 (equidistant from the ends) are not painted the same color \n(2 != 3)\n.\n\n\n\n\nThe minimum cost to paint the houses so that they look beautiful is \n3 + 2 + 1 + 3 = 9\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 6, cost = [[2,4,6],[5,3,8],[7,1,9],[4,6,2],[3,5,7],[8,2,4]]\n\n\nOutput:\n \n18\n\n\nExplanation:\n\n\nThe optimal painting sequence is \n[1, 3, 2, 3, 1, 2]\n with corresponding costs \n[2, 8, 1, 2, 3, 2]\n. This satisfies the following conditions:\n\n\n\n\nNo adjacent houses have the same color.\n\n\nHouses at positions 0 and 5 (equidistant from the ends) are not painted the same color \n(1 != 2)\n.\n\n\nHouses at positions 1 and 4 (equidistant from the ends) are not painted the same color \n(3 != 1)\n.\n\n\nHouses at positions 2 and 3 (equidistant from the ends) are not painted the same color \n(2 != 3)\n.\n\n\n\n\nThe minimum cost to paint the houses so that they look beautiful is \n2 + 8 + 1 + 2 + 3 + 2 = 18\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\nn\n is even.\n\n\ncost.length == n\n\n\ncost[i].length == 3\n\n\n0 <= cost[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3522,
        "slug": "calculate-score-after-performing-instructions",
        "url": "https://leetcode.com/problems/calculate-score-after-performing-instructions/",
        "titulo": "Calculate Score After Performing Instructions",
        "enunciado": "You are given two arrays, \ninstructions\n and \nvalues\n, both of size \nn\n.\n\n\nYou need to simulate a process based on the following rules:\n\n\n\n\nYou start at the first instruction at index \ni = 0\n with an initial score of 0.\n\n\nIf \ninstructions[i]\n is \n\"add\"\n:\n\t\n\n\nAdd \nvalues[i]\n to your score.\n\n\nMove to the next instruction \n(i + 1)\n.\n\n\n\n\n\n\nIf \ninstructions[i]\n is \n\"jump\"\n:\n\t\n\n\nMove to the instruction at index \n(i + values[i])\n without modifying your score.\n\n\n\n\n\n\n\n\nThe process ends when you either:\n\n\n\n\nGo out of bounds (i.e., \ni < 0 or i >= n\n), or\n\n\nAttempt to revisit an instruction that has been previously executed. The revisited instruction is not executed.\n\n\n\n\nReturn your score at the end of the process.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ninstructions = [\"jump\",\"add\",\"add\",\"jump\",\"add\",\"jump\"], values = [2,1,3,1,-2,-3]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nSimulate the process starting at instruction 0:\n\n\n\n\nAt index 0: Instruction is \n\"jump\"\n, move to index \n0 + 2 = 2\n.\n\n\nAt index 2: Instruction is \n\"add\"\n, add \nvalues[2] = 3\n to your score and move to index 3. Your score becomes 3.\n\n\nAt index 3: Instruction is \n\"jump\"\n, move to index \n3 + 1 = 4\n.\n\n\nAt index 4: Instruction is \n\"add\"\n, add \nvalues[4] = -2\n to your score and move to index 5. Your score becomes 1.\n\n\nAt index 5: Instruction is \n\"jump\"\n, move to index \n5 + (-3) = 2\n.\n\n\nAt index 2: Already visited. The process ends.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ninstructions = [\"jump\",\"add\",\"add\"], values = [3,1,1]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nSimulate the process starting at instruction 0:\n\n\n\n\nAt index 0: Instruction is \n\"jump\"\n, move to index \n0 + 3 = 3\n.\n\n\nAt index 3: Out of bounds. The process ends.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ninstructions = [\"jump\"], values = [0]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nSimulate the process starting at instruction 0:\n\n\n\n\nAt index 0: Instruction is \n\"jump\"\n, move to index \n0 + 0 = 0\n.\n\n\nAt index 0: Already visited. The process ends.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == instructions.length == values.length\n\n\n1 <= n <= 10\n5\n\n\ninstructions[i]\n is either \n\"add\"\n or \n\"jump\"\n.\n\n\n-10\n5\n <= values[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3528,
        "slug": "unit-conversion-i",
        "url": "https://leetcode.com/problems/unit-conversion-i/",
        "titulo": "Unit Conversion I",
        "enunciado": "There are \nn\n types of units indexed from \n0\n to \nn - 1\n. You are given a 2D integer array \nconversions\n of length \nn - 1\n, where \nconversions[i] = [sourceUnit\ni\n, targetUnit\ni\n, conversionFactor\ni\n]\n. This indicates that a single unit of type \nsourceUnit\ni\n is equivalent to \nconversionFactor\ni\n units of type \ntargetUnit\ni\n.\n\n\nReturn an array \nbaseUnitConversion\n of length \nn\n, where \nbaseUnitConversion[i]\n is the number of units of type \ni\n equivalent to a single unit of type 0. Since the answer may be large, return each \nbaseUnitConversion[i]\n \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nconversions = [[0,1,2],[1,2,3]]\n\n\nOutput:\n \n[1,2,6]\n\n\nExplanation:\n\n\n\n\nConvert a single unit of type 0 into 2 units of type 1 using \nconversions[0]\n.\n\n\nConvert a single unit of type 0 into 6 units of type 2 using \nconversions[0]\n, then \nconversions[1]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nconversions = [[0,1,2],[0,2,3],[1,3,4],[1,4,5],[2,5,2],[4,6,3],[5,7,4]]\n\n\nOutput:\n \n[1,2,3,8,10,6,30,24]\n\n\nExplanation:\n\n\n\n\nConvert a single unit of type 0 into 2 units of type 1 using \nconversions[0]\n.\n\n\nConvert a single unit of type 0 into 3 units of type 2 using \nconversions[1]\n.\n\n\nConvert a single unit of type 0 into 8 units of type 3 using \nconversions[0]\n, then \nconversions[2]\n.\n\n\nConvert a single unit of type 0 into 10 units of type 4 using \nconversions[0]\n, then \nconversions[3]\n.\n\n\nConvert a single unit of type 0 into 6 units of type 5 using \nconversions[1]\n, then \nconversions[4]\n.\n\n\nConvert a single unit of type 0 into 30 units of type 6 using \nconversions[0]\n, \nconversions[3]\n, then \nconversions[5]\n.\n\n\nConvert a single unit of type 0 into 24 units of type 7 using \nconversions[1]\n, \nconversions[4]\n, then \nconversions[6]\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\nconversions.length == n - 1\n\n\n0 <= sourceUnit\ni\n, targetUnit\ni\n < n\n\n\n1 <= conversionFactor\ni\n <= 10\n9\n\n\nIt is guaranteed that unit 0 can be converted into any other unit through a \nunique\n combination of conversions without using any conversions in the opposite direction.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 3473,
        "slug": "sum-of-k-subarrays-with-length-at-least-m",
        "url": "https://leetcode.com/problems/sum-of-k-subarrays-with-length-at-least-m/",
        "titulo": "Sum of K Subarrays With Length at Least M",
        "enunciado": "You are given an integer array \nnums\n and two integers, \nk\n and \nm\n.\n\n\nReturn the \nmaximum\n sum of \nk\n non-overlapping \nsubarrays\n of \nnums\n, where each subarray has a length of \nat least\n \nm\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,-1,3,3,4], k = 2, m = 2\n\n\nOutput:\n \n13\n\n\nExplanation:\n\n\nThe optimal choice is:\n\n\n\n\nSubarray \nnums[3..5]\n with sum \n3 + 3 + 4 = 10\n (length is \n3 >= m\n).\n\n\nSubarray \nnums[0..1]\n with sum \n1 + 2 = 3\n (length is \n2 >= m\n).\n\n\n\n\nThe total sum is \n10 + 3 = 13\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [-10,3,-1,-2], k = 4, m = 1\n\n\nOutput:\n \n-10\n\n\nExplanation:\n\n\nThe optimal choice is choosing each element as a subarray. The output is \n(-10) + 3 + (-1) + (-2) = -10\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2000\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\n1 <= k <= floor(nums.length / m)\n\n\n1 <= m <= 3",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3433,
        "slug": "count-mentions-per-user",
        "url": "https://leetcode.com/problems/count-mentions-per-user/",
        "titulo": "Count Mentions Per User",
        "enunciado": "You are given an integer \nnumberOfUsers\n representing the total number of users and an array \nevents\n of size \nn x 3\n.\n\n\nEach \nevents[i]\n can be either of the following two types:\n\n\n\n\nMessage Event:\n \n[\"MESSAGE\", \"timestamp\ni\n\", \"mentions_string\ni\n\"]\n\n\n\n\nThis event indicates that a set of users was mentioned in a message at \ntimestamp\ni\n.\n\n\nThe \nmentions_string\ni\n string can contain one of the following tokens:\n\t\t\n\n\nid<number>\n: where \n<number>\n is an integer in range \n[0,numberOfUsers - 1]\n. There can be \nmultiple\n ids separated by a single whitespace and may contain duplicates. This can mention even the offline users.\n\n\nALL\n: mentions \nall\n users.\n\n\nHERE\n: mentions all \nonline\n users.\n\n\n\n\n\n\n\n\n\n\nOffline Event:\n \n[\"OFFLINE\", \"timestamp\ni\n\", \"id\ni\n\"]\n\n\n\n\nThis event indicates that the user \nid\ni\n had become offline at \ntimestamp\ni\n for \n60 time units\n. The user will automatically be online again at time \ntimestamp\ni\n + 60\n.\n\n\n\n\n\n\n\n\nReturn an array \nmentions\n where \nmentions[i]\n represents the number of mentions the user with id \ni\n has across all \nMESSAGE\n events.\n\n\nAll users are initially online, and if a user goes offline or comes back online, their status change is processed \nbefore\n handling any message event that occurs at the same timestamp.\n\n\nNote \nthat a user can be mentioned \nmultiple\n times in a \nsingle\n message event, and each mention should be counted \nseparately\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnumberOfUsers = 2, events = [[\"MESSAGE\",\"10\",\"id1 id0\"],[\"OFFLINE\",\"11\",\"0\"],[\"MESSAGE\",\"71\",\"HERE\"]]\n\n\nOutput:\n \n[2,2]\n\n\nExplanation:\n\n\nInitially, all users are online.\n\n\nAt timestamp 10, \nid1\n and \nid0\n are mentioned. \nmentions = [1,1]\n\n\nAt timestamp 11, \nid0\n goes \noffline.\n\n\nAt timestamp 71, \nid0\n comes back \nonline\n and \n\"HERE\"\n is mentioned. \nmentions = [2,2]\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnumberOfUsers = 2, events = [[\"MESSAGE\",\"10\",\"id1 id0\"],[\"OFFLINE\",\"11\",\"0\"],[\"MESSAGE\",\"12\",\"ALL\"]]\n\n\nOutput:\n \n[2,2]\n\n\nExplanation:\n\n\nInitially, all users are online.\n\n\nAt timestamp 10, \nid1\n and \nid0\n are mentioned. \nmentions = [1,1]\n\n\nAt timestamp 11, \nid0\n goes \noffline.\n\n\nAt timestamp 12, \n\"ALL\"\n is mentioned. This includes offline users, so both \nid0\n and \nid1\n are mentioned. \nmentions = [2,2]\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnumberOfUsers = 2, events = [[\"OFFLINE\",\"10\",\"0\"],[\"MESSAGE\",\"12\",\"HERE\"]]\n\n\nOutput:\n \n[0,1]\n\n\nExplanation:\n\n\nInitially, all users are online.\n\n\nAt timestamp 10, \nid0\n goes \noffline.\n\n\nAt timestamp 12, \n\"HERE\"\n is mentioned. Because \nid0\n is still offline, they will not be mentioned. \nmentions = [0,1]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= numberOfUsers <= 100\n\n\n1 <= events.length <= 100\n\n\nevents[i].length == 3\n\n\nevents[i][0]\n will be one of \nMESSAGE\n or \nOFFLINE\n.\n\n\n1 <= int(events[i][1]) <= 10\n5\n\n\nThe number of \nid<number>\n mentions in any \n\"MESSAGE\"\n event is between \n1\n and \n100\n.\n\n\n0 <= <number> <= numberOfUsers - 1\n\n\nIt is \nguaranteed\n that the user id referenced in the \nOFFLINE\n event is \nonline\n at the time the event occurs.",
        "temas": [
            "Array",
            "Math",
            "Sorting",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3419,
        "slug": "minimize-the-maximum-edge-weight-of-graph",
        "url": "https://leetcode.com/problems/minimize-the-maximum-edge-weight-of-graph/",
        "titulo": "Minimize the Maximum Edge Weight of Graph",
        "enunciado": "You are given two integers, \nn\n and \nthreshold\n, as well as a \ndirected\n weighted graph of \nn\n nodes numbered from 0 to \nn - 1\n. The graph is represented by a \n2D\n integer array \nedges\n, where \nedges[i] = [A\ni\n, B\ni\n, W\ni\n]\n indicates that there is an edge going from node \nA\ni\n to node \nB\ni\n with weight \nW\ni\n.\n\n\nYou have to remove some edges from this graph (possibly \nnone\n), so that it satisfies the following conditions:\n\n\n\n\nNode 0 must be reachable from all other nodes.\n\n\nThe \nmaximum\n edge weight in the resulting graph is \nminimized\n.\n\n\nEach node has \nat most\n \nthreshold\n outgoing edges.\n\n\n\n\nReturn the \nminimum\n possible value of the \nmaximum\n edge weight after removing the necessary edges. If it is impossible for all conditions to be satisfied, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 5, edges = [[1,0,1],[2,0,2],[3,0,1],[4,3,1],[2,1,1]], threshold = 2\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nRemove the edge \n2 -> 0\n. The maximum weight among the remaining edges is 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 5, edges = [[0,1,1],[0,2,2],[0,3,1],[0,4,1],[1,2,1],[1,4,1]], threshold = 1\n\n\nOutput:\n \n-1\n\n\nExplanation:\n \n\n\nIt is impossible to reach node 0 from node 2.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[3,4,2],[4,0,1]], threshold = 1\n\n\nOutput:\n \n2\n\n\nExplanation:\n \n\n\n\n\nRemove the edges \n1 -> 3\n and \n1 -> 4\n. The maximum weight among the remaining edges is 2.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nn = 5, edges = [[1,2,1],[1,3,3],[1,4,5],[2,3,2],[4,0,1]], threshold = 1\n\n\nOutput:\n \n-1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\n1 <= threshold <= n - 1\n\n\n1 <= edges.length <= min(10\n5\n, n * (n - 1) / 2).\n\n\nedges[i].length == 3\n\n\n0 <= A\ni\n, B\ni\n < n\n\n\nA\ni\n != B\ni\n\n\n1 <= W\ni\n <= 10\n6\n\n\nThere \nmay be\n multiple edges between a pair of nodes, but they must have unique weights.",
        "temas": [
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Binary Search",
        "has_image": true
    },
    {
        "id": 3409,
        "slug": "longest-subsequence-with-decreasing-adjacent-difference",
        "url": "https://leetcode.com/problems/longest-subsequence-with-decreasing-adjacent-difference/",
        "titulo": "Longest Subsequence With Decreasing Adjacent Difference",
        "enunciado": "You are given an array of integers \nnums\n.\n\n\nYour task is to find the length of the \nlongest\n \nsubsequence\n \nseq\n of \nnums\n, such that the \nabsolute differences\n between\n consecutive\n elements form a \nnon-increasing sequence\n of integers. In other words, for a subsequence \nseq\n0\n, \nseq\n1\n, \nseq\n2\n, ..., \nseq\nm\n of \nnums\n, \n|seq\n1\n - seq\n0\n| >= |seq\n2\n - seq\n1\n| >= ... >= |seq\nm\n - seq\nm - 1\n|\n.\n\n\nReturn the length of such a subsequence.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [16,6,3]\n\n\nOutput:\n \n3\n\n\nExplanation:\n \n\n\nThe longest subsequence is \n[16, 6, 3]\n with the absolute adjacent differences \n[10, 3]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [6,5,3,4,2,1]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe longest subsequence is \n[6, 4, 2, 1]\n with the absolute adjacent differences \n[2, 2, 1]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [10,20,10,19,10,20]\n\n\nOutput:\n \n5\n\n\nExplanation:\n \n\n\nThe longest subsequence is \n[10, 20, 10, 19, 10]\n with the absolute adjacent differences \n[10, 10, 9, 9]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n4\n\n\n1 <= nums[i] <= 300",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3413,
        "slug": "maximum-coins-from-k-consecutive-bags",
        "url": "https://leetcode.com/problems/maximum-coins-from-k-consecutive-bags/",
        "titulo": "Maximum Coins From K Consecutive Bags",
        "enunciado": "There are an infinite amount of bags on a number line, one bag for each coordinate. Some of these bags contain coins.\n\n\nYou are given a 2D array \ncoins\n, where \ncoins[i] = [l\ni\n, r\ni\n, c\ni\n]\n denotes that every bag from \nl\ni\n to \nr\ni\n contains \nc\ni\n coins.\n\n\nThe segments that \ncoins\n contain are non-overlapping.\n\n\nYou are also given an integer \nk\n.\n\n\nReturn the \nmaximum\n amount of coins you can obtain by collecting \nk\n consecutive bags.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncoins = [[8,10,1],[1,3,2],[5,6,4]], k = 4\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nSelecting bags at positions \n[3, 4, 5, 6]\n gives the maximum number of coins: \n2 + 0 + 4 + 4 = 10\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncoins = [[1,10,3]], k = 2\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nSelecting bags at positions \n[1, 2]\n gives the maximum number of coins: \n3 + 3 = 6\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= coins.length <= 10\n5\n\n\n1 <= k <= 10\n9\n\n\ncoins[i] == [l\ni\n, r\ni\n, c\ni\n]\n\n\n1 <= l\ni\n <= r\ni\n <= 10\n9\n\n\n1 <= c\ni\n <= 1000\n\n\nThe given segments are non-overlapping.",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3428,
        "slug": "maximum-and-minimum-sums-of-at-most-size-k-subsequences",
        "url": "https://leetcode.com/problems/maximum-and-minimum-sums-of-at-most-size-k-subsequences/",
        "titulo": "Maximum and Minimum Sums of at Most Size K Subsequences",
        "enunciado": "You are given an integer array \nnums\n and a positive integer \nk\n. Return the sum of the \nmaximum\n and \nminimum\n elements of all \nsubsequences\n of \nnums\n with \nat most\n \nk\n elements.\n\n\nSince the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3], k = 2\n\n\nOutput:\n 24\n\n\nExplanation:\n\n\nThe subsequences of \nnums\n with at most 2 elements are:\n\n\n\n\n\n\n\n\nSubsequence \n\n\nMinimum\n\n\nMaximum\n\n\nSum\n\n\n\n\n\n\n[1]\n\n\n1\n\n\n1\n\n\n2\n\n\n\n\n\n\n[2]\n\n\n2\n\n\n2\n\n\n4\n\n\n\n\n\n\n[3]\n\n\n3\n\n\n3\n\n\n6\n\n\n\n\n\n\n[1, 2]\n\n\n1\n\n\n2\n\n\n3\n\n\n\n\n\n\n[1, 3]\n\n\n1\n\n\n3\n\n\n4\n\n\n\n\n\n\n[2, 3]\n\n\n2\n\n\n3\n\n\n5\n\n\n\n\n\n\nFinal Total\n\n\n \n\n\n \n\n\n24\n\n\n\n\n\n\n\n\nThe output would be 24.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [5,0,6], k = 1\n\n\nOutput:\n 2\n2\n\n\nExplanation: \n\n\nFor subsequences with exactly 1 element, the minimum and maximum values are the element itself. Therefore, the total is \n5 + 5 + 0 + 0 + 6 + 6 = 22\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,1,1], k = 2\n\n\nOutput:\n 12\n\n\nExplanation:\n\n\nThe subsequences \n[1, 1]\n and \n[1]\n each appear 3 times. For all of them, the minimum and maximum are both 1. Thus, the total is 12.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n1 <= k <= min(70, nums.length)",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3424,
        "slug": "minimum-cost-to-make-arrays-identical",
        "url": "https://leetcode.com/problems/minimum-cost-to-make-arrays-identical/",
        "titulo": "Minimum Cost to Make Arrays Identical",
        "enunciado": "You are given two integer arrays \narr\n and \nbrr\n of length \nn\n, and an integer \nk\n. You can perform the following operations on \narr\n \nany\n number of times:\n\n\n\n\nSplit \narr\n into \nany\n number of \ncontiguous\n \nsubarrays\n and rearrange these subarrays in \nany order\n. This operation has a fixed cost of \nk\n.\n\n\n\n\nChoose any element in \narr\n and add or subtract a positive integer \nx\n to it. The cost of this operation is \nx\n.\n\n\n\n\n\n\nReturn the \nminimum \ntotal cost to make \narr\n \nequal\n to \nbrr\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \narr = [-7,9,5], brr = [7,-2,-5], k = 2\n\n\nOutput:\n \n13\n\n\nExplanation:\n\n\n\n\nSplit \narr\n into two contiguous subarrays: \n[-7]\n and \n[9, 5]\n and rearrange them as \n[9, 5, -7]\n, with a cost of 2.\n\n\nSubtract 2 from element \narr[0]\n. The array becomes \n[7, 5, -7]\n. The cost of this operation is 2.\n\n\nSubtract 7 from element \narr[1]\n. The array becomes \n[7, -2, -7]\n. The cost of this operation is 7.\n\n\nAdd 2 to element \narr[2]\n. The array becomes \n[7, -2, -5]\n. The cost of this operation is 2.\n\n\n\n\nThe total cost to make the arrays equal is \n2 + 2 + 7 + 2 = 13\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \narr = [2,1], brr = [2,1], k = 0\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nSince the arrays are already equal, no operations are needed, and the total cost is 0.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length == brr.length <= 10\n5\n\n\n0 <= k <= 2 * 10\n10\n\n\n-10\n5\n <= arr[i] <= 10\n5\n\n\n-10\n5\n <= brr[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3527,
        "slug": "find-the-most-common-response",
        "url": "https://leetcode.com/problems/find-the-most-common-response/",
        "titulo": "Find the Most Common Response",
        "enunciado": "You are given a 2D string array \nresponses\n where each \nresponses[i]\n is an array of strings representing survey responses from the \ni\nth\n day.\n\n\nReturn the \nmost common\n response across all days after removing \nduplicate\n responses within each \nresponses[i]\n. If there is a tie, return the \nlexicographically smallest\n response.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nresponses = [[\"good\",\"ok\",\"good\",\"ok\"],[\"ok\",\"bad\",\"good\",\"ok\",\"ok\"],[\"good\"],[\"bad\"]]\n\n\nOutput:\n \n\"good\"\n\n\nExplanation:\n\n\n\n\nAfter removing duplicates within each list, \nresponses = [[\"good\", \"ok\"], [\"ok\", \"bad\", \"good\"], [\"good\"], [\"bad\"]]\n.\n\n\n\"good\"\n appears 3 times, \n\"ok\"\n appears 2 times, and \n\"bad\"\n appears 2 times.\n\n\nReturn \n\"good\"\n because it has the highest frequency.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nresponses = [[\"good\",\"ok\",\"good\"],[\"ok\",\"bad\"],[\"bad\",\"notsure\"],[\"great\",\"good\"]]\n\n\nOutput:\n \n\"bad\"\n\n\nExplanation:\n\n\n\n\nAfter removing duplicates within each list we have \nresponses = [[\"good\", \"ok\"], [\"ok\", \"bad\"], [\"bad\", \"notsure\"], [\"great\", \"good\"]]\n.\n\n\n\"bad\"\n, \n\"good\"\n, and \n\"ok\"\n each occur 2 times.\n\n\nThe output is \n\"bad\"\n because it is the lexicographically smallest amongst the words with the highest frequency.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= responses.length <= 1000\n\n\n1 <= responses[i].length <= 1000\n\n\n1 <= responses[i][j].length <= 10\n\n\nresponses[i][j]\n consists of only lowercase English letters",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3404,
        "slug": "count-special-subsequences",
        "url": "https://leetcode.com/problems/count-special-subsequences/",
        "titulo": "Count Special Subsequences",
        "enunciado": "You are given an array \nnums\n consisting of positive integers.\n\n\nA \nspecial subsequence\n is defined as a \nsubsequence\n of length 4, represented by indices \n(p, q, r, s)\n, where \np < q < r < s\n. This subsequence \nmust\n satisfy the following conditions:\n\n\n\n\nnums[p] * nums[r] == nums[q] * nums[s]\n\n\nThere must be \nat least\n \none\n element between each pair of indices. In other words, \nq - p > 1\n, \nr - q > 1\n and \ns - r > 1\n.\n\n\n\n\nReturn the \nnumber\n of different \nspecial\n \nsubsequences\n in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,3,6,1]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThere is one special subsequence in \nnums\n.\n\n\n\n\n(p, q, r, s) = (0, 2, 4, 6)\n:\n\n\t\n\n\nThis corresponds to elements \n(1, 3, 3, 1)\n.\n\n\nnums[p] * nums[r] = nums[0] * nums[4] = 1 * 3 = 3\n\n\nnums[q] * nums[s] = nums[2] * nums[6] = 3 * 1 = 3\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [3,4,3,4,3,4,3,4]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThere are three special subsequences in \nnums\n.\n\n\n\n\n(p, q, r, s) = (0, 2, 4, 6)\n:\n\n\t\n\n\nThis corresponds to elements \n(3, 3, 3, 3)\n.\n\n\nnums[p] * nums[r] = nums[0] * nums[4] = 3 * 3 = 9\n\n\nnums[q] * nums[s] = nums[2] * nums[6] = 3 * 3 = 9\n\n\n\n\n\n\n(p, q, r, s) = (1, 3, 5, 7)\n:\n\t\n\n\nThis corresponds to elements \n(4, 4, 4, 4)\n.\n\n\nnums[p] * nums[r] = nums[1] * nums[5] = 4 * 4 = 16\n\n\nnums[q] * nums[s] = nums[3] * nums[7] = 4 * 4 = 16\n\n\n\n\n\n\n(p, q, r, s) = (0, 2, 5, 7)\n:\n\t\n\n\nThis corresponds to elements \n(3, 3, 4, 4)\n.\n\n\nnums[p] * nums[r] = nums[0] * nums[5] = 3 * 4 = 12\n\n\nnums[q] * nums[s] = nums[2] * nums[7] = 3 * 4 = 12\n\n\n\n\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n7 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3388,
        "slug": "count-beautiful-splits-in-an-array",
        "url": "https://leetcode.com/problems/count-beautiful-splits-in-an-array/",
        "titulo": "Count Beautiful Splits in an Array",
        "enunciado": "You are given an array \nnums\n.\n\n\nA split of an array \nnums\n is \nbeautiful\n if:\n\n\n\n\nThe array \nnums\n is split into three \nsubarrays\n: \nnums1\n, \nnums2\n, and \nnums3\n, such that \nnums\n can be formed by concatenating \nnums1\n, \nnums2\n, and \nnums3\n in that order.\n\n\nThe subarray \nnums1\n is a \nprefix\n of \nnums2\n \nOR\n \nnums2\n is a \nprefix\n of \nnums3\n.\n\n\n\n\nReturn the \nnumber of ways\n you can make this split.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,1,2,1]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe beautiful splits are:\n\n\n\n\nA split with \nnums1 = [1]\n, \nnums2 = [1,2]\n, \nnums3 = [1]\n.\n\n\nA split with \nnums1 = [1]\n, \nnums2 = [1]\n, \nnums3 = [2,1]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3,4]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere are 0 beautiful splits.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5000\n\n\n0 <= nums[i] <= 50",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3403,
        "slug": "find-the-lexicographically-largest-string-from-the-box-i",
        "url": "https://leetcode.com/problems/find-the-lexicographically-largest-string-from-the-box-i/",
        "titulo": "Find the Lexicographically Largest String From the Box I",
        "enunciado": "You are given a string \nword\n, and an integer \nnumFriends\n.\n\n\nAlice is organizing a game for her \nnumFriends\n friends. There are multiple rounds in the game, where in each round:\n\n\n\n\nword\n is split into \nnumFriends\n \nnon-empty\n strings, such that no previous round has had the \nexact\n same split.\n\n\nAll the split words are put into a box.\n\n\n\n\nFind the \nlexicographically largest\n string from the box after all the rounds are finished.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"dbca\", numFriends = 2\n\n\nOutput:\n \n\"dbc\"\n\n\nExplanation:\n \n\n\nAll possible splits are:\n\n\n\n\n\"d\"\n and \n\"bca\"\n.\n\n\n\"db\"\n and \n\"ca\"\n.\n\n\n\"dbc\"\n and \n\"a\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"gggg\", numFriends = 4\n\n\nOutput:\n \n\"g\"\n\n\nExplanation:\n \n\n\nThe only possible split is: \n\"g\"\n, \n\"g\"\n, \n\"g\"\n, and \n\"g\"\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 5 * 10\n3\n\n\nword\n consists only of lowercase English letters.\n\n\n1 <= numFriends <= word.length",
        "temas": [
            "Two Pointers",
            "String",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 3380,
        "slug": "maximum-area-rectangle-with-point-constraints-i",
        "url": "https://leetcode.com/problems/maximum-area-rectangle-with-point-constraints-i/",
        "titulo": "Maximum Area Rectangle With Point Constraints I",
        "enunciado": "You are given an array \npoints\n where \npoints[i] = [x\ni\n, y\ni\n]\n represents the coordinates of a point on an infinite plane.\n\n\nYour task is to find the \nmaximum \narea of a rectangle that:\n\n\n\n\nCan be formed using \nfour\n of these points as its corners.\n\n\nDoes \nnot\n contain any other point inside or on its border.\n\n\nHas its edges \nparallel\n to the axes.\n\n\n\n\nReturn the \nmaximum area\n that you can obtain or -1 if no such rectangle is possible.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npoints = [[1,1],[1,3],[3,1],[3,3]]\n\n\nOutput: \n4\n\n\nExplanation:\n\n\n\n\nWe can make a rectangle with these 4 points as corners and there is no other point that lies inside or on the border\n. Hence, the maximum possible area would be 4.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npoints = [[1,1],[1,3],[3,1],[3,3],[2,2]]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\n\n\nThere is only one rectangle possible is with points \n[1,1], [1,3], [3,1]\n and \n[3,3]\n but \n[2,2]\n will always lie inside it. Hence, returning -1.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \npoints = [[1,1],[1,3],[3,1],[3,3],[1,2],[3,2]]\n\n\nOutput: \n2\n\n\nExplanation:\n\n\n\n\nThe maximum area rectangle is formed by the points \n[1,3], [1,2], [3,2], [3,3]\n, which has an area of 2. Additionally, the points \n[1,1], [1,2], [3,1], [3,2]\n also form a valid rectangle with the same area.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 10\n\n\npoints[i].length == 2\n\n\n0 <= x\ni\n, y\ni\n <= 100\n\n\nAll the given points are \nunique\n.",
        "temas": [
            "Array",
            "Math",
            "Binary Indexed Tree",
            "Segment Tree",
            "Geometry",
            "Sorting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3408,
        "slug": "design-task-manager",
        "url": "https://leetcode.com/problems/design-task-manager/",
        "titulo": "Design Task Manager",
        "enunciado": "There is a task management system that allows users to manage their tasks, each associated with a priority. The system should efficiently handle adding, modifying, executing, and removing tasks.\n\n\nImplement the \nTaskManager\n class:\n\n\n\n\n\n\nTaskManager(vector<vector<int>>& tasks)\n initializes the task manager with a list of user-task-priority triples. Each element in the input list is of the form \n[userId, taskId, priority]\n, which adds a task to the specified user with the given priority.\n\n\n\n\n\n\nvoid add(int userId, int taskId, int priority)\n adds a task with the specified \ntaskId\n and \npriority\n to the user with \nuserId\n. It is \nguaranteed\n that \ntaskId\n does not \nexist\n in the system.\n\n\n\n\n\n\nvoid edit(int taskId, int newPriority)\n updates the priority of the existing \ntaskId\n to \nnewPriority\n. It is \nguaranteed\n that \ntaskId\n \nexists\n in the system.\n\n\n\n\n\n\nvoid rmv(int taskId)\n removes the task identified by \ntaskId\n from the system. It is \nguaranteed\n that \ntaskId\n \nexists\n in the system.\n\n\n\n\n\n\nint execTop()\n executes the task with the \nhighest\n priority across all users. If there are multiple tasks with the same \nhighest\n priority, execute the one with the highest \ntaskId\n. After executing, the\n \ntaskId\n \nis \nremoved\n from the system. Return the \nuserId\n associated with the executed task. If no tasks are available, return -1.\n\n\n\n\n\n\nNote\n that a user may be assigned multiple tasks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n\n\n[\"TaskManager\", \"add\", \"edit\", \"execTop\", \"rmv\", \"add\", \"execTop\"]\n\n[[[[1, 101, 10], [2, 102, 20], [3, 103, 15]]], [4, 104, 5], [102, 8], [], [101], [5, 105, 15], []]\n\n\nOutput:\n\n\n[null, null, null, 3, null, null, 5] \n\n\nExplanation\n\nTaskManager taskManager = new TaskManager([[1, 101, 10], [2, 102, 20], [3, 103, 15]]); // Initializes with three tasks for Users 1, 2, and 3.\n\ntaskManager.add(4, 104, 5); // Adds task 104 with priority 5 for User 4.\n\ntaskManager.edit(102, 8); // Updates priority of task 102 to 8.\n\ntaskManager.execTop(); // return 3. Executes task 103 for User 3.\n\ntaskManager.rmv(101); // Removes task 101 from the system.\n\ntaskManager.add(5, 105, 15); // Adds task 105 with priority 15 for User 5.\n\ntaskManager.execTop(); // return 5. Executes task 105 for User 5.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tasks.length <= 10\n5\n\n\n0 <= userId <= 10\n5\n\n\n0 <= taskId <= 10\n5\n\n\n0 <= priority <= 10\n9\n\n\n0 <= newPriority <= 10\n9\n\n\nAt most \n2 * 10\n5\n calls will be made in \ntotal\n to \nadd\n, \nedit\n, \nrmv\n, and \nexecTop\n methods.\n\n\nThe input is generated such that \ntaskId\n will be valid.",
        "temas": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3418,
        "slug": "maximum-amount-of-money-robot-can-earn",
        "url": "https://leetcode.com/problems/maximum-amount-of-money-robot-can-earn/",
        "titulo": "Maximum Amount of Money Robot Can Earn",
        "enunciado": "You are given an \nm x n\n grid. A robot starts at the top-left corner of the grid \n(0, 0)\n and wants to reach the bottom-right corner \n(m - 1, n - 1)\n. The robot can move either right or down at any point in time.\n\n\nThe grid contains a value \ncoins[i][j]\n in each cell:\n\n\n\n\nIf \ncoins[i][j] >= 0\n, the robot gains that many coins.\n\n\nIf \ncoins[i][j] < 0\n, the robot encounters a robber, and the robber steals the \nabsolute\n value of \ncoins[i][j]\n coins.\n\n\n\n\nThe robot has a special ability to \nneutralize robbers\n in at most \n2 cells\n on its path, preventing them from stealing coins in those cells.\n\n\nNote:\n The robot's total coins can be negative.\n\n\nReturn the \nmaximum\n profit the robot can gain on the route.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncoins = [[0,1,-1],[1,-2,3],[2,-3,4]]\n\n\nOutput:\n \n8\n\n\nExplanation:\n\n\nAn optimal path for maximum coins is:\n\n\n\n\nStart at \n(0, 0)\n with \n0\n coins (total coins = \n0\n).\n\n\nMove to \n(0, 1)\n, gaining \n1\n coin (total coins = \n0 + 1 = 1\n).\n\n\nMove to \n(1, 1)\n, where there's a robber stealing \n2\n coins. The robot uses one neutralization here, avoiding the robbery (total coins = \n1\n).\n\n\nMove to \n(1, 2)\n, gaining \n3\n coins (total coins = \n1 + 3 = 4\n).\n\n\nMove to \n(2, 2)\n, gaining \n4\n coins (total coins = \n4 + 4 = 8\n).\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncoins = [[10,10,10],[10,10,10]]\n\n\nOutput:\n \n40\n\n\nExplanation:\n\n\nAn optimal path for maximum coins is:\n\n\n\n\nStart at \n(0, 0)\n with \n10\n coins (total coins = \n10\n).\n\n\nMove to \n(0, 1)\n, gaining \n10\n coins (total coins = \n10 + 10 = 20\n).\n\n\nMove to \n(0, 2)\n, gaining another \n10\n coins (total coins = \n20 + 10 = 30\n).\n\n\nMove to \n(1, 2)\n, gaining the final \n10\n coins (total coins = \n30 + 10 = 40\n).\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == coins.length\n\n\nn == coins[i].length\n\n\n1 <= m, n <= 500\n\n\n-1000 <= coins[i][j] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3393,
        "slug": "count-paths-with-the-given-xor-value",
        "url": "https://leetcode.com/problems/count-paths-with-the-given-xor-value/",
        "titulo": "Count Paths With the Given XOR Value",
        "enunciado": "You are given a 2D integer array \ngrid\n with size \nm x n\n. You are also given an integer \nk\n.\n\n\nYour task is to calculate the number of paths you can take from the top-left cell \n(0, 0)\n to the bottom-right cell \n(m - 1, n - 1)\n satisfying the following \nconstraints\n:\n\n\n\n\nYou can either move to the right or down. Formally, from the cell \n(i, j)\n you may move to the cell \n(i, j + 1)\n or to the cell \n(i + 1, j)\n if the target cell \nexists\n.\n\n\nThe \nXOR\n of all the numbers on the path must be \nequal\n to \nk\n.\n\n\n\n\nReturn the total number of such paths.\n\n\nSince the answer can be very large, return the result \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[2, 1, 5], [7, 10, 0], [12, 6, 4]], k = 11\n\n\nOutput:\n \n3\n\n\nExplanation:\n \n\n\nThe 3 paths are:\n\n\n\n\n(0, 0) → (1, 0) → (2, 0) → (2, 1) → (2, 2)\n\n\n(0, 0) → (1, 0) → (1, 1) → (1, 2) → (2, 2)\n\n\n(0, 0) → (0, 1) → (1, 1) → (2, 1) → (2, 2)\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[1, 3, 3, 3], [0, 3, 3, 2], [3, 0, 1, 1]], k = 2\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nThe 5 paths are:\n\n\n\n\n(0, 0) → (1, 0) → (2, 0) → (2, 1) → (2, 2) → (2, 3)\n\n\n(0, 0) → (1, 0) → (1, 1) → (2, 1) → (2, 2) → (2, 3)\n\n\n(0, 0) → (1, 0) → (1, 1) → (1, 2) → (1, 3) → (2, 3)\n\n\n(0, 0) → (0, 1) → (1, 1) → (1, 2) → (2, 2) → (2, 3)\n\n\n(0, 0) → (0, 1) → (0, 2) → (1, 2) → (2, 2) → (2, 3)\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1, 1, 1, 2], [3, 0, 3, 2], [3, 0, 2, 2]], k = 10\n\n\nOutput:\n \n0\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m == grid.length <= 300\n\n\n1 <= n == grid[r].length <= 300\n\n\n0 <= grid[r][c] < 16\n\n\n0 <= k < 16",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3394,
        "slug": "check-if-grid-can-be-cut-into-sections",
        "url": "https://leetcode.com/problems/check-if-grid-can-be-cut-into-sections/",
        "titulo": "Check if Grid can be Cut into Sections",
        "enunciado": "You are given an integer \nn\n representing the dimensions of an \nn x n\n grid, with the origin at the bottom-left corner of the grid. You are also given a 2D array of coordinates \nrectangles\n, where \nrectangles[i]\n is in the form \n[start\nx\n, start\ny\n, end\nx\n, end\ny\n]\n, representing a rectangle on the grid. Each rectangle is defined as follows:\n\n\n\n\n(start\nx\n, start\ny\n)\n: The bottom-left corner of the rectangle.\n\n\n(end\nx\n, end\ny\n)\n: The top-right corner of the rectangle.\n\n\n\n\nNote \nthat the rectangles do not overlap. Your task is to determine if it is possible to make \neither two horizontal or two vertical cuts\n on the grid such that:\n\n\n\n\nEach of the three resulting sections formed by the cuts contains \nat least\n one rectangle.\n\n\nEvery rectangle belongs to \nexactly\n one section.\n\n\n\n\nReturn \ntrue\n if such cuts can be made; otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 5, rectangles = [[1,0,5,2],[0,2,2,4],[3,2,5,3],[0,4,4,5]]\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nThe grid is shown in the diagram. We can make horizontal cuts at \ny = 2\n and \ny = 4\n. Hence, output is true.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 4, rectangles = [[0,0,1,1],[2,0,3,4],[0,2,2,3],[3,0,4,3]]\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nWe can make vertical cuts at \nx = 2\n and \nx = 3\n. Hence, output is true.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 4, rectangles = [[0,2,2,4],[1,0,3,2],[2,2,3,4],[3,0,4,2],[3,2,4,4]]\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nWe cannot make two horizontal or two vertical cuts that satisfy the conditions. Hence, output is false.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n <= 10\n9\n\n\n3 <= rectangles.length <= 10\n5\n\n\n0 <= rectangles[i][0] < rectangles[i][2] <= n\n\n\n0 <= rectangles[i][1] < rectangles[i][3] <= n\n\n\nNo two rectangles overlap.",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3377,
        "slug": "digit-operations-to-make-two-integers-equal",
        "url": "https://leetcode.com/problems/digit-operations-to-make-two-integers-equal/",
        "titulo": "Digit Operations to Make Two Integers Equal",
        "enunciado": "You are given two integers \nn\n and \nm\n that consist of the \nsame\n number of digits.\n\n\nYou can perform the following operations \nany\n number of times:\n\n\n\n\nChoose \nany\n digit from \nn\n that is not 9 and \nincrease\n it by 1.\n\n\nChoose \nany\n digit from \nn\n that is not 0 and \ndecrease\n it by 1.\n\n\n\n\nThe integer \nn\n must not be a \nprime\n number at any point, including its original value and after each operation.\n\n\nThe cost of a transformation is the sum of \nall\n values that \nn\n takes throughout the operations performed.\n\n\nReturn the \nminimum\n cost to transform \nn\n into \nm\n. If it is impossible, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 10, m = 12\n\n\nOutput:\n \n85\n\n\nExplanation:\n\n\nWe perform the following operations:\n\n\n\n\nIncrease the first digit, now \nn = \n2\n0\n.\n\n\nIncrease the second digit, now \nn = 2\n1\n.\n\n\nIncrease the second digit, now \nn = 2\n2\n.\n\n\nDecrease the first digit, now \nn = \n1\n2\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 4, m = 8\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nIt is impossible to make \nn\n equal to \nm\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 6, m = 2\n\n\nOutput:\n \n-1\n\n\nExplanation:\n \n\n\nSince 2 is already a prime, we can't make \nn\n equal to \nm\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, m < 10\n4\n\n\nn\n and \nm\n consist of the same number of digits.",
        "temas": [
            "Math",
            "Graph",
            "Heap (Priority Queue)",
            "Number Theory",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 3366,
        "slug": "minimum-array-sum",
        "url": "https://leetcode.com/problems/minimum-array-sum/",
        "titulo": "Minimum Array Sum",
        "enunciado": "You are given an integer array \nnums\n and three integers \nk\n, \nop1\n, and \nop2\n.\n\n\nYou can perform the following operations on \nnums\n:\n\n\n\n\nOperation 1\n: Choose an index \ni\n and divide \nnums[i]\n by 2, \nrounding up\n to the nearest whole number. You can perform this operation at most \nop1\n times, and not more than \nonce\n per index.\n\n\nOperation 2\n: Choose an index \ni\n and subtract \nk\n from \nnums[i]\n, but only if \nnums[i]\n is greater than or equal to \nk\n. You can perform this operation at most \nop2\n times, and not more than \nonce\n per index.\n\n\n\n\nNote:\n Both operations can be applied to the same index, but at most once each.\n\n\nReturn the \nminimum\n possible \nsum\n of all elements in \nnums\n after performing any number of operations.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,8,3,19,3], k = 3, op1 = 1, op2 = 1\n\n\nOutput:\n \n23\n\n\nExplanation:\n\n\n\n\nApply Operation 2 to \nnums[1] = 8\n, making \nnums[1] = 5\n.\n\n\nApply Operation 1 to \nnums[3] = 19\n, making \nnums[3] = 10\n.\n\n\nThe resulting array becomes \n[2, 5, 3, 10, 3]\n, which has the minimum possible sum of 23 after applying the operations.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,4,3], k = 3, op1 = 2, op2 = 1\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nApply Operation 1 to \nnums[0] = 2\n, making \nnums[0] = 1\n.\n\n\nApply Operation 1 to \nnums[1] = 4\n, making \nnums[1] = 2\n.\n\n\nApply Operation 2 to \nnums[2] = 3\n, making \nnums[2] = 0\n.\n\n\nThe resulting array becomes \n[1, 2, 0]\n, which has the minimum possible sum of 3 after applying the operations.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n0 <= nums[i] <= 10\n5\n\n\n0 <= k <= 10\n5\n\n\n0 <= op1, op2 <= nums.length",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3381,
        "slug": "maximum-subarray-sum-with-length-divisible-by-k",
        "url": "https://leetcode.com/problems/maximum-subarray-sum-with-length-divisible-by-k/",
        "titulo": "Maximum Subarray Sum With Length Divisible by K",
        "enunciado": "You are given an array of integers \nnums\n and an integer \nk\n.\n\n\nReturn the \nmaximum\n sum of a \nsubarray\n of \nnums\n, such that the size of the subarray is \ndivisible\n by \nk\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2], k = 1\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe subarray \n[1, 2]\n with sum 3 has length equal to 2 which is divisible by 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [-1,-2,-3,-4,-5], k = 4\n\n\nOutput:\n \n-10\n\n\nExplanation:\n\n\nThe maximum sum subarray is \n[-1, -2, -3, -4]\n which has length equal to 4 which is divisible by 4.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [-5,1,2,-3,4], k = 2\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe maximum sum subarray is \n[1, 2, -3, 4]\n which has length equal to 4 which is divisible by 2.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 2 * 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3376,
        "slug": "minimum-time-to-break-locks-i",
        "url": "https://leetcode.com/problems/minimum-time-to-break-locks-i/",
        "titulo": "Minimum Time to Break Locks I",
        "enunciado": "Bob is stuck in a dungeon and must break \nn\n locks, each requiring some amount of \nenergy\n to break. The required energy for each lock is stored in an array called \nstrength\n where \nstrength[i]\n indicates the energy needed to break the \ni\nth\n lock.\n\n\nTo break a lock, Bob uses a sword with the following characteristics:\n\n\n\n\nThe initial energy of the sword is 0.\n\n\nThe initial factor \nx\n by which the energy of the sword increases is 1.\n\n\nEvery minute, the energy of the sword increases by the current factor \nx\n.\n\n\nTo break the \ni\nth\n lock, the energy of the sword must reach \nat least\n \nstrength[i]\n.\n\n\nAfter breaking a lock, the energy of the sword resets to 0, and the factor \nx\n increases by a given value \nk\n.\n\n\n\n\nYour task is to determine the \nminimum\n time in minutes required for Bob to break all \nn\n locks and escape the dungeon.\n\n\nReturn the \nminimum \ntime required for Bob to break all \nn\n locks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nstrength = [3,4,1], k = 1\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\n\n\n\n\nTime\n\n\nEnergy\n\n\nx\n\n\nAction\n\n\nUpdated x\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\nNothing\n\n\n1\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\nBreak 3\nrd\n Lock\n\n\n2\n\n\n\n\n\n\n2\n\n\n2\n\n\n2\n\n\nNothing\n\n\n2\n\n\n\n\n\n\n3\n\n\n4\n\n\n2\n\n\nBreak 2\nnd\n Lock\n\n\n3\n\n\n\n\n\n\n4\n\n\n3\n\n\n3\n\n\nBreak 1\nst\n Lock\n\n\n3\n\n\n\n\n\n\n\n\nThe locks cannot be broken in less than 4 minutes; thus, the answer is 4.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nstrength = [2,5,4], k = 2\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\n\n\n\n\n\n\nTime\n\n\nEnergy\n\n\nx\n\n\nAction\n\n\nUpdated x\n\n\n\n\n\n\n0\n\n\n0\n\n\n1\n\n\nNothing\n\n\n1\n\n\n\n\n\n\n1\n\n\n1\n\n\n1\n\n\nNothing\n\n\n1\n\n\n\n\n\n\n2\n\n\n2\n\n\n1\n\n\nBreak 1\nst\n Lock\n\n\n3\n\n\n\n\n\n\n3\n\n\n3\n\n\n3\n\n\nNothing\n\n\n3\n\n\n\n\n\n\n4\n\n\n6\n\n\n3\n\n\nBreak 2\nn\nd\n Lock\n\n\n5\n\n\n\n\n\n\n5\n\n\n5\n\n\n5\n\n\nBreak 3\nr\nd\n Lock\n\n\n7\n\n\n\n\n\n\n\n\nThe locks cannot be broken in less than 5 minutes; thus, the answer is 5.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == strength.length\n\n\n1 <= n <= 8\n\n\n1 <= K <= 10\n\n\n1 <= strength[i] <= 10\n6",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Depth-First Search",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3362,
        "slug": "zero-array-transformation-iii",
        "url": "https://leetcode.com/problems/zero-array-transformation-iii/",
        "titulo": "Zero Array Transformation III",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n and a 2D array \nqueries\n where \nqueries[i] = [l\ni\n, r\ni\n]\n.\n\n\nEach \nqueries[i]\n represents the following action on \nnums\n:\n\n\n\n\nDecrement the value at each index in the range \n[l\ni\n, r\ni\n]\n in \nnums\n by \nat most\n \n1.\n\n\nThe amount by which the value is decremented can be chosen \nindependently\n for each index.\n\n\n\n\nA \nZero Array\n is an array with all its elements equal to 0.\n\n\nReturn the \nmaximum \nnumber of elements that can be removed from \nqueries\n, such that \nnums\n can still be converted to a \nzero array\n using the \nremaining\n queries. If it is not possible to convert \nnums\n to a \nzero array\n, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,0,2], queries = [[0,2],[0,2],[1,1]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nAfter removing \nqueries[2]\n, \nnums\n can still be converted to a zero array.\n\n\n\n\nUsing \nqueries[0]\n, decrement \nnums[0]\n and \nnums[2]\n by 1 and \nnums[1]\n by 0.\n\n\nUsing \nqueries[1]\n, decrement \nnums[0]\n and \nnums[2]\n by 1 and \nnums[1]\n by 0.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,1,1,1], queries = [[1,3],[0,2],[1,3],[1,2]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nWe can remove \nqueries[2]\n and \nqueries[3]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,2,3,4], queries = [[0,3]]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nnums\n cannot be converted to a zero array even after using all the queries.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= l\ni\n <= r\ni\n < nums.length",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3356,
        "slug": "zero-array-transformation-ii",
        "url": "https://leetcode.com/problems/zero-array-transformation-ii/",
        "titulo": "Zero Array Transformation II",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n and a 2D array \nqueries\n where \nqueries[i] = [l\ni\n, r\ni\n, val\ni\n]\n.\n\n\nEach \nqueries[i]\n represents the following action on \nnums\n:\n\n\n\n\nDecrement the value at each index in the range \n[l\ni\n, r\ni\n]\n in \nnums\n by \nat most\n \nval\ni\n.\n\n\nThe amount by which each value is decremented\n can be chosen \nindependently\n for each index.\n\n\n\n\nA \nZero Array\n is an array with all its elements equal to 0.\n\n\nReturn the \nminimum\n possible \nnon-negative\n value of \nk\n, such that after processing the first \nk\n queries in \nsequence\n, \nnums\n becomes a \nZero Array\n. If no such \nk\n exists, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,0,2], queries = [[0,2,1],[0,2,1],[1,1,3]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nFor i = 0 (l = 0, r = 2, val = 1):\n\n\n\n\nDecrement values at indices \n[0, 1, 2]\n by \n[1, 0, 1]\n respectively.\n\n\nThe array will become \n[1, 0, 1]\n.\n\n\n\n\n\n\nFor i = 1 (l = 0, r = 2, val = 1):\n\n\n\n\nDecrement values at indices \n[0, 1, 2]\n by \n[1, 0, 1]\n respectively.\n\n\nThe array will become \n[0, 0, 0]\n, which is a Zero Array. Therefore, the minimum value of \nk\n is 2.\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,3,2,1], queries = [[1,3,2],[0,2,1]]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\n\n\nFor i = 0 (l = 1, r = 3, val = 2):\n\n\n\n\nDecrement values at indices \n[1, 2, 3]\n by \n[2, 2, 1]\n respectively.\n\n\nThe array will become \n[4, 1, 0, 0]\n.\n\n\n\n\n\n\nFor i = 1 (l = 0, r = 2, val\n \n= 1):\n\n\n\n\nDecrement values at indices \n[0, 1, 2]\n by \n[1, 1, 0]\n respectively.\n\n\nThe array will become \n[3, 0, 0, 0]\n, which is not a Zero Array.\n\n\n\n\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 5 * 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 3\n\n\n0 <= l\ni\n <= r\ni\n < nums.length\n\n\n1 <= val\ni\n <= 5",
        "temas": [
            "Array",
            "Binary Search",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3355,
        "slug": "zero-array-transformation-i",
        "url": "https://leetcode.com/problems/zero-array-transformation-i/",
        "titulo": "Zero Array Transformation I",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n and a 2D array \nqueries\n, where \nqueries[i] = [l\ni\n, r\ni\n]\n.\n\n\nFor each \nqueries[i]\n:\n\n\n\n\nSelect a \nsubset\n of indices within the range \n[l\ni\n, r\ni\n]\n in \nnums\n.\n\n\nDecrement the values at the selected indices by 1.\n\n\n\n\nA \nZero Array\n is an array where all elements are equal to 0.\n\n\nReturn \ntrue\n if it is \npossible\n to transform \nnums\n into a \nZero Array \nafter processing all the queries sequentially, otherwise return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,0,1], queries = [[0,2]]\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nFor i = 0:\n\n\n\n\nSelect the subset of indices as \n[0, 2]\n and decrement the values at these indices by 1.\n\n\nThe array will become \n[0, 0, 0]\n, which is a Zero Array.\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,3,2,1], queries = [[1,3],[0,2]]\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\n\n\nFor i = 0:\n\n\n\n\nSelect the subset of indices as \n[1, 2, 3]\n and decrement the values at these indices by 1.\n\n\nThe array will become \n[4, 2, 1, 0]\n.\n\n\n\n\n\n\nFor i = 1:\n\n\n\n\nSelect the subset of indices as \n[0, 1, 2]\n and decrement the values at these indices by 1.\n\n\nThe array will become \n[3, 1, 0, 0]\n, which is not a Zero Array.\n\n\n\n\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= l\ni\n <= r\ni\n < nums.length",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3412,
        "slug": "find-mirror-score-of-a-string",
        "url": "https://leetcode.com/problems/find-mirror-score-of-a-string/",
        "titulo": "Find Mirror Score of a String",
        "enunciado": "You are given a string \ns\n.\n\n\nWe define the \nmirror\n of a letter in the English alphabet as its corresponding letter when the alphabet is reversed. For example, the mirror of \n'a'\n is \n'z'\n, and the mirror of \n'y'\n is \n'b'\n.\n\n\nInitially, all characters in the string \ns\n are \nunmarked\n.\n\n\nYou start with a score of 0, and you perform the following process on the string \ns\n:\n\n\n\n\nIterate through the string from left to right.\n\n\nAt each index \ni\n, find the closest \nunmarked\n index \nj\n such that \nj < i\n and \ns[j]\n is the mirror of \ns[i]\n. Then, \nmark\n both indices \ni\n and \nj\n, and add the value \ni - j\n to the total score.\n\n\nIf no such index \nj\n exists for the index \ni\n, move on to the next index without making any changes.\n\n\n\n\nReturn the total score at the end of the process.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"aczzx\"\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\n\n\ni = 0\n. There is no index \nj\n that satisfies the conditions, so we skip.\n\n\ni = 1\n. There is no index \nj\n that satisfies the conditions, so we skip.\n\n\ni = 2\n. The closest index \nj\n that satisfies the conditions is \nj = 0\n, so we mark both indices 0 and 2, and then add \n2 - 0 = 2\n to the score.\n\n\ni = 3\n. There is no index \nj\n that satisfies the conditions, so we skip.\n\n\ni = 4\n. The closest index \nj\n that satisfies the conditions is \nj = 1\n, so we mark both indices 1 and 4, and then add \n4 - 1 = 3\n to the score.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"abcdef\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nFor each index \ni\n, there is no index \nj\n that satisfies the conditions.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3372,
        "slug": "maximize-the-number-of-target-nodes-after-connecting-trees-i",
        "url": "https://leetcode.com/problems/maximize-the-number-of-target-nodes-after-connecting-trees-i/",
        "titulo": "Maximize the Number of Target Nodes After Connecting Trees I",
        "enunciado": "There exist two \nundirected \ntrees with \nn\n and \nm\n nodes, with \ndistinct\n labels in ranges \n[0, n - 1]\n and \n[0, m - 1]\n, respectively.\n\n\nYou are given two 2D integer arrays \nedges1\n and \nedges2\n of lengths \nn - 1\n and \nm - 1\n, respectively, where \nedges1[i] = [a\ni\n, b\ni\n]\n indicates that there is an edge between nodes \na\ni\n and \nb\ni\n in the first tree and \nedges2[i] = [u\ni\n, v\ni\n]\n indicates that there is an edge between nodes \nu\ni\n and \nv\ni\n in the second tree. You are also given an integer \nk\n.\n\n\nNode \nu\n is \ntarget\n to node \nv\n if the number of edges on the path from \nu\n to \nv\n is less than or equal to \nk\n. \nNote\n that a node is \nalways\n \ntarget\n to itself.\n\n\nReturn an array of \nn\n integers \nanswer\n, where \nanswer[i]\n is the \nmaximum\n possible number of nodes \ntarget\n to node \ni\n of the first tree if you have to connect one node from the first tree to another node in the second tree.\n\n\nNote\n that queries are independent from each other. That is, for every query you will remove the added edge before proceeding to the next query.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nedges1 = [[0,1],[0,2],[2,3],[2,4]], edges2 = [[0,1],[0,2],[0,3],[2,7],[1,4],[4,5],[4,6]], k = 2\n\n\nOutput:\n \n[9,7,9,8,8]\n\n\nExplanation:\n\n\n\n\nFor \ni = 0\n, connect node 0 from the first tree to node 0 from the second tree.\n\n\nFor \ni = 1\n, connect node 1 from the first tree to node 0 from the second tree.\n\n\nFor \ni = 2\n, connect node 2 from the first tree to node 4 from the second tree.\n\n\nFor \ni = 3\n, connect node 3 from the first tree to node 4 from the second tree.\n\n\nFor \ni = 4\n, connect node 4 from the first tree to node 4 from the second tree.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nedges1 = [[0,1],[0,2],[0,3],[0,4]], edges2 = [[0,1],[1,2],[2,3]], k = 1\n\n\nOutput:\n \n[6,3,3,3,3]\n\n\nExplanation:\n\n\nFor every \ni\n, connect node \ni\n of the first tree with any node of the second tree.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n, m <= 1000\n\n\nedges1.length == n - 1\n\n\nedges2.length == m - 1\n\n\nedges1[i].length == edges2[i].length == 2\n\n\nedges1[i] = [a\ni\n, b\ni\n]\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\nedges2[i] = [u\ni\n, v\ni\n]\n\n\n0 <= u\ni\n, v\ni\n < m\n\n\nThe input is generated such that \nedges1\n and \nedges2\n represent valid trees.\n\n\n0 <= k <= 1000",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 3335,
        "slug": "total-characters-in-string-after-transformations-i",
        "url": "https://leetcode.com/problems/total-characters-in-string-after-transformations-i/",
        "titulo": "Total Characters in String After Transformations I",
        "enunciado": "You are given a string \ns\n and an integer \nt\n, representing the number of \ntransformations\n to perform. In one \ntransformation\n, every character in \ns\n is replaced according to the following rules:\n\n\n\n\nIf the character is \n'z'\n, replace it with the string \n\"ab\"\n.\n\n\nOtherwise, replace it with the \nnext\n character in the alphabet. For example, \n'a'\n is replaced with \n'b'\n, \n'b'\n is replaced with \n'c'\n, and so on.\n\n\n\n\nReturn the \nlength\n of the resulting string after \nexactly\n \nt\n transformations.\n\n\nSince the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abcyy\", t = 2\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\n\n\nFirst Transformation (t = 1)\n:\n\n\t\n\n\n'a'\n becomes \n'b'\n\n\n'b'\n becomes \n'c'\n\n\n'c'\n becomes \n'd'\n\n\n'y'\n becomes \n'z'\n\n\n'y'\n becomes \n'z'\n\n\nString after the first transformation: \n\"bcdzz\"\n\n\n\n\n\n\nSecond Transformation (t = 2)\n:\n\t\n\n\n'b'\n becomes \n'c'\n\n\n'c'\n becomes \n'd'\n\n\n'd'\n becomes \n'e'\n\n\n'z'\n becomes \n\"ab\"\n\n\n'z'\n becomes \n\"ab\"\n\n\nString after the second transformation: \n\"cdeabab\"\n\n\n\n\n\n\nFinal Length of the string\n: The string is \n\"cdeabab\"\n, which has 7 characters.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"azbk\", t = 1\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\n\n\nFirst Transformation (t = 1)\n:\n\n\t\n\n\n'a'\n becomes \n'b'\n\n\n'z'\n becomes \n\"ab\"\n\n\n'b'\n becomes \n'c'\n\n\n'k'\n becomes \n'l'\n\n\nString after the first transformation: \n\"babcl\"\n\n\n\n\n\n\nFinal Length of the string\n: The string is \n\"babcl\"\n, which has 5 characters.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists only of lowercase English letters.\n\n\n1 <= t <= 10\n5",
        "temas": [
            "Hash Table",
            "Math",
            "String",
            "Dynamic Programming",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3342,
        "slug": "find-minimum-time-to-reach-last-room-ii",
        "url": "https://leetcode.com/problems/find-minimum-time-to-reach-last-room-ii/",
        "titulo": "Find Minimum Time to Reach Last Room II",
        "enunciado": "There is a dungeon with \nn x m\n rooms arranged as a grid.\n\n\nYou are given a 2D array \nmoveTime\n of size \nn x m\n, where \nmoveTime[i][j]\n represents the \nminimum\n time in seconds when you can \nstart moving\n to that room. You start from the room \n(0, 0)\n at time \nt = 0\n and can move to an \nadjacent\n room. Moving between \nadjacent\n rooms takes one second for one move and two seconds for the next, \nalternating\n between the two.\n\n\nReturn the \nminimum\n time to reach the room \n(n - 1, m - 1)\n.\n\n\nTwo rooms are \nadjacent\n if they share a common wall, either \nhorizontally\n or \nvertically\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nmoveTime = [[0,4],[4,4]]\n\n\nOutput:\n 7\n\n\nExplanation:\n\n\nThe minimum time required is 7 seconds.\n\n\n\n\nAt time \nt == 4\n, move from room \n(0, 0)\n to room \n(1, 0)\n in one second.\n\n\nAt time \nt == 5\n, move from room \n(1, 0)\n to room \n(1, 1)\n in two seconds.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nmoveTime = [[0,0,0,0],[0,0,0,0]]\n\n\nOutput:\n 6\n\n\nExplanation:\n\n\nThe minimum time required is 6 seconds.\n\n\n\n\nAt time \nt == 0\n, move from room \n(0, 0)\n to room \n(1, 0)\n in one second.\n\n\nAt time \nt == 1\n, move from room \n(1, 0)\n to room \n(1, 1)\n in two seconds.\n\n\nAt time \nt == 3\n, move from room \n(1, 1)\n to room \n(1, 2)\n in one second.\n\n\nAt time \nt == 4\n, move from room \n(1, 2)\n to room \n(1, 3)\n in two seconds.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nmoveTime = [[0,1],[1,2]]\n\n\nOutput:\n 4\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == moveTime.length <= 750\n\n\n2 <= m == moveTime[i].length <= 750\n\n\n0 <= moveTime[i][j] <= 10\n9",
        "temas": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3341,
        "slug": "find-minimum-time-to-reach-last-room-i",
        "url": "https://leetcode.com/problems/find-minimum-time-to-reach-last-room-i/",
        "titulo": "Find Minimum Time to Reach Last Room I",
        "enunciado": "There is a dungeon with \nn x m\n rooms arranged as a grid.\n\n\nYou are given a 2D array \nmoveTime\n of size \nn x m\n, where \nmoveTime[i][j]\n represents the \nminimum\n time in seconds \nafter\n which the room opens and can be moved to. You start from the room \n(0, 0)\n at time \nt = 0\n and can move to an \nadjacent\n room. Moving between adjacent rooms takes \nexactly\n one second.\n\n\nReturn the \nminimum\n time to reach the room \n(n - 1, m - 1)\n.\n\n\nTwo rooms are \nadjacent\n if they share a common wall, either \nhorizontally\n or \nvertically\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nmoveTime = [[0,4],[4,4]]\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nThe minimum time required is 6 seconds.\n\n\n\n\nAt time \nt == 4\n, move from room \n(0, 0)\n to room \n(1, 0)\n in one second.\n\n\nAt time \nt == 5\n, move from room \n(1, 0)\n to room \n(1, 1)\n in one second.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nmoveTime = [[0,0,0],[0,0,0]]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe minimum time required is 3 seconds.\n\n\n\n\nAt time \nt == 0\n, move from room \n(0, 0)\n to room \n(1, 0)\n in one second.\n\n\nAt time \nt == 1\n, move from room \n(1, 0)\n to room \n(1, 1)\n in one second.\n\n\nAt time \nt == 2\n, move from room \n(1, 1)\n to room \n(1, 2)\n in one second.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nmoveTime = [[0,1],[1,2]]\n\n\nOutput:\n \n3\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == moveTime.length <= 50\n\n\n2 <= m == moveTime[i].length <= 50\n\n\n0 <= moveTime[i][j] <= 10\n9",
        "temas": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3346,
        "slug": "maximum-frequency-of-an-element-after-performing-operations-i",
        "url": "https://leetcode.com/problems/maximum-frequency-of-an-element-after-performing-operations-i/",
        "titulo": "Maximum Frequency of an Element After Performing Operations I",
        "enunciado": "You are given an integer array \nnums\n and two integers \nk\n and \nnumOperations\n.\n\n\nYou must perform an \noperation\n \nnumOperations\n times on \nnums\n, where in each operation you:\n\n\n\n\nSelect an index \ni\n that was \nnot\n selected in any previous operations.\n\n\nAdd an integer in the range \n[-k, k]\n to \nnums[i]\n.\n\n\n\n\nReturn the \nmaximum\n possible \nfrequency\n of any element in \nnums\n after performing the \noperations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,4,5], k = 1, numOperations = 2\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nWe can achieve a maximum frequency of two by:\n\n\n\n\nAdding 0 to \nnums[1]\n. \nnums\n becomes \n[1, 4, 5]\n.\n\n\nAdding -1 to \nnums[2]\n. \nnums\n becomes \n[1, 4, 4]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [5,11,20,20], k = 5, numOperations = 1\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nWe can achieve a maximum frequency of two by:\n\n\n\n\nAdding 0 to \nnums[1]\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\n0 <= k <= 10\n5\n\n\n0 <= numOperations <= nums.length",
        "temas": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3397,
        "slug": "maximum-number-of-distinct-elements-after-operations",
        "url": "https://leetcode.com/problems/maximum-number-of-distinct-elements-after-operations/",
        "titulo": "Maximum Number of Distinct Elements After Operations",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n.\n\n\nYou are allowed to perform the following \noperation\n on each element of the array \nat most\n \nonce\n:\n\n\n\n\nAdd an integer in the range \n[-k, k]\n to the element.\n\n\n\n\nReturn the \nmaximum\n possible number of \ndistinct\n elements in \nnums\n after performing the \noperations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,2,3,3,4], k = 2\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nnums\n changes to \n[-1, 0, 1, 2, 3, 4]\n after performing operations on the first four elements.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,4,4,4], k = 1\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nBy adding -1 to \nnums[0]\n and 1 to \nnums[1]\n, \nnums\n changes to \n[3, 5, 4, 4]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n0 <= k <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3350,
        "slug": "adjacent-increasing-subarrays-detection-ii",
        "url": "https://leetcode.com/problems/adjacent-increasing-subarrays-detection-ii/",
        "titulo": "Adjacent Increasing Subarrays Detection II",
        "enunciado": "Given an array \nnums\n of \nn\n integers, your task is to find the \nmaximum\n value of \nk\n for which there exist \ntwo\n adjacent \nsubarrays\n of length \nk\n each, such that both subarrays are \nstrictly\n \nincreasing\n. Specifically, check if there are \ntwo\n subarrays of length \nk\n starting at indices \na\n and \nb\n (\na < b\n), where:\n\n\n\n\nBoth subarrays \nnums[a..a + k - 1]\n and \nnums[b..b + k - 1]\n are \nstrictly increasing\n.\n\n\nThe subarrays must be \nadjacent\n, meaning \nb = a + k\n.\n\n\n\n\nReturn the \nmaximum\n \npossible\n value of \nk\n.\n\n\nA \nsubarray\n is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,5,7,8,9,2,3,4,3,1]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nThe subarray starting at index 2 is \n[7, 8, 9]\n, which is strictly increasing.\n\n\nThe subarray starting at index 5 is \n[2, 3, 4]\n, which is also strictly increasing.\n\n\nThese two subarrays are adjacent, and 3 is the \nmaximum\n possible value of \nk\n for which two such adjacent strictly increasing subarrays exist.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,4,4,4,5,6,7]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nThe subarray starting at index 0 is \n[1, 2]\n, which is strictly increasing.\n\n\nThe subarray starting at index 2 is \n[3, 4]\n, which is also strictly increasing.\n\n\nThese two subarrays are adjacent, and 2 is the \nmaximum\n possible value of \nk\n for which two such adjacent strictly increasing subarrays exist.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 2 * 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3387,
        "slug": "maximize-amount-after-two-days-of-conversions",
        "url": "https://leetcode.com/problems/maximize-amount-after-two-days-of-conversions/",
        "titulo": "Maximize Amount After Two Days of Conversions",
        "enunciado": "You are given a string \ninitialCurrency\n, and you start with \n1.0\n of \ninitialCurrency\n.\n\n\nYou are also given four arrays with currency pairs (strings) and rates (real numbers):\n\n\n\n\npairs1[i] = [startCurrency\ni\n, targetCurrency\ni\n]\n denotes that you can convert from \nstartCurrency\ni\n to \ntargetCurrency\ni\n at a rate of \nrates1[i]\n on \nday 1\n.\n\n\npairs2[i] = [startCurrency\ni\n, targetCurrency\ni\n]\n denotes that you can convert from \nstartCurrency\ni\n to \ntargetCurrency\ni\n at a rate of \nrates2[i]\n on \nday 2\n.\n\n\nAlso, each \ntargetCurrency\n can be converted back to its corresponding \nstartCurrency\n at a rate of \n1 / rate\n.\n\n\n\n\nYou can perform \nany\n number of conversions, \nincluding zero\n, using \nrates1\n on day 1, \nfollowed\n by any number of additional conversions, \nincluding zero\n, using \nrates2\n on day 2.\n\n\nReturn the \nmaximum\n amount of \ninitialCurrency\n you can have after performing any number of conversions on both days \nin order\n.\n\n\nNote: \nConversion rates are valid, and there will be no contradictions in the rates for either day. The rates for the days are independent of each other.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ninitialCurrency = \"EUR\", pairs1 = [[\"EUR\",\"USD\"],[\"USD\",\"JPY\"]], rates1 = [2.0,3.0], pairs2 = [[\"JPY\",\"USD\"],[\"USD\",\"CHF\"],[\"CHF\",\"EUR\"]], rates2 = [4.0,5.0,6.0]\n\n\nOutput:\n \n720.00000\n\n\nExplanation:\n\n\nTo get the maximum amount of \nEUR\n, starting with 1.0 \nEUR\n:\n\n\n\n\nOn Day 1:\n\t\n\n\nConvert \nEUR \nto \nUSD\n to get 2.0 \nUSD\n.\n\n\nConvert \nUSD\n to \nJPY\n to get 6.0 \nJPY\n.\n\n\n\n\n\n\nOn Day 2:\n\t\n\n\nConvert \nJPY\n to \nUSD\n to get 24.0 \nUSD\n.\n\n\nConvert \nUSD\n to \nCHF\n to get 120.0 \nCHF\n.\n\n\nFinally, convert \nCHF\n to \nEUR\n to get 720.0 \nEUR\n.\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ninitialCurrency = \"NGN\", pairs1 = \n[[\"NGN\",\"EUR\"]]\n, rates1 = \n[9.0]\n, pairs2 = \n[[\"NGN\",\"EUR\"]]\n, rates2 = \n[6.0]\n\n\nOutput:\n 1.50000\n\n\nExplanation:\n\n\nConverting \nNGN\n to \nEUR\n on day 1 and \nEUR\n to \nNGN\n using the inverse rate on day 2 gives the maximum amount.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ninitialCurrency = \"USD\", pairs1 = [[\"USD\",\"EUR\"]], rates1 = [1.0], pairs2 = [[\"EUR\",\"JPY\"]], rates2 = [10.0]\n\n\nOutput:\n \n1.00000\n\n\nExplanation:\n\n\nIn this example, there is no need to make any conversions on either day.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= initialCurrency.length <= 3\n\n\ninitialCurrency\n consists only of uppercase English letters.\n\n\n1 <= n == pairs1.length <= 10\n\n\n1 <= m == pairs2.length <= 10\n\n\npairs1[i] == [startCurrency\ni\n, targetCurrency\ni\n]\n\n\npairs2[i] == [startCurrency\ni\n, targetCurrency\ni\n]\n\n\n1 <= startCurrency\ni\n.length, targetCurrency\ni\n.length <= 3\n\n\nstartCurrency\ni\n and \ntargetCurrency\ni\n consist only of uppercase English letters.\n\n\nrates1.length == n\n\n\nrates2.length == m\n\n\n1.0 <= rates1[i], rates2[i] <= 10.0\n\n\nThe input is generated such that there are no contradictions or cycles in the conversion graphs for either day.\n\n\nThe input is generated such that the output is \nat most\n \n5 * 10\n10\n.",
        "temas": [
            "Array",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3315,
        "slug": "construct-the-minimum-bitwise-array-ii",
        "url": "https://leetcode.com/problems/construct-the-minimum-bitwise-array-ii/",
        "titulo": "Construct the Minimum Bitwise Array II",
        "enunciado": "You are given an array \nnums\n consisting of \nn\n \nprime\n integers.\n\n\nYou need to construct an array \nans\n of length \nn\n, such that, for each index \ni\n, the bitwise \nOR\n of \nans[i]\n and \nans[i] + 1\n is equal to \nnums[i]\n, i.e. \nans[i] OR (ans[i] + 1) == nums[i]\n.\n\n\nAdditionally, you must \nminimize\n each value of \nans[i]\n in the resulting array.\n\n\nIf it is \nnot possible\n to find such a value for \nans[i]\n that satisfies the \ncondition\n, then set \nans[i] = -1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,3,5,7]\n\n\nOutput:\n \n[-1,1,4,3]\n\n\nExplanation:\n\n\n\n\nFor \ni = 0\n, as there is no value for \nans[0]\n that satisfies \nans[0] OR (ans[0] + 1) = 2\n, so \nans[0] = -1\n.\n\n\nFor \ni = 1\n, the smallest \nans[1]\n that satisfies \nans[1] OR (ans[1] + 1) = 3\n is \n1\n, because \n1 OR (1 + 1) = 3\n.\n\n\nFor \ni = 2\n, the smallest \nans[2]\n that satisfies \nans[2] OR (ans[2] + 1) = 5\n is \n4\n, because \n4 OR (4 + 1) = 5\n.\n\n\nFor \ni = 3\n, the smallest \nans[3]\n that satisfies \nans[3] OR (ans[3] + 1) = 7\n is \n3\n, because \n3 OR (3 + 1) = 7\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [11,13,31]\n\n\nOutput:\n \n[9,12,15]\n\n\nExplanation:\n\n\n\n\nFor \ni = 0\n, the smallest \nans[0]\n that satisfies \nans[0] OR (ans[0] + 1) = 11\n is \n9\n, because \n9 OR (9 + 1) = 11\n.\n\n\nFor \ni = 1\n, the smallest \nans[1]\n that satisfies \nans[1] OR (ans[1] + 1) = 13\n is \n12\n, because \n12 OR (12 + 1) = 13\n.\n\n\nFor \ni = 2\n, the smallest \nans[2]\n that satisfies \nans[2] OR (ans[2] + 1) = 31\n is \n15\n, because \n15 OR (15 + 1) = 31\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n2 <= nums[i] <= 10\n9\n\n\nnums[i]\n is a prime number.",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3326,
        "slug": "minimum-division-operations-to-make-array-non-decreasing",
        "url": "https://leetcode.com/problems/minimum-division-operations-to-make-array-non-decreasing/",
        "titulo": "Minimum Division Operations to Make Array Non Decreasing",
        "enunciado": "You are given an integer array \nnums\n.\n\n\nAny \npositive\n divisor of a natural number \nx\n that is \nstrictly less\n than \nx\n is called a \nproper divisor\n of \nx\n. For example, 2 is a \nproper divisor\n of 4, while 6 is not a \nproper divisor\n of 6.\n\n\nYou are allowed to perform an \noperation\n any number of times on \nnums\n, where in each \noperation\n you select any \none\n element from \nnums\n and divide it by its \ngreatest\n \nproper divisor\n.\n\n\nReturn the \nminimum\n number of \noperations\n required to make the array \nnon-decreasing\n.\n\n\nIf it is \nnot\n possible to make the array \nnon-decreasing\n using any number of operations, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [25,7]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nUsing a single operation, 25 gets divided by 5 and \nnums\n becomes \n[5, 7]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [7,7,6]\n\n\nOutput:\n \n-1\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,1,1,1]\n\n\nOutput:\n \n0\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3365,
        "slug": "rearrange-k-substrings-to-form-target-string",
        "url": "https://leetcode.com/problems/rearrange-k-substrings-to-form-target-string/",
        "titulo": "Rearrange K Substrings to Form Target String",
        "enunciado": "You are given two strings \ns\n and \nt\n, both of which are anagrams of each other, and an integer \nk\n.\n\n\nYour task is to determine whether it is possible to split the string \ns\n into \nk\n equal-sized substrings, rearrange the substrings, and concatenate them in \nany order\n to create a new string that matches the given string \nt\n.\n\n\nReturn \ntrue\n if this is possible, otherwise, return \nfalse\n.\n\n\nAn \nanagram\n is a word or phrase formed by rearranging the letters of a different word or phrase, using all the original letters exactly once.\n\n\nA \nsubstring\n is a contiguous \nnon-empty\n sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abcd\", t = \"cdab\", k = 2\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nSplit \ns\n into 2 substrings of length 2: \n[\"ab\", \"cd\"]\n.\n\n\nRearranging these substrings as \n[\"cd\", \"ab\"]\n, and then concatenating them results in \n\"cdab\"\n, which matches \nt\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"aabbcc\", t = \"bbaacc\", k = 3\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nSplit \ns\n into 3 substrings of length 2: \n[\"aa\", \"bb\", \"cc\"]\n.\n\n\nRearranging these substrings as \n[\"bb\", \"aa\", \"cc\"]\n, and then concatenating them results in \n\"bbaacc\"\n, which matches \nt\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"aabbcc\", t = \"bbaacc\", k = 2\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\n\n\nSplit \ns\n into 2 substrings of length 3: \n[\"aab\", \"bcc\"]\n.\n\n\nThese substrings cannot be rearranged to form \nt = \"bbaacc\"\n, so the output is \nfalse\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length == t.length <= 2 * 10\n5\n\n\n1 <= k <= s.length\n\n\ns.length\n is divisible by \nk\n.\n\n\ns\n and \nt\n consist only of lowercase English letters.\n\n\nThe input is generated such that\n \ns\n and \nt\n are anagrams of each other.",
        "temas": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3371,
        "slug": "identify-the-largest-outlier-in-an-array",
        "url": "https://leetcode.com/problems/identify-the-largest-outlier-in-an-array/",
        "titulo": "Identify the Largest Outlier in an Array",
        "enunciado": "You are given an integer array \nnums\n. This array contains \nn\n elements, where \nexactly\n \nn - 2\n elements are \nspecial\n numbers\n. One of the remaining \ntwo\n elements is the \nsum\n of these \nspecial numbers\n, and the other is an \noutlier\n.\n\n\nAn \noutlier\n is defined as a number that is \nneither\n one of the original special numbers \nnor\n the element representing the sum of those numbers.\n\n\nNote\n that special numbers, the sum element, and the outlier must have \ndistinct\n indices, but \nmay \nshare the \nsame\n value.\n\n\nReturn the \nlargest\n \npotential\n outlier\n in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,3,5,10]\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nThe special numbers could be 2 and 3, thus making their sum 5 and the outlier 10.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [-2,-1,-3,-6,4]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe special numbers could be -2, -1, and -3, thus making their sum -6 and the outlier 4.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,1,1,1,1,5,5]\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nThe special numbers could be 1, 1, 1, 1, and 1, thus making their sum 5 and the other 5 as the outlier.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n-1000 <= nums[i] <= 1000\n\n\nThe input is generated such that at least \none\n potential outlier exists in \nnums\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Counting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3334,
        "slug": "find-the-maximum-factor-score-of-array",
        "url": "https://leetcode.com/problems/find-the-maximum-factor-score-of-array/",
        "titulo": "Find the Maximum Factor Score of Array",
        "enunciado": "You are given an integer array \nnums\n.\n\n\nThe \nfactor score\n of an array is defined as the \nproduct\n of the LCM and GCD of all elements of that array.\n\n\nReturn the \nmaximum factor score\n of \nnums\n after removing \nat most\n one element from it.\n\n\nNote\n that \nboth\n the \nLCM\n and \nGCD\n of a single number are the number itself, and the \nfactor score\n of an \nempty\n array is 0.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,4,8,16]\n\n\nOutput:\n \n64\n\n\nExplanation:\n\n\nOn removing 2, the GCD of the rest of the elements is 4 while the LCM is 16, which gives a maximum factor score of \n4 * 16 = 64\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,5]\n\n\nOutput:\n \n60\n\n\nExplanation:\n\n\nThe maximum factor score of 60 can be obtained without removing any elements.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [3]\n\n\nOutput:\n 9\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n1 <= nums[i] <= 30",
        "temas": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3361,
        "slug": "shift-distance-between-two-strings",
        "url": "https://leetcode.com/problems/shift-distance-between-two-strings/",
        "titulo": "Shift Distance Between Two Strings",
        "enunciado": "You are given two strings \ns\n and \nt\n of the same length, and two integer arrays \nnextCost\n and \npreviousCost\n.\n\n\nIn one operation, you can pick any index \ni\n of \ns\n, and perform \neither one\n of the following actions:\n\n\n\n\nShift \ns[i]\n to the next letter in the alphabet. If \ns[i] == 'z'\n, you should replace it with \n'a'\n. This operation costs \nnextCost[j]\n where \nj\n is the index of \ns[i]\n in the alphabet.\n\n\nShift \ns[i]\n to the previous letter in the alphabet. If \ns[i] == 'a'\n, you should replace it with \n'z'\n. This operation costs \npreviousCost[j]\n where \nj\n is the index of \ns[i]\n in the alphabet.\n\n\n\n\nThe \nshift distance\n is the \nminimum\n total cost of operations required to transform \ns\n into \nt\n.\n\n\nReturn the \nshift distance\n from \ns\n to \nt\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abab\", t = \"baba\", nextCost = [100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], previousCost = [1,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nWe choose index \ni = 0\n and shift \ns[0]\n 25 times to the previous character for a total cost of 1.\n\n\nWe choose index \ni = 1\n and shift \ns[1]\n 25 times to the next character for a total cost of 0.\n\n\nWe choose index \ni = 2\n and shift \ns[2]\n 25 times to the previous character for a total cost of 1.\n\n\nWe choose index \ni = 3\n and shift \ns[3]\n 25 times to the next character for a total cost of 0.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"leet\", t = \"code\", nextCost = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1], previousCost = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]\n\n\nOutput:\n \n31\n\n\nExplanation:\n\n\n\n\nWe choose index \ni = 0\n and shift \ns[0]\n 9 times to the previous character for a total cost of 9.\n\n\nWe choose index \ni = 1\n and shift \ns[1]\n 10 times to the next character for a total cost of 10.\n\n\nWe choose index \ni = 2\n and shift \ns[2]\n 1 time to the previous character for a total cost of 1.\n\n\nWe choose index \ni = 3\n and shift \ns[3]\n 11 times to the next character for a total cost of 11.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length == t.length <= 10\n5\n\n\ns\n and \nt\n consist only of lowercase English letters.\n\n\nnextCost.length == previousCost.length == 26\n\n\n0 <= nextCost[i], previousCost[i] <= 10\n9",
        "temas": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3332,
        "slug": "maximum-points-tourist-can-earn",
        "url": "https://leetcode.com/problems/maximum-points-tourist-can-earn/",
        "titulo": "Maximum Points Tourist Can Earn",
        "enunciado": "You are given two integers, \nn\n and \nk\n, along with two 2D integer arrays, \nstayScore\n and \ntravelScore\n.\n\n\nA tourist is visiting a country with \nn\n cities, where each city is \ndirectly\n connected to every other city. The tourist's journey consists of \nexactly\n \nk\n \n0-indexed\n days, and they can choose \nany\n city as their starting point.\n\n\nEach day, the tourist has two choices:\n\n\n\n\nStay in the current city\n: If the tourist stays in their current city \ncurr\n during day \ni\n, they will earn \nstayScore[i][curr]\n points.\n\n\nMove to another city\n: If the tourist moves from their current city \ncurr\n to city \ndest\n, they will earn \ntravelScore[curr][dest]\n points.\n\n\n\n\nReturn the \nmaximum\n possible points the tourist can earn.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 2, k = 1, stayScore = [[2,3]], travelScore = [[0,2],[1,0]]\n\n\nOutput:\n 3\n\n\nExplanation:\n\n\nThe tourist earns the maximum number of points by starting in city 1 and staying in that city.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 3, k = 2, stayScore = [[3,4,2],[2,1,2]], travelScore = [[0,2,1],[2,0,4],[3,2,0]]\n\n\nOutput:\n \n8\n\n\nExplanation:\n\n\nThe tourist earns the maximum number of points by starting in city 1, staying in that city on day 0, and traveling to city 2 on day 1.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 200\n\n\n1 <= k <= 200\n\n\nn == travelScore.length == travelScore[i].length == stayScore[i].length\n\n\nk == stayScore.length\n\n\n1 <= stayScore[i][j] <= 100\n\n\n0 <= travelScore[i][j] <= 100\n\n\ntravelScore[i][i] == 0",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3302,
        "slug": "find-the-lexicographically-smallest-valid-sequence",
        "url": "https://leetcode.com/problems/find-the-lexicographically-smallest-valid-sequence/",
        "titulo": "Find the Lexicographically Smallest Valid Sequence",
        "enunciado": "You are given two strings \nword1\n and \nword2\n.\n\n\nA string \nx\n is called \nalmost equal\n to \ny\n if you can change \nat most\n one character in \nx\n to make it \nidentical\n to \ny\n.\n\n\nA sequence of indices \nseq\n is called \nvalid\n if:\n\n\n\n\nThe indices are sorted in \nascending\n order.\n\n\nConcatenating\n the characters at these indices in \nword1\n in \nthe same\n order results in a string that is \nalmost equal\n to \nword2\n.\n\n\n\n\nReturn an array of size \nword2.length\n representing the \nlexicographically smallest\n \nvalid\n sequence of indices. If no such sequence of indices exists, return an \nempty\n array.\n\n\nNote\n that the answer must represent the \nlexicographically smallest array\n, \nnot\n the corresponding string formed by those indices.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword1 = \"vbcca\", word2 = \"abc\"\n\n\nOutput:\n \n[0,1,2]\n\n\nExplanation:\n\n\nThe lexicographically smallest valid sequence of indices is \n[0, 1, 2]\n:\n\n\n\n\nChange \nword1[0]\n to \n'a'\n.\n\n\nword1[1]\n is already \n'b'\n.\n\n\nword1[2]\n is already \n'c'\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword1 = \"bacdc\", word2 = \"abc\"\n\n\nOutput:\n \n[1,2,4]\n\n\nExplanation:\n\n\nThe lexicographically smallest valid sequence of indices is \n[1, 2, 4]\n:\n\n\n\n\nword1[1]\n is already \n'a'\n.\n\n\nChange \nword1[2]\n to \n'b'\n.\n\n\nword1[4]\n is already \n'c'\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nword1 = \"aaaaaa\", word2 = \"aaabc\"\n\n\nOutput:\n \n[]\n\n\nExplanation:\n\n\nThere is no valid sequence of indices.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nword1 = \"abc\", word2 = \"ab\"\n\n\nOutput:\n \n[0,1]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word2.length < word1.length <= 3 * 10\n5\n\n\nword1\n and \nword2\n consist only of lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 3309,
        "slug": "maximum-possible-number-by-binary-concatenation",
        "url": "https://leetcode.com/problems/maximum-possible-number-by-binary-concatenation/",
        "titulo": "Maximum Possible Number by Binary Concatenation",
        "enunciado": "You are given an array of integers \nnums\n of size 3.\n\n\nReturn the \nmaximum\n possible number whose \nbinary representation\n can be formed by \nconcatenating\n the \nbinary representation\n of \nall\n elements in \nnums\n in some order.\n\n\nNote\n that the binary representation of any number \ndoes not\n contain leading zeros.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3]\n\n\nOutput:\n 30\n\n\nExplanation:\n\n\nConcatenate the numbers in the order \n[3, 1, 2]\n to get the result \n\"11110\"\n, which is the binary representation of 30.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,8,16]\n\n\nOutput:\n 1296\n\n\nExplanation:\n\n\nConcatenate the numbers in the order \n[2, 8, 16]\n to get the result \n\"10100010000\"\n, which is the binary representation of 1296.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nnums.length == 3\n\n\n1 <= nums[i] <= 127",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3331,
        "slug": "find-subtree-sizes-after-changes",
        "url": "https://leetcode.com/problems/find-subtree-sizes-after-changes/",
        "titulo": "Find Subtree Sizes After Changes",
        "enunciado": "You are given a tree rooted at node 0 that consists of \nn\n nodes numbered from \n0\n to \nn - 1\n. The tree is represented by an array \nparent\n of size \nn\n, where \nparent[i]\n is the parent of node \ni\n. Since node 0 is the root, \nparent[0] == -1\n.\n\n\nYou are also given a string \ns\n of length \nn\n, where \ns[i]\n is the character assigned to node \ni\n.\n\n\nWe make the following changes on the tree \none\n time \nsimultaneously\n for all nodes \nx\n from \n1\n to \nn - 1\n:\n\n\n\n\nFind the \nclosest\n node \ny\n to node \nx\n such that \ny\n is an ancestor of \nx\n, and \ns[x] == s[y]\n.\n\n\nIf node \ny\n does not exist, do nothing.\n\n\nOtherwise, \nremove\n the edge between \nx\n and its current parent and make node \ny\n the new parent of \nx\n by adding an edge between them.\n\n\n\n\nReturn an array \nanswer\n of size \nn\n where \nanswer[i]\n is the \nsize\n of the \nsubtree\n rooted at node \ni\n in the \nfinal\n tree.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nparent = [-1,0,0,1,1,1], s = \"abaabc\"\n\n\nOutput:\n \n[6,3,1,1,1,1]\n\n\nExplanation:\n\n\n\n\nThe parent of node 3 will change from node 1 to node 0.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nparent = [-1,0,4,0,1], s = \"abbba\"\n\n\nOutput:\n \n[5,2,1,1,1]\n\n\nExplanation:\n\n\n\n\nThe following changes will happen at the same time:\n\n\n\n\nThe parent of node 4 will change from node 1 to node 0.\n\n\nThe parent of node 2 will change from node 4 to node 1.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == parent.length == s.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= parent[i] <= n - 1\n for all \ni >= 1\n.\n\n\nparent[0] == -1\n\n\nparent\n represents a valid tree.\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Tree",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3297,
        "slug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i",
        "url": "https://leetcode.com/problems/count-substrings-that-can-be-rearranged-to-contain-a-string-i/",
        "titulo": "Count Substrings That Can Be Rearranged to Contain a String I",
        "enunciado": "You are given two strings \nword1\n and \nword2\n.\n\n\nA string \nx\n is called \nvalid\n if \nx\n can be rearranged to have \nword2\n as a \nprefix\n.\n\n\nReturn the total number of \nvalid\n \nsubstrings\n of \nword1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword1 = \"bcca\", word2 = \"abc\"\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe only valid substring is \n\"bcca\"\n which can be rearranged to \n\"abcc\"\n having \n\"abc\"\n as a prefix.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword1 = \"abcabc\", word2 = \"abc\"\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nAll the substrings except substrings of size 1 and size 2 are valid.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nword1 = \"abcabc\", word2 = \"aaabc\"\n\n\nOutput:\n \n0\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word1.length <= 10\n5\n\n\n1 <= word2.length <= 10\n4\n\n\nword1\n and \nword2\n consist only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3305,
        "slug": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
        "url": "https://leetcode.com/problems/count-of-substrings-containing-every-vowel-and-k-consonants-i/",
        "titulo": "Count of Substrings Containing Every Vowel and K Consonants I",
        "enunciado": "You are given a string \nword\n and a \nnon-negative\n integer \nk\n.\n\n\nReturn the total number of \nsubstrings\n of \nword\n that contain every vowel (\n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n) \nat least\n once and \nexactly\n \nk\n consonants.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"aeioqq\", k = 1\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere is no substring with every vowel.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"aeiou\", k = 0\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe only substring with every vowel and zero consonants is \nword[0..4]\n, which is \n\"aeiou\"\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nword = \"\nieaouqqieaouqq\n\", k = 1\n\n\nOutput:\n 3\n\n\nExplanation:\n\n\nThe substrings with every vowel and one consonant are:\n\n\n\n\nword[0..5]\n, which is \n\"ieaouq\"\n.\n\n\nword[6..11]\n, which is \n\"qieaou\"\n.\n\n\nword[7..12]\n, which is \n\"ieaouq\"\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n5 <= word.length <= 250\n\n\nword\n consists only of lowercase English letters.\n\n\n0 <= k <= word.length - 5",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3306,
        "slug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
        "url": "https://leetcode.com/problems/count-of-substrings-containing-every-vowel-and-k-consonants-ii/",
        "titulo": "Count of Substrings Containing Every Vowel and K Consonants II",
        "enunciado": "You are given a string \nword\n and a \nnon-negative\n integer \nk\n.\n\n\nReturn the total number of \nsubstrings\n of \nword\n that contain every vowel (\n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n) \nat least\n once and \nexactly\n \nk\n consonants.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"aeioqq\", k = 1\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere is no substring with every vowel.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"aeiou\", k = 0\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe only substring with every vowel and zero consonants is \nword[0..4]\n, which is \n\"aeiou\"\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nword = \"\nieaouqqieaouqq\n\", k = 1\n\n\nOutput:\n 3\n\n\nExplanation:\n\n\nThe substrings with every vowel and one consonant are:\n\n\n\n\nword[0..5]\n, which is \n\"ieaouq\"\n.\n\n\nword[6..11]\n, which is \n\"qieaou\"\n.\n\n\nword[7..12]\n, which is \n\"ieaouq\"\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n5 <= word.length <= 2 * 10\n5\n\n\nword\n consists only of lowercase English letters.\n\n\n0 <= k <= word.length - 5",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3324,
        "slug": "find-the-sequence-of-strings-appeared-on-the-screen",
        "url": "https://leetcode.com/problems/find-the-sequence-of-strings-appeared-on-the-screen/",
        "titulo": "Find the Sequence of Strings Appeared on the Screen",
        "enunciado": "You are given a string \ntarget\n.\n\n\nAlice is going to type \ntarget\n on her computer using a special keyboard that has \nonly two\n keys:\n\n\n\n\nKey 1 appends the character \n\"a\"\n to the string on the screen.\n\n\nKey 2 changes the \nlast\n character of the string on the screen to its \nnext\n character in the English alphabet. For example, \n\"c\"\n changes to \n\"d\"\n and \n\"z\"\n changes to \n\"a\"\n.\n\n\n\n\nNote\n that initially there is an \nempty\n string \n\"\"\n on the screen, so she can \nonly\n press key 1.\n\n\nReturn a list of \nall\n strings that appear on the screen as Alice types \ntarget\n, in the order they appear, using the \nminimum\n key presses.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ntarget = \"abc\"\n\n\nOutput:\n \n[\"a\",\"aa\",\"ab\",\"aba\",\"abb\",\"abc\"]\n\n\nExplanation:\n\n\nThe sequence of key presses done by Alice are:\n\n\n\n\nPress key 1, and the string on the screen becomes \n\"a\"\n.\n\n\nPress key 1, and the string on the screen becomes \n\"aa\"\n.\n\n\nPress key 2, and the string on the screen becomes \n\"ab\"\n.\n\n\nPress key 1, and the string on the screen becomes \n\"aba\"\n.\n\n\nPress key 2, and the string on the screen becomes \n\"abb\"\n.\n\n\nPress key 2, and the string on the screen becomes \n\"abc\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ntarget = \"he\"\n\n\nOutput:\n \n[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"ha\",\"hb\",\"hc\",\"hd\",\"he\"]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= target.length <= 400\n\n\ntarget\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3310,
        "slug": "remove-methods-from-project",
        "url": "https://leetcode.com/problems/remove-methods-from-project/",
        "titulo": "Remove Methods From Project",
        "enunciado": "You are maintaining a project that has \nn\n methods numbered from \n0\n to \nn - 1\n.\n\n\nYou are given two integers \nn\n and \nk\n, and a 2D integer array \ninvocations\n, where \ninvocations[i] = [a\ni\n, b\ni\n]\n indicates that method \na\ni\n invokes method \nb\ni\n.\n\n\nThere is a known bug in method \nk\n. Method \nk\n, along with any method invoked by it, either \ndirectly\n or \nindirectly\n, are considered \nsuspicious\n and we aim to remove them.\n\n\nA group of methods can only be removed if no method \noutside\n the group invokes any methods \nwithin\n it.\n\n\nReturn an array containing all the remaining methods after removing all the \nsuspicious\n methods. You may return the answer in \nany order\n. If it is not possible to remove \nall\n the suspicious methods, \nnone\n should be removed.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 4, k = 1, invocations = [[1,2],[0,1],[3,2]]\n\n\nOutput:\n \n[0,1,2,3]\n\n\nExplanation:\n\n\n\n\nMethod 2 and method 1 are suspicious, but they are directly invoked by methods 3 and 0, which are not suspicious. We return all elements without removing anything.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 5, k = 0, invocations = [[1,2],[0,2],[0,1],[3,4]]\n\n\nOutput:\n \n[3,4]\n\n\nExplanation:\n\n\n\n\nMethods 0, 1, and 2 are suspicious and they are not directly invoked by any other method. We can remove them.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 3, k = 2, invocations = [[1,2],[0,1],[2,0]]\n\n\nOutput:\n \n[]\n\n\nExplanation:\n\n\n\n\nAll methods are suspicious. We can remove them.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n0 <= k <= n - 1\n\n\n0 <= invocations.length <= 2 * 10\n5\n\n\ninvocations[i] == [a\ni\n, b\ni\n]\n\n\n0 <= a\ni\n, b\ni\n <= n - 1\n\n\na\ni\n != b\ni\n\n\ninvocations[i] != invocations[j]",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 3291,
        "slug": "minimum-number-of-valid-strings-to-form-target-i",
        "url": "https://leetcode.com/problems/minimum-number-of-valid-strings-to-form-target-i/",
        "titulo": "Minimum Number of Valid Strings to Form Target I",
        "enunciado": "You are given an array of strings \nwords\n and a string \ntarget\n.\n\n\nA string \nx\n is called \nvalid\n if \nx\n is a \nprefix\n of \nany\n string in \nwords\n.\n\n\nReturn the \nminimum\n number of \nvalid\n strings that can be \nconcatenated\n to form \ntarget\n. If it is \nnot\n possible to form \ntarget\n, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nwords = [\"abc\",\"aaaaa\",\"bcdef\"], target = \"aabcdabc\"\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe target string can be formed by concatenating:\n\n\n\n\nPrefix of length 2 of \nwords[1]\n, i.e. \n\"aa\"\n.\n\n\nPrefix of length 3 of \nwords[2]\n, i.e. \n\"bcd\"\n.\n\n\nPrefix of length 3 of \nwords[0]\n, i.e. \n\"abc\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nwords = [\"abababab\",\"ab\"], target = \"ababaababa\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe target string can be formed by concatenating:\n\n\n\n\nPrefix of length 5 of \nwords[0]\n, i.e. \n\"ababa\"\n.\n\n\nPrefix of length 5 of \nwords[0]\n, i.e. \n\"ababa\"\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nwords = [\"abcdef\"], target = \"xyz\"\n\n\nOutput:\n \n-1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 100\n\n\n1 <= words[i].length <= 5 * 10\n3\n\n\nThe input is generated such that \nsum(words[i].length) <= 10\n5\n.\n\n\nwords[i]\n consists only of lowercase English letters.\n\n\n1 <= target.length <= 5 * 10\n3\n\n\ntarget\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Binary Search",
            "Dynamic Programming",
            "Trie",
            "Segment Tree",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3286,
        "slug": "find-a-safe-walk-through-a-grid",
        "url": "https://leetcode.com/problems/find-a-safe-walk-through-a-grid/",
        "titulo": "Find a Safe Walk Through a Grid",
        "enunciado": "You are given an \nm x n\n binary matrix \ngrid\n and an integer \nhealth\n.\n\n\nYou start on the upper-left corner \n(0, 0)\n and would like to get to the lower-right corner \n(m - 1, n - 1)\n.\n\n\nYou can move up, down, left, or right from one cell to another adjacent cell as long as your health \nremains\n \npositive\n.\n\n\nCells \n(i, j)\n with \ngrid[i][j] = 1\n are considered \nunsafe\n and reduce your health by 1.\n\n\nReturn \ntrue\n if you can reach the final cell with a health value of 1 or more, and \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[0,1,0,0,0],[0,1,0,1,0],[0,0,0,1,0]], health = 1\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\nThe final cell can be reached safely by walking along the gray cells below.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[0,1,1,0,0,0],[1,0,1,0,0,0],[0,1,1,1,0,1],[0,0,1,0,1,0]], health = 3\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nA minimum of 4 health points is needed to reach the final cell safely.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1,1,1],[1,0,1],[1,1,1]], health = 5\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\nThe final cell can be reached safely by walking along the gray cells below.\n\n\n\n\nAny path that does not go through the cell \n(1, 1)\n is unsafe since your health will drop to 0 when reaching the final cell.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 50\n\n\n2 <= m * n\n\n\n1 <= health <= m + n\n\n\ngrid[i][j]\n is either 0 or 1.",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Matrix",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3295,
        "slug": "report-spam-message",
        "url": "https://leetcode.com/problems/report-spam-message/",
        "titulo": "Report Spam Message",
        "enunciado": "You are given an array of strings \nmessage\n and an array of strings \nbannedWords\n.\n\n\nAn array of words is considered \nspam\n if there are \nat least\n two words in it that \nexactly\n match any word in \nbannedWords\n.\n\n\nReturn \ntrue\n if the array \nmessage\n is spam, and \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nmessage = [\"hello\",\"world\",\"leetcode\"], bannedWords = [\"world\",\"hello\"]\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\nThe words \n\"hello\"\n and \n\"world\"\n from the \nmessage\n array both appear in the \nbannedWords\n array.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nmessage = [\"hello\",\"programming\",\"fun\"], bannedWords = [\"world\",\"programming\",\"leetcode\"]\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nOnly one word from the \nmessage\n array (\n\"programming\"\n) appears in the \nbannedWords\n array.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= message.length, bannedWords.length <= 10\n5\n\n\n1 <= message[i].length, bannedWords[i].length <= 15\n\n\nmessage[i]\n and \nbannedWords[i]\n consist only of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3271,
        "slug": "hash-divided-string",
        "url": "https://leetcode.com/problems/hash-divided-string/",
        "titulo": "Hash Divided String",
        "enunciado": "You are given a string \ns\n of length \nn\n and an integer \nk\n, where \nn\n is a \nmultiple\n of \nk\n. Your task is to hash the string \ns\n into a new string called \nresult\n, which has a length of \nn / k\n.\n\n\nFirst, divide \ns\n into \nn / k\n \nsubstrings\n, each with a length of \nk\n. Then, initialize \nresult\n as an \nempty\n string.\n\n\nFor each \nsubstring\n in order from the beginning:\n\n\n\n\nThe \nhash value\n of a character is the index of that characte\nr in the \nEnglish alphabet\n (e.g., \n'a' →\n 0\n, \n'b' →\n 1\n, ..., \n'z' →\n 25\n).\n\n\nCalculate the \nsum\n of all the \nhash values\n of the characters in the substring.\n\n\nFind the remainder of this sum when divided by 26, which is called \nhashedChar\n.\n\n\nIdentify the character in the English lowercase alphabet that corresponds to \nhashedChar\n.\n\n\nAppend that character to the end of \nresult\n.\n\n\n\n\nReturn \nresult\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abcd\", k = 2\n\n\nOutput:\n \n\"bf\"\n\n\nExplanation:\n\n\nFirst substring: \n\"ab\"\n, \n0 + 1 = 1\n, \n1 % 26 = 1\n, \nresult[0] = 'b'\n.\n\n\nSecond substring: \n\"cd\"\n, \n2 + 3 = 5\n, \n5 % 26 = 5\n, \nresult[1] = 'f'\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"mxz\", k = 3\n\n\nOutput:\n \n\"i\"\n\n\nExplanation:\n\n\nThe only substring: \n\"mxz\"\n, \n12 + 23 + 25 = 60\n, \n60 % 26 = 8\n, \nresult[0] = 'i'\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 100\n\n\nk <= s.length <= 1000\n\n\ns.length\n is divisible by \nk\n.\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3265,
        "slug": "count-almost-equal-pairs-i",
        "url": "https://leetcode.com/problems/count-almost-equal-pairs-i/",
        "titulo": "Count Almost Equal Pairs I",
        "enunciado": "You are given an array \nnums\n consisting of positive integers.\n\n\nWe call two integers \nx\n and \ny\n in this problem \nalmost equal\n if both integers can become equal after performing the following operation \nat most once\n:\n\n\n\n\nChoose \neither\n \nx\n or \ny\n and swap any two digits within the chosen number.\n\n\n\n\nReturn the number of indices \ni\n and \nj\n in \nnums\n where \ni < j\n such that \nnums[i]\n and \nnums[j]\n are \nalmost equal\n.\n\n\nNote\n that it is allowed for an integer to have leading zeros after performing an operation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [3,12,30,17,21]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe almost equal pairs of elements are:\n\n\n\n\n3 and 30. By swapping 3 and 0 in 30, you get 3.\n\n\n12 and 21. By swapping 1 and 2 in 12, you get 21.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,1,1,1,1]\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nEvery two elements in the array are almost equal.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [123,231]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nWe cannot swap any two digits of 123 or 231 to reach the other.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 100\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3282,
        "slug": "reach-end-of-array-with-max-score",
        "url": "https://leetcode.com/problems/reach-end-of-array-with-max-score/",
        "titulo": "Reach End of Array With Max Score",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n.\n\n\nYour goal is to start at index \n0\n and reach index \nn - 1\n. You can only jump to indices \ngreater\n than your current index.\n\n\nThe score for a jump from index \ni\n to index \nj\n is calculated as \n(j - i) * nums[i]\n.\n\n\nReturn the \nmaximum\n possible \ntotal score\n by the time you reach the last index.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,3,1,5]\n\n\nOutput:\n 7\n\n\nExplanation:\n\n\nFirst, jump to index 1 and then jump to the last index. The final score is \n1 * 1 + 2 * 3 = 7\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,3,1,3,2]\n\n\nOutput:\n 16\n\n\nExplanation:\n\n\nJump directly to the last index. The final score is \n4 * 4 = 16\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3239,
        "slug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i",
        "url": "https://leetcode.com/problems/minimum-number-of-flips-to-make-binary-grid-palindromic-i/",
        "titulo": "Minimum Number of Flips to Make Binary Grid Palindromic I",
        "enunciado": "You are given an \nm x n\n binary matrix \ngrid\n.\n\n\nA row or column is considered \npalindromic\n if its values read the same forward and backward.\n\n\nYou can \nflip\n any number of cells in \ngrid\n from \n0\n to \n1\n, or from \n1\n to \n0\n.\n\n\nReturn the \nminimum\n number of cells that need to be flipped to make \neither\n all rows \npalindromic\n or all columns \npalindromic\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,0,0],[0,0,0],[0,0,1]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nFlipping the highlighted cells makes all the rows palindromic.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = \n[[0,1],[0,1],[0,0]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nFlipping the highlighted cell makes all the columns palindromic.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1],[0]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nAll rows are already palindromic.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m * n <= 2 * 10\n5\n\n\n0 <= grid[i][j] <= 1",
        "temas": [
            "Array",
            "Two Pointers",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3259,
        "slug": "maximum-energy-boost-from-two-drinks",
        "url": "https://leetcode.com/problems/maximum-energy-boost-from-two-drinks/",
        "titulo": "Maximum Energy Boost From Two Drinks",
        "enunciado": "You are given two integer arrays \nenergyDrinkA\n and \nenergyDrinkB\n of the same length \nn\n by a futuristic sports scientist. These arrays represent the energy boosts per hour provided by two different energy drinks, A and B, respectively.\n\n\nYou want to \nmaximize\n your total energy boost by drinking one energy drink \nper hour\n. However, if you want to switch from consuming one energy drink to the other, you need to wait for \none hour\n to cleanse your system (meaning you won't get any energy boost in that hour).\n\n\nReturn the \nmaximum\n total energy boost you can gain in the next \nn\n hours.\n\n\nNote\n that you can start consuming \neither\n of the two energy drinks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n energyDrinkA\n = [1,3,1], \nenergyDrinkB\n = [3,1,1]\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nTo gain an energy boost of 5, drink only the energy drink A (or only B).\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n energyDrinkA\n = [4,1,1], \nenergyDrinkB\n = [1,1,3]\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\nTo gain an energy boost of 7:\n\n\n\n\nDrink the energy drink A for the first hour.\n\n\nSwitch to the energy drink B and we lose the energy boost of the second hour.\n\n\nGain the energy boost of the drink B in the third hour.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == energyDrinkA.length == energyDrinkB.length\n\n\n3 <= n <= 10\n5\n\n\n1 <= energyDrinkA[i], energyDrinkB[i] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3240,
        "slug": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii",
        "url": "https://leetcode.com/problems/minimum-number-of-flips-to-make-binary-grid-palindromic-ii/",
        "titulo": "Minimum Number of Flips to Make Binary Grid Palindromic II",
        "enunciado": "You are given an \nm x n\n binary matrix \ngrid\n.\n\n\nA row or column is considered \npalindromic\n if its values read the same forward and backward.\n\n\nYou can \nflip\n any number of cells in \ngrid\n from \n0\n to \n1\n, or from \n1\n to \n0\n.\n\n\nReturn the \nminimum\n number of cells that need to be flipped to make \nall\n rows and columns \npalindromic\n, and the total number of \n1\n's in \ngrid\n \ndivisible\n by \n4\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,0,0],[0,1,0],[0,0,1]]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[0,1],[0,1],[0,0]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1],[1]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m * n <= 2 * 10\n5\n\n\n0 <= grid[i][j] <= 1",
        "temas": [
            "Array",
            "Two Pointers",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3255,
        "slug": "find-the-power-of-k-size-subarrays-ii",
        "url": "https://leetcode.com/problems/find-the-power-of-k-size-subarrays-ii/",
        "titulo": "Find the Power of K-Size Subarrays II",
        "enunciado": "You are given an array of integers \nnums\n of length \nn\n and a \npositive\n integer \nk\n.\n\n\nThe \npower\n of an array is defined as:\n\n\n\n\nIts \nmaximum\n element if \nall\n of its elements are \nconsecutive\n and \nsorted\n in \nascending\n order.\n\n\n-1 otherwise.\n\n\n\n\nYou need to find the \npower\n of all \nsubarrays\n of \nnums\n of size \nk\n.\n\n\nReturn an integer array \nresults\n of size \nn - k + 1\n, where \nresults[i]\n is the \npower\n of \nnums[i..(i + k - 1)]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,3,2,5], k = 3\n\n\nOutput:\n [3,4,-1,-1,-1]\n\n\nExplanation:\n\n\nThere are 5 subarrays of \nnums\n of size 3:\n\n\n\n\n[1, 2, 3]\n with the maximum element 3.\n\n\n[2, 3, 4]\n with the maximum element 4.\n\n\n[3, 4, 3]\n whose elements are \nnot\n consecutive.\n\n\n[4, 3, 2]\n whose elements are \nnot\n sorted.\n\n\n[3, 2, 5]\n whose elements are \nnot\n consecutive.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,2,2,2,2], k = 4\n\n\nOutput:\n \n[-1,-1]\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [3,2,3,2,3,2], k = 2\n\n\nOutput:\n \n[-1,3,-1,3,-1]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3254,
        "slug": "find-the-power-of-k-size-subarrays-i",
        "url": "https://leetcode.com/problems/find-the-power-of-k-size-subarrays-i/",
        "titulo": "Find the Power of K-Size Subarrays I",
        "enunciado": "You are given an array of integers \nnums\n of length \nn\n and a \npositive\n integer \nk\n.\n\n\nThe \npower\n of an array is defined as:\n\n\n\n\nIts \nmaximum\n element if \nall\n of its elements are \nconsecutive\n and \nsorted\n in \nascending\n order.\n\n\n-1 otherwise.\n\n\n\n\nYou need to find the \npower\n of all \nsubarrays\n of \nnums\n of size \nk\n.\n\n\nReturn an integer array \nresults\n of size \nn - k + 1\n, where \nresults[i]\n is the \npower\n of \nnums[i..(i + k - 1)]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,3,2,5], k = 3\n\n\nOutput:\n [3,4,-1,-1,-1]\n\n\nExplanation:\n\n\nThere are 5 subarrays of \nnums\n of size 3:\n\n\n\n\n[1, 2, 3]\n with the maximum element 3.\n\n\n[2, 3, 4]\n with the maximum element 4.\n\n\n[3, 4, 3]\n whose elements are \nnot\n consecutive.\n\n\n[4, 3, 2]\n whose elements are \nnot\n sorted.\n\n\n[3, 2, 5]\n whose elements are \nnot\n consecutive.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,2,2,2,2], k = 4\n\n\nOutput:\n \n[-1,-1]\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [3,2,3,2,3,2], k = 2\n\n\nOutput:\n \n[-1,3,-1,3,-1]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 500\n\n\n1 <= nums[i] <= 10\n5\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3290,
        "slug": "maximum-multiplication-score",
        "url": "https://leetcode.com/problems/maximum-multiplication-score/",
        "titulo": "Maximum Multiplication Score",
        "enunciado": "You are given an integer array \na\n of size 4 and another integer array \nb\n of size \nat least\n 4.\n\n\nYou need to choose 4 indices \ni\n0\n, \ni\n1\n, \ni\n2\n, and \ni\n3\n from the array \nb\n such that \ni\n0\n < i\n1\n < i\n2\n < i\n3\n. Your score will be equal to the value \na[0] * b[i\n0\n] + a[1] * b[i\n1\n] + a[2] * b[i\n2\n] + a[3] * b[i\n3\n]\n.\n\n\nReturn the \nmaximum\n score you can achieve.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \na = [3,2,5,6], b = [2,-6,4,-5,-3,2,-7]\n\n\nOutput:\n \n26\n\n\nExplanation:\n\nWe can choose the indices 0, 1, 2, and 5. The score will be \n3 * 2 + 2 * (-6) + 5 * 4 + 6 * 2 = 26\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \na = [-1,4,5,-2], b = [-5,-1,-3,-2,-4]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\nWe can choose the indices 0, 1, 3, and 4. The score will be \n(-1) * (-5) + 4 * (-1) + 5 * (-2) + (-2) * (-4) = -1\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\na.length == 4\n\n\n4 <= b.length <= 10\n5\n\n\n-10\n5\n <= a[i], b[i] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3243,
        "slug": "shortest-distance-after-road-addition-queries-i",
        "url": "https://leetcode.com/problems/shortest-distance-after-road-addition-queries-i/",
        "titulo": "Shortest Distance After Road Addition Queries I",
        "enunciado": "You are given an integer \nn\n and a 2D integer array \nqueries\n.\n\n\nThere are \nn\n cities numbered from \n0\n to \nn - 1\n. Initially, there is a \nunidirectional\n road from city \ni\n to city \ni + 1\n for all \n0 <= i < n - 1\n.\n\n\nqueries[i] = [u\ni\n, v\ni\n]\n represents the addition of a new \nunidirectional\n road from city \nu\ni\n to city \nv\ni\n. After each query, you need to find the \nlength\n of the \nshortest path\n from city \n0\n to city \nn - 1\n.\n\n\nReturn an array \nanswer\n where for each \ni\n in the range \n[0, queries.length - 1]\n, \nanswer[i]\n is the \nlength of the shortest path\n from city \n0\n to city \nn - 1\n after processing the \nfirst \ni + 1\n queries.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 5, queries = [[2,4],[0,2],[0,4]]\n\n\nOutput:\n \n[3,2,1]\n\n\nExplanation: \n\n\n\n\nAfter the addition of the road from 2 to 4, the length of the shortest path from 0 to 4 is 3.\n\n\n\n\nAfter the addition of the road from 0 to 2, the length of the shortest path from 0 to 4 is 2.\n\n\n\n\nAfter the addition of the road from 0 to 4, the length of the shortest path from 0 to 4 is 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 4, queries = [[0,3],[0,2]]\n\n\nOutput:\n \n[1,1]\n\n\nExplanation:\n\n\n\n\nAfter the addition of the road from 0 to 3, the length of the shortest path from 0 to 3 is 1.\n\n\n\n\nAfter the addition of the road from 0 to 2, the length of the shortest path remains 1.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n <= 500\n\n\n1 <= queries.length <= 500\n\n\nqueries[i].length == 2\n\n\n0 <= queries[i][0] < queries[i][1] < n\n\n\n1 < queries[i][1] - queries[i][0]\n\n\nThere are no repeated roads among the queries.",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3301,
        "slug": "maximize-the-total-height-of-unique-towers",
        "url": "https://leetcode.com/problems/maximize-the-total-height-of-unique-towers/",
        "titulo": "Maximize the Total Height of Unique Towers",
        "enunciado": "You are given an array \nmaximumHeight\n, where \nmaximumHeight[i]\n denotes the \nmaximum\n height the \ni\nth\n tower can be assigned.\n\n\nYour task is to assign a height to each tower so that:\n\n\n\n\nThe height of the \ni\nth\n tower is a positive integer and does not exceed \nmaximumHeight[i]\n.\n\n\nNo two towers have the same height.\n\n\n\n\nReturn the \nmaximum\n possible total sum of the tower heights. If it's not possible to assign heights, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n maximumHeight\n = [2,3,4,3]\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nWe can assign heights in the following way: \n[1, 2, 4, 3]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n maximumHeight\n = [15,10]\n\n\nOutput:\n \n25\n\n\nExplanation:\n\n\nWe can assign heights in the following way: \n[15, 10]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n maximumHeight\n = [2,2,1]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nIt's impossible to assign positive heights to each index so that no two towers have the same height.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= maximumHeight.length <= 10\n5\n\n\n1 <= maximumHeight[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3319,
        "slug": "k-th-largest-perfect-subtree-size-in-binary-tree",
        "url": "https://leetcode.com/problems/k-th-largest-perfect-subtree-size-in-binary-tree/",
        "titulo": "K-th Largest Perfect Subtree Size in Binary Tree",
        "enunciado": "You are given the \nroot\n of a \nbinary tree\n and an integer \nk\n.\n\n\nReturn an integer denoting the size of the \nk\nth\n \nlargest\n \nperfect binary\n \nsubtree\n, or \n-1\n if it doesn't exist.\n\n\nA \nperfect binary tree\n is a tree where all leaves are on the same level, and every parent has two children.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nroot = [5,3,6,5,2,5,7,1,8,null,null,6,8], k = 2\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nThe roots of the perfect binary subtrees are highlighted in black. Their sizes, in non-increasing order are \n[3, 3, 1, 1, 1, 1, 1, 1]\n.\n\nThe \n2\nnd\n largest size is 3.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nroot = [1,2,3,4,5,6,7], k = 1\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\n\n\nThe sizes of the perfect binary subtrees in non-increasing order are \n[7, 3, 3, 1, 1, 1, 1]\n. The size of the largest perfect binary subtree is 7.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nroot = [1,2,3,null,4], k = 3\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\n\n\nThe sizes of the perfect binary subtrees in non-increasing order are \n[1, 1]\n. There are fewer than 3 perfect binary subtrees.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 2000]\n.\n\n\n1 <= Node.val <= 2000\n\n\n1 <= k <= 1024",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Sorting",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 3233,
        "slug": "find-the-count-of-numbers-which-are-not-special",
        "url": "https://leetcode.com/problems/find-the-count-of-numbers-which-are-not-special/",
        "titulo": "Find the Count of Numbers Which Are Not Special",
        "enunciado": "You are given 2 \npositive\n integers \nl\n and \nr\n. For any number \nx\n, all positive divisors of \nx\n \nexcept\n \nx\n are called the \nproper divisors\n of \nx\n.\n\n\nA number is called \nspecial\n if it has exactly 2 \nproper divisors\n. For example:\n\n\n\n\nThe number 4 is \nspecial\n because it has proper divisors 1 and 2.\n\n\nThe number 6 is \nnot special\n because it has proper divisors 1, 2, and 3.\n\n\n\n\nReturn the count of numbers in the range \n[l, r]\n that are \nnot\n \nspecial\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nl = 5, r = 7\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThere are no special numbers in the range \n[5, 7]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nl = 4, r = 16\n\n\nOutput:\n \n11\n\n\nExplanation:\n\n\nThe special numbers in the range \n[4, 16]\n are 4 and 9.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= l <= r <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3325,
        "slug": "count-substrings-with-k-frequency-characters-i",
        "url": "https://leetcode.com/problems/count-substrings-with-k-frequency-characters-i/",
        "titulo": "Count Substrings With K-Frequency Characters I",
        "enunciado": "Given a string \ns\n and an integer \nk\n, return the total number of \nsubstrings\n of \ns\n where \nat least one\n character appears \nat least\n \nk\n times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abacb\", k = 2\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe valid substrings are:\n\n\n\n\n\"aba\"\n (character \n'a'\n appears 2 times).\n\n\n\"abac\"\n (character \n'a'\n appears 2 times).\n\n\n\"abacb\"\n (character \n'a'\n appears 2 times).\n\n\n\"bacb\"\n (character \n'b'\n appears 2 times).\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"abcde\", k = 1\n\n\nOutput:\n \n15\n\n\nExplanation:\n\n\nAll substrings are valid because every character appears at least once.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 3000\n\n\n1 <= k <= s.length\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3217,
        "slug": "delete-nodes-from-linked-list-present-in-array",
        "url": "https://leetcode.com/problems/delete-nodes-from-linked-list-present-in-array/",
        "titulo": "Delete Nodes From Linked List Present in Array",
        "enunciado": "You are given an array of integers \nnums\n and the \nhead\n of a linked list. Return the \nhead\n of the modified linked list after \nremoving\n all nodes from the linked list that have a value that exists in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3], head = [1,2,3,4,5]\n\n\nOutput:\n \n[4,5]\n\n\nExplanation:\n\n\n\n\nRemove the nodes with values 1, 2, and 3.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1], head = [1,2,1,2,1,2]\n\n\nOutput:\n \n[2,2,2]\n\n\nExplanation:\n\n\n\n\nRemove the nodes with value 1.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [5], head = [1,2,3,4]\n\n\nOutput:\n \n[1,2,3,4]\n\n\nExplanation:\n\n\n\n\nNo node has value 5.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\nAll elements in \nnums\n are unique.\n\n\nThe number of nodes in the given list is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5\n\n\nThe input is generated such that there is at least one node in the linked list that has a value not present in \nnums\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3224,
        "slug": "minimum-array-changes-to-make-differences-equal",
        "url": "https://leetcode.com/problems/minimum-array-changes-to-make-differences-equal/",
        "titulo": "Minimum Array Changes to Make Differences Equal",
        "enunciado": "You are given an integer array \nnums\n of size \nn\n where \nn\n is \neven\n, and an integer \nk\n.\n\n\nYou can perform some changes on the array, where in one change you can replace \nany\n element in the array with \nany\n integer in the range from \n0\n to \nk\n.\n\n\nYou need to perform some changes (possibly none) such that the final array satisfies the following condition:\n\n\n\n\nThere exists an integer \nX\n such that \nabs(a[i] - a[n - i - 1]) = X\n for all \n(0 <= i < n)\n.\n\n\n\n\nReturn the \nminimum\n number of changes required to satisfy the above condition.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,0,1,2,4,3], k = 4\n\n\nOutput:\n \n2\n\n\nExplanation:\n\nWe can perform the following changes:\n\n\n\n\nReplace \nnums[1]\n by 2. The resulting array is \nnums = [1,\n2\n,1,2,4,3]\n.\n\n\nReplace \nnums[3]\n by 3. The resulting array is \nnums = [1,2,1,\n3\n,4,3]\n.\n\n\n\n\nThe integer \nX\n will be 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [0,1,2,3,3,6,5,4], k = 6\n\n\nOutput:\n \n2\n\n\nExplanation:\n\nWe can perform the following operations:\n\n\n\n\nReplace \nnums[3]\n by 0. The resulting array is \nnums = [0,1,2,\n0\n,3,6,5,4]\n.\n\n\nReplace \nnums[4]\n by 4. The resulting array is \nnums = [0,1,2,0,\n4\n,6,5,4]\n.\n\n\n\n\nThe integer \nX\n will be 4.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == nums.length <= 10\n5\n\n\nn\n is even.\n\n\n0 <= nums[i] <= k <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3296,
        "slug": "minimum-number-of-seconds-to-make-mountain-height-zero",
        "url": "https://leetcode.com/problems/minimum-number-of-seconds-to-make-mountain-height-zero/",
        "titulo": "Minimum Number of Seconds to Make Mountain Height Zero",
        "enunciado": "You are given an integer \nmountainHeight\n denoting the height of a mountain.\n\n\nYou are also given an integer array \nworkerTimes\n representing the work time of workers in \nseconds\n.\n\n\nThe workers work \nsimultaneously\n to \nreduce\n the height of the mountain. For worker \ni\n:\n\n\n\n\nTo decrease the mountain's height by \nx\n, it takes \nworkerTimes[i] + workerTimes[i] * 2 + ... + workerTimes[i] * x\n seconds. For example:\n\n\t\n\n\nTo reduce the height of the mountain by 1, it takes \nworkerTimes[i]\n seconds.\n\n\nTo reduce the height of the mountain by 2, it takes \nworkerTimes[i] + workerTimes[i] * 2\n seconds, and so on.\n\n\n\n\n\n\n\n\nReturn an integer representing the \nminimum\n number of seconds required for the workers to make the height of the mountain 0.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nmountainHeight = 4, workerTimes = [2,1,1]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nOne way the height of the mountain can be reduced to 0 is:\n\n\n\n\nWorker 0 reduces the height by 1, taking \nworkerTimes[0] = 2\n seconds.\n\n\nWorker 1 reduces the height by 2, taking \nworkerTimes[1] + workerTimes[1] * 2 = 3\n seconds.\n\n\nWorker 2 reduces the height by 1, taking \nworkerTimes[2] = 1\n second.\n\n\n\n\nSince they work simultaneously, the minimum time needed is \nmax(2, 3, 1) = 3\n seconds.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nmountainHeight = 10, workerTimes = [3,2,2,4]\n\n\nOutput:\n \n12\n\n\nExplanation:\n\n\n\n\nWorker 0 reduces the height by 2, taking \nworkerTimes[0] + workerTimes[0] * 2 = 9\n seconds.\n\n\nWorker 1 reduces the height by 3, taking \nworkerTimes[1] + workerTimes[1] * 2 + workerTimes[1] * 3 = 12\n seconds.\n\n\nWorker 2 reduces the height by 3, taking \nworkerTimes[2] + workerTimes[2] * 2 + workerTimes[2] * 3 = 12\n seconds.\n\n\nWorker 3 reduces the height by 2, taking \nworkerTimes[3] + workerTimes[3] * 2 = 12\n seconds.\n\n\n\n\nThe number of seconds needed is \nmax(9, 12, 12, 12) = 12\n seconds.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nmountainHeight = 5, workerTimes = [1]\n\n\nOutput:\n \n15\n\n\nExplanation:\n\n\nThere is only one worker in this example, so the answer is \nworkerTimes[0] + workerTimes[0] * 2 + workerTimes[0] * 3 + workerTimes[0] * 4 + workerTimes[0] * 5 = 15\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= mountainHeight <= 10\n5\n\n\n1 <= workerTimes.length <= 10\n4\n\n\n1 <= workerTimes[i] <= 10\n6",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3275,
        "slug": "k-th-nearest-obstacle-queries",
        "url": "https://leetcode.com/problems/k-th-nearest-obstacle-queries/",
        "titulo": "K-th Nearest Obstacle Queries",
        "enunciado": "There is an infinite 2D plane.\n\n\nYou are given a positive integer \nk\n. You are also given a 2D array \nqueries\n, which contains the following queries:\n\n\n\n\nqueries[i] = [x, y]\n: Build an obstacle at coordinate \n(x, y)\n in the plane. It is guaranteed that there is \nno\n obstacle at this coordinate when this query is made.\n\n\n\n\nAfter each query, you need to find the \ndistance\n of the \nk\nth\n \nnearest\n obstacle from the origin.\n\n\nReturn an integer array \nresults\n where \nresults[i]\n denotes the \nk\nth\n nearest obstacle after query \ni\n, or \nresults[i] == -1\n if there are less than \nk\n obstacles.\n\n\nNote\n that initially there are \nno\n obstacles anywhere.\n\n\nThe \ndistance\n of an obstacle at coordinate \n(x, y)\n from the origin is given by \n|x| + |y|\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nqueries = [[1,2],[3,4],[2,3],[-3,0]], k = 2\n\n\nOutput:\n \n[-1,7,5,3]\n\n\nExplanation:\n\n\n\n\nInitially, there are 0 obstacles.\n\n\nAfter \nqueries[0]\n, there are less than 2 obstacles.\n\n\nAfter \nqueries[1]\n, there are obstacles at distances 3 and 7.\n\n\nAfter \nqueries[2]\n, there are obstacles at distances 3, 5, and 7.\n\n\nAfter \nqueries[3]\n, there are obstacles at distances 3, 3, 5, and 7.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nqueries = [[5,5],[4,4],[3,3]], k = 1\n\n\nOutput:\n \n[10,8,6]\n\n\nExplanation:\n\n\n\n\nAfter \nqueries[0]\n, there is an obstacle at distance 10.\n\n\nAfter \nqueries[1]\n, there are obstacles at distances 8 and 10.\n\n\nAfter \nqueries[2]\n, there are obstacles at distances 6, 8, and 10.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= queries.length <= 2 * 10\n5\n\n\nAll \nqueries[i]\n are unique.\n\n\n-10\n9\n <= queries[i][0], queries[i][1] <= 10\n9\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3218,
        "slug": "minimum-cost-for-cutting-cake-i",
        "url": "https://leetcode.com/problems/minimum-cost-for-cutting-cake-i/",
        "titulo": "Minimum Cost for Cutting Cake I",
        "enunciado": "There is an \nm x n\n cake that needs to be cut into \n1 x 1\n pieces.\n\n\nYou are given integers \nm\n, \nn\n, and two arrays:\n\n\n\n\nhorizontalCut\n of size \nm - 1\n, where \nhorizontalCut[i]\n represents the cost to cut along the horizontal line \ni\n.\n\n\nverticalCut\n of size \nn - 1\n, where \nverticalCut[j]\n represents the cost to cut along the vertical line \nj\n.\n\n\n\n\nIn one operation, you can choose any piece of cake that is not yet a \n1 x 1\n square and perform one of the following cuts:\n\n\n\n\nCut along a horizontal line \ni\n at a cost of \nhorizontalCut[i]\n.\n\n\nCut along a vertical line \nj\n at a cost of \nverticalCut[j]\n.\n\n\n\n\nAfter the cut, the piece of cake is divided into two distinct pieces.\n\n\nThe cost of a cut depends only on the initial cost of the line and does not change.\n\n\nReturn the \nminimum\n total cost to cut the entire cake into \n1 x 1\n pieces.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nm = 3, n = 2, horizontalCut = [1,3], verticalCut = [5]\n\n\nOutput:\n \n13\n\n\nExplanation:\n\n\n\n\n\n\nPerform a cut on the vertical line 0 with cost 5, current total cost is 5.\n\n\nPerform a cut on the horizontal line 0 on \n3 x 1\n subgrid with cost 1.\n\n\nPerform a cut on the horizontal line 0 on \n3 x 1\n subgrid with cost 1.\n\n\nPerform a cut on the horizontal line 1 on \n2 x 1\n subgrid with cost 3.\n\n\nPerform a cut on the horizontal line 1 on \n2 x 1\n subgrid with cost 3.\n\n\n\n\nThe total cost is \n5 + 1 + 1 + 3 + 3 = 13\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nm = 2, n = 2, horizontalCut = [7], verticalCut = [4]\n\n\nOutput:\n \n15\n\n\nExplanation:\n\n\n\n\nPerform a cut on the horizontal line 0 with cost 7.\n\n\nPerform a cut on the vertical line 0 on \n1 x 2\n subgrid with cost 4.\n\n\nPerform a cut on the vertical line 0 on \n1 x 2\n subgrid with cost 4.\n\n\n\n\nThe total cost is \n7 + 4 + 4 = 15\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 20\n\n\nhorizontalCut.length == m - 1\n\n\nverticalCut.length == n - 1\n\n\n1 <= horizontalCut[i], verticalCut[i] <= 10\n3",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3228,
        "slug": "maximum-number-of-operations-to-move-ones-to-the-end",
        "url": "https://leetcode.com/problems/maximum-number-of-operations-to-move-ones-to-the-end/",
        "titulo": "Maximum Number of Operations to Move Ones to the End",
        "enunciado": "You are given a \nbinary string\n \ns\n.\n\n\nYou can perform the following operation on the string \nany\n number of times:\n\n\n\n\nChoose \nany\n index \ni\n from the string where \ni + 1 < s.length\n such that \ns[i] == '1'\n and \ns[i + 1] == '0'\n.\n\n\nMove the character \ns[i]\n to the \nright\n until it reaches the end of the string or another \n'1'\n. For example, for \ns = \"010010\"\n, if we choose \ni = 1\n, the resulting string will be \ns = \"0\n001\n10\"\n.\n\n\n\n\nReturn the \nmaximum\n number of operations that you can perform.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"1001101\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nWe can perform the following operations:\n\n\n\n\nChoose index \ni = 0\n. The resulting string is \ns = \"\n001\n1101\"\n.\n\n\nChoose index \ni = 4\n. The resulting string is \ns = \"0011\n01\n1\"\n.\n\n\nChoose index \ni = 3\n. The resulting string is \ns = \"001\n01\n11\"\n.\n\n\nChoose index \ni = 2\n. The resulting string is \ns = \"00\n01\n111\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"00111\"\n\n\nOutput:\n \n0\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3212,
        "slug": "count-submatrices-with-equal-frequency-of-x-and-y",
        "url": "https://leetcode.com/problems/count-submatrices-with-equal-frequency-of-x-and-y/",
        "titulo": "Count Submatrices With Equal Frequency of X and Y",
        "enunciado": "Given a 2D character matrix \ngrid\n, where \ngrid[i][j]\n is either \n'X'\n, \n'Y'\n, or \n'.'\n, return the number of \nsubmatrices\n that contain:\n\n\n\n\ngrid[0][0]\n\n\nan \nequal\n frequency of \n'X'\n and \n'Y'\n.\n\n\nat least\n one \n'X'\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[\"X\",\"Y\",\".\"],[\"Y\",\".\",\".\"]]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[\"X\",\"X\"],[\"X\",\"Y\"]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nNo submatrix has an equal frequency of \n'X'\n and \n'Y'\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[\".\",\".\"],[\".\",\".\"]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nNo submatrix has at least one \n'X'\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grid.length, grid[i].length <= 1000\n\n\ngrid[i][j]\n is either \n'X'\n, \n'Y'\n, or \n'.'\n.",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3202,
        "slug": "find-the-maximum-length-of-valid-subsequence-ii",
        "url": "https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-ii/",
        "titulo": "Find the Maximum Length of Valid Subsequence II",
        "enunciado": "You are given an integer array \nnums\n and a \npositive\n integer \nk\n.\n\nA \nsubsequence\n \nsub\n of \nnums\n with length \nx\n is called \nvalid\n if it satisfies:\n\n\n\n\n(sub[0] + sub[1]) % k == (sub[1] + sub[2]) % k == ... == (sub[x - 2] + sub[x - 1]) % k.\n\n\n\nReturn the length of the \nlongest\n \nvalid\n subsequence of \nnums\n.\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,5], k = 2\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nThe longest valid subsequence is \n[1, 2, 3, 4, 5]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,4,2,3,1,4], k = 3\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe longest valid subsequence is \n[1, 4, 1, 4]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n3\n\n\n1 <= nums[i] <= 10\n7\n\n\n1 <= k <= 10\n3",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3201,
        "slug": "find-the-maximum-length-of-valid-subsequence-i",
        "url": "https://leetcode.com/problems/find-the-maximum-length-of-valid-subsequence-i/",
        "titulo": "Find the Maximum Length of Valid Subsequence I",
        "enunciado": "You are given an integer array \nnums\n.\n\nA \nsubsequence\n \nsub\n of \nnums\n with length \nx\n is called \nvalid\n if it satisfies:\n\n\n\n\n(sub[0] + sub[1]) % 2 == (sub[1] + sub[2]) % 2 == ... == (sub[x - 2] + sub[x - 1]) % 2.\n\n\n\n\nReturn the length of the \nlongest\n \nvalid\n subsequence of \nnums\n.\n\n\nA \nsubsequence\n is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe longest valid subsequence is \n[1, 2, 3, 4]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,1,1,2,1,2]\n\n\nOutput:\n 6\n\n\nExplanation:\n\n\nThe longest valid subsequence is \n[1, 2, 1, 2, 1, 2]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,3]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe longest valid subsequence is \n[1, 3]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 2 * 10\n5\n\n\n1 <= nums[i] <= 10\n7",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3316,
        "slug": "find-maximum-removals-from-source-string",
        "url": "https://leetcode.com/problems/find-maximum-removals-from-source-string/",
        "titulo": "Find Maximum Removals From Source String",
        "enunciado": "You are given a string \nsource\n of size \nn\n, a string \npattern\n that is a \nsubsequence\n of \nsource\n, and a \nsorted\n integer array \ntargetIndices\n that contains \ndistinct\n numbers in the range \n[0, n - 1]\n.\n\n\nWe define an \noperation\n as removing a character at an index \nidx\n from \nsource\n such that:\n\n\n\n\nidx\n is an element of \ntargetIndices\n.\n\n\npattern\n remains a \nsubsequence\n of \nsource\n after removing the character.\n\n\n\n\nPerforming an operation \ndoes not\n change the indices of the other characters in \nsource\n. For example, if you remove \n'c'\n from \n\"acb\"\n, the character at index 2 would still be \n'b'\n.\n\n\nReturn the \nmaximum\n number of \noperations\n that can be performed.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nsource = \"abbaa\", pattern = \"aba\", \ntargetIndices\n = [0,1,2]\n\n\nOutput:\n 1\n\n\nExplanation:\n\n\nWe can't remove \nsource[0]\n but we can do either of these two operations:\n\n\n\n\nRemove \nsource[1]\n, so that \nsource\n becomes \n\"a_baa\"\n.\n\n\nRemove \nsource[2]\n, so that \nsource\n becomes \n\"ab_aa\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nsource = \"bcda\", pattern = \"d\", \ntargetIndices\n = [0,3]\n\n\nOutput:\n 2\n\n\nExplanation:\n\n\nWe can remove \nsource[0]\n and \nsource[3]\n in two operations.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nsource = \"dda\", pattern = \"dda\", \ntargetIndices\n = [0,1,2]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nWe can't remove any character from \nsource\n.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nsource = \n\"yeyeykyded\"\n, pattern = \n\"yeyyd\"\n, \ntargetIndices\n = \n[0,2,3,4]\n\n\nOutput:\n 2\n\n\nExplanation:\n\n\nWe can remove \nsource[2]\n and \nsource[3]\n in two operations.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == source.length <= 3 * 10\n3\n\n\n1 <= pattern.length <= n\n\n\n1 <= targetIndices.length <= n\n\n\ntargetIndices\n is sorted in ascending order.\n\n\nThe input is generated such that \ntargetIndices\n contains distinct elements in the range \n[0, n - 1]\n.\n\n\nsource\n and \npattern\n consist only of lowercase English letters.\n\n\nThe input is generated such that \npattern\n appears as a subsequence in \nsource\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3249,
        "slug": "count-the-number-of-good-nodes",
        "url": "https://leetcode.com/problems/count-the-number-of-good-nodes/",
        "titulo": "Count the Number of Good Nodes",
        "enunciado": "There is an \nundirected\n tree with \nn\n nodes labeled from \n0\n to \nn - 1\n, and rooted at node \n0\n. You are given a 2D integer array \nedges\n of length \nn - 1\n, where \nedges[i] = [a\ni\n, b\ni\n]\n indicates that there is an edge between nodes \na\ni\n and \nb\ni\n in the tree.\n\n\nA node is \ngood\n if all the \nsubtrees\n rooted at its children have the same size.\n\n\nReturn the number of \ngood\n nodes in the given tree.\n\n\nA \nsubtree\n of \ntreeName\n is a tree consisting of a node in \ntreeName\n and all of its descendants.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nedges = [[0,1],[0,2],[1,3],[1,4],[2,5],[2,6]]\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\n\n\nAll of the nodes of the given tree are good.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nedges = [[0,1],[1,2],[2,3],[3,4],[0,5],[1,6],[2,7],[3,8]]\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\n\n\nThere are 6 good nodes in the given tree. They are colored in the image above.\n\n\nExample 3:\n\n\n\n\nInput:\n \nedges = [[0,1],[1,2],[1,3],[1,4],[0,5],[5,6],[6,7],[7,8],[0,9],[9,10],[9,12],[10,11]]\n\n\nOutput:\n \n12\n\n\nExplanation:\n\n\n\n\nAll nodes except node 9 are good.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\nedges.length == n - 1\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\nThe input is generated such that \nedges\n represents a valid tree.",
        "temas": [
            "Tree",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 3281,
        "slug": "maximize-score-of-numbers-in-ranges",
        "url": "https://leetcode.com/problems/maximize-score-of-numbers-in-ranges/",
        "titulo": "Maximize Score of Numbers in Ranges",
        "enunciado": "You are given an array of integers \nstart\n and an integer \nd\n, representing \nn\n intervals \n[start[i], start[i] + d]\n.\n\n\nYou are asked to choose \nn\n integers where the \ni\nth\n integer must belong to the \ni\nth\n interval. The \nscore\n of the chosen integers is defined as the \nminimum\n absolute difference between any two integers that have been chosen.\n\n\nReturn the \nmaximum\n \npossible score\n of the chosen integers.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nstart = [6,0,3], d = 2\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe maximum possible score can be obtained by choosing integers: 8, 0, and 4. The score of these chosen integers is \nmin(|8 - 0|, |8 - 4|, |0 - 4|)\n which equals 4.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nstart = [2,6,13,13], d = 5\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nThe maximum possible score can be obtained by choosing integers: 2, 7, 13, and 18. The score of these chosen integers is \nmin(|2 - 7|, |2 - 13|, |2 - 18|, |7 - 13|, |7 - 18|, |13 - 18|)\n which equals 5.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= start.length <= 10\n5\n\n\n0 <= start[i] <= 10\n9\n\n\n0 <= d <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3208,
        "slug": "alternating-groups-ii",
        "url": "https://leetcode.com/problems/alternating-groups-ii/",
        "titulo": "Alternating Groups II",
        "enunciado": "There is a circle of red and blue tiles. You are given an array of integers \ncolors\n and an integer \nk\n. The color of tile \ni\n is represented by \ncolors[i]\n:\n\n\n\n\ncolors[i] == 0\n means that tile \ni\n is \nred\n.\n\n\ncolors[i] == 1\n means that tile \ni\n is \nblue\n.\n\n\n\n\nAn \nalternating\n group is every \nk\n contiguous tiles in the circle with \nalternating\n colors (each tile in the group except the first and last one has a different color from its \nleft\n and \nright\n tiles).\n\n\nReturn the number of \nalternating\n groups.\n\n\nNote\n that since \ncolors\n represents a \ncircle\n, the \nfirst\n and the \nlast\n tiles are considered to be next to each other.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncolors = [0,1,0,1,0], k = 3\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nAlternating groups:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncolors = [0,1,0,0,1,0,1], k = 6\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nAlternating groups:\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ncolors = [1,1,0,1], k = 4\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= colors.length <= 10\n5\n\n\n0 <= colors[i] <= 1\n\n\n3 <= k <= colors.length",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3234,
        "slug": "count-the-number-of-substrings-with-dominant-ones",
        "url": "https://leetcode.com/problems/count-the-number-of-substrings-with-dominant-ones/",
        "titulo": "Count the Number of Substrings With Dominant Ones",
        "enunciado": "You are given a binary string \ns\n.\n\n\nReturn the number of \nsubstrings\n with \ndominant\n ones.\n\n\nA string has \ndominant\n ones if the number of ones in the string is \ngreater than or equal to\n the \nsquare\n of the number of zeros in the string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"00011\"\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nThe substrings with dominant ones are shown in the table below.\n\n\n\n\n\n\n\n\n\n\ni\n\n\nj\n\n\ns[i..j]\n\n\nNumber of Zeros\n\n\nNumber of Ones\n\n\n\n\n\n\n\n\n\n\n3\n\n\n3\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n4\n\n\n4\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n2\n\n\n3\n\n\n01\n\n\n1\n\n\n1\n\n\n\n\n\n\n3\n\n\n4\n\n\n11\n\n\n0\n\n\n2\n\n\n\n\n\n\n2\n\n\n4\n\n\n011\n\n\n1\n\n\n2\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"101101\"\n\n\nOutput:\n \n16\n\n\nExplanation:\n\n\nThe substrings with \nnon-dominant\n ones are shown in the table below.\n\n\nSince there are 21 substrings total and 5 of them have non-dominant ones, it follows that there are 16 substrings with dominant ones.\n\n\n\n\n\n\n\n\n\n\ni\n\n\nj\n\n\ns[i..j]\n\n\nNumber of Zeros\n\n\nNumber of Ones\n\n\n\n\n\n\n\n\n\n\n1\n\n\n1\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n4\n\n\n4\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n1\n\n\n4\n\n\n0110\n\n\n2\n\n\n2\n\n\n\n\n\n\n0\n\n\n4\n\n\n10110\n\n\n2\n\n\n3\n\n\n\n\n\n\n1\n\n\n5\n\n\n01101\n\n\n2\n\n\n3\n\n\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 4 * 10\n4\n\n\ns\n consists only of characters \n'0'\n and \n'1'\n.",
        "temas": [
            "String",
            "Sliding Window",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3192,
        "slug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-ii/",
        "titulo": "Minimum Operations to Make Binary Array Elements Equal to One II",
        "enunciado": "You are given a \nbinary array\n \nnums\n.\n\n\nYou can do the following operation on the array \nany\n number of times (possibly zero):\n\n\n\n\nChoose \nany\n index \ni\n from the array and \nflip\n \nall\n the elements from index \ni\n to the end of the array.\n\n\n\n\nFlipping\n an element means changing its value from 0 to 1, and from 1 to 0.\n\n\nReturn the \nminimum\n number of operations required to make all elements in \nnums\n equal to 1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [0,1,1,0,1]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\nWe can do the following operations:\n\n\n\n\nChoose the index \ni = 1\n. The resulting array will be \nnums = [0,\n0\n,\n0\n,\n1\n,\n0\n]\n.\n\n\nChoose the index \ni = 0\n. The resulting array will be \nnums = [\n1\n,\n1\n,\n1\n,\n0\n,\n1\n]\n.\n\n\nChoose the index \ni = 4\n. The resulting array will be \nnums = [1,1,1,0,\n0\n]\n.\n\n\nChoose the index \ni = 3\n. The resulting array will be \nnums = [1,1,1,\n1\n,\n1\n]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,0,0,0]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\nWe can do the following operation:\n\n\n\n\nChoose the index \ni = 1\n. The resulting array will be \nnums = [1,\n1\n,\n1\n,\n1\n]\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 1",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3191,
        "slug": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-binary-array-elements-equal-to-one-i/",
        "titulo": "Minimum Operations to Make Binary Array Elements Equal to One I",
        "enunciado": "You are given a \nbinary array\n \nnums\n.\n\n\nYou can do the following operation on the array \nany\n number of times (possibly zero):\n\n\n\n\nChoose \nany\n 3 \nconsecutive\n elements from the array and \nflip\n \nall\n of them.\n\n\n\n\nFlipping\n an element means changing its value from 0 to 1, and from 1 to 0.\n\n\nReturn the \nminimum\n number of operations required to make all elements in \nnums\n equal to 1. If it is impossible, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [0,1,1,1,0,0]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\nWe can do the following operations:\n\n\n\n\nChoose the elements at indices 0, 1 and 2. The resulting array is \nnums = [\n1\n,\n0\n,\n0\n,1,0,0]\n.\n\n\nChoose the elements at indices 1, 2 and 3. The resulting array is \nnums = [1,\n1\n,\n1\n,\n0\n,0,0]\n.\n\n\nChoose the elements at indices 3, 4 and 5. The resulting array is \nnums = [1,1,1,\n1\n,\n1\n,\n1\n]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [0,1,1,1]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\nIt is impossible to make all elements equal to 1.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 1",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Queue",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3196,
        "slug": "maximize-total-cost-of-alternating-subarrays",
        "url": "https://leetcode.com/problems/maximize-total-cost-of-alternating-subarrays/",
        "titulo": "Maximize Total Cost of Alternating Subarrays",
        "enunciado": "You are given an integer array \nnums\n with length \nn\n.\n\n\nThe \ncost\n of a \nsubarray\n \nnums[l..r]\n, where \n0 <= l <= r < n\n, is defined as:\n\n\ncost(l, r) = nums[l] - nums[l + 1] + ... + nums[r] * (−1)\nr − l\n\n\nYour task is to \nsplit\n \nnums\n into subarrays such that the \ntotal\n \ncost\n of the subarrays is \nmaximized\n, ensuring each element belongs to \nexactly one\n subarray.\n\n\nFormally, if \nnums\n is split into \nk\n subarrays, where \nk > 1\n, at indices \ni\n1\n, i\n2\n, ..., i\nk − 1\n, where \n0 <= i\n1\n < i\n2\n < ... < i\nk - 1\n < n - 1\n, then the total cost will be:\n\n\ncost(0, i\n1\n) + cost(i\n1\n + 1, i\n2\n) + ... + cost(i\nk − 1\n + 1, n − 1)\n\n\nReturn an integer denoting the \nmaximum total cost\n of the subarrays after splitting the array optimally.\n\n\nNote:\n If \nnums\n is not split into subarrays, i.e. \nk = 1\n, the total cost is simply \ncost(0, n - 1)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,-2,3,4]\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nOne way to maximize the total cost is by splitting \n[1, -2, 3, 4]\n into subarrays \n[1, -2, 3]\n and \n[4]\n. The total cost will be \n(1 + 2 + 3) + 4 = 10\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,-1,1,-1]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nOne way to maximize the total cost is by splitting \n[1, -1, 1, -1]\n into subarrays \n[1, -1]\n and \n[1, -1]\n. The total cost will be \n(1 + 1) + (1 + 1) = 4\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [0]\n\n\nOutput:\n 0\n\n\nExplanation:\n\n\nWe cannot split the array further, so the answer is 0.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nnums = [1,-1]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nSelecting the whole array gives a total cost of \n1 + 1 = 2\n, which is the maximum.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3227,
        "slug": "vowels-game-in-a-string",
        "url": "https://leetcode.com/problems/vowels-game-in-a-string/",
        "titulo": "Vowels Game in a String",
        "enunciado": "Alice and Bob are playing a game on a string.\n\n\nYou are given a string \ns\n, Alice and Bob will take turns playing the following game where Alice starts \nfirst\n:\n\n\n\n\nOn Alice's turn, she has to remove any \nnon-empty\n \nsubstring\n from \ns\n that contains an \nodd\n number of vowels.\n\n\nOn Bob's turn, he has to remove any \nnon-empty\n \nsubstring\n from \ns\n that contains an \neven\n number of vowels.\n\n\n\n\nThe first player who cannot make a move on their turn loses the game. We assume that both Alice and Bob play \noptimally\n.\n\n\nReturn \ntrue\n if Alice wins the game, and \nfalse\n otherwise.\n\n\nThe English vowels are: \na\n, \ne\n, \ni\n, \no\n, and \nu\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"leetcoder\"\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\nAlice can win the game as follows:\n\n\n\n\nAlice plays first, she can delete the underlined substring in \ns = \"\nleetco\nder\"\n which contains 3 vowels. The resulting string is \ns = \"der\"\n.\n\n\nBob plays second, he can delete the underlined substring in \ns = \"\nd\ner\"\n which contains 0 vowels. The resulting string is \ns = \"er\"\n.\n\n\nAlice plays third, she can delete the whole string \ns = \"\ner\n\"\n which contains 1 vowel.\n\n\nBob plays fourth, since the string is empty, there is no valid play for Bob. So Alice wins the game.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"bbcd\"\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\nThere is no valid play for Alice in her first turn, so Alice loses the game.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Math",
            "String",
            "Brainteaser",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 3195,
        "slug": "find-the-minimum-area-to-cover-all-ones-i",
        "url": "https://leetcode.com/problems/find-the-minimum-area-to-cover-all-ones-i/",
        "titulo": "Find the Minimum Area to Cover All Ones I",
        "enunciado": "You are given a 2D \nbinary\n array \ngrid\n. Find a rectangle with horizontal and vertical sides with the\n smallest\n area, such that all the 1's in \ngrid\n lie inside this rectangle.\n\n\nReturn the \nminimum\n possible area of the rectangle.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[0,1,0],[1,0,1]]\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\n\n\nThe smallest rectangle has a height of 2 and a width of 3, so it has an area of \n2 * 3 = 6\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[1,0],[0,0]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nThe smallest rectangle has both height and width 1, so its area is \n1 * 1 = 1\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grid.length, grid[i].length <= 1000\n\n\ngrid[i][j]\n is either 0 or 1.\n\n\nThe input is generated such that there is at least one 1 in \ngrid\n.",
        "temas": [
            "Array",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3176,
        "slug": "find-the-maximum-length-of-a-good-subsequence-i",
        "url": "https://leetcode.com/problems/find-the-maximum-length-of-a-good-subsequence-i/",
        "titulo": "Find the Maximum Length of a Good Subsequence I",
        "enunciado": "You are given an integer array \nnums\n and a \nnon-negative\n integer \nk\n. A sequence of integers \nseq\n is called \ngood\n if there are \nat most\n \nk\n indices \ni\n in the range \n[0, seq.length - 2]\n such that \nseq[i] != seq[i + 1]\n.\n\n\nReturn the \nmaximum\n possible length of a \ngood\n \nsubsequence\n of \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,1,1,3], k = 2\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe maximum length subsequence is \n[\n1\n,\n2\n,\n1\n,\n1\n,3]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,5,1], k = 0\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe maximum length subsequence is \n[\n1\n,2,3,4,5,\n1\n]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 500\n\n\n1 <= nums[i] <= 10\n9\n\n\n0 <= k <= min(nums.length, 25)",
        "temas": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3223,
        "slug": "minimum-length-of-string-after-operations",
        "url": "https://leetcode.com/problems/minimum-length-of-string-after-operations/",
        "titulo": "Minimum Length of String After Operations",
        "enunciado": "You are given a string \ns\n.\n\n\nYou can perform the following process on \ns\n \nany\n number of times:\n\n\n\n\nChoose an index \ni\n in the string such that there is \nat least\n one character to the left of index \ni\n that is equal to \ns[i]\n, and \nat least\n one character to the right that is also equal to \ns[i]\n.\n\n\nDelete the \nclosest\n occurrence of \ns[i]\n located to the \nleft\n of \ni\n.\n\n\nDelete the \nclosest\n occurrence of \ns[i]\n located to the \nright\n of \ni\n.\n\n\n\n\nReturn the \nminimum\n length of the final string \ns\n that you can achieve.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abaacbcbb\"\n\n\nOutput:\n \n5\n\n\nExplanation:\n\nWe do the following operations:\n\n\n\n\nChoose index 2, then remove the characters at indices 0 and 3. The resulting string is \ns = \"bacbcbb\"\n.\n\n\nChoose index 3, then remove the characters at indices 0 and 5. The resulting string is \ns = \"acbcb\"\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"aa\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\nWe cannot perform any operations, so we return the length of the original string.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 2 * 10\n5\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3211,
        "slug": "generate-binary-strings-without-adjacent-zeros",
        "url": "https://leetcode.com/problems/generate-binary-strings-without-adjacent-zeros/",
        "titulo": "Generate Binary Strings Without Adjacent Zeros",
        "enunciado": "You are given a positive integer \nn\n.\n\n\nA binary string \nx\n is \nvalid\n if all \nsubstrings\n of \nx\n of length 2 contain \nat least\n one \n\"1\"\n.\n\n\nReturn all \nvalid\n strings with length \nn\n, \nin \nany\n order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 3\n\n\nOutput:\n \n[\"010\",\"011\",\"101\",\"110\",\"111\"]\n\n\nExplanation:\n\n\nThe valid strings of length 3 are: \n\"010\"\n, \n\"011\"\n, \n\"101\"\n, \n\"110\"\n, and \n\"111\"\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 1\n\n\nOutput:\n \n[\"0\",\"1\"]\n\n\nExplanation:\n\n\nThe valid strings of length 1 are: \n\"0\"\n and \n\"1\"\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 18",
        "temas": [
            "String",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3163,
        "slug": "string-compression-iii",
        "url": "https://leetcode.com/problems/string-compression-iii/",
        "titulo": "String Compression III",
        "enunciado": "Given a string \nword\n, compress it using the following algorithm:\n\n\n\n\nBegin with an empty string \ncomp\n. While \nword\n is \nnot\n empty, use the following operation:\n\n\t\n\n\nRemove a maximum length prefix of \nword\n made of a \nsingle character\n \nc\n repeating \nat most\n 9 times.\n\n\nAppend the length of the prefix followed by \nc\n to \ncomp\n.\n\n\n\n\n\n\n\n\nReturn the string \ncomp\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"abcde\"\n\n\nOutput:\n \n\"1a1b1c1d1e\"\n\n\nExplanation:\n\n\nInitially, \ncomp = \"\"\n. Apply the operation 5 times, choosing \n\"a\"\n, \n\"b\"\n, \n\"c\"\n, \n\"d\"\n, and \n\"e\"\n as the prefix in each operation.\n\n\nFor each prefix, append \n\"1\"\n followed by the character to \ncomp\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"aaaaaaaaaaaaaabb\"\n\n\nOutput:\n \n\"9a5a2b\"\n\n\nExplanation:\n\n\nInitially, \ncomp = \"\"\n. Apply the operation 3 times, choosing \n\"aaaaaaaaa\"\n, \n\"aaaaa\"\n, and \n\"bb\"\n as the prefix in each operation.\n\n\n\n\nFor prefix \n\"aaaaaaaaa\"\n, append \n\"9\"\n followed by \n\"a\"\n to \ncomp\n.\n\n\nFor prefix \n\"aaaaa\"\n, append \n\"5\"\n followed by \n\"a\"\n to \ncomp\n.\n\n\nFor prefix \n\"bb\"\n, append \n\"2\"\n followed by \n\"b\"\n to \ncomp\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 2 * 10\n5\n\n\nword\n consists only of lowercase English letters.",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3170,
        "slug": "lexicographically-minimum-string-after-removing-stars",
        "url": "https://leetcode.com/problems/lexicographically-minimum-string-after-removing-stars/",
        "titulo": "Lexicographically Minimum String After Removing Stars",
        "enunciado": "You are given a string \ns\n. It may contain any number of \n'*'\n characters. Your task is to remove all \n'*'\n characters.\n\n\nWhile there is a \n'*'\n, do the following operation:\n\n\n\n\nDelete the leftmost \n'*'\n and the \nsmallest\n non-\n'*'\n character to its \nleft\n. If there are several smallest characters, you can delete any of them.\n\n\n\n\nReturn the \nlexicographically smallest\n resulting string after removing all \n'*'\n characters.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"aaba*\"\n\n\nOutput:\n \n\"aab\"\n\n\nExplanation:\n\n\nWe should delete one of the \n'a'\n characters with \n'*'\n. If we choose \ns[3]\n, \ns\n becomes the lexicographically smallest.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"abc\"\n\n\nOutput:\n \n\"abc\"\n\n\nExplanation:\n\n\nThere is no \n'*'\n in the string.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists only of lowercase English letters and \n'*'\n.\n\n\nThe input is generated such that it is possible to delete all \n'*'\n characters.",
        "temas": [
            "Hash Table",
            "String",
            "Stack",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3164,
        "slug": "find-the-number-of-good-pairs-ii",
        "url": "https://leetcode.com/problems/find-the-number-of-good-pairs-ii/",
        "titulo": "Find the Number of Good Pairs II",
        "enunciado": "You are given 2 integer arrays \nnums1\n and \nnums2\n of lengths \nn\n and \nm\n respectively. You are also given a \npositive\n integer \nk\n.\n\n\nA pair \n(i, j)\n is called \ngood\n if \nnums1[i]\n is divisible by \nnums2[j] * k\n (\n0 <= i <= n - 1\n, \n0 <= j <= m - 1\n).\n\n\nReturn the total number of \ngood\n pairs.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums1 = [1,3,4], nums2 = [1,3,4], k = 1\n\n\nOutput:\n \n5\n\n\nExplanation:\n\nThe 5 good pairs are \n(0, 0)\n, \n(1, 0)\n, \n(1, 1)\n, \n(2, 0)\n, and \n(2, 2)\n.\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums1 = [1,2,4,12], nums2 = [2,4], k = 3\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe 2 good pairs are \n(3, 0)\n and \n(3, 1)\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, m <= 10\n5\n\n\n1 <= nums1[i], nums2[j] <= 10\n6\n\n\n1 <= k <= 10\n3",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3180,
        "slug": "maximum-total-reward-using-operations-i",
        "url": "https://leetcode.com/problems/maximum-total-reward-using-operations-i/",
        "titulo": "Maximum Total Reward Using Operations I",
        "enunciado": "You are given an integer array \nrewardValues\n of length \nn\n, representing the values of rewards.\n\n\nInitially, your total reward \nx\n is 0, and all indices are \nunmarked\n. You are allowed to perform the following operation \nany\n number of times:\n\n\n\n\nChoose an \nunmarked\n index \ni\n from the range \n[0, n - 1]\n.\n\n\nIf \nrewardValues[i]\n is \ngreater\n than your current total reward \nx\n, then add \nrewardValues[i]\n to \nx\n (i.e., \nx = x + rewardValues[i]\n), and \nmark\n the index \ni\n.\n\n\n\n\nReturn an integer denoting the \nmaximum \ntotal reward\n you can collect by performing the operations optimally.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nrewardValues = [1,1,3,3]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nDuring the operations, we can choose to mark the indices 0 and 2 in order, and the total reward will be 4, which is the maximum.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nrewardValues = [1,6,4,3,2]\n\n\nOutput:\n \n11\n\n\nExplanation:\n\n\nMark the indices 0, 2, and 1 in order. The total reward will then be 11, which is the maximum.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rewardValues.length <= 2000\n\n\n1 <= rewardValues[i] <= 2000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3186,
        "slug": "maximum-total-damage-with-spell-casting",
        "url": "https://leetcode.com/problems/maximum-total-damage-with-spell-casting/",
        "titulo": "Maximum Total Damage With Spell Casting",
        "enunciado": "A magician has various spells.\n\n\nYou are given an array \npower\n, where each element represents the damage of a spell. Multiple spells can have the same damage value.\n\n\nIt is a known fact that if a magician decides to cast a spell with a damage of \npower[i]\n, they \ncannot\n cast any spell with a damage of \npower[i] - 2\n, \npower[i] - 1\n, \npower[i] + 1\n, or \npower[i] + 2\n.\n\n\nEach spell can be cast \nonly once\n.\n\n\nReturn the \nmaximum\n possible \ntotal damage\n that a magician can cast.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npower = [1,1,3,4]\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nThe maximum possible damage of 6 is produced by casting spells 0, 1, 3 with damage 1, 1, 4.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npower = [7,1,6,6]\n\n\nOutput:\n \n13\n\n\nExplanation:\n\n\nThe maximum possible damage of 13 is produced by casting spells 1, 2, 3 with damage 1, 6, 6.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= power.length <= 10\n5\n\n\n1 <= power[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Dynamic Programming",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3160,
        "slug": "find-the-number-of-distinct-colors-among-the-balls",
        "url": "https://leetcode.com/problems/find-the-number-of-distinct-colors-among-the-balls/",
        "titulo": "Find the Number of Distinct Colors Among the Balls",
        "enunciado": "You are given an integer \nlimit\n and a 2D array \nqueries\n of size \nn x 2\n.\n\n\nThere are \nlimit + 1\n balls with \ndistinct\n labels in the range \n[0, limit]\n. Initially, all balls are uncolored. For every query in \nqueries\n that is of the form \n[x, y]\n, you mark ball \nx\n with the color \ny\n. After each query, you need to find the number of colors among the balls.\n\n\nReturn an array \nresult\n of length \nn\n, where \nresult[i]\n denotes the number of colors \nafter\n \ni\nth\n query.\n\n\nNote\n that when answering a query, lack of a color \nwill not\n be considered as a color.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nlimit = 4, queries = [[1,4],[2,5],[1,3],[3,4]]\n\n\nOutput:\n \n[1,2,2,3]\n\n\nExplanation:\n\n\n\n\n\n\nAfter query 0, ball 1 has color 4.\n\n\nAfter query 1, ball 1 has color 4, and ball 2 has color 5.\n\n\nAfter query 2, ball 1 has color 3, and ball 2 has color 5.\n\n\nAfter query 3, ball 1 has color 3, ball 2 has color 5, and ball 3 has color 4.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nlimit = 4, queries = [[0,1],[1,2],[2,2],[3,4],[4,5]]\n\n\nOutput:\n \n[1,2,2,3,4]\n\n\nExplanation:\n\n\n\n\n\n\nAfter query 0, ball 0 has color 1.\n\n\nAfter query 1, ball 0 has color 1, and ball 1 has color 2.\n\n\nAfter query 2, ball 0 has color 1, and balls 1 and 2 have color 2.\n\n\nAfter query 3, ball 0 has color 1, balls 1 and 2 have color 2, and ball 3 has color 4.\n\n\nAfter query 4, ball 0 has color 1, balls 1 and 2 have color 2, ball 3 has color 4, and ball 4 has color 5.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= limit <= 10\n9\n\n\n1 <= n == queries.length <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= queries[i][0] <= limit\n\n\n1 <= queries[i][1] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3169,
        "slug": "count-days-without-meetings",
        "url": "https://leetcode.com/problems/count-days-without-meetings/",
        "titulo": "Count Days Without Meetings",
        "enunciado": "You are given a positive integer \ndays\n representing the total number of days an employee is available for work (starting from day 1). You are also given a 2D array \nmeetings\n of size \nn\n where, \nmeetings[i] = [start_i, end_i]\n represents the starting and ending days of meeting \ni\n (inclusive).\n\n\nReturn the count of days when the employee is available for work but no meetings are scheduled.\n\n\nNote: \nThe meetings may overlap.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ndays = 10, meetings = [[5,7],[1,3],[9,10]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThere is no meeting scheduled on the 4\nth\n and 8\nth\n days.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ndays = 5, meetings = [[2,4],[1,3]]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThere is no meeting scheduled on the 5\nth \nday.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ndays = 6, meetings = [[1,6]]\n\n\nOutput:\n 0\n\n\nExplanation:\n\n\nMeetings are scheduled for all working days.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= days <= 10\n9\n\n\n1 <= meetings.length <= 10\n5\n\n\nmeetings[i].length == 2\n\n\n1 <= meetings[i][0] <= meetings[i][1] <= days",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3152,
        "slug": "special-array-ii",
        "url": "https://leetcode.com/problems/special-array-ii/",
        "titulo": "Special Array II",
        "enunciado": "An array is considered \nspecial\n if every pair of its adjacent elements contains two numbers with different parity.\n\n\nYou are given an array of integer \nnums\n and a 2D integer matrix \nqueries\n, where for \nqueries[i] = [from\ni\n, to\ni\n]\n your task is to check that \nsubarray\n \nnums[from\ni\n..to\ni\n]\n is \nspecial\n or not.\n\n\nReturn an array of booleans \nanswer\n such that \nanswer[i]\n is \ntrue\n if \nnums[from\ni\n..to\ni\n]\n is special.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [3,4,1,2,6], queries = [[0,4]]\n\n\nOutput:\n \n[false]\n\n\nExplanation:\n\n\nThe subarray is \n[3,4,1,2,6]\n. 2 and 6 are both even.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,3,1,6], queries = [[0,2],[2,3]]\n\n\nOutput:\n \n[false,true]\n\n\nExplanation:\n\n\n\n\nThe subarray is \n[4,3,1]\n. 3 and 1 are both odd. So the answer to this query is \nfalse\n.\n\n\nThe subarray is \n[1,6]\n. There is only one pair: \n(1,6)\n and it contains numbers with different parity. So the answer to this query is \ntrue\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= queries[i][0] <= queries[i][1] <= nums.length - 1",
        "temas": [
            "Array",
            "Binary Search",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3179,
        "slug": "find-the-n-th-value-after-k-seconds",
        "url": "https://leetcode.com/problems/find-the-n-th-value-after-k-seconds/",
        "titulo": "Find the N-th Value After K Seconds",
        "enunciado": "You are given two integers \nn\n and \nk\n.\n\n\nInitially, you start with an array \na\n of \nn\n integers where \na[i] = 1\n for all \n0 <= i <= n - 1\n. After each second, you simultaneously update each element to be the sum of all its preceding elements plus the element itself. For example, after one second, \na[0]\n remains the same, \na[1]\n becomes \na[0] + a[1]\n, \na[2]\n becomes \na[0] + a[1] + a[2]\n, and so on.\n\n\nReturn the \nvalue\n of \na[n - 1]\n after \nk\n seconds.\n\n\nSince the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 4, k = 5\n\n\nOutput:\n \n56\n\n\nExplanation:\n\n\n\n\n\n\n\n\nSecond\n\n\nState After\n\n\n\n\n\n\n0\n\n\n[1,1,1,1]\n\n\n\n\n\n\n1\n\n\n[1,2,3,4]\n\n\n\n\n\n\n2\n\n\n[1,3,6,10]\n\n\n\n\n\n\n3\n\n\n[1,4,10,20]\n\n\n\n\n\n\n4\n\n\n[1,5,15,35]\n\n\n\n\n\n\n5\n\n\n[1,6,21,56]\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 5, k = 3\n\n\nOutput:\n \n35\n\n\nExplanation:\n\n\n\n\n\n\n\n\nSecond\n\n\nState After\n\n\n\n\n\n\n0\n\n\n[1,1,1,1,1]\n\n\n\n\n\n\n1\n\n\n[1,2,3,4,5]\n\n\n\n\n\n\n2\n\n\n[1,3,6,10,15]\n\n\n\n\n\n\n3\n\n\n[1,4,10,20,35]\n\n\n\n\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, k <= 1000",
        "temas": [
            "Array",
            "Math",
            "Simulation",
            "Combinatorics",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3159,
        "slug": "find-occurrences-of-an-element-in-an-array",
        "url": "https://leetcode.com/problems/find-occurrences-of-an-element-in-an-array/",
        "titulo": "Find Occurrences of an Element in an Array",
        "enunciado": "You are given an integer array \nnums\n, an integer array \nqueries\n, and an integer \nx\n.\n\n\nFor each \nqueries[i]\n, you need to find the index of the \nqueries[i]\nth\n occurrence of \nx\n in the \nnums\n array. If there are fewer than \nqueries[i]\n occurrences of \nx\n, the answer should be -1 for that query.\n\n\nReturn an integer array \nanswer\n containing the answers to all queries.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,3,1,7], queries = [1,3,2,4], x = 1\n\n\nOutput:\n \n[0,-1,2,-1]\n\n\nExplanation:\n\n\n\n\nFor the 1\nst\n query, the first occurrence of 1 is at index 0.\n\n\nFor the 2\nnd\n query, there are only two occurrences of 1 in \nnums\n, so the answer is -1.\n\n\nFor the 3\nrd\n query, the second occurrence of 1 is at index 2.\n\n\nFor the 4\nth\n query, there are only two occurrences of 1 in \nnums\n, so the answer is -1.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,2,3], queries = [10], x = 5\n\n\nOutput:\n \n[-1]\n\n\nExplanation:\n\n\n\n\nFor the 1\nst\n query, 5 doesn't exist in \nnums\n, so the answer is -1.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length, queries.length <= 10\n5\n\n\n1 <= queries[i] <= 10\n5\n\n\n1 <= nums[i], x <= 10\n4",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3143,
        "slug": "maximum-points-inside-the-square",
        "url": "https://leetcode.com/problems/maximum-points-inside-the-square/",
        "titulo": "Maximum Points Inside the Square",
        "enunciado": "You are given a 2D\n \narray \npoints\n and a string \ns\n where, \npoints[i]\n represents the coordinates of point \ni\n, and \ns[i]\n represents the \ntag\n of point \ni\n.\n\n\nA \nvalid\n square is a square centered at the origin \n(0, 0)\n, has edges parallel to the axes, and \ndoes not\n contain two points with the same tag.\n\n\nReturn the \nmaximum\n number of points contained in a \nvalid\n square.\n\n\nNote:\n\n\n\n\nA point is considered to be inside the square if it lies on or within the square's boundaries.\n\n\nThe side length of the square can be zero.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \npoints = [[2,2],[-1,-2],[-4,4],[-3,1],[3,-3]], s = \"abdca\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe square of side length 4 covers two points \npoints[0]\n and \npoints[1]\n.\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \npoints = [[1,1],[-2,-2],[-2,2]], s = \"abb\"\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe square of side length 2 covers one point, which is \npoints[0]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \npoints = [[1,1],[-1,-1],[2,-2]], s = \"ccd\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nIt's impossible to make any valid squares centered at the origin such that it covers only one point among \npoints[0]\n and \npoints[1]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, points.length <= 10\n5\n\n\npoints[i].length == 2\n\n\n-10\n9\n <= points[i][0], points[i][1] <= 10\n9\n\n\ns.length == points.length\n\n\npoints\n consists of distinct coordinates.\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3185,
        "slug": "count-pairs-that-form-a-complete-day-ii",
        "url": "https://leetcode.com/problems/count-pairs-that-form-a-complete-day-ii/",
        "titulo": "Count Pairs That Form a Complete Day II",
        "enunciado": "Given an integer array \nhours\n representing times in \nhours\n, return an integer denoting the number of pairs \ni\n, \nj\n where \ni < j\n and \nhours[i] + hours[j]\n forms a \ncomplete day\n.\n\n\nA \ncomplete day\n is defined as a time duration that is an \nexact\n \nmultiple\n of 24 hours.\n\n\nFor example, 1 day is 24 hours, 2 days is 48 hours, 3 days is 72 hours, and so on.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nhours = [12,12,30,24,24]\n\n\nOutput:\n \n2\n\n\nExplanation:\n The pairs of indices that form a complete day are \n(0, 1)\n and \n(3, 4)\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nhours = [72,48,24,3]\n\n\nOutput:\n \n3\n\n\nExplanation:\n The pairs of indices that form a complete day are \n(0, 1)\n, \n(0, 2)\n, and \n(1, 2)\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= hours.length <= 5 * 10\n5\n\n\n1 <= hours[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3153,
        "slug": "sum-of-digit-differences-of-all-pairs",
        "url": "https://leetcode.com/problems/sum-of-digit-differences-of-all-pairs/",
        "titulo": "Sum of Digit Differences of All Pairs",
        "enunciado": "You are given an array \nnums\n consisting of \npositive\n integers where all integers have the \nsame\n number of digits.\n\n\nThe \ndigit difference\n between two integers is the \ncount\n of different digits that are in the \nsame\n position in the two integers.\n\n\nReturn the \nsum\n of the \ndigit differences\n between \nall\n pairs of integers in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [13,23,12]\n\n\nOutput:\n 4\n\n\nExplanation:\n\nWe have the following:\n\n- The digit difference between \n1\n3 and \n2\n3 is 1.\n\n- The digit difference between 1\n3\n and 1\n2\n is 1.\n\n- The digit difference between \n23\n and \n12\n is 2.\n\nSo the total sum of digit differences between all pairs of integers is \n1 + 1 + 2 = 4\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [10,10,10,10]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\nAll the integers in the array are the same. So the total sum of digit differences between all pairs of integers will be 0.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] < 10\n9\n\n\nAll integers in \nnums\n have the same number of digits.",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3175,
        "slug": "find-the-first-player-to-win-k-games-in-a-row",
        "url": "https://leetcode.com/problems/find-the-first-player-to-win-k-games-in-a-row/",
        "titulo": "Find The First Player to win K Games in a Row",
        "enunciado": "A competition consists of \nn\n players numbered from \n0\n to \nn - 1\n.\n\n\nYou are given an integer array \nskills\n of size \nn\n and a \npositive\n integer \nk\n, where \nskills[i]\n is the skill level of player \ni\n. All integers in \nskills\n are \nunique\n.\n\n\nAll players are standing in a queue in order from player \n0\n to player \nn - 1\n.\n\n\nThe competition process is as follows:\n\n\n\n\nThe first two players in the queue play a game, and the player with the \nhigher\n skill level wins.\n\n\nAfter the game, the winner stays at the beginning of the queue, and the loser goes to the end of it.\n\n\n\n\nThe winner of the competition is the \nfirst\n player who wins \nk\n games \nin a row\n.\n\n\nReturn the initial index of the \nwinning\n player.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nskills = [4,2,6,3,9], k = 2\n\n\nOutput:\n 2\n\n\nExplanation:\n\n\nInitially, the queue of players is \n[0,1,2,3,4]\n. The following process happens:\n\n\n\n\nPlayers 0 and 1 play a game, since the skill of player 0 is higher than that of player 1, player 0 wins. The resulting queue is \n[0,2,3,4,1]\n.\n\n\nPlayers 0 and 2 play a game, since the skill of player 2 is higher than that of player 0, player 2 wins. The resulting queue is \n[2,3,4,1,0]\n.\n\n\nPlayers 2 and 3 play a game, since the skill of player 2 is higher than that of player 3, player 2 wins. The resulting queue is \n[2,4,1,0,3]\n.\n\n\n\n\nPlayer 2 won \nk = 2\n games in a row, so the winner is player 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nskills = [2,5,4], k = 3\n\n\nOutput:\n 1\n\n\nExplanation:\n\n\nInitially, the queue of players is \n[0,1,2]\n. The following process happens:\n\n\n\n\nPlayers 0 and 1 play a game, since the skill of player 1 is higher than that of player 0, player 1 wins. The resulting queue is \n[1,2,0]\n.\n\n\nPlayers 1 and 2 play a game, since the skill of player 1 is higher than that of player 2, player 1 wins. The resulting queue is \n[1,0,2]\n.\n\n\nPlayers 1 and 0 play a game, since the skill of player 1 is higher than that of player 0, player 1 wins. The resulting queue is \n[1,2,0]\n.\n\n\n\n\nPlayer 1 won \nk = 3\n games in a row, so the winner is player 1.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == skills.length\n\n\n2 <= n <= 10\n5\n\n\n1 <= k <= 10\n9\n\n\n1 <= skills[i] <= 10\n6\n\n\nAll integers in \nskills\n are unique.",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3129,
        "slug": "find-all-possible-stable-binary-arrays-i",
        "url": "https://leetcode.com/problems/find-all-possible-stable-binary-arrays-i/",
        "titulo": "Find All Possible Stable Binary Arrays I",
        "enunciado": "You are given 3 positive integers \nzero\n, \none\n, and \nlimit\n.\n\n\nA \nbinary array\n \narr\n is called \nstable\n if:\n\n\n\n\nThe number of occurrences of 0 in \narr\n is \nexactly \nzero\n.\n\n\nThe number of occurrences of 1 in \narr\n is \nexactly\n \none\n.\n\n\nEach \nsubarray\n of \narr\n with a size greater than \nlimit\n must contain \nboth \n0 and 1.\n\n\n\n\nReturn the \ntotal\n number of \nstable\n binary arrays.\n\n\nSince the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nzero = 1, one = 1, limit = 2\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe two possible stable binary arrays are \n[1,0]\n and \n[0,1]\n, as both arrays have a single 0 and a single 1, and no subarray has a length greater than 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nzero = 1, one = 2, limit = 1\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe only possible stable binary array is \n[1,0,1]\n.\n\n\nNote that the binary arrays \n[1,1,0]\n and \n[0,1,1]\n have subarrays of length 2 with identical elements, hence, they are not stable.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nzero = 3, one = 3, limit = 2\n\n\nOutput:\n \n14\n\n\nExplanation:\n\n\nAll the possible stable binary arrays are \n[0,0,1,0,1,1]\n, \n[0,0,1,1,0,1]\n, \n[0,1,0,0,1,1]\n, \n[0,1,0,1,0,1]\n, \n[0,1,0,1,1,0]\n, \n[0,1,1,0,0,1]\n, \n[0,1,1,0,1,0]\n, \n[1,0,0,1,0,1]\n, \n[1,0,0,1,1,0]\n, \n[1,0,1,0,0,1]\n, \n[1,0,1,0,1,0]\n, \n[1,0,1,1,0,0]\n, \n[1,1,0,0,1,0]\n, and \n[1,1,0,1,0,0]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= zero, one, limit <= 200",
        "temas": [
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 3121,
        "slug": "count-the-number-of-special-characters-ii",
        "url": "https://leetcode.com/problems/count-the-number-of-special-characters-ii/",
        "titulo": "Count the Number of Special Characters II",
        "enunciado": "You are given a string \nword\n. A letter \nc\n is called \nspecial\n if it appears \nboth\n in lowercase and uppercase in \nword\n, and \nevery\n lowercase occurrence of \nc\n appears before the \nfirst\n uppercase occurrence of \nc\n.\n\n\nReturn the number of\n \nspecial\n letters\n \nin\n \nword\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"aaAbcBC\"\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe special characters are \n'a'\n, \n'b'\n, and \n'c'\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"abc\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere are no special characters in \nword\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nword = \"AbBCab\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere are no special characters in \nword\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 2 * 10\n5\n\n\nword\n consists of only lowercase and uppercase English letters.",
        "temas": [
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3122,
        "slug": "minimum-number-of-operations-to-satisfy-conditions",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-satisfy-conditions/",
        "titulo": "Minimum Number of Operations to Satisfy Conditions",
        "enunciado": "You are given a 2D matrix \ngrid\n of size \nm x n\n. In one \noperation\n, you can change the value of \nany\n cell to \nany\n non-negative number. You need to perform some \noperations\n such that each cell \ngrid[i][j]\n is:\n\n\n\n\nEqual to the cell below it, i.e. \ngrid[i][j] == grid[i + 1][j]\n (if it exists).\n\n\nDifferent from the cell to its right, i.e. \ngrid[i][j] != grid[i][j + 1]\n (if it exists).\n\n\n\n\nReturn the \nminimum\n number of operations needed.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,0,2],[1,0,2]]\n\n\nOutput:\n 0\n\n\nExplanation:\n\n\n\n\nAll the cells in the matrix already satisfy the properties.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[1,1,1],[0,0,0]]\n\n\nOutput:\n 3\n\n\nExplanation:\n\n\n\n\nThe matrix becomes \n[[1,0,1],[1,0,1]]\n which satisfies the properties, by doing these 3 operations:\n\n\n\n\nChange \ngrid[1][0]\n to 1.\n\n\nChange \ngrid[0][1]\n to 0.\n\n\nChange \ngrid[1][2]\n to 1.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ngrid = [[1],[2],[3]]\n\n\nOutput:\n 2\n\n\nExplanation:\n\n\n\n\nThere is a single column. We can change the value to 1 in each cell using 2 operations.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, m <= 1000\n\n\n0 <= grid[i][j] <= 9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3144,
        "slug": "minimum-substring-partition-of-equal-character-frequency",
        "url": "https://leetcode.com/problems/minimum-substring-partition-of-equal-character-frequency/",
        "titulo": "Minimum Substring Partition of Equal Character Frequency",
        "enunciado": "Given a string \ns\n, you need to partition it into one or more \nbalanced\n \nsubstrings\n. For example, if \ns == \"ababcc\"\n then \n(\"abab\", \"c\", \"c\")\n, \n(\"ab\", \"abc\", \"c\")\n, and \n(\"ababcc\")\n are all valid partitions, but \n(\"a\", \n\"bab\"\n, \"cc\")\n, \n(\n\"aba\"\n, \"bc\", \"c\")\n, and \n(\"ab\", \n\"abcc\"\n)\n are not. The unbalanced substrings are bolded.\n\n\nReturn the \nminimum\n number of substrings that you can partition \ns\n into.\n\n\nNote:\n A \nbalanced\n string is a string where each character in the string occurs the same number of times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"fabccddg\"\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nWe can partition the string \ns\n into 3 substrings in one of the following ways: \n(\"fab, \"ccdd\", \"g\")\n, or \n(\"fabc\", \"cd\", \"dg\")\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"abababaccddb\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nWe can partition the string \ns\n into 2 substrings like so: \n(\"abab\", \"abaccddb\")\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns\n consists only of English lowercase letters.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3132,
        "slug": "find-the-integer-added-to-array-ii",
        "url": "https://leetcode.com/problems/find-the-integer-added-to-array-ii/",
        "titulo": "Find the Integer Added to Array II",
        "enunciado": "You are given two integer arrays \nnums1\n and \nnums2\n.\n\n\nFrom \nnums1\n two elements have been removed, and all other elements have been increased (or decreased in the case of negative) by an integer, represented by the variable \nx\n.\n\n\nAs a result, \nnums1\n becomes \nequal\n to \nnums2\n. Two arrays are considered \nequal\n when they contain the same integers with the same frequencies.\n\n\nReturn the \nminimum\n possible integer\n \nx\n \nthat achieves this equivalence.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums1 = [4,20,16,12,8], nums2 = [14,18,10]\n\n\nOutput:\n \n-2\n\n\nExplanation:\n\n\nAfter removing elements at indices \n[0,4]\n and adding -2, \nnums1\n becomes \n[18,14,10]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums1 = [3,5,5,3], nums2 = [7,7]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nAfter removing elements at indices \n[0,3]\n and adding 2, \nnums1\n becomes \n[7,7]\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums1.length <= 200\n\n\nnums2.length == nums1.length - 2\n\n\n0 <= nums1[i], nums2[i] <= 1000\n\n\nThe test cases are generated in a way that there is an integer \nx\n such that \nnums1\n can become equal to \nnums2\n by removing two elements and adding \nx\n to each element of \nnums1\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "Sorting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3138,
        "slug": "minimum-length-of-anagram-concatenation",
        "url": "https://leetcode.com/problems/minimum-length-of-anagram-concatenation/",
        "titulo": "Minimum Length of Anagram Concatenation",
        "enunciado": "You are given a string \ns\n, which is known to be a concatenation of \nanagrams\n of some string \nt\n.\n\n\nReturn the \nminimum\n possible length of the string \nt\n.\n\n\nAn \nanagram\n is formed by rearranging the letters of a string. For example, \"aab\", \"aba\", and, \"baa\" are anagrams of \"aab\".\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"abba\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nOne possible string \nt\n could be \n\"ba\"\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"cdef\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nOne possible string \nt\n could be \n\"cdef\"\n, notice that \nt\n can be equal to \ns\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"abcbcacabbaccba\"\n\n\nOutput:\n \n3\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consist only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3133,
        "slug": "minimum-array-end",
        "url": "https://leetcode.com/problems/minimum-array-end/",
        "titulo": "Minimum Array End",
        "enunciado": "You are given two integers \nn\n and \nx\n. You have to construct an array of \npositive\n integers \nnums\n of size \nn\n where for every \n0 <= i < n - 1\n, \nnums[i + 1]\n is \ngreater than\n \nnums[i]\n, and the result of the bitwise \nAND\n operation between all elements of \nnums\n is \nx\n.\n\n\nReturn the \nminimum\n possible value of \nnums[n - 1]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 3, x = 4\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nnums\n can be \n[4,5,6]\n and its last element is 6.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 2, x = 7\n\n\nOutput:\n \n15\n\n\nExplanation:\n\n\nnums\n can be \n[7,15]\n and its last element is 15.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, x <= 10\n8",
        "temas": [
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Bit Manipulation",
        "has_image": false
    },
    {
        "id": 3148,
        "slug": "maximum-difference-score-in-a-grid",
        "url": "https://leetcode.com/problems/maximum-difference-score-in-a-grid/",
        "titulo": "Maximum Difference Score in a Grid",
        "enunciado": "You are given an \nm x n\n matrix \ngrid\n consisting of \npositive\n integers. You can move from a cell in the matrix to \nany\n other cell that is either to the bottom or to the right (not necessarily adjacent). The score of a move from a cell with the value \nc1\n to a cell with the value \nc2\n is \nc2 - c1\n.\n\n\nYou can start at \nany\n cell, and you have to make \nat least\n one move.\n\n\nReturn the \nmaximum\n total score you can achieve.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \ngrid = [[9,5,7,3],[8,9,6,1],[6,7,14,3],[2,5,3,1]]\n\n\nOutput:\n \n9\n\n\nExplanation:\n We start at the cell \n(0, 1)\n, and we perform the following moves:\n\n- Move from the cell \n(0, 1)\n to \n(2, 1)\n with a score of \n7 - 5 = 2\n.\n\n- Move from the cell \n(2, 1)\n to \n(2, 2)\n with a score of \n14 - 7 = 7\n.\n\nThe total score is \n2 + 7 = 9\n.\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \ngrid = [[4,3,2],[3,2,1]]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n We start at the cell \n(0, 0)\n, and we perform one move: \n(0, 0)\n to \n(0, 1)\n. The score is \n3 - 4 = -1\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n2 <= m, n <= 1000\n\n\n4 <= m * n <= 10\n5\n\n\n1 <= grid[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3111,
        "slug": "minimum-rectangles-to-cover-points",
        "url": "https://leetcode.com/problems/minimum-rectangles-to-cover-points/",
        "titulo": "Minimum Rectangles to Cover Points",
        "enunciado": "You are given a 2D integer array \npoints\n, where \npoints[i] = [x\ni\n, y\ni\n]\n. You are also given an integer \nw\n. Your task is to \ncover\n \nall\n the given points with rectangles.\n\n\nEach rectangle has its lower end at some point \n(x\n1\n, 0)\n and its upper end at some point \n(x\n2\n, y\n2\n)\n, where \nx\n1\n <= x\n2\n, \ny\n2\n >= 0\n, and the condition \nx\n2\n - x\n1\n <= w\n \nmust\n be satisfied for each rectangle.\n\n\nA point is considered covered by a rectangle if it lies within or on the boundary of the rectangle.\n\n\nReturn an integer denoting the \nminimum\n number of rectangles needed so that each point is covered by \nat least one\n rectangle\n.\n\n\nNote:\n A point may be covered by more than one rectangle.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \npoints = [[2,1],[1,0],[1,4],[1,8],[3,5],[4,6]], w = 1\n\n\nOutput:\n \n2\n\n\nExplanation: \n\n\nThe image above shows one possible placement of rectangles to cover the points:\n\n\n\n\nA rectangle with a lower end at \n(1, 0)\n and its upper end at \n(2, 8)\n\n\nA rectangle with a lower end at \n(3, 0)\n and its upper end at \n(4, 8)\n\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \npoints = [[0,0],[1,1],[2,2],[3,3],[4,4],[5,5],[6,6]], w = 2\n\n\nOutput:\n \n3\n\n\nExplanation: \n\n\nThe image above shows one possible placement of rectangles to cover the points:\n\n\n\n\nA rectangle with a lower end at \n(0, 0)\n and its upper end at \n(2, 2)\n\n\nA rectangle with a lower end at \n(3, 0)\n and its upper end at \n(5, 5)\n\n\nA rectangle with a lower end at \n(6, 0)\n and its upper end at \n(6, 6)\n\n\n\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n \npoints = [[2,3],[1,2]], w = 0\n\n\nOutput:\n \n2\n\n\nExplanation: \n\n\nThe image above shows one possible placement of rectangles to cover the points:\n\n\n\n\nA rectangle with a lower end at \n(1, 0)\n and its upper end at \n(1, 2)\n\n\nA rectangle with a lower end at \n(2, 0)\n and its upper end at \n(2, 3)\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 10\n5\n\n\npoints[i].length == 2\n\n\n0 <= x\ni\n == points[i][0] <= 10\n9\n\n\n0 <= y\ni\n == points[i][1] <= 10\n9\n\n\n0 <= w <= 10\n9\n\n\nAll pairs \n(x\ni\n, y\ni\n)\n are distinct.",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3112,
        "slug": "minimum-time-to-visit-disappearing-nodes",
        "url": "https://leetcode.com/problems/minimum-time-to-visit-disappearing-nodes/",
        "titulo": "Minimum Time to Visit Disappearing Nodes",
        "enunciado": "There is an undirected graph of \nn\n nodes. You are given a 2D array \nedges\n, where \nedges[i] = [u\ni\n, v\ni\n, length\ni\n]\n describes an edge between node \nu\ni\n and node \nv\ni\n with a traversal time of \nlength\ni\n units.\n\n\nAdditionally, you are given an array \ndisappear\n, where \ndisappear[i]\n denotes the time when the node \ni\n disappears from the graph and you won't be able to visit it.\n\n\nNote\n that the graph might be \ndisconnected\n and might contain \nmultiple edges\n.\n\n\nReturn the array \nanswer\n, with \nanswer[i]\n denoting the \nminimum\n units of time required to reach node \ni\n from node 0. If node \ni\n is \nunreachable\n from node 0 then \nanswer[i]\n is \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 3, edges = [[0,1,2],[1,2,1],[0,2,4]], disappear = [1,1,5]\n\n\nOutput:\n \n[0,-1,4]\n\n\nExplanation:\n\n\n\n\nWe are starting our journey from node 0, and our goal is to find the minimum time required to reach each node before it disappears.\n\n\n\n\nFor node 0, we don't need any time as it is our starting point.\n\n\nFor node 1, we need at least 2 units of time to traverse \nedges[0]\n. Unfortunately, it disappears at that moment, so we won't be able to visit it.\n\n\nFor node 2, we need at least 4 units of time to traverse \nedges[2]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 3, edges = [[0,1,2],[1,2,1],[0,2,4]], disappear = [1,3,5]\n\n\nOutput:\n \n[0,2,3]\n\n\nExplanation:\n\n\n\n\nWe are starting our journey from node 0, and our goal is to find the minimum time required to reach each node before it disappears.\n\n\n\n\nFor node 0, we don't need any time as it is the starting point.\n\n\nFor node 1, we need at least 2 units of time to traverse \nedges[0]\n.\n\n\nFor node 2, we need at least 3 units of time to traverse \nedges[0]\n and \nedges[1]\n.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nn = 2, edges = [[0,1,1]], disappear = [1,1]\n\n\nOutput:\n \n[0,-1]\n\n\nExplanation:\n\n\nExactly when we reach node 1, it disappears.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 5 * 10\n4\n\n\n0 <= edges.length <= 10\n5\n\n\nedges[i] == [u\ni\n, v\ni\n, length\ni\n]\n\n\n0 <= u\ni\n, v\ni\n <= n - 1\n\n\n1 <= length\ni\n <= 10\n5\n\n\ndisappear.length == n\n\n\n1 <= disappear[i] <= 10\n5",
        "temas": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3128,
        "slug": "right-triangles",
        "url": "https://leetcode.com/problems/right-triangles/",
        "titulo": "Right Triangles",
        "enunciado": "You are given a 2D boolean matrix \ngrid\n.\n\n\nA collection of 3 elements of \ngrid\n is a \nright triangle\n if one of its elements is in the \nsame row\n with another element and in the \nsame column\n with the third element. The 3 elements may \nnot\n be next to each other.\n\n\nReturn an integer that is the number of \nright triangles\n that can be made with 3 elements of \ngrid\n such that \nall\n of them have a value of 1.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n0\n\n\n1\n\n\n1\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\nInput:\n \ngrid = [[0,1,0],[0,1,1],[0,1,0]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThere are two right triangles with elements of the value 1. Notice that the blue ones do \nnot \nform a right triangle because the 3 elements are in the same column.\n\n\n\n\nExample 2:\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n0\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\nInput:\n \ngrid = [[1,0,0,0],[0,1,0,1],[1,0,0,0]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThere are no right triangles with elements of the value 1.  Notice that the blue ones do \nnot\n form a right triangle.\n\n\n\n\nExample 3:\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1\n\n\n0\n\n\n1\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\nInput:\n \ngrid = [[1,0,1],[1,0,0],[1,0,0]]\n\n\nOutput: \n2\n\n\nExplanation:\n\n\nThere are two right triangles with elements of the value 1.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grid.length <= 1000\n\n\n1 <= grid[i].length <= 1000\n\n\n0 <= grid[i][j] <= 1",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Combinatorics",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3107,
        "slug": "minimum-operations-to-make-median-of-array-equal-to-k",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-median-of-array-equal-to-k/",
        "titulo": "Minimum Operations to Make Median of Array Equal to K",
        "enunciado": "You are given an integer array \nnums\n and a \nnon-negative\n integer \nk\n. In one operation, you can increase or decrease any element by 1.\n\n\nReturn the \nminimum\n number of operations needed to make the \nmedian\n of \nnums\n \nequal\n to \nk\n.\n\n\nThe median of an array is defined as the middle element of the array when it is sorted in non-decreasing order. If there are two choices for a median, the larger of the two values is taken.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,5,6,8,5], k = 4\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nWe can subtract one from \nnums[1]\n and \nnums[4]\n to obtain \n[2, 4, 6, 8, 4]\n. The median of the resulting array is equal to \nk\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,5,6,8,5], k = 7\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nWe can add one to \nnums[1]\n twice and add one to \nnums[2]\n once to obtain \n[2, 7, 7, 8, 5]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,2,3,4,5,6], k = 4\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThe median of the array is already equal to \nk\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3137,
        "slug": "minimum-number-of-operations-to-make-word-k-periodic",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-word-k-periodic/",
        "titulo": "Minimum Number of Operations to Make Word K-Periodic",
        "enunciado": "You are given a string \nword\n of size \nn\n, and an integer \nk\n such that \nk\n divides \nn\n.\n\n\nIn one operation, you can pick any two indices \ni\n and \nj\n, that are divisible by \nk\n, then replace the \nsubstring\n of length \nk\n starting at \ni\n with the substring of length \nk\n starting at \nj\n. That is, replace the substring \nword[i..i + k - 1]\n with the substring \nword[j..j + k - 1]\n.\n\n\nReturn \nthe \nminimum\n number of operations required to make\n \nword\n \nk-periodic\n.\n\n\nWe say that \nword\n is \nk-periodic\n if there is some string \ns\n of length \nk\n such that \nword\n can be obtained by concatenating \ns\n an arbitrary number of times. For example, if \nword == “ababab”\n, then \nword\n is 2-periodic for \ns = \"ab\"\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nword = \"leetcodeleet\", k = 4\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nWe can obtain a 4-periodic string by picking i = 4 and j = 0. After this operation, word becomes equal to \"leetleetleet\".\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nword = \"\nleetcoleet\n\", k = 2\n\n\nOutput:\n 3\n\n\nExplanation:\n\n\nWe can obtain a 2-periodic string by applying the operations in the table below.\n\n\n\n\n\n\n\n\ni\n\n\nj\n\n\nword\n\n\n\n\n\n\n0\n\n\n2\n\n\netetcoleet\n\n\n\n\n\n\n4\n\n\n0\n\n\netetetleet\n\n\n\n\n\n\n6\n\n\n0\n\n\netetetetet\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == word.length <= 10\n5\n\n\n1 <= k <= word.length\n\n\nk\n divides \nword.length\n.\n\n\nword\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3147,
        "slug": "taking-maximum-energy-from-the-mystic-dungeon",
        "url": "https://leetcode.com/problems/taking-maximum-energy-from-the-mystic-dungeon/",
        "titulo": "Taking Maximum Energy From the Mystic Dungeon",
        "enunciado": "In a mystic dungeon, \nn\n magicians are standing in a line. Each magician has an attribute that gives you energy. Some magicians can give you negative energy, which means taking energy from you.\n\n\nYou have been cursed in such a way that after absorbing energy from magician \ni\n, you will be instantly transported to magician \n(i + k)\n. This process will be repeated until you reach the magician where \n(i + k)\n does not exist.\n\n\nIn other words, you will choose a starting point and then teleport with \nk\n jumps until you reach the end of the magicians' sequence, \nabsorbing all the energy\n during the journey.\n\n\nYou are given an array \nenergy\n and an integer \nk\n. Return the \nmaximum\n possible energy you can gain.\n\n\nNote\n that when you are reach a magician, you \nmust\n take energy from them, whether it is negative or positive energy.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \n energy = [5,2,-10,-5,1], k = 3\n\n\nOutput:\n 3\n\n\nExplanation:\n We can gain a total energy of 3 by starting from magician 1 absorbing 2 + 1 = 3.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n energy = [-2,-3,-1], k = 2\n\n\nOutput:\n -1\n\n\nExplanation:\n We can gain a total energy of -1 by starting from magician 2.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= energy.length <= 10\n5\n\n\n-1000 <= energy[i] <= 1000\n\n\n1 <= k <= energy.length - 1\n\n\n\n\n \n\n​​​​​​",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3097,
        "slug": "shortest-subarray-with-or-at-least-k-ii",
        "url": "https://leetcode.com/problems/shortest-subarray-with-or-at-least-k-ii/",
        "titulo": "Shortest Subarray With OR at Least K II",
        "enunciado": "You are given an array \nnums\n of \nnon-negative\n integers and an integer \nk\n.\n\n\nAn array is called \nspecial\n if the bitwise \nOR\n of all of its elements is \nat least\n \nk\n.\n\n\nReturn \nthe length of the \nshortest\n \nspecial\n \nnon-empty\n \nsubarray\n of\n \nnums\n, \nor return\n \n-1\n \nif no special subarray exists\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3], k = 2\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe subarray \n[3]\n has \nOR\n value of \n3\n. Hence, we return \n1\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,1,8], k = 10\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe subarray \n[2,1,8]\n has \nOR\n value of \n11\n. Hence, we return \n3\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1,2], k = 0\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nThe subarray \n[1]\n has \nOR\n value of \n1\n. Hence, we return \n1\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n0 <= k <= 10\n9",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3101,
        "slug": "count-alternating-subarrays",
        "url": "https://leetcode.com/problems/count-alternating-subarrays/",
        "titulo": "Count Alternating Subarrays",
        "enunciado": "You are given a \nbinary array\n \nnums\n.\n\n\nWe call a \nsubarray\n \nalternating\n if \nno\n two \nadjacent\n elements in the subarray have the \nsame\n value.\n\n\nReturn \nthe number of alternating subarrays in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [0,1,1,1]\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nThe following subarrays are alternating: \n[0]\n, \n[1]\n, \n[1]\n, \n[1]\n, and \n[0,1]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,0,1,0]\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\nEvery subarray of the array is alternating. There are 10 possible subarrays that we can choose.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\nnums[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3115,
        "slug": "maximum-prime-difference",
        "url": "https://leetcode.com/problems/maximum-prime-difference/",
        "titulo": "Maximum Prime Difference",
        "enunciado": "You are given an integer array \nnums\n.\n\n\nReturn an integer that is the \nmaximum\n distance between the \nindices\n of two (not necessarily different) prime numbers in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [4,2,9,5,3]\n\n\nOutput:\n \n3\n\n\nExplanation:\n \nnums[1]\n, \nnums[3]\n, and \nnums[4]\n are prime. So the answer is \n|4 - 1| = 3\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [4,8,2,8]\n\n\nOutput:\n \n0\n\n\nExplanation:\n \nnums[2]\n is prime. Because there is just one prime number, the answer is \n|2 - 2| = 0\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n5\n\n\n1 <= nums[i] <= 100\n\n\nThe input is generated such that the number of prime numbers in the \nnums\n is at least one.",
        "temas": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3092,
        "slug": "most-frequent-ids",
        "url": "https://leetcode.com/problems/most-frequent-ids/",
        "titulo": "Most Frequent IDs",
        "enunciado": "The problem involves tracking the frequency of IDs in a collection that changes over time. You have two integer arrays, \nnums\n and \nfreq\n, of equal length \nn\n. Each element in \nnums\n represents an ID, and the corresponding element in \nfreq\n indicates how many times that ID should be added to or removed from the collection at each step.\n\n\n\n\nAddition of IDs:\n If \nfreq[i]\n is positive, it means \nfreq[i]\n IDs with the value \nnums[i]\n are added to the collection at step \ni\n.\n\n\nRemoval of IDs:\n If \nfreq[i]\n is negative, it means \n-freq[i]\n IDs with the value \nnums[i]\n are removed from the collection at step \ni\n.\n\n\n\n\nReturn an array \nans\n of length \nn\n, where \nans[i]\n represents the \ncount\n of the \nmost frequent ID\n in the collection after the \ni\nth\n step. If the collection is empty at any step, \nans[i]\n should be 0 for that step.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,3,2,1], freq = [3,2,-3,1]\n\n\nOutput:\n \n[3,3,2,2]\n\n\nExplanation:\n\n\nAfter step 0, we have 3 IDs with the value of 2. So \nans[0] = 3\n.\n\nAfter step 1, we have 3 IDs with the value of 2 and 2 IDs with the value of 3. So \nans[1] = 3\n.\n\nAfter step 2, we have 2 IDs with the value of 3. So \nans[2] = 2\n.\n\nAfter step 3, we have 2 IDs with the value of 3 and 1 ID with the value of 1. So \nans[3] = 2\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [5,5,3], freq = [2,-2,1]\n\n\nOutput:\n \n[2,0,1]\n\n\nExplanation:\n\n\nAfter step 0, we have 2 IDs with the value of 5. So \nans[0] = 2\n.\n\nAfter step 1, there are no IDs. So \nans[1] = 0\n.\n\nAfter step 2, we have 1 ID with the value of 3. So \nans[2] = 1\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length == freq.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\n-10\n5\n <= freq[i] <= 10\n5\n\n\nfreq[i] != 0\n\n\nThe input is generated\n such that the occurrences of an ID will not be negative in any step.",
        "temas": [
            "Array",
            "Hash Table",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3085,
        "slug": "minimum-deletions-to-make-string-k-special",
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-string-k-special/",
        "titulo": "Minimum Deletions to Make String K-Special",
        "enunciado": "You are given a string \nword\n and an integer \nk\n.\n\n\nWe consider \nword\n to be \nk-special\n if \n|freq(word[i]) - freq(word[j])| <= k\n for all indices \ni\n and \nj\n in the string.\n\n\nHere, \nfreq(x)\n denotes the \nfrequency\n of the character \nx\n in \nword\n, and \n|y|\n denotes the absolute value of \ny\n.\n\n\nReturn \nthe \nminimum\n number of characters you need to delete to make\n \nword\n \nk-special\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput: \nword = \"aabcaba\", k = 0\n\n\nOutput: \n3\n\n\nExplanation:\n We can make \nword\n \n0\n-special by deleting \n2\n occurrences of \n\"a\"\n and \n1\n occurrence of \n\"c\"\n. Therefore, \nword\n becomes equal to \n\"baba\"\n where \nfreq('a') == freq('b') == 2\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput: \nword = \"dabdcbdcdcd\", k = 2\n\n\nOutput: \n2\n\n\nExplanation:\n We can make \nword\n \n2\n-special by deleting \n1\n occurrence of \n\"a\"\n and \n1\n occurrence of \n\"d\"\n. Therefore, \nword\n becomes equal to \"bdcbdcdcd\" where \nfreq('b') == 2\n, \nfreq('c') == 3\n, and \nfreq('d') == 4\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput: \nword = \"aaabaaa\", k = 2\n\n\nOutput: \n1\n\n\nExplanation:\n We can make \nword\n \n2\n-special by deleting \n1\n occurrence of \n\"b\"\n. Therefore, \nword\n becomes equal to \n\"aaaaaa\"\n where each letter's frequency is now uniformly \n6\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 10\n5\n\n\n0 <= k <= 10\n5\n\n\nword\n consists only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3076,
        "slug": "shortest-uncommon-substring-in-an-array",
        "url": "https://leetcode.com/problems/shortest-uncommon-substring-in-an-array/",
        "titulo": "Shortest Uncommon Substring in an Array",
        "enunciado": "You are given an array \narr\n of size \nn\n consisting of \nnon-empty\n strings.\n\n\nFind a string array \nanswer\n of size \nn\n such that:\n\n\n\n\nanswer[i]\n is the \nshortest\n \nsubstring\n of \narr[i]\n that does \nnot\n occur as a substring in any other string in \narr\n. If multiple such substrings exist, \nanswer[i]\n should be the \nlexicographically smallest\n. And if no such substring exists, \nanswer[i]\n should be an empty string.\n\n\n\n\nReturn \nthe array \nanswer\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [\"cab\",\"ad\",\"bad\",\"c\"]\n\nOutput:\n [\"ab\",\"\",\"ba\",\"\"]\n\nExplanation:\n We have the following:\n- For the string \"cab\", the shortest substring that does not occur in any other string is either \"ca\" or \"ab\", we choose the lexicographically smaller substring, which is \"ab\".\n- For the string \"ad\", there is no substring that does not occur in any other string.\n- For the string \"bad\", the shortest substring that does not occur in any other string is \"ba\".\n- For the string \"c\", there is no substring that does not occur in any other string.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [\"abc\",\"bcd\",\"abcd\"]\n\nOutput:\n [\"\",\"\",\"abcd\"]\n\nExplanation:\n We have the following:\n- For the string \"abc\", there is no substring that does not occur in any other string.\n- For the string \"bcd\", there is no substring that does not occur in any other string.\n- For the string \"abcd\", the shortest substring that does not occur in any other string is \"abcd\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == arr.length\n\n\n2 <= n <= 100\n\n\n1 <= arr[i].length <= 20\n\n\narr[i]\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3096,
        "slug": "minimum-levels-to-gain-more-points",
        "url": "https://leetcode.com/problems/minimum-levels-to-gain-more-points/",
        "titulo": "Minimum Levels to Gain More Points",
        "enunciado": "You are given a binary array \npossible\n of length \nn\n.\n\n\nAlice and Bob are playing a game that consists of \nn\n levels. Some of the levels in the game are \nimpossible\n to clear while others can \nalways\n be cleared. In particular, if \npossible[i] == 0\n, then the \ni\nth\n level is \nimpossible\n to clear for \nboth\n the players. A player gains \n1\n point on clearing a level and loses \n1\n point if the player fails to clear it.\n\n\nAt the start of the game, Alice will play some levels in the \ngiven order\n starting from the \n0\nth\n level, after which Bob will play for the rest of the levels.\n\n\nAlice wants to know the \nminimum\n number of levels she should play to gain more points than Bob, if both players play optimally to \nmaximize\n their points.\n\n\nReturn \nthe \nminimum\n number of levels Alice should play to gain more points\n. \nIf this is \nnot\n possible, return\n \n-1\n.\n\n\nNote\n that each player must play at least \n1\n level.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npossible = [1,0,1,0]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\nLet's look at all the levels that Alice can play up to:\n\n\n\n\nIf Alice plays only level 0 and Bob plays the rest of the levels, Alice has 1 point, while Bob has -1 + 1 - 1 = -1 point.\n\n\nIf Alice plays till level 1 and Bob plays the rest of the levels, Alice has 1 - 1 = 0 points, while Bob has 1 - 1 = 0 points.\n\n\nIf Alice plays till level 2 and Bob plays the rest of the levels, Alice has 1 - 1 + 1 = 1 point, while Bob has -1 point.\n\n\n\n\nAlice must play a minimum of 1 level to gain more points.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npossible = [1,1,1,1,1]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nLet's look at all the levels that Alice can play up to:\n\n\n\n\nIf Alice plays only level 0 and Bob plays the rest of the levels, Alice has 1 point, while Bob has 4 points.\n\n\nIf Alice plays till level 1 and Bob plays the rest of the levels, Alice has 2 points, while Bob has 3 points.\n\n\nIf Alice plays till level 2 and Bob plays the rest of the levels, Alice has 3 points, while Bob has 2 points.\n\n\nIf Alice plays till level 3 and Bob plays the rest of the levels, Alice has 4 points, while Bob has 1 point.\n\n\n\n\nAlice must play a minimum of 3 levels to gain more points.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \npossible = [0,0]\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nThe only possible way is for both players to play 1 level each. Alice plays level 0 and loses 1 point. Bob plays level 1 and loses 1 point. As both players have equal points, Alice can't gain more points than Bob.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == possible.length <= 10\n5\n\n\npossible[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3081,
        "slug": "replace-question-marks-in-string-to-minimize-its-value",
        "url": "https://leetcode.com/problems/replace-question-marks-in-string-to-minimize-its-value/",
        "titulo": "Replace Question Marks in String to Minimize Its Value",
        "enunciado": "You are given a string \ns\n. \ns[i]\n is either a lowercase English letter or \n'?'\n.\n\n\nFor a string \nt\n having length \nm\n containing \nonly\n lowercase English letters, we define the function \ncost(i)\n for an index \ni\n as the number of characters \nequal\n to \nt[i]\n that appeared before it, i.e. in the range \n[0, i - 1]\n.\n\n\nThe \nvalue\n of \nt\n is the \nsum\n of \ncost(i)\n for all indices \ni\n.\n\n\nFor example, for the string \nt = \"aab\"\n:\n\n\n\n\ncost(0) = 0\n\n\ncost(1) = 1\n\n\ncost(2) = 0\n\n\nHence, the value of \n\"aab\"\n is \n0 + 1 + 0 = 1\n.\n\n\n\n\nYour task is to \nreplace all\n occurrences of \n'?'\n in \ns\n with any lowercase English letter so that the \nvalue\n of \ns\n is \nminimized\n.\n\n\nReturn \na string denoting the modified string with replaced occurrences of \n'?'\n. If there are multiple strings resulting in the \nminimum value\n, return the \nlexicographically smallest\n one.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput: \n \n s = \"???\" \n\n\nOutput: \n \n \"abc\" \n\n\nExplanation: \n In this example, we can replace the occurrences of \n'?'\n to make \ns\n equal to \n\"abc\"\n.\n\n\nFor \n\"abc\"\n, \ncost(0) = 0\n, \ncost(1) = 0\n, and \ncost(2) = 0\n.\n\n\nThe value of \n\"abc\"\n is \n0\n.\n\n\nSome other modifications of \ns\n that have a value of \n0\n are \n\"cba\"\n, \n\"abz\"\n, and, \n\"hey\"\n.\n\n\nAmong all of them, we choose the lexicographically smallest.\n\n\n\n\nExample 2:\n\n\n\n\nInput: \n \ns = \"a?a?\"\n\n\nOutput: \n \n\"abac\"\n\n\nExplanation: \n In this example, the occurrences of \n'?'\n can be replaced to make \ns\n equal to \n\"abac\"\n.\n\n\nFor \n\"abac\"\n, \ncost(0) = 0\n, \ncost(1) = 0\n, \ncost(2) = 1\n, and \ncost(3) = 0\n.\n\n\nThe value of \n\"abac\"\n is \n1\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either a lowercase English letter or \n'?'\n.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3075,
        "slug": "maximize-happiness-of-selected-children",
        "url": "https://leetcode.com/problems/maximize-happiness-of-selected-children/",
        "titulo": "Maximize Happiness of Selected Children",
        "enunciado": "You are given an array \nhappiness\n of length \nn\n, and a \npositive\n integer \nk\n.\n\n\nThere are \nn\n children standing in a queue, where the \ni\nth\n child has \nhappiness value\n \nhappiness[i]\n. You want to select \nk\n children from these \nn\n children in \nk\n turns.\n\n\nIn each turn, when you select a child, the \nhappiness value\n of all the children that have \nnot\n been selected till now decreases by \n1\n. Note that the happiness value \ncannot\n become negative and gets decremented \nonly\n if it is positive.\n\n\nReturn \nthe \nmaximum\n sum of the happiness values of the selected children you can achieve by selecting \nk\n \nchildren\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n happiness = [1,2,3], k = 2\n\nOutput:\n 4\n\nExplanation:\n We can pick 2 children in the following way:\n- Pick the child with the happiness value == 3. The happiness value of the remaining children becomes [0,1].\n- Pick the child with the happiness value == 1. The happiness value of the remaining child becomes [0]. Note that the happiness value cannot become less than 0.\nThe sum of the happiness values of the selected children is 3 + 1 = 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n happiness = [1,1,1,1], k = 2\n\nOutput:\n 1\n\nExplanation:\n We can pick 2 children in the following way:\n- Pick any child with the happiness value == 1. The happiness value of the remaining children becomes [0,0,0].\n- Pick the child with the happiness value == 0. The happiness value of the remaining child becomes [0,0].\nThe sum of the happiness values of the selected children is 1 + 0 = 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n happiness = [2,3,4,5], k = 1\n\nOutput:\n 5\n\nExplanation:\n We can pick 1 child in the following way:\n- Pick the child with the happiness value == 5. The happiness value of the remaining children becomes [1,2,3].\nThe sum of the happiness values of the selected children is 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == happiness.length <= 2 * 10\n5\n\n\n1 <= happiness[i] <= 10\n8\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3106,
        "slug": "lexicographically-smallest-string-after-operations-with-constraint",
        "url": "https://leetcode.com/problems/lexicographically-smallest-string-after-operations-with-constraint/",
        "titulo": "Lexicographically Smallest String After Operations With Constraint",
        "enunciado": "You are given a string \ns\n and an integer \nk\n.\n\n\nDefine a function \ndistance(s\n1\n, s\n2\n)\n between two strings \ns\n1\n and \ns\n2\n of the same length \nn\n as:\n\n\n\n\nThe\n sum\n of the \nminimum distance\n between \ns\n1\n[i]\n and \ns\n2\n[i]\n when the characters from \n'a'\n to \n'z'\n are placed in a \ncyclic\n order, for all \ni\n in the range \n[0, n - 1]\n.\n\n\n\n\nFor example, \ndistance(\"ab\", \"cd\") == 4\n, and \ndistance(\"a\", \"z\") == 1\n.\n\n\nYou can \nchange\n any letter of \ns\n to \nany\n other lowercase English letter, \nany\n number of times.\n\n\nReturn a string denoting the \nlexicographically smallest\n string \nt\n you can get after some changes, such that \ndistance(s, t) <= k\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"zbbz\", k = 3\n\n\nOutput:\n \n\"aaaz\"\n\n\nExplanation:\n\n\nChange \ns\n to \n\"aaaz\"\n. The distance between \n\"zbbz\"\n and \n\"aaaz\"\n is equal to \nk = 3\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"xaxcd\", k = 4\n\n\nOutput:\n \n\"aawcd\"\n\n\nExplanation:\n\n\nThe distance between \"xaxcd\" and \"aawcd\" is equal to k = 4.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"lol\", k = 0\n\n\nOutput:\n \n\"lol\"\n\n\nExplanation:\n\n\nIt's impossible to change any character as \nk = 0\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 100\n\n\n0 <= k <= 2000\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3070,
        "slug": "count-submatrices-with-top-left-element-and-sum-less-than-k",
        "url": "https://leetcode.com/problems/count-submatrices-with-top-left-element-and-sum-less-than-k/",
        "titulo": "Count Submatrices with Top-Left Element and Sum Less Than k",
        "enunciado": "You are given a \n0-indexed\n integer matrix \ngrid\n and an integer \nk\n.\n\n\nReturn \nthe \nnumber\n of \nsubmatrices\n that contain the top-left element of the\n \ngrid\n, \nand have a sum less than or equal to \nk\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[7,6,3],[6,6,1]], k = 18\n\nOutput:\n 4\n\nExplanation:\n There are only 4 submatrices, shown in the image above, that contain the top-left element of grid, and have a sum less than or equal to 18.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[7,2,9],[1,5,0],[2,6,6]], k = 20\n\nOutput:\n 6\n\nExplanation:\n There are only 6 submatrices, shown in the image above, that contain the top-left element of grid, and have a sum less than or equal to 20.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length \n\n\nn == grid[i].length\n\n\n1 <= n, m <= 1000 \n\n\n0 <= grid[i][j] <= 1000\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3084,
        "slug": "count-substrings-starting-and-ending-with-given-character",
        "url": "https://leetcode.com/problems/count-substrings-starting-and-ending-with-given-character/",
        "titulo": "Count Substrings Starting and Ending with Given Character",
        "enunciado": "You are given a string \ns\n and a character \nc\n. Return \nthe total number of \nsubstrings\n of \ns\n that start and end with \nc\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput: \ns = \"abada\", c = \"a\"\n\n\nOutput: \n6\n\n\nExplanation:\n Substrings starting and ending with \n\"a\"\n are: \n\"\na\nbada\"\n, \n\"\naba\nda\"\n, \n\"\nabada\n\"\n, \n\"ab\na\nda\"\n, \n\"ab\nada\n\"\n, \n\"abad\na\n\"\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput: \ns = \"zzz\", c = \"z\"\n\n\nOutput: \n6\n\n\nExplanation:\n There are a total of \n6\n substrings in \ns\n and all start and end with \n\"z\"\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n and \nc\n consist only of lowercase English letters.",
        "temas": [
            "Math",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 3100,
        "slug": "water-bottles-ii",
        "url": "https://leetcode.com/problems/water-bottles-ii/",
        "titulo": "Water Bottles II",
        "enunciado": "You are given two integers \nnumBottles\n and \nnumExchange\n.\n\n\nnumBottles\n represents the number of full water bottles that you initially have. In one operation, you can perform one of the following operations:\n\n\n\n\nDrink any number of full water bottles turning them into empty bottles.\n\n\nExchange \nnumExchange\n empty bottles with one full water bottle. Then, increase \nnumExchange\n by one.\n\n\n\n\nNote that you cannot exchange multiple batches of empty bottles for the same value of \nnumExchange\n. For example, if \nnumBottles == 3\n and \nnumExchange == 1\n, you cannot exchange \n3\n empty water bottles for \n3\n full bottles.\n\n\nReturn \nthe \nmaximum\n number of water bottles you can drink\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n numBottles = 13, numExchange = 6\n\nOutput:\n 15\n\nExplanation:\n The table above shows the number of full water bottles, empty water bottles, the value of numExchange, and the number of bottles drunk.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n numBottles = 10, numExchange = 3\n\nOutput:\n 13\n\nExplanation:\n The table above shows the number of full water bottles, empty water bottles, the value of numExchange, and the number of bottles drunk.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= numBottles <= 100 \n\n\n1 <= numExchange <= 100",
        "temas": [
            "Math",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 3071,
        "slug": "minimum-operations-to-write-the-letter-y-on-a-grid",
        "url": "https://leetcode.com/problems/minimum-operations-to-write-the-letter-y-on-a-grid/",
        "titulo": "Minimum Operations to Write the Letter Y on a Grid",
        "enunciado": "You are given a \n0-indexed\n \nn x n\n grid where \nn\n is odd, and \ngrid[r][c]\n is \n0\n, \n1\n, or \n2\n.\n\n\nWe say that a cell belongs to the Letter \nY\n if it belongs to one of the following:\n\n\n\n\nThe diagonal starting at the top-left cell and ending at the center cell of the grid.\n\n\nThe diagonal starting at the top-right cell and ending at the center cell of the grid.\n\n\nThe vertical line starting at the center cell and ending at the bottom border of the grid.\n\n\n\n\nThe Letter \nY\n is written on the grid if and only if:\n\n\n\n\nAll values at cells belonging to the Y are equal.\n\n\nAll values at cells not belonging to the Y are equal.\n\n\nThe values at cells belonging to the Y are different from the values at cells not belonging to the Y.\n\n\n\n\nReturn \nthe \nminimum\n number of operations needed to write the letter Y on the grid given that in one operation you can change the value at any cell to\n \n0\n,\n \n1\n,\n \nor\n \n2\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,2,2],[1,1,0],[0,1,0]]\n\nOutput:\n 3\n\nExplanation:\n We can write Y on the grid by applying the changes highlighted in blue in the image above. After the operations, all cells that belong to Y, denoted in bold, have the same value of 1 while those that do not belong to Y are equal to 0.\nIt can be shown that 3 is the minimum number of operations needed to write Y on the grid.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,1,0,1,0],[2,1,0,1,2],[2,2,2,0,1],[2,2,2,2,2],[2,1,2,2,2]]\n\nOutput:\n 12\n\nExplanation:\n We can write Y on the grid by applying the changes highlighted in blue in the image above. After the operations, all cells that belong to Y, denoted in bold, have the same value of 0 while those that do not belong to Y are equal to 2. \nIt can be shown that 12 is the minimum number of operations needed to write Y on the grid.\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n <= 49 \n\n\nn == grid.length == grid[i].length\n\n\n0 <= grid[i][j] <= 2\n\n\nn\n is odd.",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3066,
        "slug": "minimum-operations-to-exceed-threshold-value-ii",
        "url": "https://leetcode.com/problems/minimum-operations-to-exceed-threshold-value-ii/",
        "titulo": "Minimum Operations to Exceed Threshold Value II",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n, and an integer \nk\n.\n\n\nYou are allowed to perform some operations on \nnums\n, where in a single operation, you can:\n\n\n\n\nSelect the two \nsmallest\n integers \nx\n and \ny\n from \nnums\n.\n\n\nRemove \nx\n and \ny\n from \nnums\n.\n\n\nInsert \n(min(x, y) * 2 + max(x, y))\n at any position in the array.\n\n\n\n\nNote\n that you can only apply the described operation if \nnums\n contains \nat least\n two elements.\n\n\nReturn the \nminimum\n number of operations needed so that all elements of the array are \ngreater than or equal to\n \nk\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,11,10,1,3], k = 10\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nIn the first operation, we remove elements 1 and 2, then add \n1 * 2 + 2\n to \nnums\n. \nnums\n becomes equal to \n[4, 11, 10, 3]\n.\n\n\nIn the second operation, we remove elements 3 and 4, then add \n3 * 2 + 4\n to \nnums\n. \nnums\n becomes equal to \n[10, 11, 10]\n.\n\n\n\n\nAt this stage, all the elements of nums are greater than or equal to 10 so we can stop. \n\n\nIt can be shown that 2 is the minimum number of operations needed so that all elements of the array are greater than or equal to 10.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,1,2,4,9], k = 20\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\nAfter one operation, \nnums\n becomes equal to \n[2, 4, 9, 3]\n. \n\n\nAfter two operations, \nnums\n becomes equal to \n[7, 4, 9]\n. \n\n\nAfter three operations, \nnums\n becomes equal to \n[15, 9]\n. \n\n\nAfter four operations, \nnums\n becomes equal to \n[33]\n.\n\n\n\n\nAt this stage, all the elements of \nnums\n are greater than 20 so we can stop. \n\n\nIt can be shown that 4 is the minimum number of operations needed so that all elements of the array are greater than or equal to 20.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 2 * 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= 10\n9\n\n\nThe input is generated such that an answer always exists. That is, after performing some number of operations, all elements of the array are greater than or equal to \nk\n.",
        "temas": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3043,
        "slug": "find-the-length-of-the-longest-common-prefix",
        "url": "https://leetcode.com/problems/find-the-length-of-the-longest-common-prefix/",
        "titulo": "Find the Length of the Longest Common Prefix",
        "enunciado": "You are given two arrays with \npositive\n integers \narr1\n and \narr2\n.\n\n\nA \nprefix\n of a positive integer is an integer formed by one or more of its digits, starting from its \nleftmost\n digit. For example, \n123\n is a prefix of the integer \n12345\n, while \n234\n is \nnot\n.\n\n\nA \ncommon prefix\n of two integers \na\n and \nb\n is an integer \nc\n, such that \nc\n is a prefix of both \na\n and \nb\n. For example, \n5655359\n and \n56554\n have common prefixes \n565\n and \n5655\n while \n1223\n and \n43456\n \ndo not\n have a common prefix.\n\n\nYou need to find the length of the \nlongest common prefix\n between all pairs of integers \n(x, y)\n such that \nx\n belongs to \narr1\n and \ny\n belongs to \narr2\n.\n\n\nReturn \nthe length of the \nlongest\n common prefix among all pairs\n.\n If no common prefix exists among them\n, \nreturn\n \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr1 = [1,10,100], arr2 = [1000]\n\nOutput:\n 3\n\nExplanation:\n There are 3 pairs (arr1[i], arr2[j]):\n- The longest common prefix of (1, 1000) is 1.\n- The longest common prefix of (10, 1000) is 10.\n- The longest common prefix of (100, 1000) is 100.\nThe longest common prefix is 100 with a length of 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr1 = [1,2,3], arr2 = [4,4,4]\n\nOutput:\n 0\n\nExplanation:\n There exists no common prefix for any pair (arr1[i], arr2[j]), hence we return 0.\nNote that common prefixes between elements of the same array do not count.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr1.length, arr2.length <= 5 * 10\n4\n\n\n1 <= arr1[i], arr2[i] <= 10\n8",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3091,
        "slug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
        "url": "https://leetcode.com/problems/apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k/",
        "titulo": "Apply Operations to Make Sum of Array Greater Than or Equal to k",
        "enunciado": "You are given a \npositive\n integer \nk\n. Initially, you have an array \nnums = [1]\n.\n\n\nYou can perform \nany\n of the following operations on the array \nany\n number of times (\npossibly zero\n):\n\n\n\n\nChoose any element in the array and \nincrease\n its value by \n1\n.\n\n\nDuplicate any element in the array and add it to the end of the array.\n\n\n\n\nReturn \nthe \nminimum\n number of operations required to make the \nsum\n of elements of the final array greater than or equal to \nk\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nk = 11\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\nWe can do the following operations on the array \nnums = [1]\n:\n\n\n\n\nIncrease the element by \n1\n three times. The resulting array is \nnums = [4]\n.\n\n\nDuplicate the element two times. The resulting array is \nnums = [4,4,4]\n.\n\n\n\n\nThe sum of the final array is \n4 + 4 + 4 = 12\n which is greater than or equal to \nk = 11\n.\n\nThe total number of operations performed is \n3 + 2 = 5\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nk = 1\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nThe sum of the original array is already greater than or equal to \n1\n, so no operations are needed.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Math",
            "Greedy",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 3067,
        "slug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
        "url": "https://leetcode.com/problems/count-pairs-of-connectable-servers-in-a-weighted-tree-network/",
        "titulo": "Count Pairs of Connectable Servers in a Weighted Tree Network",
        "enunciado": "You are given an unrooted weighted tree with \nn\n vertices representing servers numbered from \n0\n to \nn - 1\n, an array \nedges\n where \nedges[i] = [a\ni\n, b\ni\n, weight\ni\n]\n represents a bidirectional edge between vertices \na\ni\n and \nb\ni\n of weight \nweight\ni\n. You are also given an integer \nsignalSpeed\n.\n\n\nTwo servers \na\n and \nb\n are \nconnectable\n through a server \nc\n if:\n\n\n\n\na < b\n, \na != c\n and \nb != c\n.\n\n\nThe distance from \nc\n to \na\n is divisible by \nsignalSpeed\n.\n\n\nThe distance from \nc\n to \nb\n is divisible by \nsignalSpeed\n.\n\n\nThe path from \nc\n to \nb\n and the path from \nc\n to \na\n do not share any edges.\n\n\n\n\nReturn \nan integer array\n \ncount\n \nof length\n \nn\n \nwhere\n \ncount[i]\n \nis the \nnumber\n of server pairs that are \nconnectable\n through\n \nthe server\n \ni\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [[0,1,1],[1,2,5],[2,3,13],[3,4,9],[4,5,2]], signalSpeed = 1\n\nOutput:\n [0,4,6,6,4,0]\n\nExplanation:\n Since signalSpeed is 1, count[c] is equal to the number of pairs of paths that start at c and do not share any edges.\nIn the case of the given path graph, count[c] is equal to the number of servers to the left of c multiplied by the servers to the right of c.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [[0,6,3],[6,5,3],[0,3,1],[3,2,7],[3,1,6],[3,4,2]], signalSpeed = 3\n\nOutput:\n [2,0,0,0,0,0,2]\n\nExplanation:\n Through server 0, there are 2 pairs of connectable servers: (4, 5) and (4, 6).\nThrough server 6, there are 2 pairs of connectable servers: (4, 5) and (0, 5).\nIt can be shown that no two servers are connectable through servers other than 0 and 6.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 1000\n\n\nedges.length == n - 1\n\n\nedges[i].length == 3\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\nedges[i] = [a\ni\n, b\ni\n, weight\ni\n]\n\n\n1 <= weight\ni\n <= 10\n6\n\n\n1 <= signalSpeed <= 10\n6\n\n\nThe input is generated such that \nedges\n represents a valid tree.",
        "temas": [
            "Array",
            "Tree",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3047,
        "slug": "find-the-largest-area-of-square-inside-two-rectangles",
        "url": "https://leetcode.com/problems/find-the-largest-area-of-square-inside-two-rectangles/",
        "titulo": "Find the Largest Area of Square Inside Two Rectangles",
        "enunciado": "There exist \nn\n rectangles in a 2D plane with edges parallel to the x and y axis. You are given two 2D integer arrays \nbottomLeft\n and \ntopRight\n where \nbottomLeft[i] = [a_i, b_i]\n and \ntopRight[i] = [c_i, d_i]\n represent the \nbottom-left\n and \ntop-right\n coordinates of the \ni\nth\n rectangle, respectively.\n\n\nYou need to find the \nmaximum\n area of a \nsquare\n that can fit inside the intersecting region of at least two rectangles. Return \n0\n if such a square does not exist.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n bottomLeft = [[1,1],[2,2],[3,1]], topRight = [[3,3],[4,4],[6,6]]\n\n\nOutput:\n 1\n\n\nExplanation:\n\n\nA square with side length 1 can fit inside either the intersecting region of rectangles 0 and 1 or the intersecting region of rectangles 1 and 2. Hence the maximum area is 1. It can be shown that a square with a greater side length can not fit inside any intersecting region of two rectangles.\n\n\nExample 2:\n\n\n\n\nInput:\n bottomLeft = [[1,1],[1,3],[1,5]], topRight = [[5,5],[5,7],[5,9]]\n\n\nOutput:\n 4\n\n\nExplanation:\n\n\nA square with side length 2 can fit inside either the intersecting region of rectangles 0 and 1 or the intersecting region of rectangles 1 and 2. Hence the maximum area is \n2 * 2 = 4\n. It can be shown that a square with a greater side length can not fit inside any intersecting region of two rectangles.\n\n\nExample 3:\n\n\n \n \n\n\nInput:\n bottomLeft = [[1,1],[2,2],[1,2]], topRight = [[3,3],[4,4],[3,4]]\n\n\nOutput:\n 1\n\n\nExplanation:\n\n\nA square with side length 1 can fit inside the intersecting region of any two rectangles. Also, no larger square can, so the maximum area is 1. Note that the region can be formed by the intersection of more than 2 rectangles.\n\n\nExample 4:\n\n\n \n \n\n\nInput: \nbottomLeft = [[1,1],[3,3],[3,1]], topRight = [[2,2],[4,4],[4,2]]\n\n\nOutput:\n 0\n\n\nExplanation:\n\n\nNo pair of rectangles intersect, hence, the answer is 0.\n\n\n \n\n\nConstraints:\n\n\n\n\nn == bottomLeft.length == topRight.length\n\n\n2 <= n <= 10\n3\n\n\nbottomLeft[i].length == topRight[i].length == 2\n\n\n1 <= bottomLeft[i][0], bottomLeft[i][1] <= 10\n7\n\n\n1 <= topRight[i][0], topRight[i][1] <= 10\n7\n\n\nbottomLeft[i][0] < topRight[i][0]\n\n\nbottomLeft[i][1] < topRight[i][1]",
        "temas": [
            "Array",
            "Math",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3040,
        "slug": "maximum-number-of-operations-with-the-same-score-ii",
        "url": "https://leetcode.com/problems/maximum-number-of-operations-with-the-same-score-ii/",
        "titulo": "Maximum Number of Operations With the Same Score II",
        "enunciado": "Given an array of integers called \nnums\n, you can perform \nany\n of the following operation while \nnums\n contains \nat least\n \n2\n elements:\n\n\n\n\nChoose the first two elements of \nnums\n and delete them.\n\n\nChoose the last two elements of \nnums\n and delete them.\n\n\nChoose the first and the last elements of \nnums\n and delete them.\n\n\n\n\nThe\n score\n of the operation is the sum of the deleted elements.\n\n\nYour task is to find the \nmaximum\n number of operations that can be performed, such that \nall operations have the same score\n.\n\n\nReturn \nthe \nmaximum\n number of operations possible that satisfy the condition mentioned above\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,2,1,2,3,4]\n\nOutput:\n 3\n\nExplanation:\n We perform the following operations:\n- Delete the first two elements, with score 3 + 2 = 5, nums = [1,2,3,4].\n- Delete the first and the last elements, with score 1 + 4 = 5, nums = [2,3].\n- Delete the first and the last elements, with score 2 + 3 = 5, nums = [].\nWe are unable to perform any more operations as nums is empty.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,2,6,1,4]\n\nOutput:\n 2\n\nExplanation:\n We perform the following operations:\n- Delete the first two elements, with score 3 + 2 = 5, nums = [6,1,4].\n- Delete the last two elements, with score 1 + 4 = 5, nums = [6].\nIt can be proven that we can perform at most 2 operations.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 2000\n\n\n1 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Memoization"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3035,
        "slug": "maximum-palindromes-after-operations",
        "url": "https://leetcode.com/problems/maximum-palindromes-after-operations/",
        "titulo": "Maximum Palindromes After Operations",
        "enunciado": "You are given a \n0-indexed\n string array \nwords\n having length \nn\n and containing \n0-indexed\n strings.\n\n\nYou are allowed to perform the following operation \nany\n number of times (\nincluding\n \nzero\n):\n\n\n\n\nChoose integers \ni\n, \nj\n, \nx\n, and \ny\n such that \n0 <= i, j < n\n, \n0 <= x < words[i].length\n, \n0 <= y < words[j].length\n, and \nswap\n the characters \nwords[i][x]\n and \nwords[j][y]\n.\n\n\n\n\nReturn \nan integer denoting the \nmaximum\n number of \npalindromes\n \nwords\n can contain, after performing some operations.\n\n\nNote:\n \ni\n and \nj\n may be equal during an operation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"abbb\",\"ba\",\"aa\"]\n\nOutput:\n 3\n\nExplanation:\n In this example, one way to get the maximum number of palindromes is:\nChoose i = 0, j = 1, x = 0, y = 0, so we swap words[0][0] and words[1][0]. words becomes [\"bbbb\",\"aa\",\"aa\"].\nAll strings in words are now palindromes.\nHence, the maximum number of palindromes achievable is 3.\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"abc\",\"ab\"]\n\nOutput:\n 2\n\nExplanation: \nIn this example, one way to get the maximum number of palindromes is: \nChoose i = 0, j = 1, x = 1, y = 0, so we swap words[0][1] and words[1][0]. words becomes [\"aac\",\"bb\"].\nChoose i = 0, j = 0, x = 1, y = 2, so we swap words[0][1] and words[0][2]. words becomes [\"aca\",\"bb\"].\nBoth strings are now palindromes.\nHence, the maximum number of palindromes achievable is 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n words = [\"cd\",\"ef\",\"a\"]\n\nOutput:\n 1\n\nExplanation:\n In this example, there is no need to perform any operation.\nThere is one palindrome in words \"a\".\nIt can be shown that it is not possible to get more than one palindrome after any number of operations.\nHence, the answer is 1.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 1000\n\n\n1 <= words[i].length <= 100\n\n\nwords[i]\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3044,
        "slug": "most-frequent-prime",
        "url": "https://leetcode.com/problems/most-frequent-prime/",
        "titulo": "Most Frequent Prime",
        "enunciado": "You are given a \nm x n\n \n0-indexed \n2D\n \nmatrix \nmat\n. From every cell, you can create numbers in the following way:\n\n\n\n\nThere could be at most \n8\n paths from the cells namely: east, south-east, south, south-west, west, north-west, north, and north-east.\n\n\nSelect a path from them and append digits in this path to the number being formed by traveling in this direction.\n\n\nNote that numbers are generated at every step, for example, if the digits along the path are \n1, 9, 1\n, then there will be three numbers generated along the way: \n1, 19, 191\n.\n\n\n\n\nReturn \nthe most frequent \nprime number\n \ngreater\n than \n10\n out of all the numbers created by traversing the matrix or \n-1\n if no such prime number exists. If there are multiple prime numbers with the highest frequency, then return the \nlargest\n among them.\n\n\nNote:\n It is invalid to change the direction during the move.\n\n\n \n\n\nExample 1:\n\n\n \n\n\n\n\n\nInput:\n mat = [[1,1],[9,9],[1,1]]\n\nOutput:\n 19\n\nExplanation:\n \nFrom cell (0,0) there are 3 possible directions and the numbers greater than 10 which can be created in those directions are:\nEast: [11], South-East: [19], South: [19,191].\nNumbers greater than 10 created from the cell (0,1) in all possible directions are: [19,191,19,11].\nNumbers greater than 10 created from the cell (1,0) in all possible directions are: [99,91,91,91,91].\nNumbers greater than 10 created from the cell (1,1) in all possible directions are: [91,91,99,91,91].\nNumbers greater than 10 created from the cell (2,0) in all possible directions are: [11,19,191,19].\nNumbers greater than 10 created from the cell (2,1) in all possible directions are: [11,19,19,191].\nThe most frequent prime number among all the created numbers is 19.\n\n\nExample 2:\n\n\n\n\nInput:\n mat = [[7]]\n\nOutput:\n -1\n\nExplanation:\n The only number which can be formed is 7. It is a prime number however it is not greater than 10, so return -1.\n\n\nExample 3:\n\n\n\n\nInput:\n mat = [[9,7,8],[4,6,5],[2,8,6]]\n\nOutput:\n 97\n\nExplanation:\n \nNumbers greater than 10 created from the cell (0,0) in all possible directions are: [97,978,96,966,94,942].\nNumbers greater than 10 created from the cell (0,1) in all possible directions are: [78,75,76,768,74,79].\nNumbers greater than 10 created from the cell (0,2) in all possible directions are: [85,856,86,862,87,879].\nNumbers greater than 10 created from the cell (1,0) in all possible directions are: [46,465,48,42,49,47].\nNumbers greater than 10 created from the cell (1,1) in all possible directions are: [65,66,68,62,64,69,67,68].\nNumbers greater than 10 created from the cell (1,2) in all possible directions are: [56,58,56,564,57,58].\nNumbers greater than 10 created from the cell (2,0) in all possible directions are: [28,286,24,249,26,268].\nNumbers greater than 10 created from the cell (2,1) in all possible directions are: [86,82,84,86,867,85].\nNumbers greater than 10 created from the cell (2,2) in all possible directions are: [68,682,66,669,65,658].\nThe most frequent prime number among all the created numbers is 97.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 6\n\n\n1 <= mat[i][j] <= 9",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Matrix",
            "Counting",
            "Enumeration",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3039,
        "slug": "apply-operations-to-make-string-empty",
        "url": "https://leetcode.com/problems/apply-operations-to-make-string-empty/",
        "titulo": "Apply Operations to Make String Empty",
        "enunciado": "You are given a string \ns\n.\n\n\nConsider performing the following operation until \ns\n becomes \nempty\n:\n\n\n\n\nFor \nevery\n alphabet character from \n'a'\n to \n'z'\n, remove the \nfirst\n occurrence of that character in \ns\n (if it exists).\n\n\n\n\nFor example, let initially \ns = \"aabcbbca\"\n. We do the following operations:\n\n\n\n\nRemove the underlined characters \ns = \"\na\na\nbc\nbbca\"\n. The resulting string is \ns = \"abbca\"\n.\n\n\nRemove the underlined characters \ns = \"\nab\nb\nc\na\"\n. The resulting string is \ns = \"ba\"\n.\n\n\nRemove the underlined characters \ns = \"\nba\n\"\n. The resulting string is \ns = \"\"\n.\n\n\n\n\nReturn \nthe value of the string \ns\n right \nbefore\n applying the \nlast\n operation\n. In the example above, answer is \n\"ba\"\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aabcbbca\"\n\nOutput:\n \"ba\"\n\nExplanation:\n Explained in the statement.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcd\"\n\nOutput:\n \"abcd\"\n\nExplanation:\n We do the following operation:\n- Remove the underlined characters s = \"\nabcd\n\". The resulting string is s = \"\".\nThe string just before the last operation is \"abcd\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 * 10\n5\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3080,
        "slug": "mark-elements-on-array-by-performing-queries",
        "url": "https://leetcode.com/problems/mark-elements-on-array-by-performing-queries/",
        "titulo": "Mark Elements on Array by Performing Queries",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n of size \nn\n consisting of positive integers.\n\n\nYou are also given a 2D array \nqueries\n of size \nm\n where \nqueries[i] = [index\ni\n, k\ni\n]\n.\n\n\nInitially all elements of the array are \nunmarked\n.\n\n\nYou need to apply \nm\n queries on the array in order, where on the \ni\nth\n query you do the following:\n\n\n\n\nMark the element at index \nindex\ni\n if it is not already marked.\n\n\nThen mark \nk\ni\n unmarked elements in the array with the \nsmallest\n values. If multiple such elements exist, mark the ones with the smallest indices. And if less than \nk\ni\n unmarked elements exist, then mark all of them.\n\n\n\n\nReturn \nan array answer of size \nm\n where \nanswer[i]\n is the \nsum\n of unmarked elements in the array after the \ni\nth\n query\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput: \nnums = [1,2,2,1,2,3,1], queries = [[1,2],[3,3],[4,2]]\n\n\nOutput: \n[8,3,0]\n\n\nExplanation:\n\n\nWe do the following queries on the array:\n\n\n\n\nMark the element at index \n1\n, and \n2\n of the smallest unmarked elements with the smallest indices if they exist, the marked elements now are \nnums = [\n1\n,\n2\n,2,\n1\n,2,3,1]\n. The sum of unmarked elements is \n2 + 2 + 3 + 1 = 8\n.\n\n\nMark the element at index \n3\n, since it is already marked we skip it. Then we mark \n3\n of the smallest unmarked elements with the smallest indices, the marked elements now are \nnums = [\n1\n,\n2\n,\n2\n,\n1\n,\n2\n,3,\n1\n]\n. The sum of unmarked elements is \n3\n.\n\n\nMark the element at index \n4\n, since it is already marked we skip it. Then we mark \n2\n of the smallest unmarked elements with the smallest indices if they exist, the marked elements now are \nnums = [\n1\n,\n2\n,\n2\n,\n1\n,\n2\n,\n3\n,\n1\n]\n. The sum of unmarked elements is \n0\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput: \nnums = [1,4,2,3], queries = [[0,1]]\n\n\nOutput: \n[7]\n\n\nExplanation: \n We do one query which is mark the element at index \n0\n and mark the smallest element among unmarked elements. The marked elements will be \nnums = [\n1\n,4,\n2\n,3]\n, and the sum of unmarked elements is \n4 + 3 = 7\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\nm == queries.length\n\n\n1 <= m <= n <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= index\ni\n, k\ni\n <= n - 1",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3020,
        "slug": "find-the-maximum-number-of-elements-in-subset",
        "url": "https://leetcode.com/problems/find-the-maximum-number-of-elements-in-subset/",
        "titulo": "Find the Maximum Number of Elements in Subset",
        "enunciado": "You are given an array of \npositive\n integers \nnums\n.\n\n\nYou need to select a \nsubset\n of \nnums\n which satisfies the following condition:\n\n\n\n\nYou can place the selected elements in a \n0-indexed\n array such that it follows the pattern: \n[x, x\n2\n, x\n4\n, ..., x\nk/2\n, x\nk\n, x\nk/2\n, ..., x\n4\n, x\n2\n, x]\n (\nNote\n that \nk\n can be be any \nnon-negative\n power of \n2\n). For example, \n[2, 4, 16, 4, 2]\n and \n[3, 9, 3]\n follow the pattern while \n[2, 4, 8, 4, 2]\n does not.\n\n\n\n\nReturn \nthe \nmaximum\n number of elements in a subset that satisfies these conditions.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,4,1,2,2]\n\nOutput:\n 3\n\nExplanation:\n We can select the subset {4,2,2}, which can be placed in the array as [2,4,2] which follows the pattern and 2\n2\n == 4. Hence the answer is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,2,4]\n\nOutput:\n 1\n\nExplanation:\n We can select the subset {1}, which can be placed in the array as [1] which follows the pattern. Hence the answer is 1. Note that we could have also selected the subsets {2}, {3}, or {4}, there may be multiple subsets which provide the same answer. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3029,
        "slug": "minimum-time-to-revert-word-to-initial-state-i",
        "url": "https://leetcode.com/problems/minimum-time-to-revert-word-to-initial-state-i/",
        "titulo": "Minimum Time to Revert Word to Initial State I",
        "enunciado": "You are given a \n0-indexed\n string \nword\n and an integer \nk\n.\n\n\nAt every second, you must perform the following operations:\n\n\n\n\nRemove the first \nk\n characters of \nword\n.\n\n\nAdd any \nk\n characters to the end of \nword\n.\n\n\n\n\nNote\n that you do not necessarily need to add the same characters that you removed. However, you must perform \nboth\n operations at every second.\n\n\nReturn \nthe \nminimum\n time greater than zero required for\n \nword\n \nto revert to its \ninitial\n state\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word = \"abacaba\", k = 3\n\nOutput:\n 2\n\nExplanation:\n At the 1st second, we remove characters \"aba\" from the prefix of word, and add characters \"bac\" to the end of word. Thus, word becomes equal to \"cababac\".\nAt the 2nd second, we remove characters \"cab\" from the prefix of word, and add \"aba\" to the end of word. Thus, word becomes equal to \"abacaba\" and reverts to its initial state.\nIt can be shown that 2 seconds is the minimum time greater than zero required for word to revert to its initial state.\n\n\n\nExample 2:\n\n\n\n\nInput:\n word = \"abacaba\", k = 4\n\nOutput:\n 1\n\nExplanation:\n At the 1st second, we remove characters \"abac\" from the prefix of word, and add characters \"caba\" to the end of word. Thus, word becomes equal to \"abacaba\" and reverts to its initial state.\nIt can be shown that 1 second is the minimum time greater than zero required for word to revert to its initial state.\n\n\n\nExample 3:\n\n\n\n\nInput:\n word = \"abcbabcd\", k = 2\n\nOutput:\n 4\n\nExplanation:\n At every second, we will remove the first 2 characters of word, and add the same characters to the end of word.\nAfter 4 seconds, word becomes equal to \"abcbabcd\" and reverts to its initial state.\nIt can be shown that 4 seconds is the minimum time greater than zero required for word to revert to its initial state.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 50 \n\n\n1 <= k <= word.length\n\n\nword\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 3048,
        "slug": "earliest-second-to-mark-indices-i",
        "url": "https://leetcode.com/problems/earliest-second-to-mark-indices-i/",
        "titulo": "Earliest Second to Mark Indices I",
        "enunciado": "You are given two \n1-indexed\n integer arrays, \nnums\n and, \nchangeIndices\n, having lengths \nn\n and \nm\n, respectively.\n\n\nInitially, all indices in \nnums\n are unmarked. Your task is to mark \nall\n indices in \nnums\n.\n\n\nIn each second, \ns\n, in order from \n1\n to \nm\n (\ninclusive\n), you can perform \none\n of the following operations:\n\n\n\n\nChoose an index \ni\n in the range \n[1, n]\n and \ndecrement\n \nnums[i]\n by \n1\n.\n\n\nIf \nnums[changeIndices[s]]\n is \nequal\n to \n0\n, \nmark\n the index \nchangeIndices[s]\n.\n\n\nDo nothing.\n\n\n\n\nReturn \nan integer denoting the \nearliest second\n in the range \n[1, m]\n when \nall\n indices in \nnums\n can be marked by choosing operations optimally, or \n-1\n if it is impossible.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,2,0], changeIndices = [2,2,2,2,3,2,2,1]\n\nOutput:\n 8\n\nExplanation:\n In this example, we have 8 seconds. The following operations can be performed to mark all indices:\nSecond 1: Choose index 1 and decrement nums[1] by one. nums becomes [1,2,0].\nSecond 2: Choose index 1 and decrement nums[1] by one. nums becomes [0,2,0].\nSecond 3: Choose index 2 and decrement nums[2] by one. nums becomes [0,1,0].\nSecond 4: Choose index 2 and decrement nums[2] by one. nums becomes [0,0,0].\nSecond 5: Mark the index changeIndices[5], which is marking index 3, since nums[3] is equal to 0.\nSecond 6: Mark the index changeIndices[6], which is marking index 2, since nums[2] is equal to 0.\nSecond 7: Do nothing.\nSecond 8: Mark the index changeIndices[8], which is marking index 1, since nums[1] is equal to 0.\nNow all indices have been marked.\nIt can be shown that it is not possible to mark all indices earlier than the 8th second.\nHence, the answer is 8.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3], changeIndices = [1,1,1,2,1,1,1]\n\nOutput:\n 6\n\nExplanation:\n In this example, we have 7 seconds. The following operations can be performed to mark all indices:\nSecond 1: Choose index 2 and decrement nums[2] by one. nums becomes [1,2].\nSecond 2: Choose index 2 and decrement nums[2] by one. nums becomes [1,1].\nSecond 3: Choose index 2 and decrement nums[2] by one. nums becomes [1,0].\nSecond 4: Mark the index changeIndices[4], which is marking index 2, since nums[2] is equal to 0.\nSecond 5: Choose index 1 and decrement nums[1] by one. nums becomes [0,0].\nSecond 6: Mark the index changeIndices[6], which is marking index 1, since nums[1] is equal to 0.\nNow all indices have been marked.\nIt can be shown that it is not possible to mark all indices earlier than the 6th second.\nHence, the answer is 6.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [0,1], changeIndices = [2,2,2]\n\nOutput:\n -1\n\nExplanation:\n In this example, it is impossible to mark all indices because index 1 isn't in changeIndices.\nHence, the answer is -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 2000\n\n\n0 <= nums[i] <= 10\n9\n\n\n1 <= m == changeIndices.length <= 2000\n\n\n1 <= changeIndices[i] <= n",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3011,
        "slug": "find-if-array-can-be-sorted",
        "url": "https://leetcode.com/problems/find-if-array-can-be-sorted/",
        "titulo": "Find if Array Can Be Sorted",
        "enunciado": "You are given a \n0-indexed\n array of \npositive\n integers \nnums\n.\n\n\nIn one \noperation\n, you can swap any two \nadjacent\n elements if they have the \nsame\n number of \nset bits\n. You are allowed to do this operation \nany\n number of times (\nincluding zero\n).\n\n\nReturn \ntrue\n \nif you can sort the array in ascending order, else return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [8,4,2,30,15]\n\nOutput:\n true\n\nExplanation:\n Let's look at the binary representation of every element. The numbers 2, 4, and 8 have one set bit each with binary representation \"10\", \"100\", and \"1000\" respectively. The numbers 15 and 30 have four set bits each with binary representation \"1111\" and \"11110\".\nWe can sort the array using 4 operations:\n- Swap nums[0] with nums[1]. This operation is valid because 8 and 4 have one set bit each. The array becomes [4,8,2,30,15].\n- Swap nums[1] with nums[2]. This operation is valid because 8 and 2 have one set bit each. The array becomes [4,2,8,30,15].\n- Swap nums[0] with nums[1]. This operation is valid because 4 and 2 have one set bit each. The array becomes [2,4,8,30,15].\n- Swap nums[3] with nums[4]. This operation is valid because 30 and 15 have four set bits each. The array becomes [2,4,8,15,30].\nThe array has become sorted, hence we return true.\nNote that there may be other sequences of operations which also sort the array.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n true\n\nExplanation:\n The array is already sorted, hence we return true.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,16,8,4,2]\n\nOutput:\n false\n\nExplanation:\n It can be shown that it is not possible to sort the input array using any number of operations.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n1 <= nums[i] <= 2\n8",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3021,
        "slug": "alice-and-bob-playing-flower-game",
        "url": "https://leetcode.com/problems/alice-and-bob-playing-flower-game/",
        "titulo": "Alice and Bob Playing Flower Game",
        "enunciado": "Alice and Bob are playing a turn-based game on a circular field surrounded by flowers. The circle represents the field, and there are \nx\n flowers in the clockwise direction between Alice and Bob, and \ny\n flowers in the anti-clockwise direction between them.\n\n\nThe game proceeds as follows:\n\n\n\n\nAlice takes the first turn.\n\n\nIn each turn, a player must choose either the clockwise or anti-clockwise direction and pick one flower from that side.\n\n\nAt the end of the turn, if there are no flowers left at all, the \ncurrent\n player captures their opponent and wins the game.\n\n\n\n\nGiven two integers, \nn\n and \nm\n, the task is to compute the number of possible pairs \n(x, y)\n that satisfy the conditions:\n\n\n\n\nAlice must win the game according to the described rules.\n\n\nThe number of flowers \nx\n in the clockwise direction must be in the range \n[1,n]\n.\n\n\nThe number of flowers \ny\n in the anti-clockwise direction must be in the range \n[1,m]\n.\n\n\n\n\nReturn \nthe number of possible pairs\n \n(x, y)\n \nthat satisfy the conditions mentioned in the statement\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, m = 2\n\nOutput:\n 3\n\nExplanation:\n The following pairs satisfy conditions described in the statement: (1,2), (3,2), (2,1).\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1, m = 1\n\nOutput:\n 0\n\nExplanation:\n No pairs satisfy the conditions described in the statement.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, m <= 10\n5",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 3025,
        "slug": "find-the-number-of-ways-to-place-people-i",
        "url": "https://leetcode.com/problems/find-the-number-of-ways-to-place-people-i/",
        "titulo": "Find the Number of Ways to Place People I",
        "enunciado": "You are given a 2D array \npoints\n of size \nn x 2\n representing integer coordinates of some points on a 2D plane, where \npoints[i] = [x\ni\n, y\ni\n]\n.\n\n\nCount the number of pairs of points \n(A, B)\n, where\n\n\n\n\nA\n is on the \nupper left\n side of \nB\n, and\n\n\nthere are no other points in the rectangle (or line) they make (\nincluding the border\n).\n\n\n\n\nReturn the count.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npoints = [[1,1],[2,2],[3,3]]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\nThere is no way to choose \nA\n and \nB\n so \nA\n is on the upper left side of \nB\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npoints = [[6,2],[4,4],[2,6]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\n\n\nThe left one is the pair \n(points[1], points[0])\n, where \npoints[1]\n is on the upper left side of \npoints[0]\n and the rectangle is empty.\n\n\nThe middle one is the pair \n(points[2], points[1])\n, same as the left one it is a valid pair.\n\n\nThe right one is the pair \n(points[2], points[0])\n, where \npoints[2]\n is on the upper left side of \npoints[0]\n, but \npoints[1]\n is inside the rectangle so it's not a valid pair.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \npoints = [[3,1],[1,3],[1,1]]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\n\n\nThe left one is the pair \n(points[2], points[0])\n, where \npoints[2]\n is on the upper left side of \npoints[0]\n and there are no other points on the line they form. Note that it is a valid state when the two points form a line.\n\n\nThe middle one is the pair \n(points[1], points[2])\n, it is a valid pair same as the left one.\n\n\nThe right one is the pair \n(points[1], points[0])\n, it is not a valid pair as \npoints[2]\n is on the border of the rectangle.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 50\n\n\npoints[i].length == 2\n\n\n0 <= points[i][0], points[i][1] <= 50\n\n\nAll \npoints[i]\n are distinct.",
        "temas": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3016,
        "slug": "minimum-number-of-pushes-to-type-word-ii",
        "url": "https://leetcode.com/problems/minimum-number-of-pushes-to-type-word-ii/",
        "titulo": "Minimum Number of Pushes to Type Word II",
        "enunciado": "You are given a string \nword\n containing lowercase English letters.\n\n\nTelephone keypads have keys mapped with \ndistinct\n collections of lowercase English letters, which can be used to form words by pushing them. For example, the key \n2\n is mapped with \n[\"a\",\"b\",\"c\"]\n, we need to push the key one time to type \n\"a\"\n, two times to type \n\"b\"\n, and three times to type \n\"c\"\n \n.\n\n\nIt is allowed to remap the keys numbered \n2\n to \n9\n to \ndistinct\n collections of letters. The keys can be remapped to \nany\n amount of letters, but each letter \nmust\n be mapped to \nexactly\n one key. You need to find the \nminimum\n number of times the keys will be pushed to type the string \nword\n.\n\n\nReturn \nthe \nminimum\n number of pushes needed to type \nword\n \nafter remapping the keys\n.\n\n\nAn example mapping of letters to keys on a telephone keypad is given below. Note that \n1\n, \n*\n, \n#\n, and \n0\n do \nnot\n map to any letters.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n word = \"abcde\"\n\nOutput:\n 5\n\nExplanation:\n The remapped keypad given in the image provides the minimum cost.\n\"a\" -> one push on key 2\n\"b\" -> one push on key 3\n\"c\" -> one push on key 4\n\"d\" -> one push on key 5\n\"e\" -> one push on key 6\nTotal cost is 1 + 1 + 1 + 1 + 1 = 5.\nIt can be shown that no other mapping can provide a lower cost.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n word = \"xyzxyzxyzxyz\"\n\nOutput:\n 12\n\nExplanation:\n The remapped keypad given in the image provides the minimum cost.\n\"x\" -> one push on key 2\n\"y\" -> one push on key 3\n\"z\" -> one push on key 4\nTotal cost is 1 * 4 + 1 * 4 + 1 * 4 = 12\nIt can be shown that no other mapping can provide a lower cost.\nNote that the key 9 is not mapped to any letter: it is not necessary to map letters to every key, but to map all the letters.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n word = \"aabbccddeeffgghhiiiiii\"\n\nOutput:\n 24\n\nExplanation:\n The remapped keypad given in the image provides the minimum cost.\n\"a\" -> one push on key 2\n\"b\" -> one push on key 3\n\"c\" -> one push on key 4\n\"d\" -> one push on key 5\n\"e\" -> one push on key 6\n\"f\" -> one push on key 7\n\"g\" -> one push on key 8\n\"h\" -> two pushes on key 9\n\"i\" -> one push on key 9\nTotal cost is 1 * 2 + 1 * 2 + 1 * 2 + 1 * 2 + 1 * 2 + 1 * 2 + 1 * 2 + 2 * 2 + 6 * 1 = 24.\nIt can be shown that no other mapping can provide a lower cost.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 10\n5\n\n\nword\n consists of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 3030,
        "slug": "find-the-grid-of-region-average",
        "url": "https://leetcode.com/problems/find-the-grid-of-region-average/",
        "titulo": "Find the Grid of Region Average",
        "enunciado": "You are given \nm x n\n grid \nimage\n which represents a grayscale image, where \nimage[i][j]\n represents a pixel with intensity in the range \n[0..255]\n. You are also given a \nnon-negative\n integer \nthreshold\n.\n\n\nTwo pixels are \nadjacent\n if they share an edge.\n\n\nA \nregion\n is a \n3 x 3\n subgrid where the \nabsolute difference\n in intensity between any two \nadjacent\n pixels is \nless than or equal to\n \nthreshold\n.\n\n\nAll pixels in a region belong to that region, note that a pixel can belong to \nmultiple\n regions.\n\n\nYou need to calculate a \nm x n\n grid \nresult\n, where \nresult[i][j]\n is the \naverage\n intensity of the regions to which \nimage[i][j]\n belongs, \nrounded down\n to the nearest integer. If \nimage[i][j]\n belongs to multiple regions, \nresult[i][j]\n is the \naverage \nof the\n rounded-down average \nintensities of these regions, \nrounded down\n to the nearest integer. If \nimage[i][j]\n does\n not\n belong to any region, \nresult[i][j]\n is \nequal to\n \nimage[i][j]\n.\n\n\nReturn the grid \nresult\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nimage = [[5,6,7,10],[8,9,10,10],[11,12,13,10]], threshold = 3\n\n\nOutput:\n \n[[9,9,9,9],[9,9,9,9],[9,9,9,9]]\n\n\nExplanation:\n\n\n\n\nThere are two regions as illustrated above. The average intensity of the first region is 9, while the average intensity of the second region is 9.67 which is rounded down to 9. The average intensity of both of the regions is (9 + 9) / 2 = 9. As all the pixels belong to either region 1, region 2, or both of them, the intensity of every pixel in the result is 9.\n\n\nPlease note that the rounded-down values are used when calculating the average of multiple regions, hence the calculation is done using 9 as the average intensity of region 2, not 9.67.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nimage = [[10,20,30],[15,25,35],[20,30,40],[25,35,45]], threshold = 12\n\n\nOutput:\n \n[[25,25,25],[27,27,27],[27,27,27],[30,30,30]]\n\n\nExplanation:\n\n\n\n\nThere are two regions as illustrated above. The average intensity of the first region is 25, while the average intensity of the second region is 30. The average intensity of both of the regions is (25 + 30) / 2 = 27.5 which is rounded down to 27.\n\n\nAll the pixels in row 0 of the image belong to region 1, hence all the pixels in row 0 in the result are 25. Similarly, all the pixels in row 3 in the result are 30. The pixels in rows 1 and 2 of the image belong to region 1 and region 2, hence their assigned value is 27 in the result.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nimage = [[5,6,7],[8,9,10],[11,12,13]], threshold = 1\n\n\nOutput:\n \n[[5,6,7],[8,9,10],[11,12,13]]\n\n\nExplanation:\n\n\nThere is only one \n3 x 3\n subgrid, while it does not have the condition on difference of adjacent pixels, for example, the difference between \nimage[0][0]\n and \nimage[1][0]\n is \n|5 - 8| = 3 > threshold = 1\n. None of them belong to any valid regions, so the \nresult\n should be the same as \nimage\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n, m <= 500\n\n\n0 <= image[i][j] <= 255\n\n\n0 <= threshold <= 255",
        "temas": [
            "Array",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 3015,
        "slug": "count-the-number-of-houses-at-a-certain-distance-i",
        "url": "https://leetcode.com/problems/count-the-number-of-houses-at-a-certain-distance-i/",
        "titulo": "Count the Number of Houses at a Certain Distance I",
        "enunciado": "You are given three \npositive\n integers \nn\n, \nx\n, and \ny\n.\n\n\nIn a city, there exist houses numbered \n1\n to \nn\n connected by \nn\n streets. There is a street connecting the house numbered \ni\n with the house numbered \ni + 1\n for all \n1 <= i <= n - 1\n . An additional street connects the house numbered \nx\n with the house numbered \ny\n.\n\n\nFor each \nk\n, such that \n1 <= k <= n\n, you need to find the number of \npairs of houses\n \n(house\n1\n, house\n2\n)\n such that the \nminimum\n number of streets that need to be traveled to reach \nhouse\n2\n from \nhouse\n1\n is \nk\n.\n\n\nReturn \na \n1-indexed\n array \nresult\n of length \nn\n where \nresult[k]\n represents the \ntotal\n number of pairs of houses such that the \nminimum\n streets required to reach one house from the other is \nk\n.\n\n\nNote\n that \nx\n and \ny\n can be \nequal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, x = 1, y = 3\n\nOutput:\n [6,0,0]\n\nExplanation:\n Let's look at each pair of houses:\n- For the pair (1, 2), we can go from house 1 to house 2 directly.\n- For the pair (2, 1), we can go from house 2 to house 1 directly.\n- For the pair (1, 3), we can go from house 1 to house 3 directly.\n- For the pair (3, 1), we can go from house 3 to house 1 directly.\n- For the pair (2, 3), we can go from house 2 to house 3 directly.\n- For the pair (3, 2), we can go from house 3 to house 2 directly.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, x = 2, y = 4\n\nOutput:\n [10,8,2,0,0]\n\nExplanation:\n For each distance k the pairs are:\n- For k == 1, the pairs are (1, 2), (2, 1), (2, 3), (3, 2), (2, 4), (4, 2), (3, 4), (4, 3), (4, 5), and (5, 4).\n- For k == 2, the pairs are (1, 3), (3, 1), (1, 4), (4, 1), (2, 5), (5, 2), (3, 5), and (5, 3).\n- For k == 3, the pairs are (1, 5), and (5, 1).\n- For k == 4 and k == 5, there are no pairs.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 4, x = 1, y = 1\n\nOutput:\n [6,4,2,0]\n\nExplanation:\n For each distance k the pairs are:\n- For k == 1, the pairs are (1, 2), (2, 1), (2, 3), (3, 2), (3, 4), and (4, 3).\n- For k == 2, the pairs are (1, 3), (3, 1), (2, 4), and (4, 2).\n- For k == 3, the pairs are (1, 4), and (4, 1).\n- For k == 4, there are no pairs.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 100\n\n\n1 <= x, y <= n",
        "temas": [
            "Breadth-First Search",
            "Graph",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Breadth-First Search",
        "has_image": true
    },
    {
        "id": 3001,
        "slug": "minimum-moves-to-capture-the-queen",
        "url": "https://leetcode.com/problems/minimum-moves-to-capture-the-queen/",
        "titulo": "Minimum Moves to Capture The Queen",
        "enunciado": "There is a \n1-indexed\n \n8 x 8\n chessboard containing \n3\n pieces.\n\n\nYou are given \n6\n integers \na\n, \nb\n, \nc\n, \nd\n, \ne\n, and \nf\n where:\n\n\n\n\n(a, b)\n denotes the position of the white rook.\n\n\n(c, d)\n denotes the position of the white bishop.\n\n\n(e, f)\n denotes the position of the black queen.\n\n\n\n\nGiven that you can only move the white pieces, return \nthe \nminimum\n number of moves required to capture the black queen\n.\n\n\nNote\n that:\n\n\n\n\nRooks can move any number of squares either vertically or horizontally, but cannot jump over other pieces.\n\n\nBishops can move any number of squares diagonally, but cannot jump over other pieces.\n\n\nA rook or a bishop can capture the queen if it is located in a square that they can move to.\n\n\nThe queen does not move.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n a = 1, b = 1, c = 8, d = 8, e = 2, f = 3\n\nOutput:\n 2\n\nExplanation:\n We can capture the black queen in two moves by moving the white rook to (1, 3) then to (2, 3).\nIt is impossible to capture the black queen in less than two moves since it is not being attacked by any of the pieces at the beginning.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n a = 5, b = 3, c = 3, d = 4, e = 5, f = 2\n\nOutput:\n 1\n\nExplanation:\n We can capture the black queen in a single move by doing one of the following: \n- Move the white rook to (5, 2).\n- Move the white bishop to (5, 2).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a, b, c, d, e, f <= 8\n\n\nNo two pieces are on the same square.",
        "temas": [
            "Math",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 3034,
        "slug": "number-of-subarrays-that-match-a-pattern-i",
        "url": "https://leetcode.com/problems/number-of-subarrays-that-match-a-pattern-i/",
        "titulo": "Number of Subarrays That Match a Pattern I",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of size \nn\n, and a \n0-indexed\n integer array \npattern\n of size \nm\n consisting of integers \n-1\n, \n0\n, and \n1\n.\n\n\nA \nsubarray\n \nnums[i..j]\n of size \nm + 1\n is said to match the \npattern\n if the following conditions hold for each element \npattern[k]\n:\n\n\n\n\nnums[i + k + 1] > nums[i + k]\n if \npattern[k] == 1\n.\n\n\nnums[i + k + 1] == nums[i + k]\n if \npattern[k] == 0\n.\n\n\nnums[i + k + 1] < nums[i + k]\n if \npattern[k] == -1\n.\n\n\n\n\nReturn \nthe\n count\n of subarrays in\n \nnums\n \nthat match the\n \npattern\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,6], pattern = [1,1]\n\nOutput:\n 4\n\nExplanation:\n The pattern [1,1] indicates that we are looking for strictly increasing subarrays of size 3. In the array nums, the subarrays [1,2,3], [2,3,4], [3,4,5], and [4,5,6] match this pattern.\nHence, there are 4 subarrays in nums that match the pattern.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,4,4,1,3,5,5,3], pattern = [1,0,-1]\n\nOutput:\n 2\n\nExplanation: \nHere, the pattern [1,0,-1] indicates that we are looking for a sequence where the first number is smaller than the second, the second is equal to the third, and the third is greater than the fourth. In the array nums, the subarrays [1,4,4,1], and [3,5,5,3] match this pattern.\nHence, there are 2 subarrays in nums that match the pattern.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n == nums.length <= 100\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= m == pattern.length < n\n\n\n-1 <= pattern[i] <= 1",
        "temas": [
            "Array",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2981,
        "slug": "find-longest-special-substring-that-occurs-thrice-i",
        "url": "https://leetcode.com/problems/find-longest-special-substring-that-occurs-thrice-i/",
        "titulo": "Find Longest Special Substring That Occurs Thrice I",
        "enunciado": "You are given a string \ns\n that consists of lowercase English letters.\n\n\nA string is called \nspecial\n if it is made up of only a single character. For example, the string \n\"abc\"\n is not special, whereas the strings \n\"ddd\"\n, \n\"zz\"\n, and \n\"f\"\n are special.\n\n\nReturn \nthe length of the \nlongest special substring\n of \ns\n \nwhich occurs \nat least thrice\n, \nor \n-1\n if no special substring occurs at least thrice\n.\n\n\nA \nsubstring\n is a contiguous \nnon-empty\n sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aaaa\"\n\nOutput:\n 2\n\nExplanation:\n The longest special substring which occurs thrice is \"aa\": substrings \"\naa\naa\", \"a\naa\na\", and \"aa\naa\n\".\nIt can be shown that the maximum length achievable is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcdef\"\n\nOutput:\n -1\n\nExplanation:\n There exists no special substring which occurs at least thrice. Hence return -1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"abcaba\"\n\nOutput:\n 1\n\nExplanation:\n The longest special substring which occurs thrice is \"a\": substrings \"\na\nbcaba\", \"abc\na\nba\", and \"abcab\na\n\".\nIt can be shown that the maximum length achievable is 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 50\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Binary Search",
            "Sliding Window",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2982,
        "slug": "find-longest-special-substring-that-occurs-thrice-ii",
        "url": "https://leetcode.com/problems/find-longest-special-substring-that-occurs-thrice-ii/",
        "titulo": "Find Longest Special Substring That Occurs Thrice II",
        "enunciado": "You are given a string \ns\n that consists of lowercase English letters.\n\n\nA string is called \nspecial\n if it is made up of only a single character. For example, the string \n\"abc\"\n is not special, whereas the strings \n\"ddd\"\n, \n\"zz\"\n, and \n\"f\"\n are special.\n\n\nReturn \nthe length of the \nlongest special substring\n of \ns\n \nwhich occurs \nat least thrice\n, \nor \n-1\n if no special substring occurs at least thrice\n.\n\n\nA \nsubstring\n is a contiguous \nnon-empty\n sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aaaa\"\n\nOutput:\n 2\n\nExplanation:\n The longest special substring which occurs thrice is \"aa\": substrings \"\naa\naa\", \"a\naa\na\", and \"aa\naa\n\".\nIt can be shown that the maximum length achievable is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcdef\"\n\nOutput:\n -1\n\nExplanation:\n There exists no special substring which occurs at least thrice. Hence return -1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"abcaba\"\n\nOutput:\n 1\n\nExplanation:\n The longest special substring which occurs thrice is \"a\": substrings \"\na\nbcaba\", \"abc\na\nba\", and \"abcab\na\n\".\nIt can be shown that the maximum length achievable is 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 5 * 10\n5\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Binary Search",
            "Sliding Window",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 3026,
        "slug": "maximum-good-subarray-sum",
        "url": "https://leetcode.com/problems/maximum-good-subarray-sum/",
        "titulo": "Maximum Good Subarray Sum",
        "enunciado": "You are given an array \nnums\n of length \nn\n and a \npositive\n integer \nk\n.\n\n\nA \nsubarray\n of \nnums\n is called \ngood\n if the \nabsolute difference\n between its first and last element is \nexactly\n \nk\n, in other words, the subarray \nnums[i..j]\n is good if \n|nums[i] - nums[j]| == k\n.\n\n\nReturn \nthe \nmaximum\n sum of a \ngood\n subarray of \nnums\n. \nIf there are no good subarrays\n, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,6], k = 1\n\nOutput:\n 11\n\nExplanation:\n The absolute difference between the first and last element\n must be 1 for a good subarray. All the good subarrays are: [1,2], [2,3], [3,4], [4,5], and [5,6]. The maximum subarray sum is 11 for the subarray [5,6].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-1,3,2,4,5], k = 3\n\nOutput:\n 11\n\nExplanation:\n The absolute difference between the first and last element\n must be 3 for a good subarray. All the good subarrays are: [-1,3,2], and [2,4,5]. The maximum subarray sum is 11 for the subarray [2,4,5].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [-1,-2,-3,-4], k = 2\n\nOutput:\n -6\n\nExplanation:\n The absolute difference between the first and last element\n must be 2 for a good subarray. All the good subarrays are: [-1,-2,-3], and [-2,-3,-4]. The maximum subarray sum is -6 for the subarray [-1,-2,-3].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3207,
        "slug": "maximum-points-after-enemy-battles",
        "url": "https://leetcode.com/problems/maximum-points-after-enemy-battles/",
        "titulo": "Maximum Points After Enemy Battles",
        "enunciado": "You are given an integer array \nenemyEnergies\n denoting the energy values of various enemies.\n\n\nYou are also given an integer \ncurrentEnergy\n denoting the amount of energy you have initially.\n\n\nYou start with 0 points, and all the enemies are unmarked initially.\n\n\nYou can perform \neither\n of the following operations \nzero \nor multiple times to gain points:\n\n\n\n\nChoose an \nunmarked\n enemy, \ni\n, such that \ncurrentEnergy >= enemyEnergies[i]\n. By choosing this option:\n\n\t\n\n\nYou gain 1 point.\n\n\nYour energy is reduced by the enemy's energy, i.e. \ncurrentEnergy = currentEnergy - enemyEnergies[i]\n.\n\n\n\n\n\n\nIf you have \nat least\n 1 point, you can choose an \nunmarked\n enemy, \ni\n. By choosing this option:\n\t\n\n\nYour energy increases by the enemy's energy, i.e. \ncurrentEnergy = currentEnergy + enemyEnergies[i]\n.\n\n\nThe \ne\nnemy \ni\n is \nmarked\n.\n\n\n\n\n\n\n\n\nReturn an integer denoting the \nmaximum\n points you can get in the end by optimally performing operations.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nenemyEnergies = [3,2,2], currentEnergy = 2\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nThe following operations can be performed to get 3 points, which is the maximum:\n\n\n\n\nFirst operation on enemy 1: \npoints\n increases by 1, and \ncurrentEnergy\n decreases by 2. So, \npoints = 1\n, and \ncurrentEnergy = 0\n.\n\n\nSecond operation on enemy 0: \ncurrentEnergy\n increases by 3, and enemy 0 is marked. So, \npoints = 1\n, \ncurrentEnergy = 3\n, and marked enemies = \n[0]\n.\n\n\nFirst operation on enemy 2: \npoints\n increases by 1, and \ncurrentEnergy\n decreases by 2. So, \npoints = 2\n, \ncurrentEnergy = 1\n, and marked enemies = \n[0]\n.\n\n\nSecond operation on enemy 2: \ncurrentEnergy\n increases by 2, and enemy 2 is marked. So, \npoints = 2\n, \ncurrentEnergy = 3\n, and marked enemies = \n[0, 2]\n.\n\n\nFirst operation on enemy 1: \npoints\n increases by 1, and \ncurrentEnergy\n decreases by 2. So, \npoints = 3\n, \ncurrentEnergy = 1\n, and marked enemies = \n[0, 2]\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nenemyEnergies = \n[2]\n, currentEnergy = 10\n\n\nOutput:\n \n5\n\n\nExplanation: \n\n\nPerforming the first operation 5 times on enemy 0 results in the maximum number of points.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= enemyEnergies.length <= 10\n5\n\n\n1 <= enemyEnergies[i] <= 10\n9\n\n\n0 <= currentEnergy <= 10\n9",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2971,
        "slug": "find-polygon-with-the-largest-perimeter",
        "url": "https://leetcode.com/problems/find-polygon-with-the-largest-perimeter/",
        "titulo": "Find Polygon With the Largest Perimeter",
        "enunciado": "You are given an array of \npositive\n integers \nnums\n of length \nn\n.\n\n\nA \npolygon\n is a closed plane figure that has at least \n3\n sides. The \nlongest side\n of a polygon is \nsmaller\n than the sum of its other sides.\n\n\nConversely, if you have \nk\n (\nk >= 3\n) \npositive\n real numbers \na\n1\n, \na\n2\n, \na\n3\n, ..., \na\nk\n where \na\n1\n <= a\n2\n <= a\n3\n <= ... <= a\nk\n \nand\n \na\n1\n + a\n2\n + a\n3\n + ... + a\nk-1\n > a\nk\n, then there \nalways\n exists a polygon with \nk\n sides whose lengths are \na\n1\n, \na\n2\n, \na\n3\n, ..., \na\nk\n.\n\n\nThe \nperimeter\n of a polygon is the sum of lengths of its sides.\n\n\nReturn \nthe \nlargest\n possible \nperimeter\n of a \npolygon\n whose sides can be formed from\n \nnums\n, \nor\n \n-1\n \nif it is not possible to create a polygon\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,5,5]\n\nOutput:\n 15\n\nExplanation:\n The only possible polygon that can be made from nums has 3 sides: 5, 5, and 5. The perimeter is 5 + 5 + 5 = 15.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,12,1,2,5,50,3]\n\nOutput:\n 12\n\nExplanation:\n The polygon with the largest perimeter which can be made from nums has 5 sides: 1, 1, 2, 3, and 5. The perimeter is 1 + 1 + 2 + 3 + 5 = 12.\nWe cannot have a polygon with either 12 or 50 as the longest side because it is not possible to include 2 or more smaller sides that have a greater sum than either of them.\nIt can be shown that the largest possible perimeter is 12.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [5,5,50]\n\nOutput:\n -1\n\nExplanation:\n There is no possible way to form a polygon from nums, as a polygon has at least 3 sides and 50 > 5 + 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2975,
        "slug": "maximum-square-area-by-removing-fences-from-a-field",
        "url": "https://leetcode.com/problems/maximum-square-area-by-removing-fences-from-a-field/",
        "titulo": "Maximum Square Area by Removing Fences From a Field",
        "enunciado": "There is a large \n(m - 1) x (n - 1)\n rectangular field with corners at \n(1, 1)\n and \n(m, n)\n containing some horizontal and vertical fences given in arrays \nhFences\n and \nvFences\n respectively.\n\n\nHorizontal fences are from the coordinates \n(hFences[i], 1)\n to \n(hFences[i], n)\n and vertical fences are from the coordinates \n(1, vFences[i])\n to \n(m, vFences[i])\n.\n\n\nReturn \nthe \nmaximum\n area of a \nsquare\n field that can be formed by \nremoving\n some fences (\npossibly none\n) or \n-1\n \nif it is impossible to make a square field\n.\n\n\nSince the answer may be large, return it \nmodulo\n \n10\n9 \n+ 7\n.\n\n\nNote: \nThe field is surrounded by two horizontal fences from the coordinates \n(1, 1)\n to \n(1, n)\n and \n(m, 1)\n to \n(m, n)\n and two vertical fences from the coordinates \n(1, 1)\n to \n(m, 1)\n and \n(1, n)\n to \n(m, n)\n. These fences \ncannot\n be removed.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n m = 4, n = 3, hFences = [2,3], vFences = [2]\n\nOutput:\n 4\n\nExplanation:\n Removing the horizontal fence at 2 and the vertical fence at 2 will give a square field of area 4.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n m = 6, n = 7, hFences = [2], vFences = [4]\n\nOutput:\n -1\n\nExplanation:\n It can be proved that there is no way to create a square field by removing fences.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= m, n <= 10\n9\n\n\n1 <= hF\nences\n.length, vFences.length <= 600\n\n\n1 < hFences[i] < m\n\n\n1 < vFences[i] < n\n\n\nhFences\n and \nvFences\n are unique.",
        "temas": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2997,
        "slug": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-xor-equal-to-k/",
        "titulo": "Minimum Number of Operations to Make Array XOR Equal to K",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and a positive integer \nk\n.\n\n\nYou can apply the following operation on the array \nany\n number of times:\n\n\n\n\nChoose \nany\n element of the array and \nflip\n a bit in its \nbinary\n representation. Flipping a bit means changing a \n0\n to \n1\n or vice versa.\n\n\n\n\nReturn \nthe \nminimum\n number of operations required to make the bitwise \nXOR\n of \nall\n elements of the final array equal to \nk\n.\n\n\nNote\n that you can flip leading zero bits in the binary representation of elements. For example, for the number \n(101)\n2\n you can flip the fourth bit and obtain \n(1101)\n2\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,1,3,4], k = 1\n\nOutput:\n 2\n\nExplanation:\n We can do the following operations:\n- Choose element 2 which is 3 == (011)\n2\n, we flip the first bit and we obtain (010)\n2\n == 2. nums becomes [2,1,2,4].\n- Choose element 0 which is 2 == (010)\n2\n, we flip the third bit and we obtain (110)\n2\n = 6. nums becomes [6,1,2,4].\nThe XOR of elements of the final array is (6 XOR 1 XOR 2 XOR 4) == 1 == k.\nIt can be shown that we cannot make the XOR equal to k in less than 2 operations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,0,2,0], k = 0\n\nOutput:\n 0\n\nExplanation:\n The XOR of elements of the array is (2 XOR 0 XOR 2 XOR 0) == 0 == k. So no operation is needed.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n6\n\n\n0 <= k <= 10\n6",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3006,
        "slug": "find-beautiful-indices-in-the-given-array-i",
        "url": "https://leetcode.com/problems/find-beautiful-indices-in-the-given-array-i/",
        "titulo": "Find Beautiful Indices in the Given Array I",
        "enunciado": "You are given a \n0-indexed\n string \ns\n, a string \na\n, a string \nb\n, and an integer \nk\n.\n\n\nAn index \ni\n is \nbeautiful\n if:\n\n\n\n\n0 <= i <= s.length - a.length\n\n\ns[i..(i + a.length - 1)] == a\n\n\nThere exists an index \nj\n such that:\n\t\n\n\n0 <= j <= s.length - b.length\n\n\ns[j..(j + b.length - 1)] == b\n\n\n|j - i| <= k\n\n\n\n\n\n\n\n\nReturn \nthe array that contains beautiful indices in \nsorted order from smallest to largest\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"isawsquirrelnearmysquirrelhouseohmy\", a = \"my\", b = \"squirrel\", k = 15\n\nOutput:\n [16,33]\n\nExplanation:\n There are 2 beautiful indices: [16,33].\n- The index 16 is beautiful as s[16..17] == \"my\" and there exists an index 4 with s[4..11] == \"squirrel\" and |16 - 4| <= 15.\n- The index 33 is beautiful as s[33..34] == \"my\" and there exists an index 18 with s[18..25] == \"squirrel\" and |33 - 18| <= 15.\nThus we return [16,33] as the result.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcd\", a = \"a\", b = \"a\", k = 4\n\nOutput:\n [0]\n\nExplanation:\n There is 1 beautiful index: [0].\n- The index 0 is beautiful as s[0..0] == \"a\" and there exists an index 0 with s[0..0] == \"a\" and |0 - 0| <= 4.\nThus we return [0] as the result.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= s.length <= 10\n5\n\n\n1 <= a.length, b.length <= 10\n\n\ns\n, \na\n, and \nb\n contain only lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Binary Search",
            "Rolling Hash",
            "String Matching",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 3012,
        "slug": "minimize-length-of-array-using-operations",
        "url": "https://leetcode.com/problems/minimize-length-of-array-using-operations/",
        "titulo": "Minimize Length of Array Using Operations",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n containing \npositive\n integers.\n\n\nYour task is to \nminimize\n the length of \nnums\n by performing the following operations \nany\n number of times (including zero):\n\n\n\n\nSelect \ntwo\n \ndistinct\n indices \ni\n and \nj\n from \nnums\n, such that \nnums[i] > 0\n and \nnums[j] > 0\n.\n\n\nInsert the result of \nnums[i] % nums[j]\n at the end of \nnums\n.\n\n\nDelete the elements at indices \ni\n and \nj\n from \nnums\n.\n\n\n\n\nReturn \nan integer denoting the \nminimum\n \nlength\n of \nnums\n after performing the operation any number of times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,4,3,1]\n\nOutput:\n 1\n\nExplanation:\n One way to minimize the length of the array is as follows:\nOperation 1: Select indices 2 and 1, insert nums[2] % nums[1] at the end and it becomes [1,4,3,1,3], then delete elements at indices 2 and 1.\nnums becomes [1,1,3].\nOperation 2: Select indices 1 and 2, insert nums[1] % nums[2] at the end and it becomes [1,1,3,1], then delete elements at indices 1 and 2.\nnums becomes [1,1].\nOperation 3: Select indices 1 and 0, insert nums[1] % nums[0] at the end and it becomes [1,1,0], then delete elements at indices 1 and 0.\nnums becomes [0].\nThe length of nums cannot be reduced further. Hence, the answer is 1.\nIt can be shown that 1 is the minimum achievable length. \n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,5,5,10,5]\n\nOutput:\n 2\n\nExplanation:\n One way to minimize the length of the array is as follows:\nOperation 1: Select indices 0 and 3, insert nums[0] % nums[3] at the end and it becomes [5,5,5,10,5,5], then delete elements at indices 0 and 3.\nnums becomes [5,5,5,5]. \nOperation 2: Select indices 2 and 3, insert nums[2] % nums[3] at the end and it becomes [5,5,5,5,0], then delete elements at indices 2 and 3. \nnums becomes [5,5,0]. \nOperation 3: Select indices 0 and 1, insert nums[0] % nums[1] at the end and it becomes [5,5,0,0], then delete elements at indices 0 and 1.\nnums becomes [0,0].\nThe length of nums cannot be reduced further. Hence, the answer is 2.\nIt can be shown that 2 is the minimum achievable length. \n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,3,4]\n\nOutput:\n 1\n\nExplanation:\n One way to minimize the length of the array is as follows: \nOperation 1: Select indices 1 and 2, insert nums[1] % nums[2] at the end and it becomes [2,3,4,3], then delete elements at indices 1 and 2.\nnums becomes [2,3].\nOperation 2: Select indices 1 and 0, insert nums[1] % nums[0] at the end and it becomes [2,3,1], then delete elements at indices 1 and 0.\nnums becomes [1].\nThe length of nums cannot be reduced further. Hence, the answer is 1.\nIt can be shown that 1 is the minimum achievable length.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2966,
        "slug": "divide-array-into-arrays-with-max-difference",
        "url": "https://leetcode.com/problems/divide-array-into-arrays-with-max-difference/",
        "titulo": "Divide Array Into Arrays With Max Difference",
        "enunciado": "You are given an integer array \nnums\n of size \nn\n where \nn\n is a multiple of 3 and a positive integer \nk\n.\n\n\nDivide the array \nnums\n into \nn / 3\n arrays of size \n3\n satisfying the following condition:\n\n\n\n\nThe difference between \nany\n two elements in one array is \nless than or equal\n to \nk\n.\n\n\n\n\nReturn a \n2D\n array containing the arrays. If it is impossible to satisfy the conditions, return an empty array. And if there are multiple answers, return \nany\n of them.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,3,4,8,7,9,3,5,1], k = 2\n\n\nOutput:\n \n[[1,1,3],[3,4,5],[7,8,9]]\n\n\nExplanation:\n\n\nThe difference between any two elements in each array is less than or equal to 2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2,4,2,2,5,2], k = 2\n\n\nOutput:\n \n[]\n\n\nExplanation:\n\n\nDifferent ways to divide \nnums\n into 2 arrays of size 3 are:\n\n\n\n\n[[2,2,2],[2,4,5]] (and its permutations)\n\n\n[[2,2,4],[2,2,5]] (and its permutations)\n\n\n\n\nBecause there are four 2s there will be an array with the elements 2 and 5 no matter how we divide it. since \n5 - 2 = 3 > k\n, the condition is not satisfied and so there is no valid division.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [4,2,9,8,2,12,7,12,10,5,8,5,5,7,9,2,5,11], k = 14\n\n\nOutput:\n \n[[2,2,12],[4,8,5],[5,9,7],[7,8,5],[5,9,10],[11,12,2]]\n\n\nExplanation:\n\n\nThe difference between any two elements in each array is less than or equal to 14.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\nn \nis a multiple of 3\n\n\n1 <= nums[i] <= 10\n5\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3007,
        "slug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
        "url": "https://leetcode.com/problems/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k/",
        "titulo": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
        "enunciado": "You are given an integer \nk\n and an integer \nx\n. The price of a number \nnum\n is calculated by the count of \nset bits\n at positions \nx\n, \n2x\n, \n3x\n, etc., in its binary representation, starting from the least significant bit. The following table contains examples of how price is calculated.\n\n\n\n\n\n\n\n\nx\n\n\nnum\n\n\nBinary Representation\n\n\nPrice\n\n\n\n\n\n\n1\n\n\n13\n\n\n0\n0\n0\n0\n0\n1\n1\n0\n1\n\n\n3\n\n\n\n\n\n\n2\n\n\n13\n\n\n0\n0\n0\n0\n0\n1\n1\n0\n1\n\n\n1\n\n\n\n\n\n\n2\n\n\n233\n\n\n0\n1\n1\n1\n0\n1\n0\n0\n1\n\n\n3\n\n\n\n\n\n\n3\n\n\n13\n\n\n0\n00\n0\n01\n1\n01\n\n\n1\n\n\n\n\n\n\n3\n\n\n362\n\n\n1\n01\n1\n01\n0\n10\n\n\n2\n\n\n\n\n\n\n\n\nThe \naccumulated price\n of \nnum\n is the \ntotal\n price of numbers from \n1\n to \nnum\n. \nnum\n is considered \ncheap\n if its accumulated price is less than or equal to \nk\n.\n\n\nReturn the \ngreatest\n cheap number.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nk = 9, x = 1\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nAs shown in the table below, \n6\n is the greatest cheap number.\n\n\n\n\n\n\n\n\nx\n\n\nnum\n\n\nBinary Representation\n\n\nPrice\n\n\nAccumulated Price\n\n\n\n\n\n\n1\n\n\n1\n\n\n0\n0\n1\n\n\n1\n\n\n1\n\n\n\n\n\n\n1\n\n\n2\n\n\n0\n1\n0\n\n\n1\n\n\n2\n\n\n\n\n\n\n1\n\n\n3\n\n\n0\n1\n1\n\n\n2\n\n\n4\n\n\n\n\n\n\n1\n\n\n4\n\n\n1\n0\n0\n\n\n1\n\n\n5\n\n\n\n\n\n\n1\n\n\n5\n\n\n1\n0\n1\n\n\n2\n\n\n7\n\n\n\n\n\n\n1\n\n\n6\n\n\n1\n1\n0\n\n\n2\n\n\n9\n\n\n\n\n\n\n1\n\n\n7\n\n\n1\n1\n1\n\n\n3\n\n\n12\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nk = 7, x = 2\n\n\nOutput:\n \n9\n\n\nExplanation:\n\n\nAs shown in the table below, \n9\n is the greatest cheap number.\n\n\n\n\n\n\n\n\nx\n\n\nnum\n\n\nBinary Representation\n\n\nPrice\n\n\nAccumulated Price\n\n\n\n\n\n\n2\n\n\n1\n\n\n0\n0\n0\n1\n\n\n0\n\n\n0\n\n\n\n\n\n\n2\n\n\n2\n\n\n0\n0\n1\n0\n\n\n1\n\n\n1\n\n\n\n\n\n\n2\n\n\n3\n\n\n0\n0\n1\n1\n\n\n1\n\n\n2\n\n\n\n\n\n\n2\n\n\n4\n\n\n0\n1\n0\n0\n\n\n0\n\n\n2\n\n\n\n\n\n\n2\n\n\n5\n\n\n0\n1\n0\n1\n\n\n0\n\n\n2\n\n\n\n\n\n\n2\n\n\n6\n\n\n0\n1\n1\n0\n\n\n1\n\n\n3\n\n\n\n\n\n\n2\n\n\n7\n\n\n0\n1\n1\n1\n\n\n1\n\n\n4\n\n\n\n\n\n\n2\n\n\n8\n\n\n1\n0\n0\n0\n\n\n1\n\n\n5\n\n\n\n\n\n\n2\n\n\n9\n\n\n1\n0\n0\n1\n\n\n1\n\n\n6\n\n\n\n\n\n\n2\n\n\n10\n\n\n1\n0\n1\n0\n\n\n2\n\n\n8\n\n\n\n\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 10\n15\n\n\n1 <= x <= 8",
        "temas": [
            "Binary Search",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Binary Search",
        "has_image": false
    },
    {
        "id": 2998,
        "slug": "minimum-number-of-operations-to-make-x-and-y-equal",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-x-and-y-equal/",
        "titulo": "Minimum Number of Operations to Make X and Y Equal",
        "enunciado": "You are given two positive integers \nx\n and \ny\n.\n\n\nIn one operation, you can do one of the four following operations:\n\n\n\n\nDivide \nx\n by \n11\n if \nx\n is a multiple of \n11\n.\n\n\nDivide \nx\n by \n5\n if \nx\n is a multiple of \n5\n.\n\n\nDecrement \nx\n by \n1\n.\n\n\nIncrement \nx\n by \n1\n.\n\n\n\n\nReturn \nthe \nminimum\n number of operations required to make \n \nx\n \nand\n \ny\n equal.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n x = 26, y = 1\n\nOutput:\n 3\n\nExplanation:\n We can make 26 equal to 1 by applying the following operations: \n1. Decrement x by 1\n2. Divide x by 5\n3. Divide x by 5\nIt can be shown that 3 is the minimum number of operations required to make 26 equal to 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n x = 54, y = 2\n\nOutput:\n 4\n\nExplanation:\n We can make 54 equal to 2 by applying the following operations: \n1. Increment x by 1\n2. Divide x by 11 \n3. Divide x by 5\n4. Increment x by 1\nIt can be shown that 4 is the minimum number of operations required to make 54 equal to 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n x = 25, y = 30\n\nOutput:\n 5\n\nExplanation:\n We can make 25 equal to 30 by applying the following operations: \n1. Increment x by 1\n2. Increment x by 1\n3. Increment x by 1\n4. Increment x by 1\n5. Increment x by 1\nIt can be shown that 5 is the minimum number of operations required to make 25 equal to 30.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= x, y <= 10\n4",
        "temas": [
            "Dynamic Programming",
            "Breadth-First Search",
            "Memoization"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 2976,
        "slug": "minimum-cost-to-convert-string-i",
        "url": "https://leetcode.com/problems/minimum-cost-to-convert-string-i/",
        "titulo": "Minimum Cost to Convert String I",
        "enunciado": "You are given two \n0-indexed\n strings \nsource\n and \ntarget\n, both of length \nn\n and consisting of \nlowercase\n English letters. You are also given two \n0-indexed\n character arrays \noriginal\n and \nchanged\n, and an integer array \ncost\n, where \ncost[i]\n represents the cost of changing the character \noriginal[i]\n to the character \nchanged[i]\n.\n\n\nYou start with the string \nsource\n. In one operation, you can pick a character \nx\n from the string and change it to the character \ny\n at a cost of \nz\n \nif\n there exists \nany\n index \nj\n such that \ncost[j] == z\n, \noriginal[j] == x\n, and \nchanged[j] == y\n.\n\n\nReturn \nthe \nminimum\n cost to convert the string \nsource\n to the string \ntarget\n using \nany\n number of operations. If it is impossible to convert\n \nsource\n \nto\n \ntarget\n, \nreturn\n \n-1\n.\n\n\nNote\n that there may exist indices \ni\n, \nj\n such that \noriginal[j] == original[i]\n and \nchanged[j] == changed[i]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n source = \"abcd\", target = \"acbe\", original = [\"a\",\"b\",\"c\",\"c\",\"e\",\"d\"], changed = [\"b\",\"c\",\"b\",\"e\",\"b\",\"e\"], cost = [2,5,5,1,2,20]\n\nOutput:\n 28\n\nExplanation:\n To convert the string \"abcd\" to string \"acbe\":\n- Change value at index 1 from 'b' to 'c' at a cost of 5.\n- Change value at index 2 from 'c' to 'e' at a cost of 1.\n- Change value at index 2 from 'e' to 'b' at a cost of 2.\n- Change value at index 3 from 'd' to 'e' at a cost of 20.\nThe total cost incurred is 5 + 1 + 2 + 20 = 28.\nIt can be shown that this is the minimum possible cost.\n\n\n\nExample 2:\n\n\n\n\nInput:\n source = \"aaaa\", target = \"bbbb\", original = [\"a\",\"c\"], changed = [\"c\",\"b\"], cost = [1,2]\n\nOutput:\n 12\n\nExplanation:\n To change the character 'a' to 'b' change the character 'a' to 'c' at a cost of 1, followed by changing the character 'c' to 'b' at a cost of 2, for a total cost of 1 + 2 = 3. To change all occurrences of 'a' to 'b', a total cost of 3 * 4 = 12 is incurred.\n\n\n\nExample 3:\n\n\n\n\nInput:\n source = \"abcd\", target = \"abce\", original = [\"a\"], changed = [\"e\"], cost = [10000]\n\nOutput:\n -1\n\nExplanation:\n It is impossible to convert source to target because the value at index 3 cannot be changed from 'd' to 'e'.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= source.length == target.length <= 10\n5\n\n\nsource\n, \ntarget\n consist of lowercase English letters.\n\n\n1 <= cost.length == original.length == changed.length <= 2000\n\n\noriginal[i]\n, \nchanged[i]\n are lowercase English letters.\n\n\n1 <= cost[i] <= 10\n6\n\n\noriginal[i] != changed[i]",
        "temas": [
            "Array",
            "String",
            "Graph",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2961,
        "slug": "double-modular-exponentiation",
        "url": "https://leetcode.com/problems/double-modular-exponentiation/",
        "titulo": "Double Modular Exponentiation",
        "enunciado": "You are given a \n0-indexed\n 2D array \nvariables\n where \nvariables[i] = [a\ni\n, b\ni\n, c\ni,\n m\ni\n]\n, and an integer \ntarget\n.\n\n\nAn index \ni\n is \ngood\n if the following formula holds:\n\n\n\n\n0 <= i < variables.length\n\n\n((a\ni\nb\ni\n % 10)\nc\ni\n) % m\ni\n == target\n\n\n\n\nReturn \nan array consisting of \ngood\n indices in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n variables = [[2,3,3,10],[3,3,3,1],[6,1,1,4]], target = 2\n\nOutput:\n [0,2]\n\nExplanation:\n For each index i in the variables array:\n1) For the index 0, variables[0] = [2,3,3,10], (2\n3\n % 10)\n3\n % 10 = 2.\n2) For the index 1, variables[1] = [3,3,3,1], (3\n3\n % 10)\n3\n % 1 = 0.\n3) For the index 2, variables[2] = [6,1,1,4], (6\n1\n % 10)\n1\n % 4 = 2.\nTherefore we return [0,2] as the answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n variables = [[39,3,1000,1000]], target = 17\n\nOutput:\n []\n\nExplanation:\n For each index i in the variables array:\n1) For the index 0, variables[0] = [39,3,1000,1000], (39\n3\n % 10)\n1000\n % 1000 = 1.\nTherefore we return [] as the answer.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= variables.length <= 100\n\n\nvariables[i] == [a\ni\n, b\ni\n, c\ni\n, m\ni\n]\n\n\n1 <= a\ni\n, b\ni\n, c\ni\n, m\ni\n <= 10\n3\n\n\n0 <= target <= 10\n3",
        "temas": [
            "Array",
            "Math",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2952,
        "slug": "minimum-number-of-coins-to-be-added",
        "url": "https://leetcode.com/problems/minimum-number-of-coins-to-be-added/",
        "titulo": "Minimum Number of Coins to be Added",
        "enunciado": "You are given a \n0-indexed\n integer array \ncoins\n, representing the values of the coins available, and an integer \ntarget\n.\n\n\nAn integer \nx\n is \nobtainable\n if there exists a subsequence of \ncoins\n that sums to \nx\n.\n\n\nReturn \nthe\n minimum\n number of coins \nof any value\n that need to be added to the array so that every integer in the range\n \n[1, target]\n is \nobtainable\n.\n\n\nA \nsubsequence\n of an array is a new \nnon-empty\n array that is formed from the original array by deleting some (\npossibly none\n) of the elements without disturbing the relative positions of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n coins = [1,4,10], target = 19\n\nOutput:\n 2\n\nExplanation:\n We need to add coins 2 and 8. The resulting array will be [1,2,4,8,10].\nIt can be shown that all integers from 1 to 19 are obtainable from the resulting array, and that 2 is the minimum number of coins that need to be added to the array. \n\n\n\nExample 2:\n\n\n\n\nInput:\n coins = [1,4,10,5,7,19], target = 19\n\nOutput:\n 1\n\nExplanation:\n We only need to add the coin 2. The resulting array will be [1,2,4,5,7,10,19].\nIt can be shown that all integers from 1 to 19 are obtainable from the resulting array, and that 1 is the minimum number of coins that need to be added to the array. \n\n\n\nExample 3:\n\n\n\n\nInput:\n coins = [1,1,1], target = 20\n\nOutput:\n 3\n\nExplanation:\n We need to add coins 4, 8, and 16. The resulting array will be [1,1,1,4,8,16].\nIt can be shown that all integers from 1 to 20 are obtainable from the resulting array, and that 3 is the minimum number of coins that need to be added to the array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= target <= 10\n5\n\n\n1 <= coins.length <= 10\n5\n\n\n1 <= coins[i] <= target",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2957,
        "slug": "remove-adjacent-almost-equal-characters",
        "url": "https://leetcode.com/problems/remove-adjacent-almost-equal-characters/",
        "titulo": "Remove Adjacent Almost-Equal Characters",
        "enunciado": "You are given a \n0-indexed\n string \nword\n.\n\n\nIn one operation, you can pick any index \ni\n of \nword\n and change \nword[i]\n to any lowercase English letter.\n\n\nReturn \nthe \nminimum\n number of operations needed to remove all adjacent \nalmost-equal\n characters from\n \nword\n.\n\n\nTwo characters \na\n and \nb\n are \nalmost-equal\n if \na == b\n or \na\n and \nb\n are adjacent in the alphabet.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word = \"aaaaa\"\n\nOutput:\n 2\n\nExplanation:\n We can change word into \"a\nc\na\nc\na\" which does not have any adjacent almost-equal characters.\nIt can be shown that the minimum number of operations needed to remove all adjacent almost-equal characters from word is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n word = \"abddez\"\n\nOutput:\n 2\n\nExplanation:\n We can change word into \"\ny\nbd\no\nez\" which does not have any adjacent almost-equal characters.\nIt can be shown that the minimum number of operations needed to remove all adjacent almost-equal characters from word is 2.\n\n\nExample 3:\n\n\n\n\nInput:\n word = \"zyxyxyz\"\n\nOutput:\n 3\n\nExplanation:\n We can change word into \"z\na\nx\na\nx\na\nz\" which does not have any adjacent almost-equal characters. \nIt can be shown that the minimum number of operations needed to remove all adjacent almost-equal characters from word is 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 100\n\n\nword\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2967,
        "slug": "minimum-cost-to-make-array-equalindromic",
        "url": "https://leetcode.com/problems/minimum-cost-to-make-array-equalindromic/",
        "titulo": "Minimum Cost to Make Array Equalindromic",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n having length \nn\n.\n\n\nYou are allowed to perform a special move \nany\n number of times (\nincluding zero\n) on \nnums\n. In one \nspecial\n \nmove\n you perform the following steps \nin order\n:\n\n\n\n\nChoose an index \ni\n in the range \n[0, n - 1]\n, and a \npositive\n integer \nx\n.\n\n\nAdd \n|nums[i] - x|\n to the total cost.\n\n\nChange the value of \nnums[i]\n to \nx\n.\n\n\n\n\nA \npalindromic number\n is a positive integer that remains the same when its digits are reversed. For example, \n121\n, \n2552\n and \n65756\n are palindromic numbers whereas \n24\n, \n46\n, \n235\n are not palindromic numbers.\n\n\nAn array is considered \nequalindromic\n if all the elements in the array are equal to an integer \ny\n, where \ny\n is a \npalindromic number\n less than \n10\n9\n.\n\n\nReturn \nan integer denoting the \nminimum\n possible total cost to make \nnums\n \nequalindromic\n by performing any number of special moves.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n 6\n\nExplanation:\n We can make the array equalindromic by changing all elements to 3 which is a palindromic number. The cost of changing the array to [3,3,3,3,3] using 4 special moves is given by |1 - 3| + |2 - 3| + |4 - 3| + |5 - 3| = 6.\nIt can be shown that changing all elements to any palindromic number other than 3 cannot be achieved at a lower cost.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [10,12,13,14,15]\n\nOutput:\n 11\n\nExplanation:\n We can make the array equalindromic by changing all elements to 11 which is a palindromic number. The cost of changing the array to [11,11,11,11,11] using 5 special moves is given by |10 - 11| + |12 - 11| + |13 - 11| + |14 - 11| + |15 - 11| = 11.\nIt can be shown that changing all elements to any palindromic number other than 11 cannot be achieved at a lower cost.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [22,33,22,33,22]\n\nOutput:\n 22\n\nExplanation:\n We can make the array equalindromic by changing all elements to 22 which is a palindromic number. The cost of changing the array to [22,22,22,22,22] using 2 special moves is given by |33 - 22| + |33 - 22| = 22.\nIt can be shown that changing all elements to any palindromic number other than 22 cannot be achieved at a lower cost.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 3002,
        "slug": "maximum-size-of-a-set-after-removals",
        "url": "https://leetcode.com/problems/maximum-size-of-a-set-after-removals/",
        "titulo": "Maximum Size of a Set After Removals",
        "enunciado": "You are given two \n0-indexed\n integer arrays \nnums1\n and \nnums2\n of even length \nn\n.\n\n\nYou must remove \nn / 2\n elements from \nnums1\n and \nn / 2\n elements from \nnums2\n. After the removals, you insert the remaining elements of \nnums1\n and \nnums2\n into a set \ns\n.\n\n\nReturn \nthe \nmaximum\n possible size of the set\n \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,2,1,2], nums2 = [1,1,1,1]\n\nOutput:\n 2\n\nExplanation:\n We remove two occurences of 1 from nums1 and nums2. After the removals, the arrays become equal to nums1 = [2,2] and nums2 = [1,1]. Therefore, s = {1,2}.\nIt can be shown that 2 is the maximum possible size of the set s after the removals.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,2,3,4,5,6], nums2 = [2,3,2,3,2,3]\n\nOutput:\n 5\n\nExplanation:\n We remove 2, 3, and 6 from nums1, as well as 2 and two occurrences of 3 from nums2. After the removals, the arrays become equal to nums1 = [1,4,5] and nums2 = [2,3,2]. Therefore, s = {1,2,3,4,5}.\nIt can be shown that 5 is the maximum possible size of the set s after the removals.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [1,1,2,2,3,3], nums2 = [4,4,5,5,6,6]\n\nOutput:\n 6\n\nExplanation:\n We remove 1, 2, and 3 from nums1, as well as 4, 5, and 6 from nums2. After the removals, the arrays become equal to nums1 = [1,2,3] and nums2 = [4,5,6]. Therefore, s = {1,2,3,4,5,6}.\nIt can be shown that 6 is the maximum possible size of the set s after the removals.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length == nums2.length\n\n\n1 <= n <= 2 * 10\n4\n\n\nn\n is even.\n\n\n1 <= nums1[i], nums2[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2958,
        "slug": "length-of-longest-subarray-with-at-most-k-frequency",
        "url": "https://leetcode.com/problems/length-of-longest-subarray-with-at-most-k-frequency/",
        "titulo": "Length of Longest Subarray With at Most K Frequency",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n.\n\n\nThe \nfrequency\n of an element \nx\n is the number of times it occurs in an array.\n\n\nAn array is called \ngood\n if the frequency of each element in this array is \nless than or equal\n to \nk\n.\n\n\nReturn \nthe length of the \nlongest\n \ngood\n subarray of\n \nnums\n.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,1,2,3,1,2], k = 2\n\nOutput:\n 6\n\nExplanation:\n The longest possible good subarray is [1,2,3,1,2,3] since the values 1, 2, and 3 occur at most twice in this subarray. Note that the subarrays [2,3,1,2,3,1] and [3,1,2,3,1,2] are also good.\nIt can be shown that there are no good subarrays with length more than 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,1,2,1,2,1,2], k = 1\n\nOutput:\n 2\n\nExplanation:\n The longest possible good subarray is [1,2] since the values 1 and 2 occur at most once in this subarray. Note that the subarray [2,1] is also good.\nIt can be shown that there are no good subarrays with length more than 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [5,5,5,5,5,5,5], k = 4\n\nOutput:\n 4\n\nExplanation:\n The longest possible good subarray is [5,5,5,5] since the value 5 occurs 4 times in this subarray.\nIt can be shown that there are no good subarrays with length more than 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= nums.length",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2948,
        "slug": "make-lexicographically-smallest-array-by-swapping-elements",
        "url": "https://leetcode.com/problems/make-lexicographically-smallest-array-by-swapping-elements/",
        "titulo": "Make Lexicographically Smallest Array by Swapping Elements",
        "enunciado": "You are given a \n0-indexed\n array of \npositive\n integers \nnums\n and a \npositive\n integer \nlimit\n.\n\n\nIn one operation, you can choose any two indices \ni\n and \nj\n and swap \nnums[i]\n and \nnums[j]\n \nif\n \n|nums[i] - nums[j]| <= limit\n.\n\n\nReturn \nthe \nlexicographically smallest array\n that can be obtained by performing the operation any number of times\n.\n\n\nAn array \na\n is lexicographically smaller than an array \nb\n if in the first position where \na\n and \nb\n differ, array \na\n has an element that is less than the corresponding element in \nb\n. For example, the array \n[2,10,3]\n is lexicographically smaller than the array \n[10,2,3]\n because they differ at index \n0\n and \n2 < 10\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,5,3,9,8], limit = 2\n\nOutput:\n [1,3,5,8,9]\n\nExplanation:\n Apply the operation 2 times:\n- Swap nums[1] with nums[2]. The array becomes [1,3,5,9,8]\n- Swap nums[3] with nums[4]. The array becomes [1,3,5,8,9]\nWe cannot obtain a lexicographically smaller array by applying any more operations.\nNote that it may be possible to get the same result by doing different operations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,7,6,18,2,1], limit = 3\n\nOutput:\n [1,6,7,18,1,2]\n\nExplanation:\n Apply the operation 3 times:\n- Swap nums[1] with nums[2]. The array becomes [1,6,7,18,2,1]\n- Swap nums[0] with nums[4]. The array becomes [2,6,7,18,1,1]\n- Swap nums[0] with nums[5]. The array becomes [1,6,7,18,1,2]\nWe cannot obtain a lexicographically smaller array by applying any more operations.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,7,28,19,10], limit = 3\n\nOutput:\n [1,7,28,19,10]\n\nExplanation:\n [1,7,28,19,10] is the lexicographically smallest array we can obtain because we cannot apply the operation on any two indices.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= limit <= 10\n9",
        "temas": [
            "Array",
            "Union Find",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2943,
        "slug": "maximize-area-of-square-hole-in-grid",
        "url": "https://leetcode.com/problems/maximize-area-of-square-hole-in-grid/",
        "titulo": "Maximize Area of Square Hole in Grid",
        "enunciado": "You are given the two integers, \nn\n and \nm\n and two integer arrays, \nhBars\n and \nvBars\n. The grid has \nn + 2\n horizontal and \nm + 2\n vertical bars, creating 1 x 1 unit cells. The bars are indexed starting from \n1\n.\n\n\nYou can \nremove\n some of the bars in \nhBars\n from horizontal bars and some of the bars in \nvBars\n from vertical bars. Note that other bars are fixed and cannot be removed.\n\n\nReturn an integer denoting the \nmaximum area\n of a \nsquare-shaped\n hole in the grid, after removing some bars (possibly none).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput: \nn = 2, m = 1, hBars = [2,3], vBars = [2]\n\n\nOutput: \n4\n\n\nExplanation:\n\n\nThe left image shows the initial grid formed by the bars. The horizontal bars are \n[1,2,3,4]\n, and the vertical bars are \n[1,2,3]\n.\n\n\nOne way to get the maximum square-shaped hole is by removing horizontal bar 2 and vertical bar 2.\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput: \nn = 1, m = 1, hBars = [2], vBars = [2]\n\n\nOutput: \n4\n\n\nExplanation:\n\n\nTo get the maximum square-shaped hole, we remove horizontal bar 2 and vertical bar 2.\n\n\n\n\nExample 3:\n\n\n\n\n\n\nInput: \nn = 2, m = 3, hBars = [2,3], vBars = [2,4]\n\n\nOutput: \n4\n\n\nExplanation:\n\n\nOne way to get the maximum square-shaped hole is by removing horizontal bar 3, and vertical bar 4.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n9\n\n\n1 <= m <= 10\n9\n\n\n1 <= hBars.length <= 100\n\n\n2 <= hBars[i] <= n + 1\n\n\n1 <= vBars.length <= 100\n\n\n2 <= vBars[i] <= m + 1\n\n\nAll values in \nhBars\n are distinct.\n\n\nAll values in \nvBars\n are distinct.",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2962,
        "slug": "count-subarrays-where-max-element-appears-at-least-k-times",
        "url": "https://leetcode.com/problems/count-subarrays-where-max-element-appears-at-least-k-times/",
        "titulo": "Count Subarrays Where Max Element Appears at Least K Times",
        "enunciado": "You are given an integer array \nnums\n and a \npositive\n integer \nk\n.\n\n\nReturn \nthe number of subarrays where the \nmaximum\n element of \nnums\n appears \nat least\n \nk\n times in that subarray.\n\n\nA \nsubarray\n is a contiguous sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,2,3,3], k = 2\n\nOutput:\n 6\n\nExplanation:\n The subarrays that contain the element 3 at least 2 times are: [1,3,2,3], [1,3,2,3,3], [3,2,3], [3,2,3,3], [2,3,3] and [3,3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,4,2,1], k = 3\n\nOutput:\n 0\n\nExplanation:\n No subarray contains the element 4 at least 3 times.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2947,
        "slug": "count-beautiful-substrings-i",
        "url": "https://leetcode.com/problems/count-beautiful-substrings-i/",
        "titulo": "Count Beautiful Substrings I",
        "enunciado": "You are given a string \ns\n and a positive integer \nk\n.\n\n\nLet \nvowels\n and \nconsonants\n be the number of vowels and consonants in a string.\n\n\nA string is \nbeautiful\n if:\n\n\n\n\nvowels == consonants\n.\n\n\n(vowels * consonants) % k == 0\n, in other terms the multiplication of \nvowels\n and \nconsonants\n is divisible by \nk\n.\n\n\n\n\nReturn \nthe number of \nnon-empty beautiful substrings\n in the given string\n \ns\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\nVowel letters\n in English are \n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n.\n\n\nConsonant letters\n in English are every letter except vowels.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"baeyh\", k = 2\n\nOutput:\n 2\n\nExplanation:\n There are 2 beautiful substrings in the given string.\n- Substring \"b\naeyh\n\", vowels = 2 ([\"a\",e\"]), consonants = 2 ([\"y\",\"h\"]).\nYou can see that string \"aeyh\" is beautiful as vowels == consonants and vowels * consonants % k == 0.\n- Substring \"\nbaey\nh\", vowels = 2 ([\"a\",e\"]), consonants = 2 ([\"b\",\"y\"]). \nYou can see that string \"baey\" is beautiful as vowels == consonants and vowels * consonants % k == 0.\nIt can be shown that there are only 2 beautiful substrings in the given string.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abba\", k = 1\n\nOutput:\n 3\n\nExplanation:\n There are 3 beautiful substrings in the given string.\n- Substring \"\nab\nba\", vowels = 1 ([\"a\"]), consonants = 1 ([\"b\"]). \n- Substring \"ab\nba\n\", vowels = 1 ([\"a\"]), consonants = 1 ([\"b\"]).\n- Substring \"\nabba\n\", vowels = 2 ([\"a\",\"a\"]), consonants = 2 ([\"b\",\"b\"]).\nIt can be shown that there are only 3 beautiful substrings in the given string.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"bcdf\", k = 1\n\nOutput:\n 0\n\nExplanation:\n There are no beautiful substrings in the given string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\n1 <= k <= 1000\n\n\ns\n consists of only English lowercase letters.",
        "temas": [
            "Hash Table",
            "Math",
            "String",
            "Enumeration",
            "Number Theory",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2944,
        "slug": "minimum-number-of-coins-for-fruits",
        "url": "https://leetcode.com/problems/minimum-number-of-coins-for-fruits/",
        "titulo": "Minimum Number of Coins for Fruits",
        "enunciado": "You are given an \n0-indexed\n integer array \nprices\n where \nprices[i]\n denotes the number of coins needed to purchase the \n(i + 1)\nth\n fruit.\n\n\nThe fruit market has the following reward for each fruit:\n\n\n\n\nIf you purchase the \n(i + 1)\nth\n fruit at \nprices[i]\n coins, you can get any number of the next \ni\n fruits for free.\n\n\n\n\nNote\n that even if you \ncan\n take fruit \nj\n for free, you can still purchase it for \nprices[j - 1]\n coins to receive its reward.\n\n\nReturn the \nminimum\n number of coins needed to acquire all the fruits.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nprices = [3,1,2]\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\n\n\nPurchase the 1\nst\n fruit with \nprices[0] = 3\n coins, you are allowed to take the 2\nnd\n fruit for free.\n\n\nPurchase the 2\nnd\n fruit with \nprices[1] = 1\n coin, you are allowed to take the 3\nrd\n fruit for free.\n\n\nTake the 3\nrd\n fruit for free.\n\n\n\n\nNote that even though you could take the 2\nnd\n fruit for free as a reward of buying 1\nst\n fruit, you purchase it to receive its reward, which is more optimal.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nprices = [1,10,1,1]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\n\nPurchase the 1\nst\n fruit with \nprices[0] = 1\n coin, you are allowed to take the 2\nnd\n fruit for free.\n\n\nTake the 2\nnd\n fruit for free.\n\n\nPurchase the 3\nrd\n fruit for \nprices[2] = 1\n coin, you are allowed to take the 4\nth\n fruit for free.\n\n\nTake the 4\nt\nh\n fruit for free.\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nprices = [26,18,6,12,49,7,45,45]\n\n\nOutput:\n \n39\n\n\nExplanation:\n\n\n\n\nPurchase the 1\nst\n fruit with \nprices[0] = 26\n coin, you are allowed to take the 2\nnd\n fruit for free.\n\n\nTake the 2\nnd\n fruit for free.\n\n\nPurchase the 3\nrd\n fruit for \nprices[2] = 6\n coin, you are allowed to take the 4\nth\n, 5\nth\n and 6\nth\n (the next three) fruits for free.\n\n\nTake the 4\nt\nh\n fruit for free.\n\n\nTake the 5\nt\nh\n fruit for free.\n\n\nPurchase the 6\nth\n fruit with \nprices[5] = 7\n coin, you are allowed to take the 8\nth\n and 9\nth\n fruit for free.\n\n\nTake the 7\nt\nh\n fruit for free.\n\n\nTake the 8\nt\nh\n fruit for free.\n\n\n\n\nNote that even though you could take the 6\nth\n fruit for free as a reward of buying 3\nrd\n fruit, you purchase it to receive its reward, which is more optimal.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= prices.length <= 1000\n\n\n1 <= prices[i] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2933,
        "slug": "high-access-employees",
        "url": "https://leetcode.com/problems/high-access-employees/",
        "titulo": "High-Access Employees",
        "enunciado": "You are given a 2D \n0-indexed\n array of strings, \naccess_times\n, with size \nn\n. For each \ni\n where \n0 <= i <= n - 1\n, \naccess_times[i][0]\n represents the name of an employee, and \naccess_times[i][1]\n represents the access time of that employee. All entries in \naccess_times\n are within the same day.\n\n\nThe access time is represented as \nfour digits\n using a \n24-hour\n time format, for example, \n\"0800\"\n or \n\"2250\"\n.\n\n\nAn employee is said to be \nhigh-access\n if he has accessed the system \nthree or more\n times within a \none-hour period\n.\n\n\nTimes with exactly one hour of difference are \nnot\n considered part of the same one-hour period. For example, \n\"0815\"\n and \n\"0915\"\n are not part of the same one-hour period.\n\n\nAccess times at the start and end of the day are \nnot\n counted within the same one-hour period. For example, \n\"0005\"\n and \n\"2350\"\n are not part of the same one-hour period.\n\n\nReturn \na list that contains the names of \nhigh-access\n employees with any order you want.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n access_times = [[\"a\",\"0549\"],[\"b\",\"0457\"],[\"a\",\"0532\"],[\"a\",\"0621\"],[\"b\",\"0540\"]]\n\nOutput:\n [\"a\"]\n\nExplanation:\n \"a\" has three access times in the one-hour period of [05:32, 06:31] which are 05:32, 05:49, and 06:21.\nBut \"b\" does not have more than two access times at all.\nSo the answer is [\"a\"].\n\n\nExample 2:\n\n\n\n\nInput:\n access_times = [[\"d\",\"0002\"],[\"c\",\"0808\"],[\"c\",\"0829\"],[\"e\",\"0215\"],[\"d\",\"1508\"],[\"d\",\"1444\"],[\"d\",\"1410\"],[\"c\",\"0809\"]]\n\nOutput:\n [\"c\",\"d\"]\n\nExplanation:\n \"c\" has three access times in the one-hour period of [08:08, 09:07] which are 08:08, 08:09, and 08:29.\n\"d\" has also three access times in the one-hour period of [14:10, 15:09] which are 14:10, 14:44, and 15:08.\nHowever, \"e\" has just one access time, so it can not be in the answer and the final answer is [\"c\",\"d\"].\n\n\nExample 3:\n\n\n\n\nInput:\n access_times = [[\"cd\",\"1025\"],[\"ab\",\"1025\"],[\"cd\",\"1046\"],[\"cd\",\"1055\"],[\"ab\",\"1124\"],[\"ab\",\"1120\"]]\n\nOutput:\n [\"ab\",\"cd\"]\n\nExplanation:\n \"ab\" has three access times in the one-hour period of [10:25, 11:24] which are 10:25, 11:20, and 11:24.\n\"cd\" has also three access times in the one-hour period of [10:25, 11:24] which are 10:25, 10:46, and 10:55.\nSo the answer is [\"ab\",\"cd\"].\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= access_times.length <= 100\n\n\naccess_times[i].length == 2\n\n\n1 <= access_times[i][0].length <= 10\n\n\naccess_times[i][0]\n consists only of English small letters.\n\n\naccess_times[i][1].length == 4\n\n\naccess_times[i][1]\n is in 24-hour time format.\n\n\naccess_times[i][1]\n consists only of \n'0'\n to \n'9'\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2929,
        "slug": "distribute-candies-among-children-ii",
        "url": "https://leetcode.com/problems/distribute-candies-among-children-ii/",
        "titulo": "Distribute Candies Among Children II",
        "enunciado": "You are given two positive integers \nn\n and \nlimit\n.\n\n\nReturn \nthe \ntotal number\n of ways to distribute \nn\n \ncandies among \n3\n children such that no child gets more than \nlimit\n candies.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 5, limit = 2\n\nOutput:\n 3\n\nExplanation:\n There are 3 ways to distribute 5 candies such that no child gets more than 2 candies: (1, 2, 2), (2, 1, 2) and (2, 2, 1).\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, limit = 3\n\nOutput:\n 10\n\nExplanation:\n There are 10 ways to distribute 3 candies such that no child gets more than 3 candies: (0, 0, 3), (0, 1, 2), (0, 2, 1), (0, 3, 0), (1, 0, 2), (1, 1, 1), (1, 2, 0), (2, 0, 1), (2, 1, 0) and (3, 0, 0).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n6\n\n\n1 <= limit <= 10\n6",
        "temas": [
            "Math",
            "Combinatorics",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2930,
        "slug": "number-of-strings-which-can-be-rearranged-to-contain-substring",
        "url": "https://leetcode.com/problems/number-of-strings-which-can-be-rearranged-to-contain-substring/",
        "titulo": "Number of Strings Which Can Be Rearranged to Contain Substring",
        "enunciado": "You are given an integer \nn\n.\n\n\nA string \ns\n is called \ngood \nif it contains only lowercase English characters \nand\n it is possible to rearrange the characters of \ns\n such that the new string contains \n\"leet\"\n as a \nsubstring\n.\n\n\nFor example:\n\n\n\n\nThe string \n\"lteer\"\n is good because we can rearrange it to form \n\"leetr\"\n .\n\n\n\"letl\"\n is not good because we cannot rearrange it to contain \n\"leet\"\n as a substring.\n\n\n\n\nReturn \nthe \ntotal\n number of good strings of length \nn\n.\n\n\nSince the answer may be large, return it \nmodulo \n10\n9\n + 7\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n \n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n 12\n\nExplanation:\n The 12 strings which can be rearranged to have \"leet\" as a substring are: \"eelt\", \"eetl\", \"elet\", \"elte\", \"etel\", \"etle\", \"leet\", \"lete\", \"ltee\", \"teel\", \"tele\", and \"tlee\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 83943898\n\nExplanation:\n The number of strings with length 10 which can be rearranged to have \"leet\" as a substring is 526083947580. Hence the answer is 526083947580 % (10\n9\n + 7) = 83943898.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2938,
        "slug": "separate-black-and-white-balls",
        "url": "https://leetcode.com/problems/separate-black-and-white-balls/",
        "titulo": "Separate Black and White Balls",
        "enunciado": "There are \nn\n balls on a table, each ball has a color black or white.\n\n\nYou are given a \n0-indexed\n binary string \ns\n of length \nn\n, where \n1\n and \n0\n represent black and white balls, respectively.\n\n\nIn each step, you can choose two adjacent balls and swap them.\n\n\nReturn \nthe \nminimum\n number of steps to group all the black balls to the right and all the white balls to the left\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"101\"\n\nOutput:\n 1\n\nExplanation:\n We can group all the black balls to the right in the following way:\n- Swap s[0] and s[1], s = \"011\".\nInitially, 1s are not grouped together, requiring at least 1 step to group them to the right.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"100\"\n\nOutput:\n 2\n\nExplanation:\n We can group all the black balls to the right in the following way:\n- Swap s[0] and s[1], s = \"010\".\n- Swap s[1] and s[2], s = \"001\".\nIt can be proven that the minimum number of steps needed is 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"0111\"\n\nOutput:\n 0\n\nExplanation:\n All the black balls are already grouped to the right.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 2939,
        "slug": "maximum-xor-product",
        "url": "https://leetcode.com/problems/maximum-xor-product/",
        "titulo": "Maximum Xor Product",
        "enunciado": "Given three integers \na\n, \nb\n, and \nn\n, return \nthe \nmaximum value\n of\n \n(a XOR x) * (b XOR x)\n \nwhere\n \n0 <= x < 2\nn\n.\n\n\nSince the answer may be too large, return it \nmodulo\n \n10\n9 \n+ 7\n.\n\n\nNote\n that \nXOR\n is the bitwise XOR operation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = 12, b = 5, n = 4\n\nOutput:\n 98\n\nExplanation:\n For x = 2, (a XOR x) = 14 and (b XOR x) = 7. Hence, (a XOR x) * (b XOR x) = 98. \nIt can be shown that 98 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2\nn\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = 6, b = 7 , n = 5\n\nOutput:\n 930\n\nExplanation:\n For x = 25, (a XOR x) = 31 and (b XOR x) = 30. Hence, (a XOR x) * (b XOR x) = 930.\nIt can be shown that 930 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2\nn\n.\n\n\nExample 3:\n\n\n\n\nInput:\n a = 1, b = 6, n = 3\n\nOutput:\n 12\n\nExplanation:\n For x = 5, (a XOR x) = 4 and (b XOR x) = 3. Hence, (a XOR x) * (b XOR x) = 12.\nIt can be shown that 12 is the maximum value of (a XOR x) * (b XOR x) for all 0 <= x < 2\nn\n.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= a, b < 2\n50\n\n\n0 <= n <= 50",
        "temas": [
            "Math",
            "Greedy",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2925,
        "slug": "maximum-score-after-applying-operations-on-a-tree",
        "url": "https://leetcode.com/problems/maximum-score-after-applying-operations-on-a-tree/",
        "titulo": "Maximum Score After Applying Operations on a Tree",
        "enunciado": "There is an undirected tree with \nn\n nodes labeled from \n0\n to \nn - 1\n, and rooted at node \n0\n. You are given a 2D integer array \nedges\n of length \nn - 1\n, where \nedges[i] = [a\ni\n, b\ni\n]\n indicates that there is an edge between nodes \na\ni\n and \nb\ni\n in the tree.\n\n\nYou are also given a \n0-indexed\n integer array \nvalues\n of length \nn\n, where \nvalues[i]\n is the \nvalue\n associated with the \ni\nth\n node.\n\n\nYou start with a score of \n0\n. In one operation, you can:\n\n\n\n\nPick any node \ni\n.\n\n\nAdd \nvalues[i]\n to your score.\n\n\nSet \nvalues[i]\n to \n0\n.\n\n\n\n\nA tree is \nhealthy\n if the sum of values on the path from the root to any leaf node is different than zero.\n\n\nReturn \nthe \nmaximum score\n you can obtain after performing these operations on the tree any number of times so that it remains \nhealthy\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [[0,1],[0,2],[0,3],[2,4],[4,5]], values = [5,2,5,2,1,1]\n\nOutput:\n 11\n\nExplanation:\n We can choose nodes 1, 2, 3, 4, and 5. The value of the root is non-zero. Hence, the sum of values on the path from the root to any leaf is different than zero. Therefore, the tree is healthy and the score is values[1] + values[2] + values[3] + values[4] + values[5] = 11.\nIt can be shown that 11 is the maximum score obtainable after any number of operations on the tree.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [[0,1],[0,2],[1,3],[1,4],[2,5],[2,6]], values = [20,10,9,7,4,3,5]\n\nOutput:\n 40\n\nExplanation:\n We can choose nodes 0, 2, 3, and 4.\n- The sum of values on the path from 0 to 4 is equal to 10.\n- The sum of values on the path from 0 to 3 is equal to 10.\n- The sum of values on the path from 0 to 5 is equal to 3.\n- The sum of values on the path from 0 to 6 is equal to 5.\nTherefore, the tree is healthy and the score is values[0] + values[2] + values[3] + values[4] = 40.\nIt can be shown that 40 is the maximum score obtainable after any number of operations on the tree.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 2 * 10\n4\n\n\nedges.length == n - 1\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\nvalues.length == n\n\n\n1 <= values[i] <= 10\n9\n\n\nThe input is generated such that \nedges\n represents a valid tree.",
        "temas": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 2934,
        "slug": "minimum-operations-to-maximize-last-elements-in-arrays",
        "url": "https://leetcode.com/problems/minimum-operations-to-maximize-last-elements-in-arrays/",
        "titulo": "Minimum Operations to Maximize Last Elements in Arrays",
        "enunciado": "You are given two \n0-indexed\n integer arrays, \nnums1\n and \nnums2\n, both having length \nn\n.\n\n\nYou are allowed to perform a series of \noperations\n (\npossibly none\n).\n\n\nIn an operation, you select an index \ni\n in the range \n[0, n - 1]\n and \nswap\n the values of \nnums1[i]\n and \nnums2[i]\n.\n\n\nYour task is to find the \nminimum\n number of operations required to satisfy the following conditions:\n\n\n\n\nnums1[n - 1]\n is equal to the \nmaximum value\n among all elements of \nnums1\n, i.e., \nnums1[n - 1] = max(nums1[0], nums1[1], ..., nums1[n - 1])\n.\n\n\nnums2[n - 1]\n is equal to the \nmaximum\n \nvalue\n among all elements of \nnums2\n, i.e., \nnums2[n - 1] = max(nums2[0], nums2[1], ..., nums2[n - 1])\n.\n\n\n\n\nReturn \nan integer denoting the \nminimum\n number of operations needed to meet \nboth\n conditions\n, \nor \n-1\n if it is \nimpossible\n to satisfy both conditions.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,2,7], nums2 = [4,5,3]\n\nOutput:\n 1\n\nExplanation:\n In this example, an operation can be performed using index i = 2.\nWhen nums1[2] and nums2[2] are swapped, nums1 becomes [1,2,3] and nums2 becomes [4,5,7].\nBoth conditions are now satisfied.\nIt can be shown that the minimum number of operations needed to be performed is 1.\nSo, the answer is 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [2,3,4,5,9], nums2 = [8,8,4,4,4]\n\nOutput:\n 2\n\nExplanation:\n In this example, the following operations can be performed:\nFirst operation using index i = 4.\nWhen nums1[4] and nums2[4] are swapped, nums1 becomes [2,3,4,5,4], and nums2 becomes [8,8,4,4,9].\nAnother operation using index i = 3.\nWhen nums1[3] and nums2[3] are swapped, nums1 becomes [2,3,4,4,4], and nums2 becomes [8,8,4,5,9].\nBoth conditions are now satisfied.\nIt can be shown that the minimum number of operations needed to be performed is 2.\nSo, the answer is 2.   \n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [1,5,4], nums2 = [2,5,3]\n\nOutput:\n -1\n\nExplanation:\n In this example, it is not possible to satisfy both conditions. \nSo, the answer is -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums1.length == nums2.length <= 1000\n\n\n1 <= nums1[i] <= 10\n9\n\n\n1 <= nums2[i] <= 10\n9",
        "temas": [
            "Array",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2924,
        "slug": "find-champion-ii",
        "url": "https://leetcode.com/problems/find-champion-ii/",
        "titulo": "Find Champion II",
        "enunciado": "There are \nn\n teams numbered from \n0\n to \nn - 1\n in a tournament; each team is also a node in a \nDAG\n.\n\n\nYou are given the integer \nn\n and a \n0-indexed\n 2D integer array \nedges\n of length \nm\n representing the \nDAG\n, where \nedges[i] = [u\ni\n, v\ni\n]\n indicates that there is a directed edge from team \nu\ni\n to team \nv\ni\n in the graph.\n\n\nA directed edge from \na\n to \nb\n in the graph means that team \na\n is \nstronger\n than team \nb\n and team \nb\n is \nweaker\n than team \na\n.\n\n\nTeam \na\n will be the \nchampion\n of the tournament if there is no team \nb\n that is \nstronger\n than team \na\n.\n\n\nReturn \nthe team that will be the \nchampion\n of the tournament if there is a \nunique\n champion, otherwise, return \n-1\n.\n\n\nNotes\n\n\n\n\nA \ncycle\n is a series of nodes \na\n1\n, a\n2\n, ..., a\nn\n, a\nn+1\n such that node \na\n1\n is the same node as node \na\nn+1\n, the nodes \na\n1\n, a\n2\n, ..., a\nn\n are distinct, and there is a directed edge from the node \na\ni\n to node \na\ni+1\n for every \ni\n in the range \n[1, n]\n.\n\n\nA \nDAG\n is a directed graph that does not have any \ncycle\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, edges = [[0,1],[1,2]]\n\nOutput:\n 0\n\nExplanation: \nTeam 1 is weaker than team 0. Team 2 is weaker than team 1. So the champion is team 0.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 4, edges = [[0,2],[1,3],[1,2]]\n\nOutput:\n -1\n\nExplanation:\n Team 2 is weaker than team 0 and team 1. Team 3 is weaker than team 1. But team 1 and team 0 are not weaker than any other teams. So the answer is -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 100\n\n\nm == edges.length\n\n\n0 <= m <= n * (n - 1) / 2\n\n\nedges[i].length == 2\n\n\n0 <= edge[i][j] <= n - 1\n\n\nedges[i][0] != edges[i][1]\n\n\nThe input is generated such that if team \na\n is stronger than team \nb\n, team \nb\n is not stronger than team \na\n.\n\n\nThe input is generated such that if team \na\n is stronger than team \nb\n and team \nb\n is stronger than team \nc\n, then team \na\n is stronger than team \nc\n.",
        "temas": [
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Graph",
        "has_image": true
    },
    {
        "id": 2909,
        "slug": "minimum-sum-of-mountain-triplets-ii",
        "url": "https://leetcode.com/problems/minimum-sum-of-mountain-triplets-ii/",
        "titulo": "Minimum Sum of Mountain Triplets II",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n of integers.\n\n\nA triplet of indices \n(i, j, k)\n is a \nmountain\n if:\n\n\n\n\ni < j < k\n\n\nnums[i] < nums[j]\n and \nnums[k] < nums[j]\n\n\n\n\nReturn \nthe \nminimum possible sum\n of a mountain triplet of\n \nnums\n. \nIf no such triplet exists, return\n \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [8,6,1,5,3]\n\nOutput:\n 9\n\nExplanation:\n Triplet (2, 3, 4) is a mountain triplet of sum 9 since: \n- 2 < 3 < 4\n- nums[2] < nums[3] and nums[4] < nums[3]\nAnd the sum of this triplet is nums[2] + nums[3] + nums[4] = 9. It can be shown that there are no mountain triplets with a sum of less than 9.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,4,8,7,10,2]\n\nOutput:\n 13\n\nExplanation:\n Triplet (1, 3, 5) is a mountain triplet of sum 13 since: \n- 1 < 3 < 5\n- nums[1] < nums[3] and nums[5] < nums[3]\nAnd the sum of this triplet is nums[1] + nums[3] + nums[5] = 13. It can be shown that there are no mountain triplets with a sum of less than 13.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [6,5,4,3,4,5]\n\nOutput:\n -1\n\nExplanation:\n It can be shown that there are no mountain triplets in nums.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n8",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2919,
        "slug": "minimum-increment-operations-to-make-array-beautiful",
        "url": "https://leetcode.com/problems/minimum-increment-operations-to-make-array-beautiful/",
        "titulo": "Minimum Increment Operations to Make Array Beautiful",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n having length \nn\n, and an integer \nk\n.\n\n\nYou can perform the following \nincrement\n operation \nany\n number of times (\nincluding zero\n):\n\n\n\n\nChoose an index \ni\n in the range \n[0, n - 1]\n, and increase \nnums[i]\n by \n1\n.\n\n\n\n\nAn array is considered \nbeautiful\n if, for any \nsubarray\n with a size of \n3\n or \nmore\n, its \nmaximum\n element is \ngreater than or equal\n to \nk\n.\n\n\nReturn \nan integer denoting the \nminimum\n number of increment operations needed to make \nnums\n \nbeautiful\n.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,0,0,2], k = 4\n\nOutput:\n 3\n\nExplanation:\n We can perform the following increment operations to make nums beautiful:\nChoose index i = 1 and increase nums[1] by 1 -> [2,4,0,0,2].\nChoose index i = 4 and increase nums[4] by 1 -> [2,4,0,0,3].\nChoose index i = 4 and increase nums[4] by 1 -> [2,4,0,0,4].\nThe subarrays with a size of 3 or more are: [2,4,0], [4,0,0], [0,0,4], [2,4,0,0], [4,0,0,4], [2,4,0,0,4].\nIn all the subarrays, the maximum element is equal to k = 4, so nums is now beautiful.\nIt can be shown that nums cannot be made beautiful with fewer than 3 increment operations.\nHence, the answer is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,3,3], k = 5\n\nOutput:\n 2\n\nExplanation:\n We can perform the following increment operations to make nums beautiful:\nChoose index i = 2 and increase nums[2] by 1 -> [0,1,4,3].\nChoose index i = 2 and increase nums[2] by 1 -> [0,1,5,3].\nThe subarrays with a size of 3 or more are: [0,1,5], [1,5,3], [0,1,5,3].\nIn all the subarrays, the maximum element is equal to k = 5, so nums is now beautiful.\nIt can be shown that nums cannot be made beautiful with fewer than 2 increment operations.\nHence, the answer is 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1,2], k = 1\n\nOutput:\n 0\n\nExplanation:\n The only subarray with a size of 3 or more in this example is [1,1,2].\nThe maximum element, 2, is already greater than k = 1, so we don't need any increment operation.\nHence, the answer is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n == nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n0 <= k <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2914,
        "slug": "minimum-number-of-changes-to-make-binary-string-beautiful",
        "url": "https://leetcode.com/problems/minimum-number-of-changes-to-make-binary-string-beautiful/",
        "titulo": "Minimum Number of Changes to Make Binary String Beautiful",
        "enunciado": "You are given a \n0-indexed\n binary string \ns\n having an even length.\n\n\nA string is \nbeautiful\n if it's possible to partition it into one or more substrings such that:\n\n\n\n\nEach substring has an \neven length\n.\n\n\nEach substring contains \nonly\n \n1\n's or \nonly\n \n0\n's.\n\n\n\n\nYou can change any character in \ns\n to \n0\n or \n1\n.\n\n\nReturn \nthe \nminimum\n number of changes required to make the string \ns\n \nbeautiful\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"1001\"\n\nOutput:\n 2\n\nExplanation:\n We change s[1] to 1 and s[3] to 0 to get string \"1100\".\nIt can be seen that the string \"1100\" is beautiful because we can partition it into \"11|00\".\nIt can be proven that 2 is the minimum number of changes needed to make the string beautiful.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"10\"\n\nOutput:\n 1\n\nExplanation:\n We change s[1] to 1 to get string \"11\".\nIt can be seen that the string \"11\" is beautiful because we can partition it into \"11\".\nIt can be proven that 1 is the minimum number of changes needed to make the string beautiful.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"0000\"\n\nOutput:\n 0\n\nExplanation:\n We don't need to make any changes as the string \"0000\" is beautiful already.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= s.length <= 10\n5\n\n\ns\n has an even length.\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2918,
        "slug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
        "url": "https://leetcode.com/problems/minimum-equal-sum-of-two-arrays-after-replacing-zeros/",
        "titulo": "Minimum Equal Sum of Two Arrays After Replacing Zeros",
        "enunciado": "You are given two arrays \nnums1\n and \nnums2\n consisting of positive integers.\n\n\nYou have to replace \nall\n the \n0\n's in both arrays with \nstrictly\n positive integers such that the sum of elements of both arrays becomes \nequal\n.\n\n\nReturn \nthe \nminimum\n equal sum you can obtain, or \n-1\n if it is impossible\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [3,2,0,1,0], nums2 = [6,5,0]\n\nOutput:\n 12\n\nExplanation:\n We can replace 0's in the following way:\n- Replace the two 0's in nums1 with the values 2 and 4. The resulting array is nums1 = [3,2,2,1,4].\n- Replace the 0 in nums2 with the value 1. The resulting array is nums2 = [6,5,1].\nBoth arrays have an equal sum of 12. It can be shown that it is the minimum sum we can obtain.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [2,0,2,0], nums2 = [1,4]\n\nOutput:\n -1\n\nExplanation:\n It is impossible to make the sum of both arrays equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 10\n5\n\n\n0 <= nums1[i], nums2[i] <= 10\n6",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2905,
        "slug": "find-indices-with-index-and-value-difference-ii",
        "url": "https://leetcode.com/problems/find-indices-with-index-and-value-difference-ii/",
        "titulo": "Find Indices With Index and Value Difference II",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n having length \nn\n, an integer \nindexDifference\n, and an integer \nvalueDifference\n.\n\n\nYour task is to find \ntwo\n indices \ni\n and \nj\n, both in the range \n[0, n - 1]\n, that satisfy the following conditions:\n\n\n\n\nabs(i - j) >= indexDifference\n, and\n\n\nabs(nums[i] - nums[j]) >= valueDifference\n\n\n\n\nReturn \nan integer array\n \nanswer\n, \nwhere\n \nanswer = [i, j]\n \nif there are two such indices\n, \nand\n \nanswer = [-1, -1]\n \notherwise\n. If there are multiple choices for the two indices, return \nany of them\n.\n\n\nNote:\n \ni\n and \nj\n may be \nequal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,1,4,1], indexDifference = 2, valueDifference = 4\n\nOutput:\n [0,3]\n\nExplanation:\n In this example, i = 0 and j = 3 can be selected.\nabs(0 - 3) >= 2 and abs(nums[0] - nums[3]) >= 4.\nHence, a valid answer is [0,3].\n[3,0] is also a valid answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,1], indexDifference = 0, valueDifference = 0\n\nOutput:\n [0,0]\n\nExplanation:\n In this example, i = 0 and j = 0 can be selected.\nabs(0 - 0) >= 0 and abs(nums[0] - nums[0]) >= 0.\nHence, a valid answer is [0,0].\nOther valid answers are [0,1], [1,0], and [1,1].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3], indexDifference = 2, valueDifference = 4\n\nOutput:\n [-1,-1]\n\nExplanation:\n In this example, it can be shown that it is impossible to find two indices that satisfy both conditions.\nHence, [-1,-1] is returned.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n0 <= indexDifference <= 10\n5\n\n\n0 <= valueDifference <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2910,
        "slug": "minimum-number-of-groups-to-create-a-valid-assignment",
        "url": "https://leetcode.com/problems/minimum-number-of-groups-to-create-a-valid-assignment/",
        "titulo": "Minimum Number of Groups to Create a Valid Assignment",
        "enunciado": "You are given a collection of numbered \nballs\n and instructed to sort them into boxes for a nearly balanced distribution. There are two rules you must follow:\n\n\n\n\nBalls with the same box must have the same value. But, if you have more than one ball with the same number, you can put them in different boxes.\n\n\nThe biggest box can only have one more ball than the smallest box.\n\n\n\n\n​Return the \nfewest number of boxes\n to sort these balls following these rules.\n\n\n \n\n\nExample 1: \n\n\n\n\nInput: \n \n balls = [3,2,3,2,3] \n\n\nOutput: \n \n 2 \n\n\nExplanation:\n\n\nWe can sort \nballs\n into boxes as follows:\n\n\n\n\n[3,3,3]\n\n\n[2,2]\n\n\n\n\nThe size difference between the two boxes doesn't exceed one.\n\n\n\n\nExample 2: \n\n\n\n\nInput: \n \n balls = [10,10,10,3,1,1] \n\n\nOutput: \n \n 4 \n\n\nExplanation:\n\n\nWe can sort \nballs\n into boxes as follows:\n\n\n\n\n\n\n\n\n[10]\n\n\n[10,10]\n\n\n[3]\n\n\n[1,1]\n\n\n\n\nYou can't use fewer than four boxes while still following the rules. For example, putting all three balls numbered 10 in one box would break the rule about the maximum size difference between boxes.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2874,
        "slug": "maximum-value-of-an-ordered-triplet-ii",
        "url": "https://leetcode.com/problems/maximum-value-of-an-ordered-triplet-ii/",
        "titulo": "Maximum Value of an Ordered Triplet II",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n.\n\n\nReturn \nthe maximum value over all triplets of indices\n \n(i, j, k)\n \nsuch that\n \ni < j < k\n. \nIf all such triplets have a negative value, return \n0\n.\n\n\nThe \nvalue of a triplet of indices\n \n(i, j, k)\n is equal to \n(nums[i] - nums[j]) * nums[k]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [12,6,1,2,7]\n\nOutput:\n 77\n\nExplanation:\n The value of the triplet (0, 2, 4) is (nums[0] - nums[2]) * nums[4] = 77.\nIt can be shown that there are no ordered triplets of indices with a value greater than 77. \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,10,3,4,19]\n\nOutput:\n 133\n\nExplanation:\n The value of the triplet (1, 2, 4) is (nums[1] - nums[2]) * nums[4] = 133.\nIt can be shown that there are no ordered triplets of indices with a value greater than 133.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 0\n\nExplanation:\n The only ordered triplet of indices (0, 1, 2) has a negative value of (nums[0] - nums[1]) * nums[2] = -3. Hence, the answer would be 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2895,
        "slug": "minimum-processing-time",
        "url": "https://leetcode.com/problems/minimum-processing-time/",
        "titulo": "Minimum Processing Time",
        "enunciado": "You have a certain number of processors, each having 4 cores. The number of tasks to be executed is four times the number of processors. Each task must be assigned to a unique core, and each core can only be used once.\n\n\nYou are given an array \nprocessorTime\n representing the time each processor becomes available and an array \ntasks\n representing how long each task takes to complete. Return the \nminimum\n time needed to complete all tasks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nprocessorTime = [8,10], tasks = [2,2,3,1,8,7,4,5]\n\n\nOutput:\n \n16\n\n\nExplanation:\n\n\nAssign the tasks at indices 4, 5, 6, 7 to the first processor which becomes available at \ntime = 8\n, and the tasks at indices 0, 1, 2, 3 to the second processor which becomes available at \ntime = 10\n. \n\n\nThe time taken by the first processor to finish the execution of all tasks is \nmax(8 + 8, 8 + 7, 8 + 4, 8 + 5) = 16\n.\n\n\nThe time taken by the second processor to finish the execution of all tasks is \nmax(10 + 2, 10 + 2, 10 + 3, 10 + 1) = 13\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nprocessorTime = [10,20], tasks = [2,3,1,2,5,8,4,3]\n\n\nOutput:\n \n23\n\n\nExplanation:\n\n\nAssign the tasks at indices 1, 4, 5, 6 to the first processor and the others to the second processor.\n\n\nThe time taken by the first processor to finish the execution of all tasks is \nmax(10 + 3, 10 + 5, 10 + 8, 10 + 4) = 18\n.\n\n\nThe time taken by the second processor to finish the execution of all tasks is \nmax(20 + 2, 20 + 1, 20 + 2, 20 + 3) = 23\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == processorTime.length <= 25000\n\n\n1 <= tasks.length <= 10\n5\n\n\n0 <= processorTime[i] <= 10\n9\n\n\n1 <= tasks[i] <= 10\n9\n\n\ntasks.length == 4 * n",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2904,
        "slug": "shortest-and-lexicographically-smallest-beautiful-string",
        "url": "https://leetcode.com/problems/shortest-and-lexicographically-smallest-beautiful-string/",
        "titulo": "Shortest and Lexicographically Smallest Beautiful String",
        "enunciado": "You are given a binary string \ns\n and a positive integer \nk\n.\n\n\nA substring of \ns\n is \nbeautiful\n if the number of \n1\n's in it is exactly \nk\n.\n\n\nLet \nlen\n be the length of the \nshortest\n beautiful substring.\n\n\nReturn \nthe lexicographically \nsmallest\n beautiful substring of string \ns\n with length equal to \nlen\n. If \ns\n doesn't contain a beautiful substring, return \nan \nempty\n string\n.\n\n\nA string \na\n is lexicographically \nlarger\n than a string \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, \na\n has a character strictly larger than the corresponding character in \nb\n.\n\n\n\n\nFor example, \n\"abcd\"\n is lexicographically larger than \n\"abcc\"\n because the first position they differ is at the fourth character, and \nd\n is greater than \nc\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"100011001\", k = 3\n\nOutput:\n \"11001\"\n\nExplanation:\n There are 7 beautiful substrings in this example:\n1. The substring \"\n100011\n001\".\n2. The substring \"\n1000110\n01\".\n3. The substring \"\n10001100\n1\".\n4. The substring \"1\n00011001\n\".\n5. The substring \"10\n0011001\n\".\n6. The substring \"100\n011001\n\".\n7. The substring \"1000\n11001\n\".\nThe length of the shortest beautiful substring is 5.\nThe lexicographically smallest beautiful substring with length 5 is the substring \"11001\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"1011\", k = 2\n\nOutput:\n \"11\"\n\nExplanation:\n There are 3 beautiful substrings in this example:\n1. The substring \"\n101\n1\".\n2. The substring \"1\n011\n\".\n3. The substring \"10\n11\n\".\nThe length of the shortest beautiful substring is 2.\nThe lexicographically smallest beautiful substring with length 2 is the substring \"11\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"000\", k = 1\n\nOutput:\n \"\"\n\nExplanation:\n There are no beautiful substrings in this example.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 100\n\n\n1 <= k <= s.length",
        "temas": [
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2901,
        "slug": "longest-unequal-adjacent-groups-subsequence-ii",
        "url": "https://leetcode.com/problems/longest-unequal-adjacent-groups-subsequence-ii/",
        "titulo": "Longest Unequal Adjacent Groups Subsequence II",
        "enunciado": "You are given a string array \nwords\n, and an array \ngroups\n, both arrays having length \nn\n.\n\n\nThe \nhamming distance\n between two strings of equal length is the number of positions at which the corresponding characters are \ndifferent\n.\n\n\nYou need to select the \nlongest\n \nsubsequence\n from an array of indices \n[0, 1, ..., n - 1]\n, such that for the subsequence denoted as \n[i\n0\n, i\n1\n, ..., i\nk-1\n]\n having length \nk\n, the following holds:\n\n\n\n\nFor \nadjacent\n indices in the subsequence, their corresponding groups are \nunequal\n, i.e., \ngroups[i\nj\n] != groups[i\nj+1\n]\n, for each \nj\n where \n0 < j + 1 < k\n.\n\n\nwords[i\nj\n]\n and \nwords[i\nj+1\n]\n are \nequal\n in length, and the \nhamming distance\n between them is \n1\n, where \n0 < j + 1 < k\n, for all indices in the subsequence.\n\n\n\n\nReturn \na string array containing the words corresponding to the indices \n(in order)\n in the selected subsequence\n. If there are multiple answers, return \nany of them\n.\n\n\nNote:\n strings in \nwords\n may be \nunequal\n in length.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput: \nwords = [\"bab\",\"dab\",\"cab\"], groups = [1,2,2]\n\n\nOutput: \n[\"bab\",\"cab\"]\n\n\nExplanation: \nA subsequence that can be selected is \n[0,2]\n.\n\n\n\n\ngroups[0] != groups[2]\n\n\nwords[0].length == words[2].length\n, and the hamming distance between them is 1.\n\n\n\n\nSo, a valid answer is \n[words[0],words[2]] = [\"bab\",\"cab\"]\n.\n\n\nAnother subsequence that can be selected is \n[0,1]\n.\n\n\n\n\ngroups[0] != groups[1]\n\n\nwords[0].length == words[1].length\n, and the hamming distance between them is \n1\n.\n\n\n\n\nSo, another valid answer is \n[words[0],words[1]] = [\"bab\",\"dab\"]\n.\n\n\nIt can be shown that the length of the longest subsequence of indices that satisfies the conditions is \n2\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput: \nwords = [\"a\",\"b\",\"c\",\"d\"], groups = [1,2,3,4]\n\n\nOutput: \n[\"a\",\"b\",\"c\",\"d\"]\n\n\nExplanation: \nWe can select the subsequence \n[0,1,2,3]\n.\n\n\nIt satisfies both conditions.\n\n\nHence, the answer is \n[words[0],words[1],words[2],words[3]] = [\"a\",\"b\",\"c\",\"d\"]\n.\n\n\nIt has the longest length among all subsequences of indices that satisfy the conditions.\n\n\nHence, it is the only answer.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == words.length == groups.length <= 1000\n\n\n1 <= words[i].length <= 10\n\n\n1 <= groups[i] <= n\n\n\nwords\n consists of \ndistinct\n strings.\n\n\nwords[i]\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2875,
        "slug": "minimum-size-subarray-in-infinite-array",
        "url": "https://leetcode.com/problems/minimum-size-subarray-in-infinite-array/",
        "titulo": "Minimum Size Subarray in Infinite Array",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n and an integer \ntarget\n.\n\n\nA \n0-indexed\n array \ninfinite_nums\n is generated by infinitely appending the elements of \nnums\n to itself.\n\n\nReturn \nthe length of the \nshortest\n subarray of the array \ninfinite_nums\n with a sum equal to \ntarget\n.\n If there is no such subarray return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3], target = 5\n\nOutput:\n 2\n\nExplanation:\n In this example infinite_nums = [1,2,3,1,2,3,1,2,...].\nThe subarray in the range [1,2], has the sum equal to target = 5 and length = 2.\nIt can be proven that 2 is the shortest length of a subarray with sum equal to target = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1,2,3], target = 4\n\nOutput:\n 2\n\nExplanation:\n In this example infinite_nums = [1,1,1,2,3,1,1,1,2,3,1,1,...].\nThe subarray in the range [4,5], has the sum equal to target = 4 and length = 2.\nIt can be proven that 2 is the shortest length of a subarray with sum equal to target = 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,4,6,8], target = 3\n\nOutput:\n -1\n\nExplanation:\n In this example infinite_nums = [2,4,6,8,2,4,6,8,...].\nIt can be proven that there is no subarray with sum equal to target = 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\n1 <= target <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2865,
        "slug": "beautiful-towers-i",
        "url": "https://leetcode.com/problems/beautiful-towers-i/",
        "titulo": "Beautiful Towers I",
        "enunciado": "You are given an array \nheights\n of \nn\n integers representing the number of bricks in \nn\n consecutive towers. Your task is to remove some bricks to form a \nmountain-shaped\n tower arrangement. In this arrangement, the tower heights are non-decreasing, reaching a maximum peak value with one or multiple consecutive towers and then non-increasing.\n\n\nReturn the \nmaximum possible sum\n of heights of a mountain-shaped tower arrangement.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nheights = [5,3,4,1,1]\n\n\nOutput:\n \n13\n\n\nExplanation:\n\n\nWe remove some bricks to make \nheights = [5,3,3,1,1]\n, the peak is at index 0.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nheights = [6,5,3,9,2,7]\n\n\nOutput:\n \n22\n\n\nExplanation:\n\n\nWe remove some bricks to make \nheights = [3,3,3,9,2,2]\n, the peak is at index 3.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nheights = [3,2,5,5,2,3]\n\n\nOutput:\n \n18\n\n\nExplanation:\n\n\nWe remove some bricks to make \nheights = [2,2,5,5,2,2]\n, the peak is at index 2 or 3.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == heights.length <= 10\n3\n\n\n1 <= heights[i] <= 10\n9",
        "temas": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2866,
        "slug": "beautiful-towers-ii",
        "url": "https://leetcode.com/problems/beautiful-towers-ii/",
        "titulo": "Beautiful Towers II",
        "enunciado": "You are given a \n0-indexed\n array \nmaxHeights\n of \nn\n integers.\n\n\nYou are tasked with building \nn\n towers in the coordinate line. The \ni\nth\n tower is built at coordinate \ni\n and has a height of \nheights[i]\n.\n\n\nA configuration of towers is \nbeautiful\n if the following conditions hold:\n\n\n\n\n1 <= heights[i] <= maxHeights[i]\n\n\nheights\n is a \nmountain\n array.\n\n\n\n\nArray \nheights\n is a \nmountain\n if there exists an index \ni\n such that:\n\n\n\n\nFor all \n0 < j <= i\n, \nheights[j - 1] <= heights[j]\n\n\nFor all \ni <= k < n - 1\n, \nheights[k + 1] <= heights[k]\n\n\n\n\nReturn \nthe \nmaximum possible sum of heights\n of a beautiful configuration of towers\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n maxHeights = [5,3,4,1,1]\n\nOutput:\n 13\n\nExplanation:\n One beautiful configuration with a maximum sum is heights = [5,3,3,1,1]. This configuration is beautiful since:\n- 1 <= heights[i] <= maxHeights[i]  \n- heights is a mountain of peak i = 0.\nIt can be shown that there exists no other beautiful configuration with a sum of heights greater than 13.\n\n\nExample 2:\n\n\n\n\nInput:\n maxHeights = [6,5,3,9,2,7]\n\nOutput:\n 22\n\nExplanation:\n One beautiful configuration with a maximum sum is heights = [3,3,3,9,2,2]. This configuration is beautiful since:\n- 1 <= heights[i] <= maxHeights[i]\n- heights is a mountain of peak i = 3.\nIt can be shown that there exists no other beautiful configuration with a sum of heights greater than 22.\n\n\nExample 3:\n\n\n\n\nInput:\n maxHeights = [3,2,5,5,2,3]\n\nOutput:\n 18\n\nExplanation:\n One beautiful configuration with a maximum sum is heights = [2,2,5,5,2,2]. This configuration is beautiful since:\n- 1 <= heights[i] <= maxHeights[i]\n- heights is a mountain of peak i = 2. \nNote that, for this configuration, i = 3 can also be considered a peak.\nIt can be shown that there exists no other beautiful configuration with a sum of heights greater than 18.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == maxHeights.length <= 10\n5\n\n\n1 <= maxHeights[i] <= 10\n9",
        "temas": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2915,
        "slug": "length-of-the-longest-subsequence-that-sums-to-target",
        "url": "https://leetcode.com/problems/length-of-the-longest-subsequence-that-sums-to-target/",
        "titulo": "Length of the Longest Subsequence That Sums to Target",
        "enunciado": "You are given a \n0-indexed\n array of integers \nnums\n, and an integer \ntarget\n.\n\n\nReturn \nthe \nlength of the longest subsequence\n of\n \nnums\n \nthat sums up to\n \ntarget\n. \nIf no such subsequence exists, return\n \n-1\n.\n\n\nA \nsubsequence\n is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5], target = 9\n\nOutput:\n 3\n\nExplanation:\n There are 3 subsequences with a sum equal to 9: [4,5], [1,3,5], and [2,3,4]. The longest subsequences are [1,3,5], and [2,3,4]. Hence, the answer is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,1,3,2,1,5], target = 7\n\nOutput:\n 4\n\nExplanation:\n There are 5 subsequences with a sum equal to 7: [4,3], [4,1,2], [4,2,1], [1,1,5], and [1,3,2,1]. The longest subsequence is [1,3,2,1]. Hence, the answer is 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1,5,4,5], target = 3\n\nOutput:\n -1\n\nExplanation:\n It can be shown that nums has no subsequence that sums up to 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 1000\n\n\n1 <= target <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2860,
        "slug": "happy-students",
        "url": "https://leetcode.com/problems/happy-students/",
        "titulo": "Happy Students",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of length \nn\n where \nn\n is the total number of students in the class. The class teacher tries to select a group of students so that all the students remain happy.\n\n\nThe \ni\nth\n student will become happy if one of these two conditions is met:\n\n\n\n\nThe student is selected and the total number of selected students is\n strictly greater than\n \nnums[i]\n.\n\n\nThe student is not selected and the total number of selected students is \nstrictly\n \nless than\n \nnums[i]\n.\n\n\n\n\nReturn \nthe number of ways to select a group of students so that everyone remains happy.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1]\n\nOutput:\n 2\n\nExplanation:\n \nThe two possible ways are:\nThe class teacher selects no student.\nThe class teacher selects both students to form the group. \nIf the class teacher selects just one student to form a group then the both students will not be happy. Therefore, there are only two possible ways.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [6,0,3,3,6,7,2,7]\n\nOutput:\n 3\n\nExplanation:\n \nThe three possible ways are:\nThe class teacher selects the student with index = 1 to form the group.\nThe class teacher selects the students with index = 1, 2, 3, 6 to form the group.\nThe class teacher selects all the students to form the group.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] < nums.length",
        "temas": [
            "Array",
            "Sorting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2861,
        "slug": "maximum-number-of-alloys",
        "url": "https://leetcode.com/problems/maximum-number-of-alloys/",
        "titulo": "Maximum Number of Alloys",
        "enunciado": "You are the owner of a company that creates alloys using various types of metals. There are \nn\n different types of metals available, and you have access to \nk\n machines that can be used to create alloys. Each machine requires a specific amount of each metal type to create an alloy.\n\n\nFor the \ni\nth\n machine to create an alloy, it needs \ncomposition[i][j]\n units of metal of type \nj\n. Initially, you have \nstock[i]\n units of metal type \ni\n, and purchasing one unit of metal type \ni\n costs \ncost[i]\n coins.\n\n\nGiven integers \nn\n, \nk\n, \nbudget\n, a \n1-indexed\n 2D array \ncomposition\n, and \n1-indexed\n arrays \nstock\n and \ncost\n, your goal is to \nmaximize\n the number of alloys the company can create while staying within the budget of \nbudget\n coins.\n\n\nAll alloys must be created with the same machine.\n\n\nReturn \nthe maximum number of alloys that the company can create\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, k = 2, budget = 15, composition = [[1,1,1],[1,1,10]], stock = [0,0,0], cost = [1,2,3]\n\nOutput:\n 2\n\nExplanation:\n It is optimal to use the 1\nst\n machine to create alloys.\nTo create 2 alloys we need to buy the:\n- 2 units of metal of the 1\nst\n type.\n- 2 units of metal of the 2\nnd\n type.\n- 2 units of metal of the 3\nrd\n type.\nIn total, we need 2 * 1 + 2 * 2 + 2 * 3 = 12 coins, which is smaller than or equal to budget = 15.\nNotice that we have 0 units of metal of each type and we have to buy all the required units of metal.\nIt can be proven that we can create at most 2 alloys.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, k = 2, budget = 15, composition = [[1,1,1],[1,1,10]], stock = [0,0,100], cost = [1,2,3]\n\nOutput:\n 5\n\nExplanation:\n It is optimal to use the 2\nnd\n machine to create alloys.\nTo create 5 alloys we need to buy:\n- 5 units of metal of the 1\nst\n type.\n- 5 units of metal of the 2\nnd\n type.\n- 0 units of metal of the 3\nrd\n type.\nIn total, we need 5 * 1 + 5 * 2 + 0 * 3 = 15 coins, which is smaller than or equal to budget = 15.\nIt can be proven that we can create at most 5 alloys.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 2, k = 3, budget = 10, composition = [[2,1],[1,2],[1,1]], stock = [1,1], cost = [5,5]\n\nOutput:\n 2\n\nExplanation:\n It is optimal to use the 3\nrd\n machine to create alloys.\nTo create 2 alloys we need to buy the:\n- 1 unit of metal of the 1\nst\n type.\n- 1 unit of metal of the 2\nnd\n type.\nIn total, we need 1 * 5 + 1 * 5 = 10 coins, which is smaller than or equal to budget = 10.\nIt can be proven that we can create at most 2 alloys.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, k <= 100\n\n\n0 <= budget <= 10\n8\n\n\ncomposition.length == k\n\n\ncomposition[i].length == n\n\n\n1 <= composition[i][j] <= 100\n\n\nstock.length == cost.length == n\n\n\n0 <= stock[i] <= 10\n8\n\n\n1 <= cost[i] <= 100",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2870,
        "slug": "minimum-number-of-operations-to-make-array-empty",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-empty/",
        "titulo": "Minimum Number of Operations to Make Array Empty",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n consisting of positive integers.\n\n\nThere are two types of operations that you can apply on the array \nany\n number of times:\n\n\n\n\nChoose \ntwo\n elements with \nequal\n values and \ndelete\n them from the array.\n\n\nChoose \nthree\n elements with \nequal\n values and \ndelete\n them from the array.\n\n\n\n\nReturn \nthe \nminimum\n number of operations required to make the array empty, or \n-1\n if it is not possible\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,3,2,2,4,2,3,4]\n\nOutput:\n 4\n\nExplanation:\n We can apply the following operations to make the array empty:\n- Apply the first operation on the elements at indices 0 and 3. The resulting array is nums = [3,3,2,4,2,3,4].\n- Apply the first operation on the elements at indices 2 and 4. The resulting array is nums = [3,3,4,3,4].\n- Apply the second operation on the elements at indices 0, 1, and 3. The resulting array is nums = [4,4].\n- Apply the first operation on the elements at indices 0 and 1. The resulting array is nums = [].\nIt can be shown that we cannot make the array empty in less than 4 operations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,1,2,2,3,3]\n\nOutput:\n -1\n\nExplanation:\n It is impossible to empty the array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6\n\n\n\n\n \n\n\nNote:\n This question is the same as \n2244: Minimum Rounds to Complete All Tasks.",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2850,
        "slug": "minimum-moves-to-spread-stones-over-grid",
        "url": "https://leetcode.com/problems/minimum-moves-to-spread-stones-over-grid/",
        "titulo": "Minimum Moves to Spread Stones Over Grid",
        "enunciado": "You are given a \n0-indexed\n 2D integer matrix \ngrid\n of size \n3 * 3\n, representing the number of stones in each cell. The grid contains exactly \n9\n stones, and there can be \nmultiple\n stones in a single cell.\n\n\nIn one move, you can move a single stone from its current cell to any other cell if the two cells share a side.\n\n\nReturn \nthe \nminimum number of moves\n required to place one stone in each cell\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,1,0],[1,1,1],[1,2,1]]\n\nOutput:\n 3\n\nExplanation:\n One possible sequence of moves to place one stone in each cell is: \n1- Move one stone from cell (2,1) to cell (2,2).\n2- Move one stone from cell (2,2) to cell (1,2).\n3- Move one stone from cell (1,2) to cell (0,2).\nIn total, it takes 3 moves to place one stone in each cell of the grid.\nIt can be shown that 3 is the minimum number of moves required to place one stone in each cell.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,3,0],[1,0,0],[1,0,3]]\n\nOutput:\n 4\n\nExplanation:\n One possible sequence of moves to place one stone in each cell is:\n1- Move one stone from cell (0,1) to cell (0,2).\n2- Move one stone from cell (0,1) to cell (1,1).\n3- Move one stone from cell (2,2) to cell (1,2).\n4- Move one stone from cell (2,2) to cell (2,1).\nIn total, it takes 4 moves to place one stone in each cell of the grid.\nIt can be shown that 4 is the minimum number of moves required to place one stone in each cell.\n\n\n\n \n\n\nConstraints:\n\n\n\n\ngrid.length == grid[i].length == 3\n\n\n0 <= grid[i][j] <= 9\n\n\nSum of \ngrid\n is equal to \n9\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2856,
        "slug": "minimum-array-length-after-pair-removals",
        "url": "https://leetcode.com/problems/minimum-array-length-after-pair-removals/",
        "titulo": "Minimum Array Length After Pair Removals",
        "enunciado": "Given an integer array \nnum\n sorted in non-decreasing order.\n\n\nYou can perform the following operation any number of times:\n\n\n\n\nChoose \ntwo\n indices, \ni\n and \nj\n, where \nnums[i] < nums[j]\n.\n\n\nThen, remove the elements at indices \ni\n and \nj\n from \nnums\n. The remaining elements retain their original order, and the array is re-indexed.\n\n\n\n\nReturn the \nminimum\n length of \nnums\n after applying the operation zero or more times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,2,3,4]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,1,2,2,3,3]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [1000000000,1000000000]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nSince both numbers are equal, they cannot be removed.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nnums = [2,3,4,4,4]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\nnums\n is sorted in \nnon-decreasing\n order.",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2871,
        "slug": "split-array-into-maximum-number-of-subarrays",
        "url": "https://leetcode.com/problems/split-array-into-maximum-number-of-subarrays/",
        "titulo": "Split Array Into Maximum Number of Subarrays",
        "enunciado": "You are given an array \nnums\n consisting of \nnon-negative\n integers.\n\n\nWe define the score of subarray \nnums[l..r]\n such that \nl <= r\n as \nnums[l] AND nums[l + 1] AND ... AND nums[r]\n where \nAND\n is the bitwise \nAND\n operation.\n\n\nConsider splitting the array into one or more subarrays such that the following conditions are satisfied:\n\n\n\n\nE\nach\n element of the array belongs to \nexactly\n one subarray.\n\n\nThe sum of scores of the subarrays is the \nminimum\n possible.\n\n\n\n\nReturn \nthe \nmaximum\n number of subarrays in a split that satisfies the conditions above.\n\n\nA \nsubarray\n is a contiguous part of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,0,2,0,1,2]\n\nOutput:\n 3\n\nExplanation:\n We can split the array into the following subarrays:\n- [1,0]. The score of this subarray is 1 AND 0 = 0.\n- [2,0]. The score of this subarray is 2 AND 0 = 0.\n- [1,2]. The score of this subarray is 1 AND 2 = 0.\nThe sum of scores is 0 + 0 + 0 = 0, which is the minimum possible score that we can obtain.\nIt can be shown that we cannot split the array into more than 3 subarrays with a total score of 0. So we return 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,7,1,3]\n\nOutput:\n 1\n\nExplanation:\n We can split the array into one subarray: [5,7,1,3] with a score of 1, which is the minimum possible score that we can obtain.\nIt can be shown that we cannot split the array into more than 1 subarray with a total score of 1. So we return 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2849,
        "slug": "determine-if-a-cell-is-reachable-at-a-given-time",
        "url": "https://leetcode.com/problems/determine-if-a-cell-is-reachable-at-a-given-time/",
        "titulo": "Determine if a Cell Is Reachable at a Given Time",
        "enunciado": "You are given four integers \nsx\n, \nsy\n, \nfx\n, \nfy\n, and a \nnon-negative\n integer \nt\n.\n\n\nIn an infinite 2D grid, you start at the cell \n(sx, sy)\n. Each second, you \nmust\n move to any of its adjacent cells.\n\n\nReturn \ntrue\n \nif you can reach cell \n(fx, fy)\n \nafter\n exactly\n \nt\n \nseconds\n, \nor\n \nfalse\n \notherwise\n.\n\n\nA cell's \nadjacent cells\n are the 8 cells around it that share at least one corner with it. You can visit the same cell several times.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n sx = 2, sy = 4, fx = 7, fy = 7, t = 6\n\nOutput:\n true\n\nExplanation:\n Starting at cell (2, 4), we can reach cell (7, 7) in exactly 6 seconds by going through the cells depicted in the picture above. \n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n sx = 3, sy = 1, fx = 7, fy = 3, t = 3\n\nOutput:\n false\n\nExplanation:\n Starting at cell (3, 1), it takes at least 4 seconds to reach cell (7, 3) by going through the cells depicted in the picture above. Hence, we cannot reach cell (7, 3) at the third second.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= sx, sy, fx, fy <= 10\n9\n\n\n0 <= t <= 10\n9",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 2844,
        "slug": "minimum-operations-to-make-a-special-number",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-a-special-number/",
        "titulo": "Minimum Operations to Make a Special Number",
        "enunciado": "You are given a \n0-indexed\n string \nnum\n representing a non-negative integer.\n\n\nIn one operation, you can pick any digit of \nnum\n and delete it. Note that if you delete all the digits of \nnum\n, \nnum\n becomes \n0\n.\n\n\nReturn \nthe \nminimum number of operations\n required to make\n \nnum\n \nspecial\n.\n\n\nAn integer \nx\n is considered \nspecial\n if it is divisible by \n25\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"2245047\"\n\nOutput:\n 2\n\nExplanation:\n Delete digits num[5] and num[6]. The resulting number is \"22450\" which is special since it is divisible by 25.\nIt can be shown that 2 is the minimum number of operations required to get a special number.\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"2908305\"\n\nOutput:\n 3\n\nExplanation:\n Delete digits num[3], num[4], and num[6]. The resulting number is \"2900\" which is special since it is divisible by 25.\nIt can be shown that 3 is the minimum number of operations required to get a special number.\n\n\nExample 3:\n\n\n\n\nInput:\n num = \"10\"\n\nOutput:\n 1\n\nExplanation:\n Delete digit num[0]. The resulting number is \"0\" which is special since it is divisible by 25.\nIt can be shown that 1 is the minimum number of operations required to get a special number.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num.length <= 100\n\n\nnum\n only consists of digits \n'0'\n through \n'9'\n.\n\n\nnum\n does not contain any leading zeros.",
        "temas": [
            "Math",
            "String",
            "Greedy",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2896,
        "slug": "apply-operations-to-make-two-strings-equal",
        "url": "https://leetcode.com/problems/apply-operations-to-make-two-strings-equal/",
        "titulo": "Apply Operations to Make Two Strings Equal",
        "enunciado": "You are given two \n0-indexed\n binary strings \ns1\n and \ns2\n, both of length \nn\n, and a positive integer \nx\n.\n\n\nYou can perform any of the following operations on the string \ns1\n \nany\n number of times:\n\n\n\n\nChoose two indices \ni\n and \nj\n, and flip both \ns1[i]\n and \ns1[j]\n. The cost of this operation is \nx\n.\n\n\nChoose an index \ni\n such that \ni < n - 1\n and flip both \ns1[i]\n and \ns1[i + 1]\n. The cost of this operation is \n1\n.\n\n\n\n\nReturn \nthe \nminimum\n cost needed to make the strings \ns1\n and \ns2\n equal, or return \n-1\n if it is impossible.\n\n\nNote\n that flipping a character means changing it from \n0\n to \n1\n or vice-versa.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"1100011000\", s2 = \"0101001010\", x = 2\n\nOutput:\n 4\n\nExplanation:\n We can do the following operations:\n- Choose i = 3 and apply the second operation. The resulting string is s1 = \"110\n11\n11000\".\n- Choose i = 4 and apply the second operation. The resulting string is s1 = \"1101\n00\n1000\".\n- Choose i = 0 and j = 8 and apply the first operation. The resulting string is s1 = \"\n0\n1010010\n1\n0\" = s2.\nThe total cost is 1 + 1 + 2 = 4. It can be shown that it is the minimum cost possible.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"10110\", s2 = \"00011\", x = 4\n\nOutput:\n -1\n\nExplanation:\n It is not possible to make the two strings equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == s1.length == s2.length\n\n\n1 <= n, x <= 500\n\n\ns1\n and \ns2\n consist only of the characters \n'0'\n and \n'1'\n.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2906,
        "slug": "construct-product-matrix",
        "url": "https://leetcode.com/problems/construct-product-matrix/",
        "titulo": "Construct Product Matrix",
        "enunciado": "Given a \n0-indexed\n 2D integer matrix \ngrid\n \nof size \nn * m\n, we define a \n0-indexed\n 2D matrix \np\n of size \nn * m\n as the \nproduct\n matrix of \ngrid\n if the following condition is met:\n\n\n\n\nEach element \np[i][j]\n is calculated as the product of all elements in \ngrid\n except for the element \ngrid[i][j]\n. This product is then taken modulo \n12345\n.\n\n\n\n\nReturn \nthe product matrix of\n \ngrid\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n grid = [[1,2],[3,4]]\n\nOutput:\n [[24,12],[8,6]]\n\nExplanation:\n p[0][0] = grid[0][1] * grid[1][0] * grid[1][1] = 2 * 3 * 4 = 24\np[0][1] = grid[0][0] * grid[1][0] * grid[1][1] = 1 * 3 * 4 = 12\np[1][0] = grid[0][0] * grid[0][1] * grid[1][1] = 1 * 2 * 4 = 8\np[1][1] = grid[0][0] * grid[0][1] * grid[1][0] = 1 * 2 * 3 = 6\nSo the answer is [[24,12],[8,6]].\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[12345],[2],[1]]\n\nOutput:\n [[2],[0],[0]]\n\nExplanation:\n p[0][0] = grid[0][1] * grid[0][2] = 2 * 1 = 2.\np[0][1] = grid[0][0] * grid[0][2] = 12345 * 1 = 12345. 12345 % 12345 = 0. So p[0][1] = 0.\np[0][2] = grid[0][0] * grid[0][1] = 12345 * 2 = 24690. 24690 % 12345 = 0. So p[0][2] = 0.\nSo the answer is [[2],[0],[0]].\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == grid.length <= 10\n5\n\n\n1 <= m == grid[i].length <= 10\n5\n\n\n2 <= n * m <= 10\n5\n\n\n1 <= grid[i][j] <= 10\n9",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2834,
        "slug": "find-the-minimum-possible-sum-of-a-beautiful-array",
        "url": "https://leetcode.com/problems/find-the-minimum-possible-sum-of-a-beautiful-array/",
        "titulo": "Find the Minimum Possible Sum of a Beautiful Array",
        "enunciado": "You are given positive integers \nn\n and \ntarget\n.\n\n\nAn array \nnums\n is \nbeautiful\n if it meets the following conditions:\n\n\n\n\nnums.length == n\n.\n\n\nnums\n consists of pairwise \ndistinct\n \npositive\n integers.\n\n\nThere doesn't exist two \ndistinct\n indices, \ni\n and \nj\n, in the range \n[0, n - 1]\n, such that \nnums[i] + nums[j] == target\n.\n\n\n\n\nReturn \nthe \nminimum\n possible sum that a beautiful array could have modulo \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2, target = 3\n\nOutput:\n 4\n\nExplanation:\n We can see that nums = [1,3] is beautiful.\n- The array nums has length n = 2.\n- The array nums consists of pairwise distinct positive integers.\n- There doesn't exist two distinct indices, i and j, with nums[i] + nums[j] == 3.\nIt can be proven that 4 is the minimum possible sum that a beautiful array could have.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, target = 3\n\nOutput:\n 8\n\nExplanation:\n We can see that nums = [1,3,4] is beautiful.\n- The array nums has length n = 3.\n- The array nums consists of pairwise distinct positive integers.\n- There doesn't exist two distinct indices, i and j, with nums[i] + nums[j] == 3.\nIt can be proven that 8 is the minimum possible sum that a beautiful array could have.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 1, target = 1\n\nOutput:\n 1\n\nExplanation:\n We can see, that nums = [1] is beautiful.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n9\n\n\n1 <= target <= 10\n9",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2825,
        "slug": "make-string-a-subsequence-using-cyclic-increments",
        "url": "https://leetcode.com/problems/make-string-a-subsequence-using-cyclic-increments/",
        "titulo": "Make String a Subsequence Using Cyclic Increments",
        "enunciado": "You are given two \n0-indexed\n strings \nstr1\n and \nstr2\n.\n\n\nIn an operation, you select a \nset\n of indices in \nstr1\n, and for each index \ni\n in the set, increment \nstr1[i]\n to the next character \ncyclically\n. That is \n'a'\n becomes \n'b'\n, \n'b'\n becomes \n'c'\n, and so on, and \n'z'\n becomes \n'a'\n.\n\n\nReturn \ntrue\n \nif it is possible to make \nstr2\n \na subsequence of \nstr1\n \nby performing the operation \nat most once\n, \nand\n \nfalse\n \notherwise\n.\n\n\nNote:\n A subsequence of a string is a new string that is formed from the original string by deleting some (possibly none) of the characters without disturbing the relative positions of the remaining characters.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n str1 = \"abc\", str2 = \"ad\"\n\nOutput:\n true\n\nExplanation:\n Select index 2 in str1.\nIncrement str1[2] to become 'd'. \nHence, str1 becomes \"abd\" and str2 is now a subsequence. Therefore, true is returned.\n\n\nExample 2:\n\n\n\n\nInput:\n str1 = \"zc\", str2 = \"ad\"\n\nOutput:\n true\n\nExplanation:\n Select indices 0 and 1 in str1. \nIncrement str1[0] to become 'a'. \nIncrement str1[1] to become 'd'. \nHence, str1 becomes \"ad\" and str2 is now a subsequence. Therefore, true is returned.\n\n\nExample 3:\n\n\n\n\nInput:\n str1 = \"ab\", str2 = \"d\"\n\nOutput:\n false\n\nExplanation:\n In this example, it can be shown that it is impossible to make str2 a subsequence of str1 using the operation at most once. \nTherefore, false is returned.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= str1.length <= 10\n5\n\n\n1 <= str2.length <= 10\n5\n\n\nstr1\n and \nstr2\n consist of only lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 2817,
        "slug": "minimum-absolute-difference-between-elements-with-constraint",
        "url": "https://leetcode.com/problems/minimum-absolute-difference-between-elements-with-constraint/",
        "titulo": "Minimum Absolute Difference Between Elements With Constraint",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \nx\n.\n\n\nFind the \nminimum absolute difference\n between two elements in the array that are at least \nx\n indices apart.\n\n\nIn other words, find two indices \ni\n and \nj\n such that \nabs(i - j) >= x\n and \nabs(nums[i] - nums[j])\n is minimized.\n\n\nReturn\n an integer denoting the \nminimum\n absolute difference between two elements that are at least\n \nx\n \nindices apart\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,3,2,4], x = 2\n\nOutput:\n 0\n\nExplanation:\n We can select nums[0] = 4 and nums[3] = 4. \nThey are at least 2 indices apart, and their absolute difference is the minimum, 0. \nIt can be shown that 0 is the optimal answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,3,2,10,15], x = 1\n\nOutput:\n 1\n\nExplanation:\n We can select nums[1] = 3 and nums[2] = 2.\nThey are at least 1 index apart, and their absolute difference is the minimum, 1.\nIt can be shown that 1 is the optimal answer.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4], x = 3\n\nOutput:\n 3\n\nExplanation:\n We can select nums[0] = 1 and nums[3] = 4.\nThey are at least 3 indices apart, and their absolute difference is the minimum, 3.\nIt can be shown that 3 is the optimal answer.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n0 <= x < nums.length",
        "temas": [
            "Array",
            "Binary Search",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2830,
        "slug": "maximize-the-profit-as-the-salesman",
        "url": "https://leetcode.com/problems/maximize-the-profit-as-the-salesman/",
        "titulo": "Maximize the Profit as the Salesman",
        "enunciado": "You are given an integer \nn\n representing the number of houses on a number line, numbered from \n0\n to \nn - 1\n.\n\n\nAdditionally, you are given a 2D integer array \noffers\n where \noffers[i] = [start\ni\n, end\ni\n, gold\ni\n]\n, indicating that \ni\nth\n buyer wants to buy all the houses from \nstart\ni\n to \nend\ni\n for \ngold\ni\n amount of gold.\n\n\nAs a salesman, your goal is to \nmaximize\n your earnings by strategically selecting and selling houses to buyers.\n\n\nReturn \nthe maximum amount of gold you can earn\n.\n\n\nNote\n that different buyers can't buy the same house, and some houses may remain unsold.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 5, offers = [[0,0,1],[0,2,2],[1,3,2]]\n\nOutput:\n 3\n\nExplanation:\n There are 5 houses numbered from 0 to 4 and there are 3 purchase offers.\nWe sell houses in the range [0,0] to 1\nst\n buyer for 1 gold and houses in the range [1,3] to 3\nrd\n buyer for 2 golds.\nIt can be proven that 3 is the maximum amount of gold we can achieve.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 5, offers = [[0,0,1],[0,2,10],[1,3,2]]\n\nOutput:\n 10\n\nExplanation:\n There are 5 houses numbered from 0 to 4 and there are 3 purchase offers.\nWe sell houses in the range [0,2] to 2\nnd\n buyer for 10 golds.\nIt can be proven that 10 is the maximum amount of gold we can achieve.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= offers.length <= 10\n5\n\n\noffers[i].length == 3\n\n\n0 <= start\ni\n <= end\ni\n <= n - 1\n\n\n1 <= gold\ni\n <= 10\n3",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2840,
        "slug": "check-if-strings-can-be-made-equal-with-operations-ii",
        "url": "https://leetcode.com/problems/check-if-strings-can-be-made-equal-with-operations-ii/",
        "titulo": "Check if Strings Can be Made Equal With Operations II",
        "enunciado": "You are given two strings \ns1\n and \ns2\n, both of length \nn\n, consisting of \nlowercase\n English letters.\n\n\nYou can apply the following operation on \nany\n of the two strings \nany\n number of times:\n\n\n\n\nChoose any two indices \ni\n and \nj\n such that \ni < j\n and the difference \nj - i\n is \neven\n, then \nswap\n the two characters at those indices in the string.\n\n\n\n\nReturn \ntrue\n if you can make the strings \ns1\n and \ns2\n equal, and \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"abcdba\", s2 = \"cabdab\"\n\nOutput:\n true\n\nExplanation:\n We can apply the following operations on s1:\n- Choose the indices i = 0, j = 2. The resulting string is s1 = \"cbadba\".\n- Choose the indices i = 2, j = 4. The resulting string is s1 = \"cbbdaa\".\n- Choose the indices i = 1, j = 5. The resulting string is s1 = \"cabdab\" = s2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"abe\", s2 = \"bea\"\n\nOutput:\n false\n\nExplanation:\n It is not possible to make the two strings equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == s1.length == s2.length\n\n\n1 <= n <= 10\n5\n\n\ns1\n and \ns2\n consist only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2841,
        "slug": "maximum-sum-of-almost-unique-subarray",
        "url": "https://leetcode.com/problems/maximum-sum-of-almost-unique-subarray/",
        "titulo": "Maximum Sum of Almost Unique Subarray",
        "enunciado": "You are given an integer array \nnums\n and two positive integers \nm\n and \nk\n.\n\n\nReturn \nthe \nmaximum sum\n out of all \nalmost unique\n subarrays of length \nk\n of\n \nnums\n. If no such subarray exists, return \n0\n.\n\n\nA subarray of \nnums\n is \nalmost unique\n if it contains at least \nm\n distinct elements.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,6,7,3,1,7], m = 3, k = 4\n\nOutput:\n 18\n\nExplanation:\n There are 3 almost unique subarrays of size \nk = 4\n. These subarrays are [2, 6, 7, 3], [6, 7, 3, 1], and [7, 3, 1, 7]. Among these subarrays, the one with the maximum sum is [2, 6, 7, 3] which has a sum of 18.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,9,9,2,4,5,4], m = 1, k = 3\n\nOutput:\n 23\n\nExplanation:\n There are 5 almost unique subarrays of size k. These subarrays are [5, 9, 9], [9, 9, 2], [9, 2, 4], [2, 4, 5], and [4, 5, 4]. Among these subarrays, the one with the maximum sum is [5, 9, 9] which has a sum of 23.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,1,2,1,2,1], m = 3, k = 3\n\nOutput:\n 0\n\nExplanation:\n There are no subarrays of size \nk = 3\n that contain at least \nm = 3\n distinct elements in the given array [1,2,1,2,1,2,1]. Therefore, no almost unique subarrays exist, and the maximum sum is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n4\n\n\n1 <= m <= k <= nums.length\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2857,
        "slug": "count-pairs-of-points-with-distance-k",
        "url": "https://leetcode.com/problems/count-pairs-of-points-with-distance-k/",
        "titulo": "Count Pairs of Points With Distance k",
        "enunciado": "You are given a \n2D\n integer array \ncoordinates\n and an integer \nk\n, where \ncoordinates[i] = [x\ni\n, y\ni\n]\n are the coordinates of the \ni\nth\n point in a 2D plane.\n\n\nWe define the \ndistance\n between two points \n(x\n1\n, y\n1\n)\n and \n(x\n2\n, y\n2\n)\n as \n(x1 XOR x2) + (y1 XOR y2)\n where \nXOR\n is the bitwise \nXOR\n operation.\n\n\nReturn \nthe number of pairs \n(i, j)\n such that \ni < j\n and the distance between points \ni\n and \nj\n is equal to \nk\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n coordinates = [[1,2],[4,2],[1,3],[5,2]], k = 5\n\nOutput:\n 2\n\nExplanation:\n We can choose the following pairs:\n- (0,1): Because we have (1 XOR 4) + (2 XOR 2) = 5.\n- (2,3): Because we have (1 XOR 5) + (3 XOR 2) = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n coordinates = [[1,3],[1,3],[1,3],[1,3],[1,3]], k = 0\n\nOutput:\n 10\n\nExplanation:\n Any two chosen pairs will have a distance of 0. There are 10 ways to choose two pairs.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= coordinates.length <= 50000\n\n\n0 <= x\ni\n, y\ni\n <= 10\n6\n\n\n0 <= k <= 100",
        "temas": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2808,
        "slug": "minimum-seconds-to-equalize-a-circular-array",
        "url": "https://leetcode.com/problems/minimum-seconds-to-equalize-a-circular-array/",
        "titulo": "Minimum Seconds to Equalize a Circular Array",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n containing \nn\n integers.\n\n\nAt each second, you perform the following operation on the array:\n\n\n\n\nFor every index \ni\n in the range \n[0, n - 1]\n, replace \nnums[i]\n with either \nnums[i]\n, \nnums[(i - 1 + n) % n]\n, or \nnums[(i + 1) % n]\n.\n\n\n\n\nNote\n that all the elements get replaced simultaneously.\n\n\nReturn \nthe \nminimum\n number of seconds needed to make all elements in the array\n \nnums\n \nequal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,1,2]\n\nOutput:\n 1\n\nExplanation:\n We can equalize the array in 1 second in the following way:\n- At 1\nst\n second, replace values at each index with [nums[3],nums[1],nums[3],nums[3]]. After replacement, nums = [2,2,2,2].\nIt can be proven that 1 second is the minimum amount of seconds needed for equalizing the array.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,1,3,3,2]\n\nOutput:\n 2\n\nExplanation:\n We can equalize the array in 2 seconds in the following way:\n- At 1\nst\n second, replace values at each index with [nums[0],nums[2],nums[2],nums[2],nums[3]]. After replacement, nums = [2,3,3,3,3].\n- At 2\nnd\n second, replace values at each index with [nums[1],nums[1],nums[2],nums[3],nums[4]]. After replacement, nums = [3,3,3,3,3].\nIt can be proven that 2 seconds is the minimum amount of seconds needed for equalizing the array.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [5,5,5,5]\n\nOutput:\n 0\n\nExplanation:\n We don't need to perform any operations as all elements in the initial array are the same.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2811,
        "slug": "check-if-it-is-possible-to-split-array",
        "url": "https://leetcode.com/problems/check-if-it-is-possible-to-split-array/",
        "titulo": "Check if it is Possible to Split Array",
        "enunciado": "You are given an array \nnums\n of length \nn\n and an integer \nm\n. You need to determine if it is possible to split the array into \nn\n arrays of size 1 by performing a series of steps.\n\n\nAn array is called \ngood\n if:\n\n\n\n\nThe length of the array is \none\n, or\n\n\nThe sum of the elements of the array is \ngreater than or equal\n to \nm\n.\n\n\n\n\nIn each step, you can select an existing array (which may be the result of previous steps) with a length of \nat least two\n and split it into \ntwo \narrays, if both resulting arrays are good.\n\n\nReturn true if you can split the given array into \nn\n arrays, otherwise return false.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2, 2, 1], m = 4\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nSplit \n[2, 2, 1]\n to \n[2, 2]\n and \n[1]\n. The array \n[1]\n has a length of one, and the array \n[2, 2]\n has the sum of its elements equal to \n4 >= m\n, so both are good arrays.\n\n\nSplit \n[2, 2]\n to \n[2]\n and \n[2]\n. both arrays have the length of one, so both are good arrays.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [2, 1, 3], m = 5\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nThe first move has to be either of the following:\n\n\n\n\nSplit \n[2, 1, 3]\n to \n[2, 1]\n and \n[3]\n. The array \n[2, 1]\n has neither length of one nor sum of elements greater than or equal to \nm\n.\n\n\nSplit \n[2, 1, 3]\n to \n[2]\n and \n[1, 3]\n. The array \n[1, 3]\n has neither length of one nor sum of elements greater than or equal to \nm\n.\n\n\n\n\nSo as both moves are invalid (they do not divide the array into two good arrays), we are unable to split \nnums\n into \nn\n arrays of size 1.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [2, 3, 3, 2, 3], m = 6\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\n\n\nSplit \n[2, 3, 3, 2, 3]\n to \n[2]\n and \n[3, 3, 2, 3]\n.\n\n\nSplit \n[3, 3, 2, 3]\n to \n[3, 3, 2]\n and \n[3]\n.\n\n\nSplit \n[3, 3, 2]\n to \n[3, 3]\n and \n[2]\n.\n\n\nSplit \n[3, 3]\n to \n[3]\n and \n[3]\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == nums.length <= 100\n\n\n1 <= nums[i] <= 100\n\n\n1 <= m <= 200",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2845,
        "slug": "count-of-interesting-subarrays",
        "url": "https://leetcode.com/problems/count-of-interesting-subarrays/",
        "titulo": "Count of Interesting Subarrays",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n, an integer \nmodulo\n, and an integer \nk\n.\n\n\nYour task is to find the count of subarrays that are \ninteresting\n.\n\n\nA \nsubarray\n \nnums[l..r]\n is \ninteresting\n if the following condition holds:\n\n\n\n\nLet \ncnt\n be the number of indices \ni\n in the range \n[l, r]\n such that \nnums[i] % modulo == k\n. Then, \ncnt % modulo == k\n.\n\n\n\n\nReturn \nan integer denoting the count of interesting subarrays. \n\n\nNote:\n A subarray is \na contiguous non-empty sequence of elements within an array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,2,4], modulo = 2, k = 1\n\nOutput:\n 3\n\nExplanation:\n In this example the interesting subarrays are: \nThe subarray nums[0..0] which is [3]. \n- There is only one index, i = 0, in the range [0, 0] that satisfies nums[i] % modulo == k. \n- Hence, cnt = 1 and cnt % modulo == k.  \nThe subarray nums[0..1] which is [3,2].\n- There is only one index, i = 0, in the range [0, 1] that satisfies nums[i] % modulo == k.  \n- Hence, cnt = 1 and cnt % modulo == k.\nThe subarray nums[0..2] which is [3,2,4]. \n- There is only one index, i = 0, in the range [0, 2] that satisfies nums[i] % modulo == k. \n- Hence, cnt = 1 and cnt % modulo == k. \nIt can be shown that there are no other interesting subarrays. So, the answer is 3.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,1,9,6], modulo = 3, k = 0\n\nOutput:\n 2\n\nExplanation: \nIn this example the interesting subarrays are: \nThe subarray nums[0..3] which is [3,1,9,6]. \n- There are three indices, i = 0, 2, 3, in the range [0, 3] that satisfy nums[i] % modulo == k. \n- Hence, cnt = 3 and cnt % modulo == k. \nThe subarray nums[1..1] which is [1]. \n- There is no index, i, in the range [1, 1] that satisfies nums[i] % modulo == k. \n- Hence, cnt = 0 and cnt % modulo == k. \nIt can be shown that there are no other interesting subarrays. So, the answer is 2.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5 \n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= modulo <= 10\n9\n\n\n0 <= k < modulo",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2812,
        "slug": "find-the-safest-path-in-a-grid",
        "url": "https://leetcode.com/problems/find-the-safest-path-in-a-grid/",
        "titulo": "Find the Safest Path in a Grid",
        "enunciado": "You are given a \n0-indexed\n 2D matrix \ngrid\n of size \nn x n\n, where \n(r, c)\n represents:\n\n\n\n\nA cell containing a thief if \ngrid[r][c] = 1\n\n\nAn empty cell if \ngrid[r][c] = 0\n\n\n\n\nYou are initially positioned at cell \n(0, 0)\n. In one move, you can move to any adjacent cell in the grid, including cells containing thieves.\n\n\nThe \nsafeness factor\n of a path on the grid is defined as the \nminimum\n manhattan distance from any cell in the path to any thief in the grid.\n\n\nReturn \nthe \nmaximum safeness factor\n of all paths leading to cell \n(n - 1, n - 1)\n.\n\n\nAn \nadjacent\n cell of cell \n(r, c)\n, is one of the cells \n(r, c + 1)\n, \n(r, c - 1)\n, \n(r + 1, c)\n and \n(r - 1, c)\n if it exists.\n\n\nThe \nManhattan distance\n between two cells \n(a, b)\n and \n(x, y)\n is equal to \n|a - x| + |b - y|\n, where \n|val|\n denotes the absolute value of val.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,0,0],[0,0,0],[0,0,1]]\n\nOutput:\n 0\n\nExplanation:\n All paths from (0, 0) to (n - 1, n - 1) go through the thieves in cells (0, 0) and (n - 1, n - 1).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,0,1],[0,0,0],[0,0,0]]\n\nOutput:\n 2\n\nExplanation:\n The path depicted in the picture above has a safeness factor of 2 since:\n- The closest cell of the path to the thief at cell (0, 2) is cell (0, 0). The distance between them is | 0 - 0 | + | 0 - 2 | = 2.\nIt can be shown that there are no other paths with a higher safeness factor.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[0,0,0,1],[0,0,0,0],[0,0,0,0],[1,0,0,0]]\n\nOutput:\n 2\n\nExplanation:\n The path depicted in the picture above has a safeness factor of 2 since:\n- The closest cell of the path to the thief at cell (0, 3) is cell (1, 2). The distance between them is | 0 - 1 | + | 3 - 2 | = 2.\n- The closest cell of the path to the thief at cell (3, 0) is cell (3, 2). The distance between them is | 3 - 3 | + | 0 - 2 | = 2.\nIt can be shown that there are no other paths with a higher safeness factor.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grid.length == n <= 400\n\n\ngrid[i].length == n\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.\n\n\nThere is at least one thief in the \ngrid\n.",
        "temas": [
            "Array",
            "Binary Search",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2826,
        "slug": "sorting-three-groups",
        "url": "https://leetcode.com/problems/sorting-three-groups/",
        "titulo": "Sorting Three Groups",
        "enunciado": "You are given an integer array \nnums\n. Each element in \nnums\n is 1, 2 or 3. In each operation, you can remove an element from \nnums\n. Return the \nminimum\n number of operations to make \nnums\n \nnon-decreasing\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [2,1,3,2,1]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nOne of the optimal solutions is to remove \nnums[0]\n, \nnums[2]\n and \nnums[3]\n.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,3,2,1,3,3]\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nOne of the optimal solutions is to remove \nnums[1]\n and \nnums[2]\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnums = [2,2,2,2,3,3]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nnums\n is already non-decreasing.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n1 <= nums[i] <= 3\n\n\n\n\n \n\n\nFollow-up:\n Can you come up with an algorithm that runs in \nO(n)\n time complexity?",
        "temas": [
            "Array",
            "Binary Search",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2807,
        "slug": "insert-greatest-common-divisors-in-linked-list",
        "url": "https://leetcode.com/problems/insert-greatest-common-divisors-in-linked-list/",
        "titulo": "Insert Greatest Common Divisors in Linked List",
        "enunciado": "Given the head of a linked list \nhead\n, in which each node contains an integer value.\n\n\nBetween every pair of adjacent nodes, insert a new node with a value equal to the \ngreatest common divisor\n of them.\n\n\nReturn \nthe linked list after insertion\n.\n\n\nThe \ngreatest common divisor\n of two numbers is the largest positive integer that evenly divides both numbers.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [18,6,10,3]\n\nOutput:\n [18,6,6,2,10,1,3]\n\nExplanation:\n The 1\nst\n diagram denotes the initial linked list and the 2\nnd\n diagram denotes the linked list after inserting the new nodes (nodes in blue are the inserted nodes).\n- We insert the greatest common divisor of 18 and 6 = 6 between the 1\nst\n and the 2\nnd\n nodes.\n- We insert the greatest common divisor of 6 and 10 = 2 between the 2\nnd\n and the 3\nrd\n nodes.\n- We insert the greatest common divisor of 10 and 3 = 1 between the 3\nrd\n and the 4\nth\n nodes.\nThere are no more adjacent nodes, so we return the linked list.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [7]\n\nOutput:\n [7]\n\nExplanation:\n The 1\nst\n diagram denotes the initial linked list and the 2\nnd\n diagram denotes the linked list after inserting the new nodes.\nThere are no pairs of adjacent nodes, so we return the initial linked list.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[1, 5000]\n.\n\n\n1 <= Node.val <= 1000",
        "temas": [
            "Linked List",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2786,
        "slug": "visit-array-positions-to-maximize-score",
        "url": "https://leetcode.com/problems/visit-array-positions-to-maximize-score/",
        "titulo": "Visit Array Positions to Maximize Score",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and a positive integer \nx\n.\n\n\nYou are \ninitially\n at position \n0\n in the array and you can visit other positions according to the following rules:\n\n\n\n\nIf you are currently in position \ni\n, then you can move to \nany\n position \nj\n such that \ni < j\n.\n\n\nFor each position \ni\n that you visit, you get a score of \nnums[i]\n.\n\n\nIf you move from a position \ni\n to a position \nj\n and the \nparities\n of \nnums[i]\n and \nnums[j]\n differ, then you lose a score of \nx\n.\n\n\n\n\nReturn \nthe \nmaximum\n total score you can get\n.\n\n\nNote\n that initially you have \nnums[0]\n points.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,6,1,9,2], x = 5\n\nOutput:\n 13\n\nExplanation:\n We can visit the following positions in the array: 0 -> 2 -> 3 -> 4.\nThe corresponding values are 2, 6, 1 and 9. Since the integers 6 and 1 have different parities, the move 2 -> 3 will make you lose a score of x = 5.\nThe total score will be: 2 + 6 + 1 + 9 - 5 = 13.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,4,6,8], x = 3\n\nOutput:\n 20\n\nExplanation:\n All the integers in the array have the same parities, so we can visit all of them without losing any score.\nThe total score is: 2 + 4 + 6 + 8 = 20.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i], x <= 10\n6",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2779,
        "slug": "maximum-beauty-of-an-array-after-applying-operation",
        "url": "https://leetcode.com/problems/maximum-beauty-of-an-array-after-applying-operation/",
        "titulo": "Maximum Beauty of an Array After Applying Operation",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n and a \nnon-negative\n integer \nk\n.\n\n\nIn one operation, you can do the following:\n\n\n\n\nChoose an index \ni\n that \nhasn't been chosen before\n from the range \n[0, nums.length - 1]\n.\n\n\nReplace \nnums[i]\n with any integer from the range \n[nums[i] - k, nums[i] + k]\n.\n\n\n\n\nThe \nbeauty\n of the array is the length of the longest subsequence consisting of equal elements.\n\n\nReturn \nthe \nmaximum\n possible beauty of the array \nnums\n after applying the operation any number of times.\n\n\nNote\n that you can apply the operation to each index \nonly once\n.\n\n\nA \nsubsequence\n of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,6,1,2], k = 2\n\nOutput:\n 3\n\nExplanation:\n In this example, we apply the following operations:\n- Choose index 1, replace it with 4 (from range [4,8]), nums = [4,4,1,2].\n- Choose index 3, replace it with 4 (from range [0,4]), nums = [4,4,1,4].\nAfter the applied operations, the beauty of the array nums is 3 (subsequence consisting of indices 0, 1, and 3).\nIt can be proven that 3 is the maximum possible length we can achieve.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1,1], k = 10\n\nOutput:\n 4\n\nExplanation:\n In this example we don't have to apply any operations.\nThe beauty of the array nums is 4 (whole array).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i], k <= 10\n5",
        "temas": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2768,
        "slug": "number-of-black-blocks",
        "url": "https://leetcode.com/problems/number-of-black-blocks/",
        "titulo": "Number of Black Blocks",
        "enunciado": "You are given two integers \nm\n and \nn\n representing the dimensions of a \n0-indexed\n \nm x n\n grid.\n\n\nYou are also given a \n0-indexed\n 2D integer matrix \ncoordinates\n, where \ncoordinates[i] = [x, y]\n indicates that the cell with coordinates \n[x, y]\n is colored \nblack\n. All cells in the grid that do not appear in \ncoordinates\n are \nwhite\n.\n\n\nA block is defined as a \n2 x 2\n submatrix of the grid. More formally, a block with cell \n[x, y]\n as its top-left corner where \n0 <= x < m - 1\n and \n0 <= y < n - 1\n contains the coordinates \n[x, y]\n, \n[x + 1, y]\n, \n[x, y + 1]\n, and \n[x + 1, y + 1]\n.\n\n\nReturn \na \n0-indexed\n integer array\n \narr\n \nof size\n \n5\n \nsuch that\n \narr[i]\n \nis the number of blocks that contains exactly\n \ni\n \nblack\n cells\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n m = 3, n = 3, coordinates = [[0,0]]\n\nOutput:\n [3,1,0,0,0]\n\nExplanation:\n The grid looks like this:\n\n\nThere is only 1 block with one black cell, and it is the block starting with cell [0,0].\nThe other 3 blocks start with cells [0,1], [1,0] and [1,1]. They all have zero black cells. \nThus, we return [3,1,0,0,0]. \n\n\n\nExample 2:\n\n\n\n\nInput:\n m = 3, n = 3, coordinates = [[0,0],[1,1],[0,2]]\n\nOutput:\n [0,2,2,0,0]\n\nExplanation:\n The grid looks like this:\n\n\nThere are 2 blocks with two black cells (the ones starting with cell coordinates [0,0] and [0,1]).\nThe other 2 blocks have starting cell coordinates of [1,0] and [1,1]. They both have 1 black cell.\nTherefore, we return [0,2,2,0,0].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= m <= 10\n5\n\n\n2 <= n <= 10\n5\n\n\n0 <= coordinates.length <= 10\n4\n\n\ncoordinates[i].length == 2\n\n\n0 <= coordinates[i][0] < m\n\n\n0 <= coordinates[i][1] < n\n\n\nIt is guaranteed that \ncoordinates\n contains pairwise distinct coordinates.",
        "temas": [
            "Array",
            "Hash Table",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2780,
        "slug": "minimum-index-of-a-valid-split",
        "url": "https://leetcode.com/problems/minimum-index-of-a-valid-split/",
        "titulo": "Minimum Index of a Valid Split",
        "enunciado": "An element \nx\n of an integer array \narr\n of length \nm\n is \ndominant\n if \nmore than half\n the elements of \narr\n have a value of \nx\n.\n\n\nYou are given a \n0-indexed\n integer array \nnums\n of length \nn\n with one \ndominant\n element.\n\n\nYou can split \nnums\n at an index \ni\n into two arrays \nnums[0, ..., i]\n and \nnums[i + 1, ..., n - 1]\n, but the split is only \nvalid\n if:\n\n\n\n\n0 <= i < n - 1\n\n\nnums[0, ..., i]\n, and \nnums[i + 1, ..., n - 1]\n have the same dominant element.\n\n\n\n\nHere, \nnums[i, ..., j]\n denotes the subarray of \nnums\n starting at index \ni\n and ending at index \nj\n, both ends being inclusive. Particularly, if \nj < i\n then \nnums[i, ..., j]\n denotes an empty subarray.\n\n\nReturn \nthe \nminimum\n index of a \nvalid split\n. If no valid split exists, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,2,2]\n\nOutput:\n 2\n\nExplanation:\n We can split the array at index 2 to obtain arrays [1,2,2] and [2]. \nIn array [1,2,2], element 2 is dominant since it occurs twice in the array and 2 * 2 > 3. \nIn array [2], element 2 is dominant since it occurs once in the array and 1 * 2 > 1.\nBoth [1,2,2] and [2] have the same dominant element as nums, so this is a valid split. \nIt can be shown that index 2 is the minimum index of a valid split. \n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,1,3,1,1,1,7,1,2,1]\n\nOutput:\n 4\n\nExplanation:\n We can split the array at index 4 to obtain arrays [2,1,3,1,1] and [1,7,1,2,1].\nIn array [2,1,3,1,1], element 1 is dominant since it occurs thrice in the array and 3 * 2 > 5.\nIn array [1,7,1,2,1], element 1 is dominant since it occurs thrice in the array and 3 * 2 > 5.\nBoth [2,1,3,1,1] and [1,7,1,2,1] have the same dominant element as nums, so this is a valid split.\nIt can be shown that index 4 is the minimum index of a valid split.\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,3,3,3,7,2,2]\n\nOutput:\n -1\n\nExplanation:\n It can be shown that there is no valid split.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\nnums\n has exactly one dominant element.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2785,
        "slug": "sort-vowels-in-a-string",
        "url": "https://leetcode.com/problems/sort-vowels-in-a-string/",
        "titulo": "Sort Vowels in a String",
        "enunciado": "Given a \n0-indexed\n string \ns\n, \npermute\n \ns\n to get a new string \nt\n such that:\n\n\n\n\nAll consonants remain in their original places. More formally, if there is an index \ni\n with \n0 <= i < s.length\n such that \ns[i]\n is a consonant, then \nt[i] = s[i]\n.\n\n\nThe vowels must be sorted in the \nnondecreasing\n order of their \nASCII\n values. More formally, for pairs of indices \ni\n, \nj\n with \n0 <= i < j < s.length\n such that \ns[i]\n and \ns[j]\n are vowels, then \nt[i]\n must not have a higher ASCII value than \nt[j]\n.\n\n\n\n\nReturn \nthe resulting string\n.\n\n\nThe vowels are \n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n, and they can appear in lowercase or uppercase. Consonants comprise all letters that are not vowels.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"lEetcOde\"\n\nOutput:\n \"lEOtcede\"\n\nExplanation:\n 'E', 'O', and 'e' are the vowels in s; 'l', 't', 'c', and 'd' are all consonants. The vowels are sorted according to their ASCII values, and the consonants remain in the same places.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"lYmpH\"\n\nOutput:\n \"lYmpH\"\n\nExplanation:\n There are no vowels in s (all characters in s are consonants), so we return \"lYmpH\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists only of letters of the English alphabet in \nuppercase and lowercase\n.",
        "temas": [
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2767,
        "slug": "partition-string-into-minimum-beautiful-substrings",
        "url": "https://leetcode.com/problems/partition-string-into-minimum-beautiful-substrings/",
        "titulo": "Partition String Into Minimum Beautiful Substrings",
        "enunciado": "Given a binary string \ns\n, partition the string into one or more \nsubstrings\n such that each substring is \nbeautiful\n.\n\n\nA string is \nbeautiful\n if:\n\n\n\n\nIt doesn't contain leading zeros.\n\n\nIt's the \nbinary\n representation of a number that is a power of \n5\n.\n\n\n\n\nReturn \nthe \nminimum\n number of substrings in such partition. \nIf it is impossible to partition the string \ns\n into beautiful substrings, return \n-1\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"1011\"\n\nOutput:\n 2\n\nExplanation:\n We can paritition the given string into [\"101\", \"1\"].\n- The string \"101\" does not contain leading zeros and is the binary representation of integer 5\n1\n = 5.\n- The string \"1\" does not contain leading zeros and is the binary representation of integer 5\n0\n = 1.\nIt can be shown that 2 is the minimum number of beautiful substrings that s can be partitioned into.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"111\"\n\nOutput:\n 3\n\nExplanation:\n We can paritition the given string into [\"1\", \"1\", \"1\"].\n- The string \"1\" does not contain leading zeros and is the binary representation of integer 5\n0\n = 1.\nIt can be shown that 3 is the minimum number of beautiful substrings that s can be partitioned into.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"0\"\n\nOutput:\n -1\n\nExplanation:\n We can not partition the given string into beautiful substrings.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 15\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2787,
        "slug": "ways-to-express-an-integer-as-sum-of-powers",
        "url": "https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers/",
        "titulo": "Ways to Express an Integer as Sum of Powers",
        "enunciado": "Given two \npositive\n integers \nn\n and \nx\n.\n\n\nReturn \nthe number of ways \nn\n can be expressed as the sum of the \nx\nth\n power of \nunique\n positive integers, in other words, the number of sets of unique integers \n[n\n1\n, n\n2\n, ..., n\nk\n]\n where \nn = n\n1\nx\n + n\n2\nx\n + ... + n\nk\nx\n.\n\n\nSince the result can be very large, return it modulo \n10\n9\n + 7\n.\n\n\nFor example, if \nn = 160\n and \nx = 3\n, one way to express \nn\n is \nn = 2\n3\n + 3\n3\n + 5\n3\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10, x = 2\n\nOutput:\n 1\n\nExplanation:\n We can express n as the following: n = 3\n2\n + 1\n2\n = 10.\nIt can be shown that it is the only way to express 10 as the sum of the 2\nnd\n power of unique integers.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4, x = 1\n\nOutput:\n 2\n\nExplanation:\n We can express n in the following ways:\n- n = 4\n1\n = 4.\n- n = 3\n1\n + 1\n1\n = 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 300\n\n\n1 <= x <= 5",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 2772,
        "slug": "apply-operations-to-make-all-array-elements-equal-to-zero",
        "url": "https://leetcode.com/problems/apply-operations-to-make-all-array-elements-equal-to-zero/",
        "titulo": "Apply Operations to Make All Array Elements Equal to Zero",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and a positive integer \nk\n.\n\n\nYou can apply the following operation on the array \nany\n number of times:\n\n\n\n\nChoose \nany\n subarray of size \nk\n from the array and \ndecrease\n all its elements by \n1\n.\n\n\n\n\nReturn \ntrue\n if you can make all the array elements equal to \n0\n, or \nfalse\n otherwise\n.\n\n\nA \nsubarray\n is a contiguous non-empty part of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,2,3,1,1,0], k = 3\n\nOutput:\n true\n\nExplanation:\n We can do the following operations:\n- Choose the subarray [2,2,3]. The resulting array will be nums = [\n1\n,\n1\n,\n2\n,1,1,0].\n- Choose the subarray [2,1,1]. The resulting array will be nums = [1,1,\n1\n,\n0\n,\n0\n,0].\n- Choose the subarray [1,1,1]. The resulting array will be nums = [\n0\n,\n0\n,\n0\n,0,0,0].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,1,1], k = 2\n\nOutput:\n false\n\nExplanation:\n It is not possible to make all the array elements equal to 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2800,
        "slug": "shortest-string-that-contains-three-strings",
        "url": "https://leetcode.com/problems/shortest-string-that-contains-three-strings/",
        "titulo": "Shortest String That Contains Three Strings",
        "enunciado": "Given three strings \na\n, \nb\n, and \nc\n, your task is to find a string that has the\n minimum\n length and contains all three strings as \nsubstrings\n.\n\nIf there are multiple such strings, return the\n \nlexicographically\n \nsmallest \none.\n\n\nReturn \na string denoting the answer to the problem.\n\n\nNotes\n\n\n\n\nA string \na\n is \nlexicographically smaller\n than a string \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, string \na\n has a letter that appears \nearlier \nin the alphabet than the corresponding letter in \nb\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = \"abc\", b = \"bca\", c = \"aaa\"\n\nOutput:\n \"aaabca\"\n\nExplanation:\n  We show that \"aaabca\" contains all the given strings: a = ans[2...4], b = ans[3..5], c = ans[0..2]. It can be shown that the length of the resulting string would be at least 6 and \"aaabca\" is the lexicographically smallest one.\n\n\nExample 2:\n\n\n\n\nInput:\n a = \"ab\", b = \"ba\", c = \"aba\"\n\nOutput:\n \"aba\"\n\nExplanation: \nWe show that the string \"aba\" contains all the given strings: a = ans[0..1], b = ans[1..2], c = ans[0..2]. Since the length of c is 3, the length of the resulting string would be at least 3. It can be shown that \"aba\" is the lexicographically smallest one.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a.length, b.length, c.length <= 100\n\n\na\n, \nb\n, \nc\n consist only of lowercase English letters.",
        "temas": [
            "String",
            "Greedy",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2761,
        "slug": "prime-pairs-with-target-sum",
        "url": "https://leetcode.com/problems/prime-pairs-with-target-sum/",
        "titulo": "Prime Pairs With Target Sum",
        "enunciado": "You are given an integer \nn\n. We say that two integers \nx\n and \ny\n form a prime number pair if:\n\n\n\n\n1 <= x <= y <= n\n\n\nx + y == n\n\n\nx\n and \ny\n are prime numbers\n\n\n\n\nReturn \nthe 2D sorted list of prime number pairs\n \n[x\ni\n, y\ni\n]\n. The list should be sorted in \nincreasing\n order of \nx\ni\n. If there are no prime number pairs at all, return \nan empty array\n.\n\n\nNote:\n A prime number is a natural number greater than \n1\n with only two factors, itself and \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n [[3,7],[5,5]]\n\nExplanation:\n In this example, there are two prime pairs that satisfy the criteria. \nThese pairs are [3,7] and [5,5], and we return them in the sorted order as described in the problem statement.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n []\n\nExplanation:\n We can show that there is no prime number pair that gives a sum of 2, so we return an empty array. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n6",
        "temas": [
            "Array",
            "Math",
            "Enumeration",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2789,
        "slug": "largest-element-in-an-array-after-merge-operations",
        "url": "https://leetcode.com/problems/largest-element-in-an-array-after-merge-operations/",
        "titulo": "Largest Element in an Array after Merge Operations",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n consisting of positive integers.\n\n\nYou can do the following operation on the array \nany\n number of times:\n\n\n\n\nChoose an integer \ni\n such that \n0 <= i < nums.length - 1\n and \nnums[i] <= nums[i + 1]\n. Replace the element \nnums[i + 1]\n with \nnums[i] + nums[i + 1]\n and delete the element \nnums[i]\n from the array.\n\n\n\n\nReturn \nthe value of the \nlargest\n element that you can possibly obtain in the final array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,7,9,3]\n\nOutput:\n 21\n\nExplanation:\n We can apply the following operations on the array:\n- Choose i = 0. The resulting array will be nums = [\n5\n,7,9,3].\n- Choose i = 1. The resulting array will be nums = [5,\n16\n,3].\n- Choose i = 0. The resulting array will be nums = [\n21\n,3].\nThe largest element in the final array is 21. It can be shown that we cannot obtain a larger element.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,3,3]\n\nOutput:\n 11\n\nExplanation:\n We can do the following operations on the array:\n- Choose i = 1. The resulting array will be nums = [5,\n6\n].\n- Choose i = 0. The resulting array will be nums = [\n11\n].\nThere is only one element in the final array, which is 11.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2816,
        "slug": "double-a-number-represented-as-a-linked-list",
        "url": "https://leetcode.com/problems/double-a-number-represented-as-a-linked-list/",
        "titulo": "Double a Number Represented as a Linked List",
        "enunciado": "You are given the \nhead\n of a \nnon-empty\n linked list representing a non-negative integer without leading zeroes.\n\n\nReturn \nthe \nhead\n of the linked list after \ndoubling\n it\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,8,9]\n\nOutput:\n [3,7,8]\n\nExplanation:\n The figure above corresponds to the given linked list which represents the number 189. Hence, the returned linked list represents the number 189 * 2 = 378.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [9,9,9]\n\nOutput:\n [1,9,9,8]\n\nExplanation:\n The figure above corresponds to the given linked list which represents the number 999. Hence, the returned linked list reprersents the number 999 * 2 = 1998. \n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[1, 10\n4\n]\n\n\n0 <= Node.val <= 9\n\n\nThe input is generated such that the list represents a number that does not have leading zeros, except the number \n0\n itself.",
        "temas": [
            "Linked List",
            "Math",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2771,
        "slug": "longest-non-decreasing-subarray-from-two-arrays",
        "url": "https://leetcode.com/problems/longest-non-decreasing-subarray-from-two-arrays/",
        "titulo": "Longest Non-decreasing Subarray From Two Arrays",
        "enunciado": "You are given two \n0-indexed\n integer arrays \nnums1\n and \nnums2\n of length \nn\n.\n\n\nLet's define another \n0-indexed\n integer array, \nnums3\n, of length \nn\n. For each index \ni\n in the range \n[0, n - 1]\n, you can assign either \nnums1[i]\n or \nnums2[i]\n to \nnums3[i]\n.\n\n\nYour task is to maximize the length of the \nlongest non-decreasing subarray\n in \nnums3\n by choosing its values optimally.\n\n\nReturn \nan integer representing the length of the \nlongest non-decreasing\n subarray in\n \nnums3\n.\n\n\nNote: \nA \nsubarray\n is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [2,3,1], nums2 = [1,2,1]\n\nOutput:\n 2\n\nExplanation: \nOne way to construct nums3 is: \nnums3 = [nums1[0], nums2[1], nums2[2]] => [2,2,1]. \nThe subarray starting from index 0 and ending at index 1, [2,2], forms a non-decreasing subarray of length 2. \nWe can show that 2 is the maximum achievable length.\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,3,2,1], nums2 = [2,2,3,4]\n\nOutput:\n 4\n\nExplanation:\n One way to construct nums3 is: \nnums3 = [nums1[0], nums2[1], nums2[2], nums2[3]] => [1,2,3,4]. \nThe entire array forms a non-decreasing subarray of length 4, making it the maximum achievable length.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [1,1], nums2 = [2,2]\n\nOutput:\n 2\n\nExplanation:\n One way to construct nums3 is: \nnums3 = [nums1[0], nums1[1]] => [1,1]. \nThe entire array forms a non-decreasing subarray of length 2, making it the maximum achievable length.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length == nums2.length == n <= 10\n5\n\n\n1 <= nums1[i], nums2[i] <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2762,
        "slug": "continuous-subarrays",
        "url": "https://leetcode.com/problems/continuous-subarrays/",
        "titulo": "Continuous Subarrays",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. A subarray of \nnums\n is called \ncontinuous\n if:\n\n\n\n\nLet \ni\n, \ni + 1\n, ..., \nj\n \nbe the indices in the subarray. Then, for each pair of indices \ni <= i\n1\n, i\n2\n <= j\n, \n0 <=\n |nums[i\n1\n] - nums[i\n2\n]| <= 2\n.\n\n\n\n\nReturn \nthe total number of \ncontinuous\n subarrays.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,4,2,4]\n\nOutput:\n 8\n\nExplanation:\n \nContinuous subarray of size 1: [5], [4], [2], [4].\nContinuous subarray of size 2: [5,4], [4,2], [2,4].\nContinuous subarray of size 3: [4,2,4].\nThere are no subarrys of size 4.\nTotal continuous subarrays = 4 + 3 + 1 = 8.\nIt can be shown that there are no more continuous subarrays.\n\n\n\n \n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 6\n\nExplanation:\n \nContinuous subarray of size 1: [1], [2], [3].\nContinuous subarray of size 2: [1,2], [2,3].\nContinuous subarray of size 3: [1,2,3].\nTotal continuous subarrays = 3 + 2 + 1 = 6.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Ordered Set",
            "Monotonic Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2750,
        "slug": "ways-to-split-array-into-good-subarrays",
        "url": "https://leetcode.com/problems/ways-to-split-array-into-good-subarrays/",
        "titulo": "Ways to Split Array Into Good Subarrays",
        "enunciado": "You are given a binary array \nnums\n.\n\n\nA subarray of an array is \ngood\n if it contains \nexactly\n \none\n element with the value \n1\n.\n\n\nReturn \nan integer denoting the number of ways to split the array \nnums\n into \ngood\n subarrays\n. As the number may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,1,0,0,1]\n\nOutput:\n 3\n\nExplanation:\n There are 3 ways to split nums into good subarrays:\n- [0,1] [0,0,1]\n- [0,1,0] [0,1]\n- [0,1,0,0] [1]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,0]\n\nOutput:\n 1\n\nExplanation:\n There is 1 way to split nums into good subarrays:\n- [0,1,0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 1",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2799,
        "slug": "count-complete-subarrays-in-an-array",
        "url": "https://leetcode.com/problems/count-complete-subarrays-in-an-array/",
        "titulo": "Count Complete Subarrays in an Array",
        "enunciado": "You are given an array \nnums\n consisting of \npositive\n integers.\n\n\nWe call a subarray of an array \ncomplete\n if the following condition is satisfied:\n\n\n\n\nThe number of \ndistinct\n elements in the subarray is equal to the number of distinct elements in the whole array.\n\n\n\n\nReturn \nthe number of \ncomplete\n subarrays\n.\n\n\nA \nsubarray\n is a contiguous non-empty part of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,1,2,2]\n\nOutput:\n 4\n\nExplanation:\n The complete subarrays are the following: [1,3,1,2], [1,3,1,2,2], [3,1,2] and [3,1,2,2].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,5,5,5]\n\nOutput:\n 10\n\nExplanation:\n The array consists only of the integer 5, so any subarray is complete. The number of subarrays that we can choose is 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 2000",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2770,
        "slug": "maximum-number-of-jumps-to-reach-the-last-index",
        "url": "https://leetcode.com/problems/maximum-number-of-jumps-to-reach-the-last-index/",
        "titulo": "Maximum Number of Jumps to Reach the Last Index",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n of \nn\n integers and an integer \ntarget\n.\n\n\nYou are initially positioned at index \n0\n. In one step, you can jump from index \ni\n to any index \nj\n such that:\n\n\n\n\n0 <= i < j < n\n\n\n-target <= nums[j] - nums[i] <= target\n\n\n\n\nReturn \nthe \nmaximum number of jumps\n you can make to reach index\n \nn - 1\n.\n\n\nIf there is no way to reach index \nn - 1\n, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,6,4,1,2], target = 2\n\nOutput:\n 3\n\nExplanation:\n To go from index 0 to index n - 1 with the maximum number of jumps, you can perform the following jumping sequence:\n- Jump from index 0 to index 1. \n- Jump from index 1 to index 3.\n- Jump from index 3 to index 5.\nIt can be proven that there is no other jumping sequence that goes from 0 to n - 1 with more than 3 jumps. Hence, the answer is 3. \n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,6,4,1,2], target = 3\n\nOutput:\n 5\n\nExplanation:\n To go from index 0 to index n - 1 with the maximum number of jumps, you can perform the following jumping sequence:\n- Jump from index 0 to index 1.\n- Jump from index 1 to index 2.\n- Jump from index 2 to index 3.\n- Jump from index 3 to index 4.\n- Jump from index 4 to index 5.\nIt can be proven that there is no other jumping sequence that goes from 0 to n - 1 with more than 5 jumps. Hence, the answer is 5. \n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,3,6,4,1,2], target = 0\n\nOutput:\n -1\n\nExplanation:\n It can be proven that there is no jumping sequence that goes from 0 to n - 1. Hence, the answer is -1. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length == n <= 1000\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\n0 <= target <= 2 * 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2746,
        "slug": "decremental-string-concatenation",
        "url": "https://leetcode.com/problems/decremental-string-concatenation/",
        "titulo": "Decremental String Concatenation",
        "enunciado": "You are given a \n0-indexed\n array \nwords\n containing \nn\n strings.\n\n\nLet's define a \njoin\n operation \njoin(x, y)\n between two strings \nx\n and \ny\n as concatenating them into \nxy\n. However, if the last character of \nx\n is equal to the first character of \ny\n, one of them is \ndeleted\n.\n\n\nFor example \njoin(\"ab\", \"ba\") = \"aba\"\n and \njoin(\"ab\", \"cde\") = \"abcde\"\n.\n\n\nYou are to perform \nn - 1\n \njoin\n operations. Let \nstr\n0\n = words[0]\n. Starting from \ni = 1\n up to \ni = n - 1\n, for the \ni\nth\n operation, you can do one of the following:\n\n\n\n\nMake \nstr\ni\n = join(str\ni - 1\n, words[i])\n\n\nMake \nstr\ni\n = join(words[i], str\ni - 1\n)\n\n\n\n\nYour task is to \nminimize\n the length of \nstr\nn - 1\n.\n\n\nReturn \nan integer denoting the minimum possible length of\n \nstr\nn - 1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"aa\",\"ab\",\"bc\"]\n\nOutput:\n 4\n\nExplanation: \nIn this example, we can perform join operations in the following order to minimize the length of str\n2\n: \nstr\n0\n = \"aa\"\nstr\n1\n = join(str\n0\n, \"ab\") = \"aab\"\nstr\n2\n = join(str\n1\n, \"bc\") = \"aabc\" \nIt can be shown that the minimum possible length of str\n2\n is 4.\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"ab\",\"b\"]\n\nOutput:\n 2\n\nExplanation:\n In this example, str\n0\n = \"ab\", there are two ways to get str\n1\n: \njoin(str\n0\n, \"b\") = \"ab\" or join(\"b\", str\n0\n) = \"bab\". \nThe first string, \"ab\", has the minimum length. Hence, the answer is 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n words = [\"aaa\",\"c\",\"aba\"]\n\nOutput:\n 6\n\nExplanation:\n In this example, we can perform join operations in the following order to minimize the length of str\n2\n: \nstr\n0\n = \"aaa\"\nstr\n1\n = join(str\n0\n, \"c\") = \"aaac\"\nstr\n2\n = join(\"aba\", str\n1\n) = \"abaaac\"\nIt can be shown that the minimum possible length of str\n2\n is 6.\n\n\n\n \n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 1000\n\n\n1 <= words[i].length <= 50\n\n\nEach character in \nwords[i]\n is an English lowercase letter",
        "temas": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2745,
        "slug": "construct-the-longest-new-string",
        "url": "https://leetcode.com/problems/construct-the-longest-new-string/",
        "titulo": "Construct the Longest New String",
        "enunciado": "You are given three integers \nx\n, \ny\n, and \nz\n.\n\n\nYou have \nx\n strings equal to \n\"AA\"\n, \ny\n strings equal to \n\"BB\"\n, and \nz\n strings equal to \n\"AB\"\n. You want to choose some (possibly all or none) of these strings and concatenate them in some order to form a new string. This new string must not contain \n\"AAA\"\n or \n\"BBB\"\n as a substring.\n\n\nReturn \nthe maximum possible length of the new string\n.\n\n\nA \nsubstring\n is a contiguous \nnon-empty\n sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n x = 2, y = 5, z = 1\n\nOutput:\n 12\n\nExplanation: \nWe can concatenate the strings \"BB\", \"AA\", \"BB\", \"AA\", \"BB\", and \"AB\" in that order. Then, our new string is \"BBAABBAABBAB\". \nThat string has length 12, and we can show that it is impossible to construct a string of longer length.\n\n\n\nExample 2:\n\n\n\n\nInput:\n x = 3, y = 2, z = 2\n\nOutput:\n 14\n\nExplanation:\n We can concatenate the strings \"AB\", \"AB\", \"AA\", \"BB\", \"AA\", \"BB\", and \"AA\" in that order. Then, our new string is \"ABABAABBAABBAA\". \nThat string has length 14, and we can show that it is impossible to construct a string of longer length.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= x, y, z <= 50",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Greedy",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2741,
        "slug": "special-permutations",
        "url": "https://leetcode.com/problems/special-permutations/",
        "titulo": "Special Permutations",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n containing \nn\n \ndistinct\n positive integers. A permutation of \nnums\n is called special if:\n\n\n\n\nFor all indexes \n0 <= i < n - 1\n, either \nnums[i] % nums[i+1] == 0\n or \nnums[i+1] % nums[i] == 0\n.\n\n\n\n\nReturn \nthe total number of special permutations. \nAs the answer could be large, return it \nmodulo \n10\n9 \n+ 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,6]\n\nOutput:\n 2\n\nExplanation:\n [3,6,2] and [2,6,3] are the two special permutations of nums.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,4,3]\n\nOutput:\n 2\n\nExplanation:\n [3,1,4] and [4,1,3] are the two special permutations of nums.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 14\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2740,
        "slug": "find-the-value-of-the-partition",
        "url": "https://leetcode.com/problems/find-the-value-of-the-partition/",
        "titulo": "Find the Value of the Partition",
        "enunciado": "You are given a \npositive\n integer array \nnums\n.\n\n\nPartition \nnums\n into two arrays, \nnums1\n and \nnums2\n, such that:\n\n\n\n\nEach element of the array \nnums\n belongs to either the array \nnums1\n or the array \nnums2\n.\n\n\nBoth arrays are \nnon-empty\n.\n\n\nThe value of the partition is \nminimized\n.\n\n\n\n\nThe value of the partition is \n|max(nums1) - min(nums2)|\n.\n\n\nHere, \nmax(nums1)\n denotes the maximum element of the array \nnums1\n, and \nmin(nums2)\n denotes the minimum element of the array \nnums2\n.\n\n\nReturn \nthe integer denoting the value of such partition\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,2,4]\n\nOutput:\n 1\n\nExplanation:\n We can partition the array nums into nums1 = [1,2] and nums2 = [3,4].\n- The maximum element of the array nums1 is equal to 2.\n- The minimum element of the array nums2 is equal to 3.\nThe value of the partition is |2 - 3| = 1. \nIt can be proven that 1 is the minimum value out of all partitions.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [100,1,10]\n\nOutput:\n 9\n\nExplanation:\n We can partition the array nums into nums1 = [10] and nums2 = [100,1].\n- The maximum element of the array nums1 is equal to 10.\n- The minimum element of the array nums2 is equal to 1.\nThe value of the partition is |10 - 1| = 9.\nIt can be proven that 9 is the minimum value out of all partitions.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2718,
        "slug": "sum-of-matrix-after-queries",
        "url": "https://leetcode.com/problems/sum-of-matrix-after-queries/",
        "titulo": "Sum of Matrix After Queries",
        "enunciado": "You are given an integer \nn\n and a \n0-indexed\n \n2D array\n \nqueries\n where \nqueries[i] = [type\ni\n, index\ni\n, val\ni\n]\n.\n\n\nInitially, there is a \n0-indexed\n \nn x n\n matrix filled with \n0\n's. For each query, you must apply one of the following changes:\n\n\n\n\nif \ntype\ni\n == 0\n, set the values in the row with \nindex\ni\n to \nval\ni\n, overwriting any previous values.\n\n\nif \ntype\ni\n == 1\n, set the values in the column with \nindex\ni\n to \nval\ni\n, overwriting any previous values.\n\n\n\n\nReturn \nthe sum of integers in the matrix after all queries are applied\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, queries = [[0,0,1],[1,2,2],[0,2,3],[1,0,4]]\n\nOutput:\n 23\n\nExplanation:\n The image above describes the matrix after each query. The sum of the matrix after all queries are applied is 23. \n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 3, queries = [[0,0,4],[0,1,2],[1,0,1],[0,2,3],[1,2,1]]\n\nOutput:\n 17\n\nExplanation:\n The image above describes the matrix after each query. The sum of the matrix after all queries are applied is 17.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4\n\n\n1 <= queries.length <= 5 * 10\n4\n\n\nqueries[i].length == 3\n\n\n0 <= type\ni\n <= 1\n\n\n0 <= index\ni\n < n\n\n\n0 <= val\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2749,
        "slug": "minimum-operations-to-make-the-integer-zero",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-the-integer-zero/",
        "titulo": "Minimum Operations to Make the Integer Zero",
        "enunciado": "You are given two integers \nnum1\n and \nnum2\n.\n\n\nIn one operation, you can choose integer \ni\n in the range \n[0, 60]\n and subtract \n2\ni\n + num2\n from \nnum1\n.\n\n\nReturn \nthe integer denoting the \nminimum\n number of operations needed to make\n \nnum1\n \nequal to\n \n0\n.\n\n\nIf it is impossible to make \nnum1\n equal to \n0\n, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num1 = 3, num2 = -2\n\nOutput:\n 3\n\nExplanation:\n We can make 3 equal to 0 with the following operations:\n- We choose i = 2 and subtract 2\n2\n + (-2) from 3, 3 - (4 + (-2)) = 1.\n- We choose i = 2 and subtract 2\n2\n + (-2) from 1, 1 - (4 + (-2)) = -1.\n- We choose i = 0 and subtract 2\n0\n + (-2) from -1, (-1) - (1 + (-2)) = 0.\nIt can be proven, that 3 is the minimum number of operations that we need to perform.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num1 = 5, num2 = 7\n\nOutput:\n -1\n\nExplanation:\n It can be proven, that it is impossible to make 5 equal to 0 with the given operation.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num1 <= 10\n9\n\n\n-10\n9\n <= num2 <= 10\n9",
        "temas": [
            "Bit Manipulation",
            "Brainteaser",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Bit Manipulation",
        "has_image": false
    },
    {
        "id": 2766,
        "slug": "relocate-marbles",
        "url": "https://leetcode.com/problems/relocate-marbles/",
        "titulo": "Relocate Marbles",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n representing the initial positions of some marbles. You are also given two \n0-indexed \ninteger arrays \nmoveFrom\n and \nmoveTo\n of \nequal\n length.\n\n\nThroughout \nmoveFrom.length\n steps, you will change the positions of the marbles. On the \ni\nth\n step, you will move \nall\n marbles at position \nmoveFrom[i]\n to position \nmoveTo[i]\n.\n\n\nAfter completing all the steps, return \nthe sorted list of \noccupied\n positions\n.\n\n\nNotes:\n\n\n\n\nWe call a position \noccupied\n if there is at least one marble in that position.\n\n\nThere may be multiple marbles in a single position.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,6,7,8], moveFrom = [1,7,2], moveTo = [2,9,5]\n\nOutput:\n [5,6,8,9]\n\nExplanation:\n Initially, the marbles are at positions 1,6,7,8.\nAt the i = 0th step, we move the marbles at position 1 to position 2. Then, positions 2,6,7,8 are occupied.\nAt the i = 1st step, we move the marbles at position 7 to position 9. Then, positions 2,6,8,9 are occupied.\nAt the i = 2nd step, we move the marbles at position 2 to position 5. Then, positions 5,6,8,9 are occupied.\nAt the end, the final positions containing at least one marbles are [5,6,8,9].\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,3,3], moveFrom = [1,3], moveTo = [2,2]\n\nOutput:\n [2]\n\nExplanation:\n Initially, the marbles are at positions [1,1,3,3].\nAt the i = 0th step, we move all the marbles at position 1 to position 2. Then, the marbles are at positions [2,2,3,3].\nAt the i = 1st step, we move all the marbles at position 3 to position 2. Then, the marbles are at positions [2,2,2,2].\nSince 2 is the only occupied position, we return [2].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= moveFrom.length <= 10\n5\n\n\nmoveFrom.length == moveTo.length\n\n\n1 <= nums[i], moveFrom[i], moveTo[i] <= 10\n9\n\n\nThe test cases are generated such that there is at least a marble in \nmoveFrom[i]\n at the moment we want to apply the \ni\nth\n move.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2747,
        "slug": "count-zero-request-servers",
        "url": "https://leetcode.com/problems/count-zero-request-servers/",
        "titulo": "Count Zero Request Servers",
        "enunciado": "You are given an integer \nn\n denoting the total number of servers and a \n2D\n \n0-indexed \ninteger array \nlogs\n, where \nlogs[i] = [server_id, time]\n denotes that the server with id \nserver_id\n received a request at time \ntime\n.\n\n\nYou are also given an integer \nx\n and a \n0-indexed\n integer array \nqueries\n.\n\n\nReturn \na \n0-indexed\n integer array\n \narr\n \nof length\n \nqueries.length\n \nwhere\n \narr[i]\n \nrepresents the number of servers that \ndid not receive\n any requests during the time interval\n \n[queries[i] - x, queries[i]]\n.\n\n\nNote that the time intervals are inclusive.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, logs = [[1,3],[2,6],[1,5]], x = 5, queries = [10,11]\n\nOutput:\n [1,2]\n\nExplanation:\n \nFor queries[0]: The servers with ids 1 and 2 get requests in the duration of [5, 10]. Hence, only server 3 gets zero requests.\nFor queries[1]: Only the server with id 2 gets a request in duration of [6,11]. Hence, the servers with ids 1 and 3 are the only servers that do not receive any requests during that time period.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, logs = [[2,4],[2,1],[1,2],[3,1]], x = 2, queries = [3,4]\n\nOutput:\n [0,1]\n\nExplanation:\n \nFor queries[0]: All servers get at least one request in the duration of [1, 3].\nFor queries[1]: Only server with id 3 gets no request in the duration [2,4].\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= logs.length <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nlogs[i].length == 2\n\n\n1 <= logs[i][0] <= n\n\n\n1 <= logs[i][1] <= 10\n6\n\n\n1 <= x <= 10\n5\n\n\nx < queries[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2831,
        "slug": "find-the-longest-equal-subarray",
        "url": "https://leetcode.com/problems/find-the-longest-equal-subarray/",
        "titulo": "Find the Longest Equal Subarray",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \nk\n.\n\n\nA subarray is called \nequal\n if all of its elements are equal. Note that the empty subarray is an \nequal\n subarray.\n\n\nReturn \nthe length of the \nlongest\n possible equal subarray after deleting \nat most\n \nk\n elements from \nnums\n.\n\n\nA \nsubarray\n is a contiguous, possibly empty sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,2,3,1,3], k = 3\n\nOutput:\n 3\n\nExplanation:\n It's optimal to delete the elements at index 2 and index 4.\nAfter deleting them, nums becomes equal to [1, 3, 3, 3].\nThe longest equal subarray starts at i = 1 and ends at j = 3 with length equal to 3.\nIt can be proven that no longer equal subarrays can be created.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,2,2,1,1], k = 2\n\nOutput:\n 4\n\nExplanation:\n It's optimal to delete the elements at index 2 and index 3.\nAfter deleting them, nums becomes equal to [1, 1, 1, 1].\nThe array itself is an equal subarray, so the answer is 4.\nIt can be proven that no longer equal subarrays can be created.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= nums.length\n\n\n0 <= k <= nums.length",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2734,
        "slug": "lexicographically-smallest-string-after-substring-operation",
        "url": "https://leetcode.com/problems/lexicographically-smallest-string-after-substring-operation/",
        "titulo": "Lexicographically Smallest String After Substring Operation",
        "enunciado": "Given a string \ns\n consisting of lowercase English letters. Perform the following operation:\n\n\n\n\nSelect any non-empty \nsubstring\n then replace every letter of the substring with the preceding letter of the English alphabet. For example, 'b' is converted to 'a', and 'a' is converted to 'z'.\n\n\n\n\nReturn the \nlexicographically smallest\n string \nafter performing the operation\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"cbabc\"\n\n\nOutput:\n \n\"baabc\"\n\n\nExplanation:\n\n\nPerform the operation on the substring starting at index 0, and ending at index 1 inclusive.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"aa\"\n\n\nOutput:\n \n\"az\"\n\n\nExplanation:\n\n\nPerform the operation on the last letter.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"acbbc\"\n\n\nOutput:\n \n\"abaab\"\n\n\nExplanation:\n\n\nPerform the operation on the substring starting at index 1, and ending at index 4 inclusive.\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \ns = \"leetcode\"\n\n\nOutput:\n \n\"kddsbncd\"\n\n\nExplanation:\n\n\nPerform the operation on the entire string.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 3 * 10\n5\n\n\ns\n consists of lowercase English letters",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2712,
        "slug": "minimum-cost-to-make-all-characters-equal",
        "url": "https://leetcode.com/problems/minimum-cost-to-make-all-characters-equal/",
        "titulo": "Minimum Cost to Make All Characters Equal",
        "enunciado": "You are given a \n0-indexed\n binary string \ns\n of length \nn\n on which you can apply two types of operations:\n\n\n\n\nChoose an index \ni\n and invert all characters from index \n0\n to index \ni\n (both inclusive), with a cost of \ni + 1\n\n\nChoose an index \ni\n and invert all characters from index \ni\n to index \nn - 1\n (both inclusive), with a cost of \nn - i\n\n\n\n\nReturn \nthe \nminimum cost \nto make all characters of the string \nequal\n.\n\n\nInvert\n a character means if its value is '0' it becomes '1' and vice-versa.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"0011\"\n\nOutput:\n 2\n\nExplanation:\n Apply the second operation with \ni = 2\n to obtain \ns = \"0000\" for a cost of 2\n. It can be shown that 2 is the minimum cost to make all characters equal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"010101\"\n\nOutput:\n 9\n\nExplanation:\n Apply the first operation with i = 2 to obtain s = \"101101\" for a cost of 3.\nApply the first operation with i = 1 to obtain s = \"011101\" for a cost of 2. \nApply the first operation with i = 0 to obtain s = \"111101\" for a cost of 1. \nApply the second operation with i = 4 to obtain s = \"111110\" for a cost of 2.\nApply the second operation with i = 5 to obtain s = \"111111\" for a cost of 1. \nThe total cost to make all characters equal is 9. It can be shown that 9 is the minimum cost to make all characters equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length == n <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'",
        "temas": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2829,
        "slug": "determine-the-minimum-sum-of-a-k-avoiding-array",
        "url": "https://leetcode.com/problems/determine-the-minimum-sum-of-a-k-avoiding-array/",
        "titulo": "Determine the Minimum Sum of a k-avoiding Array",
        "enunciado": "You are given two integers, \nn\n and \nk\n.\n\n\nAn array of \ndistinct\n positive integers is called a \nk-avoiding\n array if there does not exist any pair of distinct elements that sum to \nk\n.\n\n\nReturn \nthe \nminimum\n possible sum of a k-avoiding array of length \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 5, k = 4\n\nOutput:\n 18\n\nExplanation:\n Consider the k-avoiding array [1,2,4,5,6], which has a sum of 18.\nIt can be proven that there is no k-avoiding array with a sum less than 18.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, k = 6\n\nOutput:\n 3\n\nExplanation:\n We can construct the array [1,2], which has a sum of 3.\nIt can be proven that there is no k-avoiding array with a sum less than 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, k <= 50",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2735,
        "slug": "collecting-chocolates",
        "url": "https://leetcode.com/problems/collecting-chocolates/",
        "titulo": "Collecting Chocolates",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of size \nn\n representing the cost of collecting different chocolates. The cost of collecting the chocolate at the index \ni\n is \nnums[i]\n. Each chocolate is of a different type, and initially, the chocolate at the index \ni\n is of \ni\nth\n type.\n\n\nIn one operation, you can do the following with an incurred \ncost\n of \nx\n:\n\n\n\n\nSimultaneously change the chocolate of \ni\nth\n type to \n((i + 1) mod n)\nth\n type for all chocolates.\n\n\n\n\nReturn \nthe minimum cost to collect chocolates of all types, given that you can perform as many operations as you would like.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [20,1,15], x = 5\n\nOutput:\n 13\n\nExplanation:\n Initially, the chocolate types are [0,1,2]. We will buy the 1\nst\n type of chocolate at a cost of 1.\nNow, we will perform the operation at a cost of 5, and the types of chocolates will become [1,2,0]. We will buy the 2\nnd\n \ntype of chocolate at a cost of 1.\nNow, we will again perform the operation at a cost of 5, and the chocolate types will become [2,0,1]. We will buy the 0\nth \ntype of chocolate at a cost of 1. \nThus, the total cost will become (1 + 5 + 1 + 5 + 1) = 13. We can prove that this is optimal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3], x = 4\n\nOutput:\n 6\n\nExplanation:\n We will collect all three types of chocolates at their own price without performing any operations. Therefore, the total cost is 1 + 2 + 3 = 6.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= x <= 10\n9",
        "temas": [
            "Array",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2698,
        "slug": "find-the-punishment-number-of-an-integer",
        "url": "https://leetcode.com/problems/find-the-punishment-number-of-an-integer/",
        "titulo": "Find the Punishment Number of an Integer",
        "enunciado": "Given a positive integer \nn\n, return \nthe \npunishment number\n of \nn\n.\n\n\nThe \npunishment number\n of \nn\n is defined as the sum of the squares of all integers \ni\n such that:\n\n\n\n\n1 <= i <= n\n\n\nThe decimal representation of \ni * i\n can be partitioned into contiguous substrings such that the sum of the integer values of these substrings equals \ni\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 182\n\nExplanation:\n There are exactly 3 integers i in the range [1, 10] that satisfy the conditions in the statement:\n- 1 since 1 * 1 = 1\n- 9 since 9 * 9 = 81 and 81 can be partitioned into 8 and 1 with a sum equal to 8 + 1 == 9.\n- 10 since 10 * 10 = 100 and 100 can be partitioned into 10 and 0 with a sum equal to 10 + 0 == 10.\nHence, the punishment number of 10 is 1 + 81 + 100 = 182\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 37\n\nOutput:\n 1478\n\nExplanation:\n There are exactly 4 integers i in the range [1, 37] that satisfy the conditions in the statement:\n- 1 since 1 * 1 = 1. \n- 9 since 9 * 9 = 81 and 81 can be partitioned into 8 + 1. \n- 10 since 10 * 10 = 100 and 100 can be partitioned into 10 + 0. \n- 36 since 36 * 36 = 1296 and 1296 can be partitioned into 1 + 29 + 6.\nHence, the punishment number of 37 is 1 + 81 + 100 + 1296 = 1478\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000",
        "temas": [
            "Math",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2711,
        "slug": "difference-of-number-of-distinct-values-on-diagonals",
        "url": "https://leetcode.com/problems/difference-of-number-of-distinct-values-on-diagonals/",
        "titulo": "Difference of Number of Distinct Values on Diagonals",
        "enunciado": "Given a 2D \ngrid\n of size \nm x n\n, you should find the matrix \nanswer\n of size \nm x n\n.\n\n\nThe cell \nanswer[r][c]\n is calculated by looking at the diagonal values of the cell \ngrid[r][c]\n:\n\n\n\n\nLet \nleftAbove[r][c]\n be the number of \ndistinct\n values on the diagonal to the left and above the cell \ngrid[r][c]\n not including the cell \ngrid[r][c]\n itself.\n\n\nLet \nrightBelow[r][c]\n be the number of \ndistinct\n values on the diagonal to the right and below the cell \ngrid[r][c]\n, not including the cell \ngrid[r][c]\n itself.\n\n\nThen \nanswer[r][c] = |leftAbove[r][c] - rightBelow[r][c]|\n.\n\n\n\n\nA \nmatrix diagonal\n is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until the end of the matrix is reached.\n\n\n\n\nFor example, in the below diagram the diagonal is highlighted using the cell with indices \n(2, 3)\n colored gray:\n\n\t\n\n\nRed-colored cells are left and above the cell.\n\n\nBlue-colored cells are right and below the cell.\n\n\n\n\n\n\n\n\n\n\nReturn the matrix \nanswer\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ngrid = [[1,2,3],[3,1,5],[3,2,1]]\n\n\nOutput:\n \nOutput: [[1,1,0],[1,0,1],[0,1,1]]\n\n\nExplanation:\n\n\nTo calculate the \nanswer\n cells:\n\n\n\n\n\n\n\n\nanswer\n\n\nleft-above elements\n\n\nleftAbove\n\n\nright-below elements\n\n\nrightBelow\n\n\n|leftAbove - rightBelow|\n\n\n\n\n\n\n\n\n\n\n[0][0]\n\n\n[]\n\n\n0\n\n\n[grid[1][1], grid[2][2]]\n\n\n|{1, 1}| = 1\n\n\n1\n\n\n\n\n\n\n[0][1]\n\n\n[]\n\n\n0\n\n\n[grid[1][2]]\n\n\n|{5}| = 1\n\n\n1\n\n\n\n\n\n\n[0][2]\n\n\n[]\n\n\n0\n\n\n[]\n\n\n0\n\n\n0\n\n\n\n\n\n\n[1][0]\n\n\n[]\n\n\n0\n\n\n[grid[2][1]]\n\n\n|{2}| = 1\n\n\n1\n\n\n\n\n\n\n[1][1]\n\n\n[grid[0][0]]\n\n\n|{1}| = 1\n\n\n[grid[2][2]]\n\n\n|{1}| = 1\n\n\n0\n\n\n\n\n\n\n[1][2]\n\n\n[grid[0][1]]\n\n\n|{2}| = 1\n\n\n[]\n\n\n0\n\n\n1\n\n\n\n\n\n\n[2][0]\n\n\n[]\n\n\n0\n\n\n[]\n\n\n0\n\n\n0\n\n\n\n\n\n\n[2][1]\n\n\n[grid[1][0]]\n\n\n|{3}| = 1\n\n\n[]\n\n\n0\n\n\n1\n\n\n\n\n\n\n[2][2]\n\n\n[grid[0][0], grid[1][1]]\n\n\n|{1, 1}| = 1\n\n\n[]\n\n\n0\n\n\n1\n\n\n\n\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ngrid = [[1]]\n\n\nOutput:\n \nOutput: [[0]]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n, grid[i][j] <= 50",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2684,
        "slug": "maximum-number-of-moves-in-a-grid",
        "url": "https://leetcode.com/problems/maximum-number-of-moves-in-a-grid/",
        "titulo": "Maximum Number of Moves in a Grid",
        "enunciado": "You are given a \n0-indexed\n \nm x n\n matrix \ngrid\n consisting of \npositive\n integers.\n\n\nYou can start at \nany\n cell in the first column of the matrix, and traverse the grid in the following way:\n\n\n\n\nFrom a cell \n(row, col)\n, you can move to any of the cells: \n(row - 1, col + 1)\n, \n(row, col + 1)\n and \n(row + 1, col + 1)\n such that the value of the cell you move to, should be \nstrictly\n bigger than the value of the current cell.\n\n\n\n\nReturn \nthe \nmaximum\n number of \nmoves\n that you can perform.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[2,4,3,5],[5,4,9,3],[3,4,2,11],[10,9,13,15]]\n\nOutput:\n 3\n\nExplanation:\n We can start at the cell (0, 0) and make the following moves:\n- (0, 0) -> (0, 1).\n- (0, 1) -> (1, 2).\n- (1, 2) -> (2, 3).\nIt can be shown that it is the maximum number of moves that can be made.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[3,2,4],[2,1,9],[1,1,7]]\n\nOutput:\n 0\n\nExplanation:\n Starting from any cell in the first column we cannot perform any moves.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n2 <= m, n <= 1000\n\n\n4 <= m * n <= 10\n5\n\n\n1 <= grid[i][j] <= 10\n6",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2685,
        "slug": "count-the-number-of-complete-components",
        "url": "https://leetcode.com/problems/count-the-number-of-complete-components/",
        "titulo": "Count the Number of Complete Components",
        "enunciado": "You are given an integer \nn\n. There is an \nundirected\n graph with \nn\n vertices, numbered from \n0\n to \nn - 1\n. You are given a 2D integer array \nedges\n where \nedges[i] = [a\ni\n, b\ni\n]\n denotes that there exists an \nundirected\n edge connecting vertices \na\ni\n and \nb\ni\n.\n\n\nReturn \nthe number of \ncomplete connected components\n of the graph\n.\n\n\nA \nconnected component\n is a subgraph of a graph in which there exists a path between any two vertices, and no vertex of the subgraph shares an edge with a vertex outside of the subgraph.\n\n\nA connected component is said to be \ncomplete\n if there exists an edge between every pair of its vertices.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 6, edges = [[0,1],[0,2],[1,2],[3,4]]\n\nOutput:\n 3\n\nExplanation:\n From the picture above, one can see that all of the components of this graph are complete.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 6, edges = [[0,1],[0,2],[1,2],[3,4],[3,5]]\n\nOutput:\n 1\n\nExplanation:\n The component containing vertices 0, 1, and 2 is complete since there is an edge between every pair of two vertices. On the other hand, the component containing vertices 3, 4, and 5 is not complete since there is no edge between vertices 4 and 5. Thus, the number of complete components in this graph is 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 50\n\n\n0 <= edges.length <= n * (n - 1) / 2\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= n - 1\n\n\na\ni\n != b\ni\n\n\nThere are no repeated edges.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 2683,
        "slug": "neighboring-bitwise-xor",
        "url": "https://leetcode.com/problems/neighboring-bitwise-xor/",
        "titulo": "Neighboring Bitwise XOR",
        "enunciado": "A \n0-indexed\n array \nderived\n with length \nn\n is derived by computing the \nbitwise XOR\n (⊕) of adjacent values in a \nbinary array\n \noriginal\n of length \nn\n.\n\n\nSpecifically, for each index \ni\n in the range \n[0, n - 1]\n:\n\n\n\n\nIf \ni = n - 1\n, then \nderived[i] = original[i] ⊕ original[0]\n.\n\n\nOtherwise, \nderived[i] = original[i] ⊕ original[i + 1]\n.\n\n\n\n\nGiven an array \nderived\n, your task is to determine whether there exists a \nvalid binary array\n \noriginal\n that could have formed \nderived\n.\n\n\nReturn \ntrue\n if such an array exists or \nfalse\n otherwise.\n\n\n\n\nA binary array is an array containing only \n0's\n and \n1's\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n derived = [1,1,0]\n\nOutput:\n true\n\nExplanation:\n A valid original array that gives derived is [0,1,0].\nderived[0] = original[0] ⊕ original[1] = 0 ⊕ 1 = 1 \nderived[1] = original[1] ⊕ original[2] = 1 ⊕ 0 = 1\nderived[2] = original[2] ⊕ original[0] = 0 ⊕ 0 = 0\n\n\n\nExample 2:\n\n\n\n\nInput:\n derived = [1,1]\n\nOutput:\n true\n\nExplanation:\n A valid original array that gives derived is [0,1].\nderived[0] = original[0] ⊕ original[1] = 1\nderived[1] = original[1] ⊕ original[0] = 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n derived = [1,0]\n\nOutput:\n false\n\nExplanation:\n There is no valid original array that gives derived.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == derived.length\n\n\n1 <= n <= 10\n5\n\n\nThe values in \nderived\n are either \n0's\n or \n1's",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2731,
        "slug": "movement-of-robots",
        "url": "https://leetcode.com/problems/movement-of-robots/",
        "titulo": "Movement of Robots",
        "enunciado": "Some robots are standing on an infinite number line with their initial coordinates given by a \n0-indexed\n integer array \nnums\n and will start moving once given the command to move. The robots will move a unit distance each second.\n\n\nYou are given a string \ns\n denoting the direction in which robots will move on command. \n'L'\n means the robot will move towards the left side or negative side of the number line, whereas \n'R'\n means the robot will move towards the right side or positive side of the number line.\n\n\nIf two robots collide, they will start moving in opposite directions.\n\n\nReturn \nthe sum of distances between all the pairs of robots \nd\n \nseconds after the command. \nSince the sum can be very large, return it modulo \n10\n9\n + 7\n.\n\n\nNote: \n\n\n\n\nFor two robots at the index \ni\n and \nj\n, pair \n(i,j)\n and pair \n(j,i)\n are considered the same pair.\n\n\nWhen robots collide, they \ninstantly change\n their directions without wasting any time.\n\n\nCollision happens when two robots share the same place in a moment.\n\t\n\n\nFor example, if a robot is positioned in 0 going to the right and another is positioned in 2 going to the left, the next second they'll be both in 1 and they will change direction and the next second the first one will be in 0, heading left, and another will be in 2, heading right.\n\n\nFor example, if a robot is positioned in 0 going to the right and another is positioned in 1 going to the left, the next second the first one will be in 0, heading left, and another will be in 1, heading right.\n\n\n\n\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [-2,0,2], s = \"RLL\", d = 3\n\nOutput:\n 8\n\nExplanation:\n \nAfter 1 second, the positions are [-1,-1,1]. Now, the robot at index 0 will move left, and the robot at index 1 will move right.\nAfter 2 seconds, the positions are [-2,0,0]. Now, the robot at index 1 will move left, and the robot at index 2 will move right.\nAfter 3 seconds, the positions are [-3,-1,1].\nThe distance between the robot at index 0 and 1 is abs(-3 - (-1)) = 2.\nThe distance between the robot at index 0 and 2 is abs(-3 - 1) = 4.\nThe distance between the robot at index 1 and 2 is abs(-1 - 1) = 2.\nThe sum of the pairs of all distances = 2 + 4 + 2 = 8.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,0], s = \"RL\", d = 2\n\nOutput:\n 5\n\nExplanation:\n \nAfter 1 second, the positions are [2,-1].\nAfter 2 seconds, the positions are [3,-2].\nThe distance between the two robots is abs(-2 - 3) = 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n-2 * 10\n9\n <= nums[i] <= 2 * 10\n9\n\n\n0 <= d <= 10\n9\n\n\nnums.length == s.length \n\n\ns\n consists of 'L' and 'R' only\n\n\nnums[i]\n will be unique.",
        "temas": [
            "Array",
            "Brainteaser",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2730,
        "slug": "find-the-longest-semi-repetitive-substring",
        "url": "https://leetcode.com/problems/find-the-longest-semi-repetitive-substring/",
        "titulo": "Find the Longest Semi-Repetitive Substring",
        "enunciado": "You are given a digit string \ns\n that consists of digits from 0 to 9.\n\n\nA string is called \nsemi-repetitive\n if there is \nat most\n one adjacent pair of the same digit. For example, \n\"0010\"\n, \n\"002020\"\n, \n\"0123\"\n, \n\"2002\"\n, and \n\"54944\"\n are semi-repetitive while the following are not: \n\"00101022\"\n (adjacent same digit pairs are 00 and 22), and \n\"1101234883\"\n (adjacent same digit pairs are 11 and 88).\n\n\nReturn the length of the \nlongest semi-repetitive \nsubstring\n of \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"52233\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\nThe longest semi-repetitive substring is \"5223\". Picking the whole string \"52233\" has two adjacent same digit pairs 22 and 33, but at most one is allowed.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"5494\"\n\n\nOutput:\n \n4\n\n\nExplanation:\n\n\ns\n is a semi-repetitive string.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"1111111\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nThe longest semi-repetitive substring is \"11\". Picking the substring \"111\" has two adjacent same digit pairs, but at most one is allowed.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 50\n\n\n'0' <= s[i] <= '9'",
        "temas": [
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2673,
        "slug": "make-costs-of-paths-equal-in-a-binary-tree",
        "url": "https://leetcode.com/problems/make-costs-of-paths-equal-in-a-binary-tree/",
        "titulo": "Make Costs of Paths Equal in a Binary Tree",
        "enunciado": "You are given an integer \nn\n representing the number of nodes in a \nperfect binary tree\n consisting of nodes numbered from \n1\n to \nn\n. The root of the tree is node \n1\n and each node \ni\n in the tree has two children where the left child is the node \n2 * i\n and the right child is \n2 * i + 1\n.\n\n\nEach node in the tree also has a \ncost\n represented by a given \n0-indexed\n integer array \ncost\n of size \nn\n where \ncost[i]\n is the cost of node \ni + 1\n. You are allowed to \nincrement\n the cost of \nany\n node by \n1\n \nany\n number of times.\n\n\nReturn \nthe \nminimum\n number of increments you need to make the cost of paths from the root to each \nleaf\n node equal\n.\n\n\nNote\n:\n\n\n\n\nA \nperfect binary tree \nis a tree where each node, except the leaf nodes, has exactly 2 children.\n\n\nThe \ncost of a path\n is the sum of costs of nodes in the path.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 7, cost = [1,5,2,2,3,3,1]\n\nOutput:\n 6\n\nExplanation:\n We can do the following increments:\n- Increase the cost of node 4 one time.\n- Increase the cost of node 3 three times.\n- Increase the cost of node 7 two times.\nEach path from the root to a leaf will have a total cost of 9.\nThe total increments we did is 1 + 3 + 2 = 6.\nIt can be shown that this is the minimum answer we can achieve.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 3, cost = [5,3,3]\n\nOutput:\n 0\n\nExplanation:\n The two paths already have equal total costs, so no increments are needed.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n <= 10\n5\n\n\nn + 1\n is a power of \n2\n\n\ncost.length == n\n\n\n1 <= cost[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2672,
        "slug": "number-of-adjacent-elements-with-the-same-color",
        "url": "https://leetcode.com/problems/number-of-adjacent-elements-with-the-same-color/",
        "titulo": "Number of Adjacent Elements With the Same Color",
        "enunciado": "You are given an integer \nn\n representing an array \ncolors\n of length \nn\n where all elements are set to 0's meaning \nuncolored\n. You are also given a 2D integer array \nqueries\n where \nqueries[i] = [index\ni\n, color\ni\n]\n. For the \ni\nth\n \nquery\n:\n\n\n\n\nSet \ncolors[index\ni\n]\n to \ncolor\ni\n.\n\n\nCount the number of adjacent pairs in \ncolors\n which have the same color (regardless of \ncolor\ni\n).\n\n\n\n\nReturn an array \nanswer\n of the same length as \nqueries\n where \nanswer[i]\n is the answer to the \ni\nth\n query.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 4, queries = [[0,2],[1,2],[3,1],[1,1],[2,1]]\n\n\nOutput:\n \n[0,1,1,0,2]\n\n\nExplanation:\n\n\n\n\nInitially array colors = [0,0,0,0], where 0 denotes uncolored elements of the array.\n\n\nAfter the 1\nst\n query colors = [2,0,0,0]. The count of adjacent pairs with the same color is 0.\n\n\nAfter the 2\nnd\n query colors = [2,2,0,0]. The count of adjacent pairs with the same color is 1.\n\n\nAfter the 3\nrd\n query colors = [2,2,0,1]. The count of adjacent pairs with the same color is 1.\n\n\nAfter the 4\nth\n query colors = [2,1,0,1]. The count of adjacent pairs with the same color is 0.\n\n\nAfter the 5\nth\n query colors = [2,1,1,1]. The count of adjacent pairs with the same color is 2.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 1, queries = [[0,100000]]\n\n\nOutput:\n \n[0]\n\n\nExplanation:\n\n\nAfter the 1\nst\n query colors = [100000]. The count of adjacent pairs with the same color is 0.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= index\ni\n <= n - 1\n\n\n1 <=  color\ni\n <= 10\n5",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2671,
        "slug": "frequency-tracker",
        "url": "https://leetcode.com/problems/frequency-tracker/",
        "titulo": "Frequency Tracker",
        "enunciado": "Design a data structure that keeps track of the values in it and answers some queries regarding their frequencies.\n\n\nImplement the \nFrequencyTracker\n class.\n\n\n\n\nFrequencyTracker()\n: Initializes the \nFrequencyTracker\n object with an empty array initially.\n\n\nvoid add(int number)\n: Adds \nnumber\n to the data structure.\n\n\nvoid deleteOne(int number)\n: Deletes \none\n occurrence of \nnumber\n from the data structure. The data structure \nmay not contain\n \nnumber\n, and in this case nothing is deleted.\n\n\nbool hasFrequency(int frequency)\n: Returns \ntrue\n if there is a number in the data structure that occurs \nfrequency\n number of times, otherwise, it returns \nfalse\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"FrequencyTracker\", \"add\", \"add\", \"hasFrequency\"]\n[[], [3], [3], [2]]\n\nOutput\n\n[null, null, null, true]\n\n\nExplanation\n\nFrequencyTracker frequencyTracker = new FrequencyTracker();\nfrequencyTracker.add(3); // The data structure now contains [3]\nfrequencyTracker.add(3); // The data structure now contains [3, 3]\nfrequencyTracker.hasFrequency(2); // Returns true, because 3 occurs twice\n\n\n\n\nExample 2:\n\n\n\n\nInput\n\n[\"FrequencyTracker\", \"add\", \"deleteOne\", \"hasFrequency\"]\n[[], [1], [1], [1]]\n\nOutput\n\n[null, null, null, false]\n\n\nExplanation\n\nFrequencyTracker frequencyTracker = new FrequencyTracker();\nfrequencyTracker.add(1); // The data structure now contains [1]\nfrequencyTracker.deleteOne(1); // The data structure becomes empty []\nfrequencyTracker.hasFrequency(1); // Returns false, because the data structure is empty\n\n\n\n\nExample 3:\n\n\n\n\nInput\n\n[\"FrequencyTracker\", \"hasFrequency\", \"add\", \"hasFrequency\"]\n[[], [2], [3], [1]]\n\nOutput\n\n[null, false, null, true]\n\n\nExplanation\n\nFrequencyTracker frequencyTracker = new FrequencyTracker();\nfrequencyTracker.hasFrequency(2); // Returns false, because the data structure is empty\nfrequencyTracker.add(3); // The data structure now contains [3]\nfrequencyTracker.hasFrequency(1); // Returns true, because 3 occurs once\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= number <= 10\n5\n\n\n1 <= frequency <= 10\n5\n\n\nAt most, \n2 * 10\n5\n calls will be made to \nadd\n, \ndeleteOne\n, and \nhasFrequency\n in \ntotal\n.",
        "temas": [
            "Hash Table",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2657,
        "slug": "find-the-prefix-common-array-of-two-arrays",
        "url": "https://leetcode.com/problems/find-the-prefix-common-array-of-two-arrays/",
        "titulo": "Find the Prefix Common Array of Two Arrays",
        "enunciado": "You are given two \n0-indexed \ninteger\n \npermutations \nA\n and \nB\n of length \nn\n.\n\n\nA \nprefix common array\n of \nA\n and \nB\n is an array \nC\n such that \nC[i]\n is equal to the count of numbers that are present at or before the index \ni\n in both \nA\n and \nB\n.\n\n\nReturn \nthe \nprefix common array\n of \nA\n and \nB\n.\n\n\nA sequence of \nn\n integers is called a \npermutation\n if it contains all integers from \n1\n to \nn\n exactly once.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n A = [1,3,2,4], B = [3,1,2,4]\n\nOutput:\n [0,2,3,4]\n\nExplanation:\n At i = 0: no number is common, so C[0] = 0.\nAt i = 1: 1 and 3 are common in A and B, so C[1] = 2.\nAt i = 2: 1, 2, and 3 are common in A and B, so C[2] = 3.\nAt i = 3: 1, 2, 3, and 4 are common in A and B, so C[3] = 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n A = [2,3,1], B = [3,1,2]\n\nOutput:\n [0,1,3]\n\nExplanation:\n At i = 0: no number is common, so C[0] = 0.\nAt i = 1: only 3 is common in A and B, so C[1] = 1.\nAt i = 2: 1, 2, and 3 are common in A and B, so C[2] = 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= A.length == B.length == n <= 50\n\n\n1 <= A[i], B[i] <= n\n\n\nIt is guaranteed that A and B are both a permutation of n integers.",
        "temas": [
            "Array",
            "Hash Table",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2658,
        "slug": "maximum-number-of-fish-in-a-grid",
        "url": "https://leetcode.com/problems/maximum-number-of-fish-in-a-grid/",
        "titulo": "Maximum Number of Fish in a Grid",
        "enunciado": "You are given a \n0-indexed\n 2D matrix \ngrid\n of size \nm x n\n, where \n(r, c)\n represents:\n\n\n\n\nA \nland\n cell if \ngrid[r][c] = 0\n, or\n\n\nA \nwater\n cell containing \ngrid[r][c]\n fish, if \ngrid[r][c] > 0\n.\n\n\n\n\nA fisher can start at any \nwater\n cell \n(r, c)\n and can do the following operations any number of times:\n\n\n\n\nCatch all the fish at cell \n(r, c)\n, or\n\n\nMove to any adjacent \nwater\n cell.\n\n\n\n\nReturn \nthe \nmaximum\n number of fish the fisher can catch if he chooses his starting cell optimally, or \n0\n if no water cell exists.\n\n\nAn \nadjacent\n cell of the cell \n(r, c)\n, is one of the cells \n(r, c + 1)\n, \n(r, c - 1)\n, \n(r + 1, c)\n or \n(r - 1, c)\n if it exists.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,2,1,0],[4,0,0,3],[1,0,0,4],[0,3,2,0]]\n\nOutput:\n 7\n\nExplanation:\n The fisher can start at cell \n(1,3)\n and collect 3 fish, then move to cell \n(2,3)\n and collect 4 fish.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,1]]\n\nOutput:\n 1\n\nExplanation:\n The fisher can start at cells (0,0) or (3,3) and collect a single fish. \n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 10\n\n\n0 <= grid[i][j] <= 10",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2707,
        "slug": "extra-characters-in-a-string",
        "url": "https://leetcode.com/problems/extra-characters-in-a-string/",
        "titulo": "Extra Characters in a String",
        "enunciado": "You are given a \n0-indexed\n string \ns\n and a dictionary of words \ndictionary\n. You have to break \ns\n into one or more \nnon-overlapping\n substrings such that each substring is present in \ndictionary\n. There may be some \nextra characters\n in \ns\n which are not present in any of the substrings.\n\n\nReturn \nthe \nminimum\n number of extra characters left over if you break up \ns\n optimally.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"leetscode\", dictionary = [\"leet\",\"code\",\"leetcode\"]\n\nOutput:\n 1\n\nExplanation:\n We can break s in two substrings: \"leet\" from index 0 to 3 and \"code\" from index 5 to 8. There is only 1 unused character (at index 4), so we return 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"sayhelloworld\", dictionary = [\"hello\",\"world\"]\n\nOutput:\n 3\n\nExplanation:\n We can break s in two substrings: \"hello\" from index 3 to 7 and \"world\" from index 8 to 12. The characters at indices 0, 1, 2 are not used in any substring and thus are considered as extra characters. Hence, we return 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 50\n\n\n1 <= dictionary.length <= 50\n\n\n1 <= dictionary[i].length <= 50\n\n\ndictionary[i]\n and \ns\n consists of only lowercase English letters\n\n\ndictionary\n contains distinct words",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2708,
        "slug": "maximum-strength-of-a-group",
        "url": "https://leetcode.com/problems/maximum-strength-of-a-group/",
        "titulo": "Maximum Strength of a Group",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n representing the score of students in an exam. The teacher would like to form one \nnon-empty\n group of students with maximal \nstrength\n, where the strength of a group of students of indices \ni\n0\n, \ni\n1\n, \ni\n2\n, ... , \ni\nk\n is defined as \nnums[i\n0\n] * nums[i\n1\n] * nums[i\n2\n] * ... * nums[i\nk\n​]\n.\n\n\nReturn \nthe maximum strength of a group the teacher can create\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,-1,-5,2,5,-9]\n\nOutput:\n 1350\n\nExplanation:\n One way to form a group of maximal strength is to group the students at indices [0,2,3,4,5]. Their strength is 3 * (-5) * 2 * 5 * (-9) = 1350, which we can show is optimal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-4,-5,-4]\n\nOutput:\n 20\n\nExplanation:\n Group the students at indices [0, 1] . Then, we’ll have a resulting strength of 20. We cannot achieve greater strength.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 13\n\n\n-9 <= nums[i] <= 9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Greedy",
            "Bit Manipulation",
            "Sorting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2654,
        "slug": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-make-all-array-elements-equal-to-1/",
        "titulo": "Minimum Number of Operations to Make All Array Elements Equal to 1",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n consisiting of \npositive\n integers. You can do the following operation on the array \nany\n number of times:\n\n\n\n\nSelect an index \ni\n such that \n0 <= i < n - 1\n and replace either of \nnums[i]\n or \nnums[i+1]\n with their gcd value.\n\n\n\n\nReturn \nthe \nminimum\n number of operations to make all elements of \nnums\n equal to \n1\n. If it is impossible, return \n-1\n.\n\n\nThe gcd of two integers is the greatest common divisor of the two integers.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,6,3,4]\n\nOutput:\n 4\n\nExplanation:\n We can do the following operations:\n- Choose index i = 2 and replace nums[2] with gcd(3,4) = 1. Now we have nums = [2,6,1,4].\n- Choose index i = 1 and replace nums[1] with gcd(6,1) = 1. Now we have nums = [2,1,1,4].\n- Choose index i = 0 and replace nums[0] with gcd(2,1) = 1. Now we have nums = [1,1,1,4].\n- Choose index i = 2 and replace nums[3] with gcd(1,4) = 1. Now we have nums = [1,1,1,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,10,6,14]\n\nOutput:\n -1\n\nExplanation:\n It can be shown that it is impossible to make all the elements equal to 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 50\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2653,
        "slug": "sliding-subarray-beauty",
        "url": "https://leetcode.com/problems/sliding-subarray-beauty/",
        "titulo": "Sliding Subarray Beauty",
        "enunciado": "Given an integer array \nnums\n containing \nn\n integers, find the \nbeauty\n of each subarray of size \nk\n.\n\n\nThe \nbeauty\n of a subarray is the \nx\nth\n smallest integer \nin the subarray if it is \nnegative\n, or \n0\n if there are fewer than \nx\n negative integers.\n\n\nReturn \nan integer array containing \nn - k + 1\n \nintegers, which denote the \nbeauty\n of the subarrays \nin order\n from the first index in the array.\n\n\n\n\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,-1,-3,-2,3], k = 3, x = 2\n\nOutput:\n [-1,-2,-2]\n\nExplanation:\n There are 3 subarrays with size k = 3. \nThe first subarray is \n[1, -1, -3]\n and the 2\nnd\n smallest negative integer is -1. \nThe second subarray is \n[-1, -3, -2]\n and the 2\nnd\n smallest negative integer is -2. \nThe third subarray is \n[-3, -2, 3] \nand the 2\nnd\n smallest negative integer is -2.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-1,-2,-3,-4,-5], k = 2, x = 2\n\nOutput:\n [-1,-2,-3,-4]\n\nExplanation:\n There are 4 subarrays with size k = 2.\nFor \n[-1, -2]\n, the 2\nnd\n smallest negative integer is -1.\nFor \n[-2, -3]\n, the 2\nnd\n smallest negative integer is -2.\nFor \n[-3, -4]\n, the 2\nnd\n smallest negative integer is -3.\nFor \n[-4, -5]\n, the 2\nnd\n smallest negative integer is -4. \n\n\nExample 3:\n\n\n\n\nInput:\n nums = [-3,1,2,-3,0,-3], k = 2, x = 1\n\nOutput:\n [-3,0,-3,-3,-3]\n\nExplanation:\n There are 5 subarrays with size k = 2\n.\n\nFor \n[-3, 1]\n, the 1\nst\n smallest negative integer is -3.\nFor \n[1, 2]\n, there is no negative integer so the beauty is 0.\nFor \n[2, -3]\n, the 1\nst\n smallest negative integer is -3.\nFor \n[-3, 0]\n, the 1\nst\n smallest negative integer is -3.\nFor \n[0, -3]\n, the 1\nst\n smallest negative integer is -3.\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length \n\n\n1 <= n <= 10\n5\n\n\n1 <= k <= n\n\n\n1 <= x <= k \n\n\n-50 <= nums[i] <= 50",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2645,
        "slug": "minimum-additions-to-make-valid-string",
        "url": "https://leetcode.com/problems/minimum-additions-to-make-valid-string/",
        "titulo": "Minimum Additions to Make Valid String",
        "enunciado": "Given a string \nword\n to which you can insert letters \"a\", \"b\" or \"c\" anywhere and any number of times, return \nthe minimum number of letters that must be inserted so that \nword\n becomes \nvalid\n.\n\n\nA string is called \nvalid \nif it can be formed by concatenating the string \"abc\" several times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word = \"b\"\n\nOutput:\n 2\n\nExplanation:\n Insert the letter \"a\" right before \"b\", and the letter \"c\" right next to \"b\" to obtain the valid string \"\na\nb\nc\n\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n word = \"aaa\"\n\nOutput:\n 6\n\nExplanation:\n Insert letters \"b\" and \"c\" next to each \"a\" to obtain the valid string \"a\nbc\na\nbc\na\nbc\n\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n word = \"abc\"\n\nOutput:\n 0\n\nExplanation:\n word is already valid. No modifications are needed. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 50\n\n\nword\n consists of letters \"a\", \"b\" and \"c\" only.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2680,
        "slug": "maximum-or",
        "url": "https://leetcode.com/problems/maximum-or/",
        "titulo": "Maximum OR",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of length \nn\n and an integer \nk\n. In an operation, you can choose an element and multiply it by \n2\n.\n\n\nReturn \nthe maximum possible value of \nnums[0] | nums[1] | ... | nums[n - 1]\n \nthat can be obtained after applying the operation on nums at most \nk\n times\n.\n\n\nNote that \na | b\n denotes the \nbitwise or\n between two integers \na\n and \nb\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [12,9], k = 1\n\nOutput:\n 30\n\nExplanation:\n If we apply the operation to index 1, our new array nums will be equal to [12,18]. Thus, we return the bitwise or of 12 and 18, which is 30.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [8,1,2], k = 2\n\nOutput:\n 35\n\nExplanation:\n If we apply the operation twice on index 0, we yield a new array of [32,1,2]. Thus, we return 32|1|2 = 35.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= 15",
        "temas": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2679,
        "slug": "sum-in-a-matrix",
        "url": "https://leetcode.com/problems/sum-in-a-matrix/",
        "titulo": "Sum in a Matrix",
        "enunciado": "You are given a \n0-indexed\n 2D integer array \nnums\n. Initially, your score is \n0\n. Perform the following operations until the matrix becomes empty:\n\n\n\n\nFrom each row in the matrix, select the largest number and remove it. In the case of a tie, it does not matter which number is chosen.\n\n\nIdentify the highest number amongst all those removed in step 1. Add that number to your \nscore\n.\n\n\n\n\nReturn \nthe final \nscore\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [[7,2,1],[6,4,2],[6,5,3],[3,2,1]]\n\nOutput:\n 15\n\nExplanation:\n In the first operation, we remove 7, 6, 6, and 3. We then add 7 to our score. Next, we remove 2, 4, 5, and 2. We add 5 to our score. Lastly, we remove 1, 2, 3, and 1. We add 3 to our score. Thus, our final score is 7 + 5 + 3 = 15.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [[1]]\n\nOutput:\n 1\n\nExplanation:\n We remove 1 and add it to the answer. We return 1.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 300\n\n\n1 <= nums[i].length <= 500\n\n\n0 <= nums[i][j] <= 10\n3",
        "temas": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2611,
        "slug": "mice-and-cheese",
        "url": "https://leetcode.com/problems/mice-and-cheese/",
        "titulo": "Mice and Cheese",
        "enunciado": "There are two mice and \nn\n different types of cheese, each type of cheese should be eaten by exactly one mouse.\n\n\nA point of the cheese with index \ni\n (\n0-indexed\n) is:\n\n\n\n\nreward1[i]\n if the first mouse eats it.\n\n\nreward2[i]\n if the second mouse eats it.\n\n\n\n\nYou are given a positive integer array \nreward1\n, a positive integer array \nreward2\n, and a non-negative integer \nk\n.\n\n\nReturn \nthe maximum\n points the mice can achieve if the first mouse eats exactly \nk\n types of cheese.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n reward1 = [1,1,3,4], reward2 = [4,4,1,1], k = 2\n\nOutput:\n 15\n\nExplanation:\n In this example, the first mouse eats the 2\nnd\n (0-indexed) and the 3\nrd\n types of cheese, and the second mouse eats the 0\nth\n and the 1\nst\n types of cheese.\nThe total points are 4 + 4 + 3 + 4 = 15.\nIt can be proven that 15 is the maximum total points that the mice can achieve.\n\n\n\nExample 2:\n\n\n\n\nInput:\n reward1 = [1,1], reward2 = [1,1], k = 2\n\nOutput:\n 2\n\nExplanation:\n In this example, the first mouse eats the 0\nth\n (0-indexed) and 1\nst\n types of cheese, and the second mouse does not eat any cheese.\nThe total points are 1 + 1 = 2.\nIt can be proven that 2 is the maximum total points that the mice can achieve.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n == reward1.length == reward2.length <= 10\n5\n\n\n1 <= reward1[i], reward2[i] <= 1000\n\n\n0 <= k <= n",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2610,
        "slug": "convert-an-array-into-a-2d-array-with-conditions",
        "url": "https://leetcode.com/problems/convert-an-array-into-a-2d-array-with-conditions/",
        "titulo": "Convert an Array Into a 2D Array With Conditions",
        "enunciado": "You are given an integer array \nnums\n. You need to create a 2D array from \nnums\n satisfying the following conditions:\n\n\n\n\nThe 2D array should contain \nonly\n the elements of the array \nnums\n.\n\n\nEach row in the 2D array contains \ndistinct\n integers.\n\n\nThe number of rows in the 2D array should be \nminimal\n.\n\n\n\n\nReturn \nthe resulting array\n. If there are multiple answers, return any of them.\n\n\nNote\n that the 2D array can have a different number of elements on each row.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,4,1,2,3,1]\n\nOutput:\n [[1,3,4,2],[1,3],[1]]\n\nExplanation:\n We can create a 2D array that contains the following rows:\n- 1,3,4,2\n- 1,3\n- 1\nAll elements of nums were used, and each row of the 2D array contains distinct integers, so it is a valid answer.\nIt can be shown that we cannot have less than 3 rows in a valid array.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n [[4,3,2,1]]\n\nExplanation:\n All elements of the array are distinct, so we can keep all of them in the first row of the 2D array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 200\n\n\n1 <= nums[i] <= nums.length",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2615,
        "slug": "sum-of-distances",
        "url": "https://leetcode.com/problems/sum-of-distances/",
        "titulo": "Sum of Distances",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. There exists an array \narr\n of length \nnums.length\n, where \narr[i]\n is the sum of \n|i - j|\n over all \nj\n such that \nnums[j] == nums[i]\n and \nj != i\n. If there is no such \nj\n, set \narr[i]\n to be \n0\n.\n\n\nReturn \nthe array \narr\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,1,1,2]\n\nOutput:\n [5,0,3,4,0]\n\nExplanation:\n \nWhen i = 0, nums[0] == nums[2] and nums[0] == nums[3]. Therefore, arr[0] = |0 - 2| + |0 - 3| = 5. \nWhen i = 1, arr[1] = 0 because there is no other index with value 3.\nWhen i = 2, nums[2] == nums[0] and nums[2] == nums[3]. Therefore, arr[2] = |2 - 0| + |2 - 3| = 3. \nWhen i = 3, nums[3] == nums[0] and nums[3] == nums[2]. Therefore, arr[3] = |3 - 0| + |3 - 2| = 4. \nWhen i = 4, arr[4] = 0 because there is no other index with value 2. \n\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,5,3]\n\nOutput:\n [0,0,0]\n\nExplanation:\n Since each element in nums is distinct, arr[i] = 0 for all i.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n\n\n \n\n\nNote:\n This question is the same as \n 2121: Intervals Between Identical Elements.",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2616,
        "slug": "minimize-the-maximum-difference-of-pairs",
        "url": "https://leetcode.com/problems/minimize-the-maximum-difference-of-pairs/",
        "titulo": "Minimize the Maximum Difference of Pairs",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \np\n. Find \np\n pairs of indices of \nnums\n such that the \nmaximum\n difference amongst all the pairs is \nminimized\n. Also, ensure no index appears more than once amongst the \np\n pairs.\n\n\nNote that for a pair of elements at the index \ni\n and \nj\n, the difference of this pair is \n|nums[i] - nums[j]|\n, where \n|x|\n represents the \nabsolute\n \nvalue\n of \nx\n.\n\n\nReturn \nthe \nminimum\n \nmaximum\n difference among all \np\n \npairs.\n We define the maximum of an empty set to be zero.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,1,2,7,1,3], p = 2\n\nOutput:\n 1\n\nExplanation:\n The first pair is formed from the indices 1 and 4, and the second pair is formed from the indices 2 and 5. \nThe maximum difference is max(|nums[1] - nums[4]|, |nums[2] - nums[5]|) = max(0, 1) = 1. Therefore, we return 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,2,1,2], p = 1\n\nOutput:\n 0\n\nExplanation:\n Let the indices 1 and 3 form a pair. The difference of that pair is |2 - 2| = 0, which is the minimum we can attain.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n0 <= p <= (nums.length)/2",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2602,
        "slug": "minimum-operations-to-make-all-array-elements-equal",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-all-array-elements-equal/",
        "titulo": "Minimum Operations to Make All Array Elements Equal",
        "enunciado": "You are given an array \nnums\n consisting of positive integers.\n\n\nYou are also given an integer array \nqueries\n of size \nm\n. For the \ni\nth\n query, you want to make all of the elements of \nnums\n equal to\n queries[i]\n. You can perform the following operation on the array \nany\n number of times:\n\n\n\n\nIncrease\n or \ndecrease\n an element of the array by \n1\n.\n\n\n\n\nReturn \nan array \nanswer\n of size \nm\n where \nanswer[i]\n is the \nminimum\n number of operations to make all elements of \nnums\n equal to \nqueries[i]\n.\n\n\nNote\n that after each query the array is reset to its original state.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,1,6,8], queries = [1,5]\n\nOutput:\n [14,10]\n\nExplanation:\n For the first query we can do the following operations:\n- Decrease nums[0] 2 times, so that nums = [1,1,6,8].\n- Decrease nums[2] 5 times, so that nums = [1,1,1,8].\n- Decrease nums[3] 7 times, so that nums = [1,1,1,1].\nSo the total number of operations for the first query is 2 + 5 + 7 = 14.\nFor the second query we can do the following operations:\n- Increase nums[0] 2 times, so that nums = [5,1,6,8].\n- Increase nums[1] 4 times, so that nums = [5,5,6,8].\n- Decrease nums[2] 1 time, so that nums = [5,5,5,8].\n- Decrease nums[3] 3 times, so that nums = [5,5,5,5].\nSo the total number of operations for the second query is 2 + 4 + 1 + 3 = 10.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,9,6,3], queries = [10]\n\nOutput:\n [20]\n\nExplanation:\n We can increase each value in the array to 10. The total number of operations will be 8 + 1 + 4 + 7 = 20.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\nm == queries.length\n\n\n1 <= n, m <= 10\n5\n\n\n1 <= nums[i], queries[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2601,
        "slug": "prime-subtraction-operation",
        "url": "https://leetcode.com/problems/prime-subtraction-operation/",
        "titulo": "Prime Subtraction Operation",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of length \nn\n.\n\n\nYou can perform the following operation as many times as you want:\n\n\n\n\nPick an index \ni\n that you haven’t picked before, and pick a prime \np\n \nstrictly less than\n \nnums[i]\n, then subtract \np\n from \nnums[i]\n.\n\n\n\n\nReturn \ntrue if you can make \nnums\n a strictly increasing array using the above operation and false otherwise.\n\n\nA \nstrictly increasing array\n is an array whose each element is strictly greater than its preceding element.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,9,6,10]\n\nOutput:\n true\n\nExplanation:\n In the first operation: Pick i = 0 and p = 3, and then subtract 3 from nums[0], so that nums becomes [1,9,6,10].\nIn the second operation: i = 1, p = 7, subtract 7 from nums[1], so nums becomes equal to [1,2,6,10].\nAfter the second operation, nums is sorted in strictly increasing order, so the answer is true.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [6,8,11,12]\n\nOutput:\n true\n\nExplanation: \nInitially nums is sorted in strictly increasing order, so we don't need to make any operations.\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [5,8,3]\n\nOutput:\n false\n\nExplanation:\n It can be proven that there is no way to perform operations to make nums sorted in strictly increasing order, so the answer is false.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 1000\n\n\nnums.length == n",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2575,
        "slug": "find-the-divisibility-array-of-a-string",
        "url": "https://leetcode.com/problems/find-the-divisibility-array-of-a-string/",
        "titulo": "Find the Divisibility Array of a String",
        "enunciado": "You are given a \n0-indexed\n string \nword\n of length \nn\n consisting of digits, and a positive integer \nm\n.\n\n\nThe \ndivisibility array\n \ndiv\n of \nword\n is an integer array of length \nn\n such that:\n\n\n\n\ndiv[i] = 1\n if the \nnumeric value\n of \nword[0,...,i]\n is divisible by \nm\n, or\n\n\ndiv[i] = 0\n otherwise.\n\n\n\n\nReturn\n the divisibility array of\n \nword\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word = \"998244353\", m = 3\n\nOutput:\n [1,1,0,0,0,1,1,0,0]\n\nExplanation:\n There are only 4 prefixes that are divisible by 3: \"9\", \"99\", \"998244\", and \"9982443\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n word = \"1010\", m = 10\n\nOutput:\n [0,1,0,1]\n\nExplanation:\n There are only 2 prefixes that are divisible by 10: \"10\", and \"1010\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\nword.length == n\n\n\nword\n consists of digits from \n0\n to \n9\n\n\n1 <= m <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2576,
        "slug": "find-the-maximum-number-of-marked-indices",
        "url": "https://leetcode.com/problems/find-the-maximum-number-of-marked-indices/",
        "titulo": "Find the Maximum Number of Marked Indices",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n.\n\n\nInitially, all of the indices are unmarked. You are allowed to make this operation any number of times:\n\n\n\n\nPick two \ndifferent unmarked\n indices \ni\n and \nj\n such that \n2 * nums[i] <= nums[j]\n, then mark \ni\n and \nj\n.\n\n\n\n\nReturn \nthe maximum possible number of marked indices in \nnums\n using the above operation any number of times\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,5,2,4]\n\nOutput:\n 2\n\nExplanation: \nIn the first operation: pick i = 2 and j = 1, the operation is allowed because 2 * nums[2] <= nums[1]. Then mark index 2 and 1.\nIt can be shown that there's no other valid operation so the answer is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [9,2,5,4]\n\nOutput:\n 4\n\nExplanation: \nIn the first operation: pick i = 3 and j = 0, the operation is allowed because 2 * nums[3] <= nums[0]. Then mark index 3 and 0.\nIn the second operation: pick i = 1 and j = 2, the operation is allowed because 2 * nums[1] <= nums[2]. Then mark index 1 and 2.\nSince there is no other operation, the answer is 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [7,6,8]\n\nOutput:\n 0\n\nExplanation: \nThere is no valid operation to do, so the answer is 0.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2571,
        "slug": "minimum-operations-to-reduce-an-integer-to-0",
        "url": "https://leetcode.com/problems/minimum-operations-to-reduce-an-integer-to-0/",
        "titulo": "Minimum Operations to Reduce an Integer to 0",
        "enunciado": "You are given a positive integer \nn\n, you can do the following operation \nany\n number of times:\n\n\n\n\nAdd or subtract a \npower\n of \n2\n from \nn\n.\n\n\n\n\nReturn \nthe \nminimum\n number of operations to make \nn\n equal to \n0\n.\n\n\nA number \nx\n is power of \n2\n if \nx == 2\ni\n where \ni >= 0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 39\n\nOutput:\n 3\n\nExplanation:\n We can do the following operations:\n- Add 2\n0\n = 1 to n, so now n = 40.\n- Subtract 2\n3\n = 8 from n, so now n = 32.\n- Subtract 2\n5\n = 32 from n, so now n = 0.\nIt can be shown that 3 is the minimum number of operations we need to make n equal to 0.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 54\n\nOutput:\n 3\n\nExplanation:\n We can do the following operations:\n- Add 2\n1\n = 2 to n, so now n = 56.\n- Add 2\n3\n = 8 to n, so now n = 64.\n- Subtract 2\n6\n = 64 from n, so now n = 0.\nSo the minimum number of operations is 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5",
        "temas": [
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 2572,
        "slug": "count-the-number-of-square-free-subsets",
        "url": "https://leetcode.com/problems/count-the-number-of-square-free-subsets/",
        "titulo": "Count the Number of Square-Free Subsets",
        "enunciado": "You are given a positive integer \n0-indexed\n array \nnums\n.\n\n\nA subset of the array \nnums\n is \nsquare-free\n if the product of its elements is a \nsquare-free integer\n.\n\n\nA \nsquare-free integer\n is an integer that is divisible by no square number other than \n1\n.\n\n\nReturn \nthe number of square-free non-empty subsets of the array\n \nnums\n. Since the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nA \nnon-empty\n \nsubset\n of \nnums\n is an array that can be obtained by deleting some (possibly none but not all) elements from \nnums\n. Two subsets are different if and only if the chosen indices to delete are different.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,4,4,5]\n\nOutput:\n 3\n\nExplanation:\n There are 3 square-free subsets in this example:\n- The subset consisting of the 0\nth\n element [3]. The product of its elements is 3, which is a square-free integer.\n- The subset consisting of the 3\nrd\n element [5]. The product of its elements is 5, which is a square-free integer.\n- The subset consisting of 0\nth\n and 3\nrd\n elements [3,5]. The product of its elements is 15, which is a square-free integer.\nIt can be proven that there are no more than 3 square-free subsets in the given array.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1]\n\nOutput:\n 1\n\nExplanation:\n There is 1 square-free subset in this example:\n- The subset consisting of the 0\nth\n element [1]. The product of its elements is 1, which is a square-free integer.\nIt can be proven that there is no more than 1 square-free subset in the given array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 30",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2567,
        "slug": "minimum-score-by-changing-two-elements",
        "url": "https://leetcode.com/problems/minimum-score-by-changing-two-elements/",
        "titulo": "Minimum Score by Changing Two Elements",
        "enunciado": "You are given an integer array \nnums\n.\n\n\n\n\nThe \nlow\n score of \nnums\n is the \nminimum\n absolute difference between any two integers.\n\n\nThe \nhigh\n score of \nnums\n is the \nmaximum\n absolute difference between any two integers.\n\n\nThe \nscore\n of \nnums\n is the sum of the \nhigh\n and \nlow\n scores.\n\n\n\n\nReturn the \nminimum score\n after \nchanging two elements\n of \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnums = [1,4,7,8,5]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nChange \nnums[0]\n and \nnums[1]\n to be 6 so that \nnums\n becomes [6,6,7,8,5].\n\n\nThe low score is the minimum absolute difference: |6 - 6| = 0.\n\n\nThe high score is the maximum absolute difference: |8 - 5| = 3.\n\n\nThe sum of high and low score is 3.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnums = [1,4,3]\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\n\nChange \nnums[1]\n and \nnums[2]\n to 1 so that \nnums\n becomes [1,1,1].\n\n\nThe sum of maximum absolute difference and minimum absolute difference is 0.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2568,
        "slug": "minimum-impossible-or",
        "url": "https://leetcode.com/problems/minimum-impossible-or/",
        "titulo": "Minimum Impossible OR",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n.\n\n\nWe say that an integer x is \nexpressible\n from \nnums\n if there exist some integers \n0 <= index\n1\n < index\n2\n < ... < index\nk\n < nums.length\n for which \nnums[index\n1\n] | nums[index\n2\n] | ... | nums[index\nk\n] = x\n. In other words, an integer is expressible if it can be written as the bitwise OR of some subsequence of \nnums\n.\n\n\nReturn \nthe minimum \npositive non-zero integer\n that is not \nexpressible from \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,1]\n\nOutput:\n 4\n\nExplanation:\n 1 and 2 are already present in the array. We know that 3 is expressible, since nums[0] | nums[1] = 2 | 1 = 3. Since 4 is not expressible, we return 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,3,2]\n\nOutput:\n 1\n\nExplanation:\n We can show that 1 is the smallest number that is not expressible.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2564,
        "slug": "substring-xor-queries",
        "url": "https://leetcode.com/problems/substring-xor-queries/",
        "titulo": "Substring XOR Queries",
        "enunciado": "You are given a \nbinary string\n \ns\n, and a \n2D\n integer array \nqueries\n where \nqueries[i] = [first\ni\n, second\ni\n]\n.\n\n\nFor the \ni\nth\n query, find the \nshortest substring\n of \ns\n whose \ndecimal value\n, \nval\n, yields \nsecond\ni\n when \nbitwise XORed\n with \nfirst\ni\n. In other words, \nval ^ first\ni\n == second\ni\n.\n\n\nThe answer to the \ni\nth\n query is the endpoints (\n0-indexed\n) of the substring \n[left\ni\n, right\ni\n]\n or \n[-1, -1]\n if no such substring exists. If there are multiple answers, choose the one with the \nminimum\n \nleft\ni\n.\n\n\nReturn an array\n \nans\n \nwhere\n \nans[i] = [left\ni\n, right\ni\n]\n \nis the answer to the\n \ni\nth\n \nquery.\n\n\nA \nsubstring\n is a contiguous non-empty sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"101101\", queries = [[0,5],[1,2]]\n\nOutput:\n [[0,2],[2,3]]\n\nExplanation:\n For the first query the substring in range \n[0,2]\n is \n\"101\"\n which has a decimal value of \n5\n, and \n5 ^ 0 = 5\n, hence the answer to the first query is \n[0,2]\n. In the second query, the substring in range \n[2,3]\n is \n\"11\",\n and has a decimal value of \n3\n, and \n3\n ^ 1 = 2\n. So, \n[2,3]\n is returned for the second query. \n\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"0101\", queries = [[12,8]]\n\nOutput:\n [[-1,-1]]\n\nExplanation:\n In this example there is no substring that answers the query, hence \n[-1,-1] is returned\n.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"1\", queries = [[4,5]]\n\nOutput:\n [[0,0]]\n\nExplanation:\n For this example, the substring in range \n[0,0]\n has a decimal value of \n1\n, and \n1 ^ 4 = 5\n. So, the answer is \n[0,0]\n.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n4\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.\n\n\n1 <= queries.length <= 10\n5\n\n\n0 <= first\ni\n, second\ni\n <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2563,
        "slug": "count-the-number-of-fair-pairs",
        "url": "https://leetcode.com/problems/count-the-number-of-fair-pairs/",
        "titulo": "Count the Number of Fair Pairs",
        "enunciado": "Given a \n0-indexed\n integer array \nnums\n of size \nn\n and two integers \nlower\n and \nupper\n, return \nthe number of fair pairs\n.\n\n\nA pair \n(i, j)\n is \nfair \nif:\n\n\n\n\n0 <= i < j < n\n, and\n\n\nlower <= nums[i] + nums[j] <= upper\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,1,7,4,4,5], lower = 3, upper = 6\n\nOutput:\n 6\n\nExplanation:\n There are 6 fair pairs: (0,3), (0,4), (0,5), (1,3), (1,4), and (1,5).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,7,9,2,5], lower = 11, upper = 11\n\nOutput:\n 1\n\nExplanation:\n There is a single fair pair: (2,3).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\nnums.length == n\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\n-10\n9\n <= lower <= upper <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2597,
        "slug": "the-number-of-beautiful-subsets",
        "url": "https://leetcode.com/problems/the-number-of-beautiful-subsets/",
        "titulo": "The Number of Beautiful Subsets",
        "enunciado": "You are given an array \nnums\n of positive integers and a \npositive\n integer \nk\n.\n\n\nA subset of \nnums\n is \nbeautiful\n if it does not contain two integers with an absolute difference equal to \nk\n.\n\n\nReturn \nthe number of \nnon-empty beautiful \nsubsets of the array\n \nnums\n.\n\n\nA \nsubset\n of \nnums\n is an array that can be obtained by deleting some (possibly none) elements from \nnums\n. Two subsets are different if and only if the chosen indices to delete are different.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,4,6], k = 2\n\nOutput:\n 4\n\nExplanation:\n The beautiful subsets of the array nums are: [2], [4], [6], [2, 6].\nIt can be proved that there are only 4 beautiful subsets in the array [2,4,6].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1], k = 1\n\nOutput:\n 1\n\nExplanation:\n The beautiful subset of the array nums is [1].\nIt can be proved that there is only 1 beautiful subset in the array [1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 18\n\n\n1 <= nums[i], k <= 1000",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Dynamic Programming",
            "Backtracking",
            "Sorting",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2593,
        "slug": "find-score-of-an-array-after-marking-all-elements",
        "url": "https://leetcode.com/problems/find-score-of-an-array-after-marking-all-elements/",
        "titulo": "Find Score of an Array After Marking All Elements",
        "enunciado": "You are given an array \nnums\n consisting of positive integers.\n\n\nStarting with \nscore = 0\n, apply the following algorithm:\n\n\n\n\nChoose the smallest integer of the array that is not marked. If there is a tie, choose the one with the smallest index.\n\n\nAdd the value of the chosen integer to \nscore\n.\n\n\nMark \nthe chosen element and its two adjacent elements if they exist\n.\n\n\nRepeat until all the array elements are marked.\n\n\n\n\nReturn \nthe score you get after applying the above algorithm\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,1,3,4,5,2]\n\nOutput:\n 7\n\nExplanation:\n We mark the elements as follows:\n- 1 is the smallest unmarked element, so we mark it and its two adjacent elements: [\n2\n,\n1\n,\n3\n,4,5,2].\n- 2 is the smallest unmarked element, so we mark it and its left adjacent element: [\n2\n,\n1\n,\n3\n,4,\n5\n,\n2\n].\n- 4 is the only remaining unmarked element, so we mark it: [\n2\n,\n1\n,\n3\n,\n4\n,\n5\n,\n2\n].\nOur score is 1 + 2 + 4 = 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,3,5,1,3,2]\n\nOutput:\n 5\n\nExplanation:\n We mark the elements as follows:\n- 1 is the smallest unmarked element, so we mark it and its two adjacent elements: [2,3,\n5\n,\n1\n,\n3\n,2].\n- 2 is the smallest unmarked element, since there are two of them, we choose the left-most one, so we mark the one at index 0 and its right adjacent element: [\n2\n,\n3\n,\n5\n,\n1\n,\n3\n,2].\n- 2 is the only remaining unmarked element, so we mark it: [\n2\n,\n3\n,\n5\n,\n1\n,\n3\n,\n2\n].\nOur score is 1 + 2 + 2 = 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2559,
        "slug": "count-vowel-strings-in-ranges",
        "url": "https://leetcode.com/problems/count-vowel-strings-in-ranges/",
        "titulo": "Count Vowel Strings in Ranges",
        "enunciado": "You are given a \n0-indexed\n array of strings \nwords\n and a 2D array of integers \nqueries\n.\n\n\nEach query \nqueries[i] = [l\ni\n, r\ni\n]\n asks us to find the number of strings present at the indices ranging from \nl\ni\n to \nr\ni\n (both \ninclusive\n) of \nwords\n that start and end with a vowel.\n\n\nReturn \nan array \nans\n of size \nqueries.length\n, where \nans[i]\n is the answer to the \ni\nth\n query\n.\n\n\nNote\n that the vowel letters are \n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"aba\",\"bcb\",\"ece\",\"aa\",\"e\"], queries = [[0,2],[1,4],[1,1]]\n\nOutput:\n [2,3,0]\n\nExplanation:\n The strings starting and ending with a vowel are \"aba\", \"ece\", \"aa\" and \"e\".\nThe answer to the query [0,2] is 2 (strings \"aba\" and \"ece\").\nto query [1,4] is 3 (strings \"ece\", \"aa\", \"e\").\nto query [1,1] is 0.\nWe return [2,3,0].\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"a\",\"e\",\"i\"], queries = [[0,2],[0,1],[2,2]]\n\nOutput:\n [3,2,1]\n\nExplanation:\n Every string satisfies the conditions, so we return [3,2,1].\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 10\n5\n\n\n1 <= words[i].length <= 40\n\n\nwords[i]\n consists only of lowercase English letters.\n\n\nsum(words[i].length) <= 3 * 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\n0 <= l\ni\n <= r\ni\n < words.length",
        "temas": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2560,
        "slug": "house-robber-iv",
        "url": "https://leetcode.com/problems/house-robber-iv/",
        "titulo": "House Robber IV",
        "enunciado": "There are several consecutive houses along a street, each of which has some money inside. There is also a robber, who wants to steal money from the homes, but he \nrefuses to steal from adjacent homes\n.\n\n\nThe \ncapability\n of the robber is the maximum amount of money he steals from one house of all the houses he robbed.\n\n\nYou are given an integer array \nnums\n representing how much money is stashed in each house. More formally, the \ni\nth\n house from the left has \nnums[i]\n dollars.\n\n\nYou are also given an integer \nk\n, representing the \nminimum\n number of houses the robber will steal from. It is always possible to steal at least \nk\n houses.\n\n\nReturn \nthe \nminimum\n capability of the robber out of all the possible ways to steal at least \nk\n houses\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,5,9], k = 2\n\nOutput:\n 5\n\nExplanation:\n \nThere are three ways to rob at least 2 houses:\n- Rob the houses at indices 0 and 2. Capability is max(nums[0], nums[2]) = 5.\n- Rob the houses at indices 0 and 3. Capability is max(nums[0], nums[3]) = 9.\n- Rob the houses at indices 1 and 3. Capability is max(nums[1], nums[3]) = 9.\nTherefore, we return min(5, 9, 9) = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,7,9,3,1], k = 2\n\nOutput:\n 2\n\nExplanation:\n There are 7 ways to rob the houses. The way which leads to minimum capability is to rob the house at index 0 and 4. Return max(nums[0], nums[4]) = 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= (nums.length + 1)/2",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2662,
        "slug": "minimum-cost-of-a-path-with-special-roads",
        "url": "https://leetcode.com/problems/minimum-cost-of-a-path-with-special-roads/",
        "titulo": "Minimum Cost of a Path With Special Roads",
        "enunciado": "You are given an array \nstart\n where \nstart = [startX, startY]\n represents your initial position \n(startX, startY)\n in a 2D space. You are also given the array \ntarget\n where \ntarget = [targetX, targetY]\n represents your target position \n(targetX, targetY)\n.\n\n\nThe \ncost\n of going from a position \n(x1, y1)\n to any other position in the space \n(x2, y2)\n is \n|x2 - x1| + |y2 - y1|\n.\n\n\nThere are also some \nspecial roads\n. You are given a 2D array \nspecialRoads\n where \nspecialRoads[i] = [x1\ni\n, y1\ni\n, x2\ni\n, y2\ni\n, cost\ni\n]\n indicates that the \ni\nth\n special road goes in \none direction\n from \n(x1\ni\n, y1\ni\n)\n to \n(x2\ni\n, y2\ni\n)\n with a cost equal to \ncost\ni\n. You can use each special road any number of times.\n\n\nReturn the \nminimum\n cost required to go from \n(startX, startY)\n to \n(targetX, targetY)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nstart = [1,1], target = [4,5], specialRoads = [[1,2,3,3,2],[3,4,4,5,1]]\n\n\nOutput:\n \n5\n\n\nExplanation:\n\n\n\n\n(1,1) to (1,2) with a cost of |1 - 1| + |2 - 1| = 1.\n\n\n(1,2) to (3,3). Use \nspecialRoads[0]\n with\n the cost 2.\n\n\n(3,3) to (3,4) with a cost of |3 - 3| + |4 - 3| = 1.\n\n\n(3,4) to (4,5). Use \nspecialRoads[1]\n with the cost\n 1.\n\n\n\n\nSo the total cost is 1 + 2 + 1 + 1 = 5.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nstart = [3,2], target = [5,7], specialRoads = [[5,7,3,2,1],[3,2,3,4,4],[3,3,5,5,5],[3,4,5,6,6]]\n\n\nOutput:\n \n7\n\n\nExplanation:\n\n\nIt is optimal not to use any special edges and go directly from the starting to the ending position with a cost |5 - 3| + |7 - 2| = 7.\n\n\nNote that the \nspecialRoads[0]\n is directed from (5,7) to (3,2).\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nstart = [1,1], target = [10,4], specialRoads = [[4,2,1,1,3],[1,2,7,4,4],[10,3,6,1,2],[6,1,1,2,3]]\n\n\nOutput:\n \n8\n\n\nExplanation:\n\n\n\n\n(1,1) to (1,2) with a cost of |1 - 1| + |2 - 1| = 1.\n\n\n(1,2) to (7,4). Use \nspecialRoads[1]\n with the cost\n 4.\n\n\n(7,4) to (10,4) with a cost of |10 - 7| + |4 - 4| = 3.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nstart.length == target.length == 2\n\n\n1 <= startX <= targetX <= 10\n5\n\n\n1 <= startY <= targetY <= 10\n5\n\n\n1 <= specialRoads.length <= 200\n\n\nspecialRoads[i].length == 5\n\n\nstartX <= x1\ni\n, x2\ni\n <= targetX\n\n\nstartY <= y1\ni\n, y2\ni\n <= targetY\n\n\n1 <= cost\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2661,
        "slug": "first-completely-painted-row-or-column",
        "url": "https://leetcode.com/problems/first-completely-painted-row-or-column/",
        "titulo": "First Completely Painted Row or Column",
        "enunciado": "You are given a \n0-indexed\n integer array \narr\n, and an \nm x n\n integer \nmatrix\n \nmat\n. \narr\n and \nmat\n both contain \nall\n the integers in the range \n[1, m * n]\n.\n\n\nGo through each index \ni\n in \narr\n starting from index \n0\n and paint the cell in \nmat\n containing the integer \narr[i]\n.\n\n\nReturn \nthe smallest index\n \ni\n \nat which either a row or a column will be completely painted in\n \nmat\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n arr = [1,3,4,2], mat = [[1,4],[2,3]]\n\nOutput:\n 2\n\nExplanation:\n The moves are shown in order, and both the first row and second column of the matrix become fully painted at arr[2].\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n arr = [2,8,7,4,1,3,5,6,9], mat = [[3,2,5],[1,4,6],[8,7,9]]\n\nOutput:\n 3\n\nExplanation:\n The second column becomes fully painted at arr[3].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn = mat[i].length\n\n\narr.length == m * n\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\n1 <= arr[i], mat[r][c] <= m * n\n\n\nAll the integers of \narr\n are \nunique\n.\n\n\nAll the integers of \nmat\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2550,
        "slug": "count-collisions-of-monkeys-on-a-polygon",
        "url": "https://leetcode.com/problems/count-collisions-of-monkeys-on-a-polygon/",
        "titulo": "Count Collisions of Monkeys on a Polygon",
        "enunciado": "There is a regular convex polygon with \nn\n vertices. The vertices are labeled from \n0\n to \nn - 1\n in a clockwise direction, and each vertex has \nexactly one monkey\n. The following figure shows a convex polygon of \n6\n vertices.\n\n\n\n\nSimultaneously, each monkey moves to a neighboring vertex. A \ncollision\n happens if at least two monkeys reside on the same vertex after the movement or intersect on an edge.\n\n\nReturn the number of ways the monkeys can move so that at least \none collision\n happens. Since the answer may be very large, return it modulo \n10\n9 \n+ 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 3\n\n\nOutput:\n \n6\n\n\nExplanation:\n\n\nThere are 8 total possible movements.\n\nTwo ways such that they collide at some point are:\n\n\n\n\nMonkey 1 moves in a clockwise direction; monkey 2 moves in an anticlockwise direction; monkey 3 moves in a clockwise direction. Monkeys 1 and 2 collide.\n\n\nMonkey 1 moves in an anticlockwise direction; monkey 2 moves in an anticlockwise direction; monkey 3 moves in a clockwise direction. Monkeys 1 and 3 collide.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 4\n\n\nOutput:\n \n14\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n <= 10\n9",
        "temas": [
            "Math",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 2641,
        "slug": "cousins-in-binary-tree-ii",
        "url": "https://leetcode.com/problems/cousins-in-binary-tree-ii/",
        "titulo": "Cousins in Binary Tree II",
        "enunciado": "Given the \nroot\n of a binary tree, replace the value of each node in the tree with the \nsum of all its cousins' values\n.\n\n\nTwo nodes of a binary tree are \ncousins\n if they have the same depth with different parents.\n\n\nReturn \nthe \nroot\n of the modified tree\n.\n\n\nNote\n that the depth of a node is the number of edges in the path from the root node to it.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,4,9,1,10,null,7]\n\nOutput:\n [0,0,0,7,7,null,11]\n\nExplanation:\n The diagram above shows the initial binary tree and the binary tree after changing the value of each node.\n- Node with value 5 does not have any cousins so its sum is 0.\n- Node with value 4 does not have any cousins so its sum is 0.\n- Node with value 9 does not have any cousins so its sum is 0.\n- Node with value 1 has a cousin with value 7 so its sum is 7.\n- Node with value 10 has a cousin with value 7 so its sum is 7.\n- Node with value 7 has cousins with values 1 and 10 so its sum is 11.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [3,1,2]\n\nOutput:\n [0,0,0]\n\nExplanation:\n The diagram above shows the initial binary tree and the binary tree after changing the value of each node.\n- Node with value 3 does not have any cousins so its sum is 0.\n- Node with value 1 does not have any cousins so its sum is 0.\n- Node with value 2 does not have any cousins so its sum is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n4",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 2640,
        "slug": "find-the-score-of-all-prefixes-of-an-array",
        "url": "https://leetcode.com/problems/find-the-score-of-all-prefixes-of-an-array/",
        "titulo": "Find the Score of All Prefixes of an Array",
        "enunciado": "We define the \nconversion array\n \nconver\n of an array \narr\n as follows:\n\n\n\n\nconver[i] = arr[i] + max(arr[0..i])\n where \nmax(arr[0..i])\n is the maximum value of \narr[j]\n over \n0 <= j <= i\n.\n\n\n\n\nWe also define the \nscore\n of an array \narr\n as the sum of the values of the conversion array of \narr\n.\n\n\nGiven a \n0-indexed\n integer array \nnums\n of length \nn\n, return \nan array \nans\n of length \nn\n where \nans[i]\n is the score of the prefix\n \nnums[0..i]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,7,5,10]\n\nOutput:\n [4,10,24,36,56]\n\nExplanation:\n \nFor the prefix [2], the conversion array is [4] hence the score is 4\nFor the prefix [2, 3], the conversion array is [4, 6] hence the score is 10\nFor the prefix [2, 3, 7], the conversion array is [4, 6, 14] hence the score is 24\nFor the prefix [2, 3, 7, 5], the conversion array is [4, 6, 14, 12] hence the score is 36\nFor the prefix [2, 3, 7, 5, 10], the conversion array is [4, 6, 14, 12, 20] hence the score is 56\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,2,4,8,16]\n\nOutput:\n [2,4,8,16,32,64]\n\nExplanation:\n \nFor the prefix [1], the conversion array is [2] hence the score is 2\nFor the prefix [1, 1], the conversion array is [2, 2] hence the score is 4\nFor the prefix [1, 1, 2], the conversion array is [2, 2, 4] hence the score is 8\nFor the prefix [1, 1, 2, 4], the conversion array is [2, 2, 4, 8] hence the score is 16\nFor the prefix [1, 1, 2, 4, 8], the conversion array is [2, 2, 4, 8, 16] hence the score is 32\nFor the prefix [1, 1, 2, 4, 8, 16], the conversion array is [2, 2, 4, 8, 16, 32] hence the score is 64\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2555,
        "slug": "maximize-win-from-two-segments",
        "url": "https://leetcode.com/problems/maximize-win-from-two-segments/",
        "titulo": "Maximize Win From Two Segments",
        "enunciado": "There are some prizes on the \nX-axis\n. You are given an integer array \nprizePositions\n that is \nsorted in non-decreasing order\n, where \nprizePositions[i]\n is the position of the \ni\nth\n prize. There could be different prizes at the same position on the line. You are also given an integer \nk\n.\n\n\nYou are allowed to select two segments with integer endpoints. The length of each segment must be \nk\n. You will collect all prizes whose position falls within at least one of the two selected segments (including the endpoints of the segments). The two selected segments may intersect.\n\n\n\n\nFor example if \nk = 2\n, you can choose segments \n[1, 3]\n and \n[2, 4]\n, and you will win any prize \ni\n that satisfies \n1 <= prizePositions[i] <= 3\n or \n2 <= prizePositions[i] <= 4\n.\n\n\n\n\nReturn \nthe \nmaximum\n number of prizes you can win if you choose the two segments optimally\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n prizePositions = [1,1,2,2,3,3,5], k = 2\n\nOutput:\n 7\n\nExplanation:\n In this example, you can win all 7 prizes by selecting two segments [1, 3] and [3, 5].\n\n\n\nExample 2:\n\n\n\n\nInput:\n prizePositions = [1,2,3,4], k = 0\n\nOutput:\n 2\n\nExplanation:\n For this example, \none choice\n for the segments is \n[3, 3]\n and \n[4, 4],\n and you will be able to get \n2\n prizes. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= prizePositions.length <= 10\n5\n\n\n1 <= prizePositions[i] <= 10\n9\n\n\n0 <= k <= 10\n9\n \n\n\nprizePositions\n is sorted in non-decreasing order.",
        "temas": [
            "Array",
            "Binary Search",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2607,
        "slug": "make-k-subarray-sums-equal",
        "url": "https://leetcode.com/problems/make-k-subarray-sums-equal/",
        "titulo": "Make K-Subarray Sums Equal",
        "enunciado": "You are given a \n0-indexed\n integer array \narr\n and an integer \nk\n. The array \narr\n is circular. In other words, the first element of the array is the next element of the last element, and the last element of the array is the previous element of the first element.\n\n\nYou can do the following operation any number of times:\n\n\n\n\nPick any element from \narr\n and increase or decrease it by \n1\n.\n\n\n\n\nReturn \nthe minimum number of operations such that the sum of each \nsubarray\n of length \nk\n is equal\n.\n\n\nA \nsubarray\n is a contiguous part of the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,4,1,3], k = 2\n\nOutput:\n 1\n\nExplanation:\n we can do one operation on index 1 to make its value equal to 3.\nThe array after the operation is [1,3,1,3]\n- Subarray starts at index 0 is [1, 3], and its sum is 4 \n- Subarray starts at index 1 is [3, 1], and its sum is 4 \n- Subarray starts at index 2 is [1, 3], and its sum is 4 \n- Subarray starts at index 3 is [3, 1], and its sum is 4 \n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [2,5,5,7], k = 3\n\nOutput:\n 5\n\nExplanation:\n we can do three operations on index 0 to make its value equal to 5 and two operations on index 3 to make its value equal to 5.\nThe array after the operations is [5,5,5,5]\n- Subarray starts at index 0 is [5, 5, 5], and its sum is 15\n- Subarray starts at index 1 is [5, 5, 5], and its sum is 15\n- Subarray starts at index 2 is [5, 5, 5], and its sum is 15\n- Subarray starts at index 3 is [5, 5, 5], and its sum is 15 \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= arr.length <= 10\n5\n\n\n1 <= arr[i] <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2606,
        "slug": "find-the-substring-with-maximum-cost",
        "url": "https://leetcode.com/problems/find-the-substring-with-maximum-cost/",
        "titulo": "Find the Substring With Maximum Cost",
        "enunciado": "You are given a string \ns\n, a string \nchars\n of \ndistinct\n characters and an integer array \nvals\n of the same length as \nchars\n.\n\n\nThe \ncost of the substring \nis the sum of the values of each character in the substring. The cost of an empty string is considered \n0\n.\n\n\nThe \nvalue of the character \nis defined in the following way:\n\n\n\n\nIf the character is not in the string \nchars\n, then its value is its corresponding position \n(1-indexed)\n in the alphabet.\n\n\t\n\n\nFor example, the value of \n'a'\n is \n1\n, the value of \n'b'\n is \n2\n, and so on. The value of \n'z'\n is \n26\n.\n\n\n\n\n\n\nOtherwise, assuming \ni\n is the index where the character occurs in the string \nchars\n, then its value is \nvals[i]\n.\n\n\n\n\nReturn \nthe maximum cost among all substrings of the string\n \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"adaa\", chars = \"d\", vals = [-1000]\n\nOutput:\n 2\n\nExplanation:\n The value of the characters \"a\" and \"d\" is 1 and -1000 respectively.\nThe substring with the maximum cost is \"aa\" and its cost is 1 + 1 = 2.\nIt can be proven that 2 is the maximum cost.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abc\", chars = \"abc\", vals = [-1,-1,-1]\n\nOutput:\n 0\n\nExplanation:\n The value of the characters \"a\", \"b\" and \"c\" is -1, -1, and -1 respectively.\nThe substring with the maximum cost is the empty substring \"\" and its cost is 0.\nIt can be proven that 0 is the maximum cost.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consist of lowercase English letters.\n\n\n1 <= chars.length <= 26\n\n\nchars\n consist of \ndistinct\n lowercase English letters.\n\n\nvals.length == chars.length\n\n\n-1000 <= vals[i] <= 1000",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2594,
        "slug": "minimum-time-to-repair-cars",
        "url": "https://leetcode.com/problems/minimum-time-to-repair-cars/",
        "titulo": "Minimum Time to Repair Cars",
        "enunciado": "You are given an integer array \nranks\n representing the \nranks\n of some mechanics. \nranks\ni\n is the rank of the \ni\nth\n mechanic\n.\n A mechanic with a rank \nr\n can repair \nn\n cars in \nr * n\n2\n minutes.\n\n\nYou are also given an integer \ncars\n representing the total number of cars waiting in the garage to be repaired.\n\n\nReturn \nthe \nminimum\n time taken to repair all the cars.\n\n\nNote:\n All the mechanics can repair the cars simultaneously.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n ranks = [4,2,3,1], cars = 10\n\nOutput:\n 16\n\nExplanation:\n \n- The first mechanic will repair two cars. The time required is 4 * 2 * 2 = 16 minutes.\n- The second mechanic will repair two cars. The time required is 2 * 2 * 2 = 8 minutes.\n- The third mechanic will repair two cars. The time required is 3 * 2 * 2 = 12 minutes.\n- The fourth mechanic will repair four cars. The time required is 1 * 4 * 4 = 16 minutes.\nIt can be proved that the cars cannot be repaired in less than 16 minutes.​​​​​\n\n\n\nExample 2:\n\n\n\n\nInput:\n ranks = [5,1,8], cars = 6\n\nOutput:\n 16\n\nExplanation:\n \n- The first mechanic will repair one car. The time required is 5 * 1 * 1 = 5 minutes.\n- The second mechanic will repair four cars. The time required is 1 * 4 * 4 = 16 minutes.\n- The third mechanic will repair one car. The time required is 8 * 1 * 1 = 8 minutes.\nIt can be proved that the cars cannot be repaired in less than 16 minutes.​​​​​\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= ranks.length <= 10\n5\n\n\n1 <= ranks[i] <= 100\n\n\n1 <= cars <= 10\n6",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2592,
        "slug": "maximize-greatness-of-an-array",
        "url": "https://leetcode.com/problems/maximize-greatness-of-an-array/",
        "titulo": "Maximize Greatness of an Array",
        "enunciado": "You are given a 0-indexed integer array \nnums\n. You are allowed to permute \nnums\n into a new array \nperm\n of your choosing.\n\n\nWe define the \ngreatness\n of \nnums\n be the number of indices \n0 <= i < nums.length\n for which \nperm[i] > nums[i]\n.\n\n\nReturn \nthe \nmaximum\n possible greatness you can achieve after permuting\n \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,5,2,1,3,1]\n\nOutput:\n 4\n\nExplanation:\n One of the optimal rearrangements is perm = [2,5,1,3,3,1,1].\nAt indices = 0, 1, 3, and 4, perm[i] > nums[i]. Hence, we return 4.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n 3\n\nExplanation:\n We can prove the optimal perm is [2,3,4,1].\nAt indices = 0, 1, and 2, perm[i] > nums[i]. Hence, we return 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2596,
        "slug": "check-knight-tour-configuration",
        "url": "https://leetcode.com/problems/check-knight-tour-configuration/",
        "titulo": "Check Knight Tour Configuration",
        "enunciado": "There is a knight on an \nn x n\n chessboard. In a valid configuration, the knight starts \nat the top-left cell\n of the board and visits every cell on the board \nexactly once\n.\n\n\nYou are given an \nn x n\n integer matrix \ngrid\n consisting of distinct integers from the range \n[0, n * n - 1]\n where \ngrid[row][col]\n indicates that the cell \n(row, col)\n is the \ngrid[row][col]\nth\n cell that the knight visited. The moves are \n0-indexed\n.\n\n\nReturn \ntrue\n \nif\n \ngrid\n \nrepresents a valid configuration of the knight's movements or\n \nfalse\n \notherwise\n.\n\n\nNote\n that a valid knight move consists of moving two squares vertically and one square horizontally, or two squares horizontally and one square vertically. The figure below illustrates all the possible eight moves of a knight from some cell.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,11,16,5,20],[17,4,19,10,15],[12,1,8,21,6],[3,18,23,14,9],[24,13,2,7,22]]\n\nOutput:\n true\n\nExplanation:\n The above diagram represents the grid. It can be shown that it is a valid configuration.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,3,6],[5,8,1],[2,7,4]]\n\nOutput:\n false\n\nExplanation:\n The above diagram represents the grid. The 8\nth\n move of the knight is not valid considering its position after the 7\nth\n move.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length == grid[i].length\n\n\n3 <= n <= 7\n\n\n0 <= grid[row][col] < n * n\n\n\nAll integers in \ngrid\n are \nunique\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2598,
        "slug": "smallest-missing-non-negative-integer-after-operations",
        "url": "https://leetcode.com/problems/smallest-missing-non-negative-integer-after-operations/",
        "titulo": "Smallest Missing Non-negative Integer After Operations",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \nvalue\n.\n\n\nIn one operation, you can add or subtract \nvalue\n from any element of \nnums\n.\n\n\n\n\nFor example, if \nnums = [1,2,3]\n and \nvalue = 2\n, you can choose to subtract \nvalue\n from \nnums[0]\n to make \nnums = [-1,2,3]\n.\n\n\n\n\nThe MEX (minimum excluded) of an array is the smallest missing \nnon-negative\n integer in it.\n\n\n\n\nFor example, the MEX of \n[-1,2,3]\n is \n0\n while the MEX of \n[1,0,3]\n is \n2\n.\n\n\n\n\nReturn \nthe maximum MEX of \nnums\n after applying the mentioned operation \nany number of times\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,-10,7,13,6,8], value = 5\n\nOutput:\n 4\n\nExplanation:\n One can achieve this result by applying the following operations:\n- Add value to nums[1] twice to make nums = [1,\n0\n,7,13,6,8]\n- Subtract value from nums[2] once to make nums = [1,0,\n2\n,13,6,8]\n- Subtract value from nums[3] twice to make nums = [1,0,2,\n3\n,6,8]\nThe MEX of nums is 4. It can be shown that 4 is the maximum MEX we can achieve.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,-10,7,13,6,8], value = 7\n\nOutput:\n 2\n\nExplanation:\n One can achieve this result by applying the following operation:\n- subtract value from nums[2] once to make nums = [1,-10,\n0\n,13,6,8]\nThe MEX of nums is 2. It can be shown that 2 is the maximum MEX we can achieve.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length, value <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2588,
        "slug": "count-the-number-of-beautiful-subarrays",
        "url": "https://leetcode.com/problems/count-the-number-of-beautiful-subarrays/",
        "titulo": "Count the Number of Beautiful Subarrays",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. In one operation, you can:\n\n\n\n\nChoose two different indices \ni\n and \nj\n such that \n0 <= i, j < nums.length\n.\n\n\nChoose a non-negative integer \nk\n such that the \nk\nth\n bit (\n0-indexed\n) in the binary representation of \nnums[i]\n and \nnums[j]\n is \n1\n.\n\n\nSubtract \n2\nk\n from \nnums[i]\n and \nnums[j]\n.\n\n\n\n\nA subarray is \nbeautiful\n if it is possible to make all of its elements equal to \n0\n after applying the above operation any number of times.\n\n\nReturn \nthe number of \nbeautiful subarrays\n in the array\n \nnums\n.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,3,1,2,4]\n\nOutput:\n 2\n\nExplanation:\n There are 2 beautiful subarrays in nums: [4,\n3,1,2\n,4] and [\n4,3,1,2,4\n].\n- We can make all elements in the subarray [3,1,2] equal to 0 in the following way:\n  - Choose [\n3\n, 1, \n2\n] and k = 1. Subtract 2\n1\n from both numbers. The subarray becomes [1, 1, 0].\n  - Choose [\n1\n, \n1\n, 0] and k = 0. Subtract 2\n0\n from both numbers. The subarray becomes [0, 0, 0].\n- We can make all elements in the subarray [4,3,1,2,4] equal to 0 in the following way:\n  - Choose [\n4\n, 3, 1, 2, \n4\n] and k = 2. Subtract 2\n2\n from both numbers. The subarray becomes [0, 3, 1, 2, 0].\n  - Choose [0, \n3\n, \n1\n, 2, 0] and k = 0. Subtract 2\n0\n from both numbers. The subarray becomes [0, 2, 0, 2, 0].\n  - Choose [0, \n2\n, 0, \n2\n, 0] and k = 1. Subtract 2\n1\n from both numbers. The subarray becomes [0, 0, 0, 0, 0].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,10,4]\n\nOutput:\n 0\n\nExplanation:\n There are no beautiful subarrays in nums.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2587,
        "slug": "rearrange-array-to-maximize-prefix-score",
        "url": "https://leetcode.com/problems/rearrange-array-to-maximize-prefix-score/",
        "titulo": "Rearrange Array to Maximize Prefix Score",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. You can rearrange the elements of \nnums\n to \nany order\n (including the given order).\n\n\nLet \nprefix\n be the array containing the prefix sums of \nnums\n after rearranging it. In other words, \nprefix[i]\n is the sum of the elements from \n0\n to \ni\n in \nnums\n after rearranging it. The \nscore\n of \nnums\n is the number of positive integers in the array \nprefix\n.\n\n\nReturn \nthe maximum score you can achieve\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,-1,0,1,-3,3,-3]\n\nOutput:\n 6\n\nExplanation:\n We can rearrange the array into nums = [2,3,1,-1,-3,0,-3].\nprefix = [2,5,6,5,2,2,-1], so the score is 6.\nIt can be shown that 6 is the maximum score we can obtain.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-2,-3,0]\n\nOutput:\n 0\n\nExplanation:\n Any rearrangement of the array will result in a score of 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n6\n <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2580,
        "slug": "count-ways-to-group-overlapping-ranges",
        "url": "https://leetcode.com/problems/count-ways-to-group-overlapping-ranges/",
        "titulo": "Count Ways to Group Overlapping Ranges",
        "enunciado": "You are given a 2D integer array \nranges\n where \nranges[i] = [start\ni\n, end\ni\n]\n denotes that all integers between \nstart\ni\n and \nend\ni\n (both \ninclusive\n) are contained in the \ni\nth\n range.\n\n\nYou are to split \nranges\n into \ntwo\n (possibly empty) groups such that:\n\n\n\n\nEach range belongs to exactly one group.\n\n\nAny two \noverlapping\n ranges must belong to the \nsame\n group.\n\n\n\n\nTwo ranges are said to be \noverlapping\n if there exists at least \none\n integer that is present in both ranges.\n\n\n\n\nFor example, \n[1, 3]\n and \n[2, 5]\n are overlapping because \n2\n and \n3\n occur in both ranges.\n\n\n\n\nReturn \nthe \ntotal number\n of ways to split\n \nranges\n \ninto two groups\n. Since the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n ranges = [[6,10],[5,15]]\n\nOutput:\n 2\n\nExplanation:\n \nThe two ranges are overlapping, so they must be in the same group.\nThus, there are two possible ways:\n- Put both the ranges together in group 1.\n- Put both the ranges together in group 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n ranges = [[1,3],[10,20],[2,5],[4,8]]\n\nOutput:\n 4\n\nExplanation:\n \nRanges [1,3], and [2,5] are overlapping. So, they must be in the same group.\nAgain, ranges [2,5] and [4,8] are also overlapping. So, they must also be in the same group. \nThus, there are four possible ways to group them:\n- All the ranges in group 1.\n- All the ranges in group 2.\n- Ranges [1,3], [2,5], and [4,8] in group 1 and [10,20] in group 2.\n- Ranges [1,3], [2,5], and [4,8] in group 2 and [10,20] in group 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= ranges.length <= 10\n5\n\n\nranges[i].length == 2\n\n\n0 <= start\ni\n <= end\ni\n <= 10\n9",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2579,
        "slug": "count-total-number-of-colored-cells",
        "url": "https://leetcode.com/problems/count-total-number-of-colored-cells/",
        "titulo": "Count Total Number of Colored Cells",
        "enunciado": "There exists an infinitely large two-dimensional grid of uncolored unit cells. You are given a positive integer \nn\n, indicating that you must do the following routine for \nn\n minutes:\n\n\n\n\nAt the first minute, color \nany\n arbitrary unit cell blue.\n\n\nEvery minute thereafter, color blue \nevery\n uncolored cell that touches a blue cell.\n\n\n\n\nBelow is a pictorial representation of the state of the grid after minutes 1, 2, and 3.\n\n\n\n\nReturn \nthe number of \ncolored cells\n at the end of \nn\n \nminutes\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\nExplanation:\n After 1 minute, there is only 1 blue cell, so we return 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 5\n\nExplanation:\n After 2 minutes, there are 4 colored cells on the boundary and 1 in the center, so we return 5. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 2583,
        "slug": "kth-largest-sum-in-a-binary-tree",
        "url": "https://leetcode.com/problems/kth-largest-sum-in-a-binary-tree/",
        "titulo": "Kth Largest Sum in a Binary Tree",
        "enunciado": "You are given the \nroot\n of a binary tree and a positive integer \nk\n.\n\n\nThe \nlevel sum\n in the tree is the sum of the values of the nodes that are on the \nsame\n level.\n\n\nReturn\n the \nk\nth\n \nlargest\n level sum in the tree (not necessarily distinct)\n. If there are fewer than \nk\n levels in the tree, return \n-1\n.\n\n\nNote\n that two nodes are on the same level if they have the same distance from the root.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,8,9,2,1,3,7,4,6], k = 2\n\nOutput:\n 13\n\nExplanation:\n The level sums are the following:\n- Level 1: 5.\n- Level 2: 8 + 9 = 17.\n- Level 3: 2 + 1 + 3 + 7 = 13.\n- Level 4: 4 + 6 = 10.\nThe 2\nnd\n largest level sum is 13.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,null,3], k = 1\n\nOutput:\n 3\n\nExplanation:\n The largest level sum is 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is \nn\n.\n\n\n2 <= n <= 10\n5\n\n\n1 <= Node.val <= 10\n6\n\n\n1 <= k <= n",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Sorting",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 2556,
        "slug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
        "url": "https://leetcode.com/problems/disconnect-path-in-a-binary-matrix-by-at-most-one-flip/",
        "titulo": "Disconnect Path in a Binary Matrix by at Most One Flip",
        "enunciado": "You are given a \n0-indexed\n \nm x n\n \nbinary\n matrix \ngrid\n. You can move from a cell \n(row, col)\n to any of the cells \n(row + 1, col)\n or \n(row, col + 1)\n that has the value \n1\n. The matrix is \ndisconnected\n if there is no path from \n(0, 0)\n to \n(m - 1, n - 1)\n.\n\n\nYou can flip the value of \nat most one\n (possibly none) cell. You \ncannot flip\n the cells \n(0, 0)\n and \n(m - 1, n - 1)\n.\n\n\nReturn \ntrue\n \nif it is possible to make the matrix disconnect or \nfalse\n otherwise\n.\n\n\nNote\n that flipping a cell changes its value from \n0\n to \n1\n or from \n1\n to \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1],[1,0,0],[1,1,1]]\n\nOutput:\n true\n\nExplanation:\n We can change the cell shown in the diagram above. There is no path from (0, 0) to (2, 2) in the resulting grid.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1],[1,0,1],[1,1,1]]\n\nOutput:\n false\n\nExplanation:\n It is not possible to change at most one cell such that there is not path from (0, 0) to (2, 2).\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 1000\n\n\n1 <= m * n <= 10\n5\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.\n\n\ngrid[0][0] == grid[m - 1][n - 1] == 1",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2554,
        "slug": "maximum-number-of-integers-to-choose-from-a-range-i",
        "url": "https://leetcode.com/problems/maximum-number-of-integers-to-choose-from-a-range-i/",
        "titulo": "Maximum Number of Integers to Choose From a Range I",
        "enunciado": "You are given an integer array \nbanned\n and two integers \nn\n and \nmaxSum\n. You are choosing some number of integers following the below rules:\n\n\n\n\nThe chosen integers have to be in the range \n[1, n]\n.\n\n\nEach integer can be chosen \nat most once\n.\n\n\nThe chosen integers should not be in the array \nbanned\n.\n\n\nThe sum of the chosen integers should not exceed \nmaxSum\n.\n\n\n\n\nReturn \nthe \nmaximum\n number of integers you can choose following the mentioned rules\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n banned = [1,6,5], n = 5, maxSum = 6\n\nOutput:\n 2\n\nExplanation:\n You can choose the integers 2 and 4.\n2 and 4 are from the range [1, 5], both did not appear in banned, and their sum is 6, which did not exceed maxSum.\n\n\n\nExample 2:\n\n\n\n\nInput:\n banned = [1,2,3,4,5,6,7], n = 8, maxSum = 1\n\nOutput:\n 0\n\nExplanation:\n You cannot choose any integer while following the mentioned conditions.\n\n\n\nExample 3:\n\n\n\n\nInput:\n banned = [11], n = 7, maxSum = 50\n\nOutput:\n 7\n\nExplanation:\n You can choose the integers 1, 2, 3, 4, 5, 6, and 7.\nThey are from the range [1, 7], all did not appear in banned, and their sum is 28, which did not exceed maxSum.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= banned.length <= 10\n4\n\n\n1 <= banned[i], n <= 10\n4\n\n\n1 <= maxSum <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2542,
        "slug": "maximum-subsequence-score",
        "url": "https://leetcode.com/problems/maximum-subsequence-score/",
        "titulo": "Maximum Subsequence Score",
        "enunciado": "You are given two \n0-indexed\n integer arrays \nnums1\n and \nnums2\n of equal length \nn\n and a positive integer \nk\n. You must choose a \nsubsequence\n of indices from \nnums1\n of length \nk\n.\n\n\nFor chosen indices \ni\n0\n, \ni\n1\n, ..., \ni\nk - 1\n, your \nscore\n is defined as:\n\n\n\n\nThe sum of the selected elements from \nnums1\n multiplied with the \nminimum\n of the selected elements from \nnums2\n.\n\n\nIt can defined simply as: \n(nums1[i\n0\n] + nums1[i\n1\n] +...+ nums1[i\nk - 1\n]) * min(nums2[i\n0\n] , nums2[i\n1\n], ... ,nums2[i\nk - 1\n])\n.\n\n\n\n\nReturn \nthe \nmaximum\n possible score.\n\n\nA \nsubsequence\n of indices of an array is a set that can be derived from the set \n{0, 1, ..., n-1}\n by deleting some or no elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,3,3,2], nums2 = [2,1,3,4], k = 3\n\nOutput:\n 12\n\nExplanation:\n \nThe four possible subsequence scores are:\n- We choose the indices 0, 1, and 2 with score = (1+3+3) * min(2,1,3) = 7.\n- We choose the indices 0, 1, and 3 with score = (1+3+2) * min(2,1,4) = 6. \n- We choose the indices 0, 2, and 3 with score = (1+3+2) * min(2,3,4) = 12. \n- We choose the indices 1, 2, and 3 with score = (3+3+2) * min(1,3,4) = 8.\nTherefore, we return the max score, which is 12.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [4,2,3,1,1], nums2 = [7,5,10,9,6], k = 1\n\nOutput:\n 30\n\nExplanation:\n \nChoosing index 2 is optimal: nums1[2] * nums2[2] = 3 * 10 = 30 is the maximum possible score.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length == nums2.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= nums1[i], nums2[j] <= 10\n5\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2546,
        "slug": "apply-bitwise-operations-to-make-strings-equal",
        "url": "https://leetcode.com/problems/apply-bitwise-operations-to-make-strings-equal/",
        "titulo": "Apply Bitwise Operations to Make Strings Equal",
        "enunciado": "You are given two \n0-indexed binary\n strings \ns\n and \ntarget\n of the same length \nn\n. You can do the following operation on \ns\n \nany\n number of times:\n\n\n\n\nChoose two \ndifferent\n indices \ni\n and \nj\n where \n0 <= i, j < n\n.\n\n\nSimultaneously, replace \ns[i]\n with (\ns[i]\n \nOR\n \ns[j]\n) and \ns[j]\n with (\ns[i]\n \nXOR\n \ns[j]\n).\n\n\n\n\nFor example, if \ns = \"0110\"\n, you can choose \ni = 0\n and \nj = 2\n, then simultaneously replace \ns[0]\n with (\ns[0]\n \nOR\n \ns[2]\n = \n0\n \nOR\n \n1\n = \n1\n), and \ns[2]\n with (\ns[0]\n \nXOR\n \ns[2]\n = \n0\n \nXOR\n \n1\n = \n1\n), so we will have \ns = \"1110\"\n.\n\n\nReturn \ntrue\n \nif you can make the string \ns\n equal to \ntarget\n, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"1010\", target = \"0110\"\n\nOutput:\n true\n\nExplanation:\n We can do the following operations:\n- Choose i = 2 and j = 0. We have now s = \"\n0\n0\n1\n0\".\n- Choose i = 2 and j = 1. We have now s = \"0\n11\n0\".\nSince we can make s equal to target, we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"11\", target = \"00\"\n\nOutput:\n false\n\nExplanation:\n It is not possible to make s equal to target with any number of operations.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == s.length == target.length\n\n\n2 <= n <= 10\n5\n\n\ns\n and \ntarget\n consist of only the digits \n0\n and \n1\n.",
        "temas": [
            "String",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2545,
        "slug": "sort-the-students-by-their-kth-score",
        "url": "https://leetcode.com/problems/sort-the-students-by-their-kth-score/",
        "titulo": "Sort the Students by Their Kth Score",
        "enunciado": "There is a class with \nm\n students and \nn\n exams. You are given a \n0-indexed\n \nm x n\n integer matrix \nscore\n, where each row represents one student and \nscore[i][j]\n denotes the score the \ni\nth\n student got in the \nj\nth\n exam. The matrix \nscore\n contains \ndistinct\n integers only.\n\n\nYou are also given an integer \nk\n. Sort the students (i.e., the rows of the matrix) by their scores in the \nk\nth\n (\n0-indexed\n) exam from the highest to the lowest.\n\n\nReturn \nthe matrix after sorting it.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n score = [[10,6,9,1],[7,5,11,2],[4,8,3,15]], k = 2\n\nOutput:\n [[7,5,11,2],[10,6,9,1],[4,8,3,15]]\n\nExplanation:\n In the above diagram, S denotes the student, while E denotes the exam.\n- The student with index 1 scored 11 in exam 2, which is the highest score, so they got first place.\n- The student with index 0 scored 9 in exam 2, which is the second highest score, so they got second place.\n- The student with index 2 scored 3 in exam 2, which is the lowest score, so they got third place.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n score = [[3,4],[5,6]], k = 0\n\nOutput:\n [[5,6],[3,4]]\n\nExplanation:\n In the above diagram, S denotes the student, while E denotes the exam.\n- The student with index 1 scored 5 in exam 0, which is the highest score, so they got first place.\n- The student with index 0 scored 3 in exam 0, which is the lowest score, so they got second place.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == score.length\n\n\nn == score[i].length\n\n\n1 <= m, n <= 250\n\n\n1 <= score[i][j] <= 10\n5\n\n\nscore\n consists of \ndistinct\n integers.\n\n\n0 <= k < n",
        "temas": [
            "Array",
            "Sorting",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2513,
        "slug": "minimize-the-maximum-of-two-arrays",
        "url": "https://leetcode.com/problems/minimize-the-maximum-of-two-arrays/",
        "titulo": "Minimize the Maximum of Two Arrays",
        "enunciado": "We have two arrays \narr1\n and \narr2\n which are initially empty. You need to add positive integers to them such that they satisfy all the following conditions:\n\n\n\n\narr1\n contains \nuniqueCnt1\n \ndistinct\n positive integers, each of which is \nnot divisible\n by \ndivisor1\n.\n\n\narr2\n contains \nuniqueCnt2\n \ndistinct\n positive integers, each of which is \nnot divisible\n by \ndivisor2\n.\n\n\nNo\n integer is present in both \narr1\n and \narr2\n.\n\n\n\n\nGiven \ndivisor1\n, \ndivisor2\n, \nuniqueCnt1\n, and \nuniqueCnt2\n, return \nthe \nminimum possible maximum\n integer that can be present in either array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n divisor1 = 2, divisor2 = 7, uniqueCnt1 = 1, uniqueCnt2 = 3\n\nOutput:\n 4\n\nExplanation:\n \nWe can distribute the first 4 natural numbers into arr1 and arr2.\narr1 = [1] and arr2 = [2,3,4].\nWe can see that both arrays satisfy all the conditions.\nSince the maximum value is 4, we return it.\n\n\n\nExample 2:\n\n\n\n\nInput:\n divisor1 = 3, divisor2 = 5, uniqueCnt1 = 2, uniqueCnt2 = 1\n\nOutput:\n 3\n\nExplanation:\n \nHere arr1 = [1,2], and arr2 = [3] satisfy all conditions.\nSince the maximum value is 3, we return it.\n\n\nExample 3:\n\n\n\n\nInput:\n divisor1 = 2, divisor2 = 4, uniqueCnt1 = 8, uniqueCnt2 = 2\n\nOutput:\n 15\n\nExplanation:\n \nHere, the final possible arrays can be arr1 = [1,3,5,7,9,11,13,15], and arr2 = [2,6].\nIt can be shown that it is not possible to obtain a lower maximum satisfying all conditions. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= divisor1, divisor2 <= 10\n5\n\n\n1 <= uniqueCnt1, uniqueCnt2 < 10\n9\n\n\n2 <= uniqueCnt1 + uniqueCnt2 <= 10\n9",
        "temas": [
            "Math",
            "Binary Search",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2537,
        "slug": "count-the-number-of-good-subarrays",
        "url": "https://leetcode.com/problems/count-the-number-of-good-subarrays/",
        "titulo": "Count the Number of Good Subarrays",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \nthe number of \ngood\n subarrays of\n \nnums\n.\n\n\nA subarray \narr\n is \ngood\n if there are \nat least \nk\n pairs of indices \n(i, j)\n such that \ni < j\n and \narr[i] == arr[j]\n.\n\n\nA \nsubarray\n is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,1,1,1], k = 10\n\nOutput:\n 1\n\nExplanation:\n The only good subarray is the array nums itself.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,1,4,3,2,2,4], k = 2\n\nOutput:\n 4\n\nExplanation:\n There are 4 different good subarrays:\n- [3,1,4,3,2,2] that has 2 pairs.\n- [3,1,4,3,2,2,4] that has 3 pairs.\n- [1,4,3,2,2,4] that has 2 pairs.\n- [4,3,2,2,4] that has 2 pairs.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i], k <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2536,
        "slug": "increment-submatrices-by-one",
        "url": "https://leetcode.com/problems/increment-submatrices-by-one/",
        "titulo": "Increment Submatrices by One",
        "enunciado": "You are given a positive integer \nn\n, indicating that we initially have an \nn x n\n \n0-indexed\n integer matrix \nmat\n filled with zeroes.\n\n\nYou are also given a 2D integer array \nquery\n. For each \nquery[i] = [row1\ni\n, col1\ni\n, row2\ni\n, col2\ni\n]\n, you should do the following operation:\n\n\n\n\nAdd \n1\n to \nevery element\n in the submatrix with the \ntop left\n corner \n(row1\ni\n, col1\ni\n)\n and the \nbottom right\n corner \n(row2\ni\n, col2\ni\n)\n. That is, add \n1\n to \nmat[x][y]\n for all \nrow1\ni\n <= x <= row2\ni\n and \ncol1\ni\n <= y <= col2\ni\n.\n\n\n\n\nReturn\n the matrix\n \nmat\n after performing every query.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, queries = [[1,1,2,2],[0,0,1,1]]\n\nOutput:\n [[1,1,0],[1,2,1],[0,1,1]]\n\nExplanation:\n The diagram above shows the initial matrix, the matrix after the first query, and the matrix after the second query.\n- In the first query, we add 1 to every element in the submatrix with the top left corner (1, 1) and bottom right corner (2, 2).\n- In the second query, we add 1 to every element in the submatrix with the top left corner (0, 0) and bottom right corner (1, 1).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 2, queries = [[0,0,1,1]]\n\nOutput:\n [[1,1],[1,1]]\n\nExplanation:\n The diagram above shows the initial matrix and the matrix after the first query.\n- In the first query we add 1 to every element in the matrix.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 500\n\n\n1 <= queries.length <= 10\n4\n\n\n0 <= row1\ni\n <= row2\ni\n < n\n\n\n0 <= col1\ni\n <= col2\ni\n < n",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2527,
        "slug": "find-xor-beauty-of-array",
        "url": "https://leetcode.com/problems/find-xor-beauty-of-array/",
        "titulo": "Find Xor-Beauty of Array",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n.\n\n\nThe \neffective value\n of three indices \ni\n, \nj\n, and \nk\n is defined as \n((nums[i] | nums[j]) & nums[k])\n.\n\n\nThe \nxor-beauty\n of the array is the XORing of \nthe effective values of all the possible triplets\n of indices \n(i, j, k)\n where \n0 <= i, j, k < n\n.\n\n\nReturn \nthe xor-beauty of\n \nnums\n.\n\n\nNote\n that:\n\n\n\n\nval1 | val2\n is bitwise OR of \nval1\n and \nval2\n.\n\n\nval1 & val2\n is bitwise AND of \nval1\n and \nval2\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,4]\n\nOutput:\n 5\n\nExplanation:\n \nThe triplets and their corresponding effective values are listed below:\n- (0,0,0) with effective value ((1 | 1) & 1) = 1\n- (0,0,1) with effective value ((1 | 1) & 4) = 0\n- (0,1,0) with effective value ((1 | 4) & 1) = 1\n- (0,1,1) with effective value ((1 | 4) & 4) = 4\n- (1,0,0) with effective value ((4 | 1) & 1) = 1\n- (1,0,1) with effective value ((4 | 1) & 4) = 4\n- (1,1,0) with effective value ((4 | 4) & 1) = 0\n- (1,1,1) with effective value ((4 | 4) & 4) = 4 \nXor-beauty of array will be bitwise XOR of all beauties = 1 ^ 0 ^ 1 ^ 4 ^ 1 ^ 4 ^ 0 ^ 4 = 5.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [15,45,20,2,34,35,5,44,32,30]\n\nOutput:\n 34\n\nExplanation:\n \nThe xor-beauty of the given array is 34.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2526,
        "slug": "find-consecutive-integers-from-a-data-stream",
        "url": "https://leetcode.com/problems/find-consecutive-integers-from-a-data-stream/",
        "titulo": "Find Consecutive Integers from a Data Stream",
        "enunciado": "For a stream of integers, implement a data structure that checks if the last \nk\n integers parsed in the stream are \nequal\n to \nvalue\n.\n\n\nImplement the \nDataStream\n class:\n\n\n\n\nDataStream(int value, int k)\n Initializes the object with an empty integer stream and the two integers \nvalue\n and \nk\n.\n\n\nboolean consec(int num)\n Adds \nnum\n to the stream of integers. Returns \ntrue\n if the last \nk\n integers are equal to \nvalue\n, and \nfalse\n otherwise. If there are less than \nk\n integers, the condition does not hold true, so returns \nfalse\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"DataStream\", \"consec\", \"consec\", \"consec\", \"consec\"]\n[[4, 3], [4], [4], [4], [3]]\n\nOutput\n\n[null, false, false, true, false]\n\n\nExplanation\n\nDataStream dataStream = new DataStream(4, 3); //value = 4, k = 3 \ndataStream.consec(4); // Only 1 integer is parsed, so returns False. \ndataStream.consec(4); // Only 2 integers are parsed.\n                      // Since 2 is less than k, returns False. \ndataStream.consec(4); // The 3 integers parsed are all equal to value, so returns True. \ndataStream.consec(3); // The last k integers parsed in the stream are [4,4,3].\n                      // Since 3 is not equal to value, it returns False.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= value, num <= 10\n9\n\n\n1 <= k <= 10\n5\n\n\nAt most \n10\n5\n calls will be made to \nconsec\n.",
        "temas": [
            "Hash Table",
            "Design",
            "Queue",
            "Counting",
            "Data Stream"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2530,
        "slug": "maximal-score-after-applying-k-operations",
        "url": "https://leetcode.com/problems/maximal-score-after-applying-k-operations/",
        "titulo": "Maximal Score After Applying K Operations",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \nk\n. You have a \nstarting score\n of \n0\n.\n\n\nIn one \noperation\n:\n\n\n\n\nchoose an index \ni\n such that \n0 <= i < nums.length\n,\n\n\nincrease your \nscore\n by \nnums[i]\n, and\n\n\nreplace \nnums[i]\n with \nceil(nums[i] / 3)\n.\n\n\n\n\nReturn \nthe maximum possible \nscore\n you can attain after applying \nexactly\n \nk\n \noperations\n.\n\n\nThe ceiling function \nceil(val)\n is the least integer greater than or equal to \nval\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,10,10,10,10], k = 5\n\nOutput:\n 50\n\nExplanation:\n Apply the operation to each array element exactly once. The final score is 10 + 10 + 10 + 10 + 10 = 50.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,10,3,3,3], k = 3\n\nOutput:\n 17\n\nExplanation: \nYou can do the following operations:\nOperation 1: Select i = 1, so nums becomes [1,\n4\n,3,3,3]. Your score increases by 10.\nOperation 2: Select i = 1, so nums becomes [1,\n2\n,3,3,3]. Your score increases by 4.\nOperation 3: Select i = 2, so nums becomes [1,2,\n1\n,3,3]. Your score increases by 3.\nThe final score is 10 + 4 + 3 = 17.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length, k <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2531,
        "slug": "make-number-of-distinct-characters-equal",
        "url": "https://leetcode.com/problems/make-number-of-distinct-characters-equal/",
        "titulo": "Make Number of Distinct Characters Equal",
        "enunciado": "You are given two \n0-indexed\n strings \nword1\n and \nword2\n.\n\n\nA \nmove\n consists of choosing two indices \ni\n and \nj\n such that \n0 <= i < word1.length\n and \n0 <= j < word2.length\n and swapping \nword1[i]\n with \nword2[j]\n.\n\n\nReturn \ntrue\n \nif it is possible to get the number of distinct characters in\n \nword1\n \nand\n \nword2\n \nto be equal with \nexactly one\n move. \nReturn \nfalse\n \notherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word1 = \"ac\", word2 = \"b\"\n\nOutput:\n false\n\nExplanation:\n Any pair of swaps would yield two distinct characters in the first string, and one in the second string.\n\n\n\nExample 2:\n\n\n\n\nInput:\n word1 = \"abcc\", word2 = \"aab\"\n\nOutput:\n true\n\nExplanation:\n We swap index 2 of the first string with index 0 of the second string. The resulting strings are word1 = \"abac\" and word2 = \"cab\", which both have 3 distinct characters.\n\n\n\nExample 3:\n\n\n\n\nInput:\n word1 = \"abcde\", word2 = \"fghij\"\n\nOutput:\n true\n\nExplanation:\n Both resulting strings will have 5 distinct characters, regardless of which indices we swap.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word1.length, word2.length <= 10\n5\n\n\nword1\n and \nword2\n consist of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2523,
        "slug": "closest-prime-numbers-in-range",
        "url": "https://leetcode.com/problems/closest-prime-numbers-in-range/",
        "titulo": "Closest Prime Numbers in Range",
        "enunciado": "Given two positive integers \nleft\n and \nright\n, find the two integers \nnum1\n and \nnum2\n such that:\n\n\n\n\nleft <= num1 < num2 <= right \n.\n\n\nBoth \nnum1\n and \nnum2\n are \nprime numbers\n.\n\n\nnum2 - num1\n is the \nminimum\n amongst all other pairs satisfying the above conditions.\n\n\n\n\nReturn the positive integer array \nans = [num1, num2]\n. If there are multiple pairs satisfying these conditions, return the one with the \nsmallest\n \nnum1\n value. If no such numbers exist, return \n[-1, -1]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n left = 10, right = 19\n\nOutput:\n [11,13]\n\nExplanation:\n The prime numbers between 10 and 19 are 11, 13, 17, and 19.\nThe closest gap between any pair is 2, which can be achieved by [11,13] or [17,19].\nSince 11 is smaller than 17, we return the first pair.\n\n\n\nExample 2:\n\n\n\n\nInput:\n left = 4, right = 6\n\nOutput:\n [-1,-1]\n\nExplanation:\n There exists only one prime number in the given range, so the conditions cannot be satisfied.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= left <= right <= 10\n6",
        "temas": [
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2521,
        "slug": "distinct-prime-factors-of-product-of-array",
        "url": "https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/",
        "titulo": "Distinct Prime Factors of Product of Array",
        "enunciado": "Given an array of positive integers \nnums\n, return \nthe number of \ndistinct prime factors\n in the product of the elements of\n \nnums\n.\n\n\nNote\n that:\n\n\n\n\nA number greater than \n1\n is called \nprime\n if it is divisible by only \n1\n and itself.\n\n\nAn integer \nval1\n is a factor of another integer \nval2\n if \nval2 / val1\n is an integer.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,4,3,7,10,6]\n\nOutput:\n 4\n\nExplanation:\n\nThe product of all the elements in nums is: 2 * 4 * 3 * 7 * 10 * 6 = 10080 = 2\n5\n * 3\n2\n * 5 * 7.\nThere are 4 distinct prime factors so we return 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,4,8,16]\n\nOutput:\n 1\n\nExplanation:\n\nThe product of all the elements in nums is: 2 * 4 * 8 * 16 = 1024 = 2\n10\n.\nThere is 1 distinct prime factor so we return 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n2 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2482,
        "slug": "difference-between-ones-and-zeros-in-row-and-column",
        "url": "https://leetcode.com/problems/difference-between-ones-and-zeros-in-row-and-column/",
        "titulo": "Difference Between Ones and Zeros in Row and Column",
        "enunciado": "You are given a \n0-indexed\n \nm x n\n binary matrix \ngrid\n.\n\n\nA \n0-indexed\n \nm x n\n difference matrix \ndiff\n is created with the following procedure:\n\n\n\n\nLet the number of ones in the \ni\nth\n row be \nonesRow\ni\n.\n\n\nLet the number of ones in the \nj\nth\n column be \nonesCol\nj\n.\n\n\nLet the number of zeros in the \ni\nth\n row be \nzerosRow\ni\n.\n\n\nLet the number of zeros in the \nj\nth\n column be \nzerosCol\nj\n.\n\n\ndiff[i][j] = onesRow\ni\n + onesCol\nj\n - zerosRow\ni\n - zerosCol\nj\n\n\n\n\nReturn \nthe difference matrix \ndiff\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,1,1],[1,0,1],[0,0,1]]\n\nOutput:\n [[0,0,4],[0,0,4],[-2,-2,2]]\n\nExplanation:\n\n- diff[0][0] = \nonesRow\n0\n + onesCol\n0\n - zerosRow\n0\n - zerosCol\n0\n = 2 + 1 - 1 - 2 = 0 \n- diff[0][1] = \nonesRow\n0\n + onesCol\n1\n - zerosRow\n0\n - zerosCol\n1\n = 2 + 1 - 1 - 2 = 0 \n- diff[0][2] = \nonesRow\n0\n + onesCol\n2\n - zerosRow\n0\n - zerosCol\n2\n = 2 + 3 - 1 - 0 = 4 \n- diff[1][0] = \nonesRow\n1\n + onesCol\n0\n - zerosRow\n1\n - zerosCol\n0\n = 2 + 1 - 1 - 2 = 0 \n- diff[1][1] = \nonesRow\n1\n + onesCol\n1\n - zerosRow\n1\n - zerosCol\n1\n = 2 + 1 - 1 - 2 = 0 \n- diff[1][2] = \nonesRow\n1\n + onesCol\n2\n - zerosRow\n1\n - zerosCol\n2\n = 2 + 3 - 1 - 0 = 4 \n- diff[2][0] = \nonesRow\n2\n + onesCol\n0\n - zerosRow\n2\n - zerosCol\n0\n = 1 + 1 - 2 - 2 = -2\n- diff[2][1] = \nonesRow\n2\n + onesCol\n1\n - zerosRow\n2\n - zerosCol\n1\n = 1 + 1 - 2 - 2 = -2\n- diff[2][2] = \nonesRow\n2\n + onesCol\n2\n - zerosRow\n2\n - zerosCol\n2\n = 1 + 3 - 2 - 0 = 2\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1],[1,1,1]]\n\nOutput:\n [[5,5,5],[5,5,5]]\n\nExplanation:\n\n- diff[0][0] = onesRow\n0\n + onesCol\n0\n - zerosRow\n0\n - zerosCol\n0\n = 3 + 2 - 0 - 0 = 5\n- diff[0][1] = onesRow\n0\n + onesCol\n1\n - zerosRow\n0\n - zerosCol\n1\n = 3 + 2 - 0 - 0 = 5\n- diff[0][2] = onesRow\n0\n + onesCol\n2\n - zerosRow\n0\n - zerosCol\n2\n = 3 + 2 - 0 - 0 = 5\n- diff[1][0] = onesRow\n1\n + onesCol\n0\n - zerosRow\n1\n - zerosCol\n0\n = 3 + 2 - 0 - 0 = 5\n- diff[1][1] = onesRow\n1\n + onesCol\n1\n - zerosRow\n1\n - zerosCol\n1\n = 3 + 2 - 0 - 0 = 5\n- diff[1][2] = onesRow\n1\n + onesCol\n2\n - zerosRow\n1\n - zerosCol\n2\n = 3 + 2 - 0 - 0 = 5\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2541,
        "slug": "minimum-operations-to-make-array-equal-ii",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-array-equal-ii/",
        "titulo": "Minimum Operations to Make Array Equal II",
        "enunciado": "You are given two integer arrays \nnums1\n and \nnums2\n of equal length \nn\n and an integer \nk\n. You can perform the following operation on \nnums1\n:\n\n\n\n\nChoose two indexes \ni\n and \nj\n and increment \nnums1[i]\n by \nk\n and decrement \nnums1[j]\n by \nk\n. In other words, \nnums1[i] = nums1[i] + k\n and \nnums1[j] = nums1[j] - k\n.\n\n\n\n\nnums1\n is said to be \nequal\n to \nnums2\n if for all indices \ni\n such that \n0 <= i < n\n, \nnums1[i] == nums2[i]\n.\n\n\nReturn \nthe \nminimum\n number of operations required to make \nnums1\n equal to \nnums2\n. If it is impossible to make them equal, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [4,3,1,4], nums2 = [1,3,7,1], k = 3\n\nOutput:\n 2\n\nExplanation:\n In 2 operations, we can transform nums1 to nums2.\n1\nst\n operation: i = 2, j = 0. After applying the operation, nums1 = [1,3,4,4].\n2\nnd\n operation: i = 2, j = 3. After applying the operation, nums1 = [1,3,7,1].\nOne can prove that it is impossible to make arrays equal in fewer operations.\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [3,8,5,2], nums2 = [2,4,1,6], k = 1\n\nOutput:\n -1\n\nExplanation:\n It can be proved that it is impossible to make the two arrays equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length == nums2.length\n\n\n2 <= n <= 10\n5\n\n\n0 <= nums1[i], nums2[j] <= 10\n9\n\n\n0 <= k <= 10\n5",
        "temas": [
            "Array",
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2512,
        "slug": "reward-top-k-students",
        "url": "https://leetcode.com/problems/reward-top-k-students/",
        "titulo": "Reward Top K Students",
        "enunciado": "You are given two string arrays \npositive_feedback\n and \nnegative_feedback\n, containing the words denoting positive and negative feedback, respectively. Note that \nno\n word is both positive and negative.\n\n\nInitially every student has \n0\n points. Each positive word in a feedback report \nincreases\n the points of a student by \n3\n, whereas each negative word \ndecreases\n the points by \n1\n.\n\n\nYou are given \nn\n feedback reports, represented by a \n0-indexed\n string array \nreport\n and a \n0-indexed\n integer array \nstudent_id\n, where \nstudent_id[i]\n represents the ID of the student who has received the feedback report \nreport[i]\n. The ID of each student is \nunique\n.\n\n\nGiven an integer \nk\n, return \nthe top \nk\n students after ranking them in \nnon-increasing\n order by their points\n. In case more than one student has the same points, the one with the lower ID ranks higher.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n positive_feedback = [\"smart\",\"brilliant\",\"studious\"], negative_feedback = [\"not\"], report = [\"this student is studious\",\"the student is smart\"], student_id = [1,2], k = 2\n\nOutput:\n [1,2]\n\nExplanation:\n \nBoth the students have 1 positive feedback and 3 points but since student 1 has a lower ID he ranks higher.\n\n\n\nExample 2:\n\n\n\n\nInput:\n positive_feedback = [\"smart\",\"brilliant\",\"studious\"], negative_feedback = [\"not\"], report = [\"this student is not studious\",\"the student is smart\"], student_id = [1,2], k = 2\n\nOutput:\n [2,1]\n\nExplanation:\n \n- The student with ID 1 has 1 positive feedback and 1 negative feedback, so he has 3-1=2 points. \n- The student with ID 2 has 1 positive feedback, so he has 3 points. \nSince student 2 has more points, [2,1] is returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= positive_feedback.length, negative_feedback.length <= 10\n4\n\n\n1 <= positive_feedback[i].length, negative_feedback[j].length <= 100\n\n\nBoth \npositive_feedback[i]\n and \nnegative_feedback[j]\n consists of lowercase English letters.\n\n\nNo word is present in both \npositive_feedback\n and \nnegative_feedback\n.\n\n\nn == report.length == student_id.length\n\n\n1 <= n <= 10\n4\n\n\nreport[i]\n consists of lowercase English letters and spaces \n' '\n.\n\n\nThere is a single space between consecutive words of \nreport[i]\n.\n\n\n1 <= report[i].length <= 100\n\n\n1 <= student_id[i] <= 10\n9\n\n\nAll the values of \nstudent_id[i]\n are \nunique\n.\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2517,
        "slug": "maximum-tastiness-of-candy-basket",
        "url": "https://leetcode.com/problems/maximum-tastiness-of-candy-basket/",
        "titulo": "Maximum Tastiness of Candy Basket",
        "enunciado": "You are given an array of positive integers \nprice\n where \nprice[i]\n denotes the price of the \ni\nth\n candy and a positive integer \nk\n.\n\n\nThe store sells baskets of \nk\n \ndistinct\n candies. The \ntastiness\n of a candy basket is the smallest absolute difference of the \nprices\n of any two candies in the basket.\n\n\nReturn \nthe \nmaximum\n tastiness of a candy basket.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n price = [13,5,1,8,21,2], k = 3\n\nOutput:\n 8\n\nExplanation:\n Choose the candies with the prices [13,5,21].\nThe tastiness of the candy basket is: min(|13 - 5|, |13 - 21|, |5 - 21|) = min(8, 8, 16) = 8.\nIt can be proven that 8 is the maximum tastiness that can be achieved.\n\n\n\nExample 2:\n\n\n\n\nInput:\n price = [1,3,1], k = 2\n\nOutput:\n 2\n\nExplanation:\n Choose the candies with the prices [1,3].\nThe tastiness of the candy basket is: min(|1 - 3|) = min(2) = 2.\nIt can be proven that 2 is the maximum tastiness that can be achieved.\n\n\n\nExample 3:\n\n\n\n\nInput:\n price = [7,7,7,7], k = 2\n\nOutput:\n 0\n\nExplanation:\n Choosing any two distinct candies from the candies we have will result in a tastiness of 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= k <= price.length <= 10\n5\n\n\n1 <= price[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2516,
        "slug": "take-k-of-each-character-from-left-and-right",
        "url": "https://leetcode.com/problems/take-k-of-each-character-from-left-and-right/",
        "titulo": "Take K of Each Character From Left and Right",
        "enunciado": "You are given a string \ns\n consisting of the characters \n'a'\n, \n'b'\n, and \n'c'\n and a non-negative integer \nk\n. Each minute, you may take either the \nleftmost\n character of \ns\n, or the \nrightmost\n character of \ns\n.\n\n\nReturn\n the \nminimum\n number of minutes needed for you to take \nat least\n \nk\n of each character, or return \n-1\n if it is not possible to take \nk\n of each character.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aabaaaacaabc\", k = 2\n\nOutput:\n 8\n\nExplanation:\n \nTake three characters from the left of s. You now have two 'a' characters, and one 'b' character.\nTake five characters from the right of s. You now have four 'a' characters, two 'b' characters, and two 'c' characters.\nA total of 3 + 5 = 8 minutes is needed.\nIt can be proven that 8 is the minimum number of minutes needed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"a\", k = 1\n\nOutput:\n -1\n\nExplanation:\n It is not possible to take one 'b' or 'c' so return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of only the letters \n'a'\n, \n'b'\n, and \n'c'\n.\n\n\n0 <= k <= s.length",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2507,
        "slug": "smallest-value-after-replacing-with-sum-of-prime-factors",
        "url": "https://leetcode.com/problems/smallest-value-after-replacing-with-sum-of-prime-factors/",
        "titulo": "Smallest Value After Replacing With Sum of Prime Factors",
        "enunciado": "You are given a positive integer \nn\n.\n\n\nContinuously replace \nn\n with the sum of its \nprime factors\n.\n\n\n\n\nNote that if a prime factor divides \nn\n multiple times, it should be included in the sum as many times as it divides \nn\n.\n\n\n\n\nReturn \nthe smallest value \nn\n will take on.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 15\n\nOutput:\n 5\n\nExplanation:\n Initially, n = 15.\n15 = 3 * 5, so replace n with 3 + 5 = 8.\n8 = 2 * 2 * 2, so replace n with 2 + 2 + 2 = 6.\n6 = 2 * 3, so replace n with 2 + 3 = 5.\n5 is the smallest value n will take on.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 3\n\nExplanation:\n Initially, n = 3.\n3 is the smallest value n will take on.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5",
        "temas": [
            "Math",
            "Simulation",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2498,
        "slug": "frog-jump-ii",
        "url": "https://leetcode.com/problems/frog-jump-ii/",
        "titulo": "Frog Jump II",
        "enunciado": "You are given a \n0-indexed\n integer array \nstones\n sorted in \nstrictly increasing order\n representing the positions of stones in a river.\n\n\nA frog, initially on the first stone, wants to travel to the last stone and then return to the first stone. However, it can jump to any stone \nat most once\n.\n\n\nThe \nlength\n of a jump is the absolute difference between the position of the stone the frog is currently on and the position of the stone to which the frog jumps.\n\n\n\n\nMore formally, if the frog is at \nstones[i]\n and is jumping to \nstones[j]\n, the length of the jump is \n|stones[i] - stones[j]|\n.\n\n\n\n\nThe \ncost\n of a path is the \nmaximum length of a jump\n among all jumps in the path.\n\n\nReturn \nthe \nminimum\n cost of a path for the frog\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n stones = [0,2,5,6,7]\n\nOutput:\n 5\n\nExplanation:\n The above figure represents one of the optimal paths the frog can take.\nThe cost of this path is 5, which is the maximum length of a jump.\nSince it is not possible to achieve a cost of less than 5, we return it.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n stones = [0,3,9]\n\nOutput:\n 9\n\nExplanation:\n \nThe frog can jump directly to the last stone and come back to the first stone. \nIn this case, the length of each jump will be 9. The cost for the path will be max(9, 9) = 9.\nIt can be shown that this is the minimum achievable cost.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= stones.length <= 10\n5\n\n\n0 <= stones[i] <= 10\n9\n\n\nstones[0] == 0\n\n\nstones\n is sorted in a strictly increasing order.",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2497,
        "slug": "maximum-star-sum-of-a-graph",
        "url": "https://leetcode.com/problems/maximum-star-sum-of-a-graph/",
        "titulo": "Maximum Star Sum of a Graph",
        "enunciado": "There is an undirected graph consisting of \nn\n nodes numbered from \n0\n to \nn - 1\n. You are given a \n0-indexed\n integer array \nvals\n of length \nn\n where \nvals[i]\n denotes the value of the \ni\nth\n node.\n\n\nYou are also given a 2D integer array \nedges\n where \nedges[i] = [a\ni\n, b\ni\n]\n denotes that there exists an \nundirected\n edge connecting nodes \na\ni\n and \nb\ni.\n\n\nA \nstar graph\n is a subgraph of the given graph having a center node containing \n0\n or more neighbors. In other words, it is a subset of edges of the given graph such that there exists a common node for all edges.\n\n\nThe image below shows star graphs with \n3\n and \n4\n neighbors respectively, centered at the blue node.\n\n\n\n\nThe \nstar sum\n is the sum of the values of all the nodes present in the star graph.\n\n\nGiven an integer \nk\n, return \nthe \nmaximum star sum\n of a star graph containing \nat most\n \nk\n edges.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n vals = [1,2,3,4,10,-10,-20], edges = [[0,1],[1,2],[1,3],[3,4],[3,5],[3,6]], k = 2\n\nOutput:\n 16\n\nExplanation:\n The above diagram represents the input graph.\nThe star graph with the maximum star sum is denoted by blue. It is centered at 3 and includes its neighbors 1 and 4.\nIt can be shown it is not possible to get a star graph with a sum greater than 16.\n\n\n\nExample 2:\n\n\n\n\nInput:\n vals = [-5], edges = [], k = 0\n\nOutput:\n -5\n\nExplanation:\n There is only one possible star graph, which is node 0 itself.\nHence, we return -5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == vals.length\n\n\n1 <= n <= 10\n5\n\n\n-10\n4\n <= vals[i] <= 10\n4\n\n\n0 <= edges.length <= min(n * (n - 1) / 2\n, 10\n5\n)\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= n - 1\n\n\na\ni\n != b\ni\n\n\n0 <= k <= n - 1",
        "temas": [
            "Array",
            "Greedy",
            "Graph",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2502,
        "slug": "design-memory-allocator",
        "url": "https://leetcode.com/problems/design-memory-allocator/",
        "titulo": "Design Memory Allocator",
        "enunciado": "You are given an integer \nn\n representing the size of a \n0-indexed\n memory array. All memory units are initially free.\n\n\nYou have a memory allocator with the following functionalities:\n\n\n\n\nAllocate \na block of \nsize\n consecutive free memory units and assign it the id \nmID\n.\n\n\nFree\n all memory units with the given id \nmID\n.\n\n\n\n\nNote\n that:\n\n\n\n\nMultiple blocks can be allocated to the same \nmID\n.\n\n\nYou should free all the memory units with \nmID\n, even if they were allocated in different blocks.\n\n\n\n\nImplement the \nAllocator\n class:\n\n\n\n\nAllocator(int n)\n Initializes an \nAllocator\n object with a memory array of size \nn\n.\n\n\nint allocate(int size, int mID)\n Find the \nleftmost\n block of \nsize\n \nconsecutive\n free memory units and allocate it with the id \nmID\n. Return the block's first index. If such a block does not exist, return \n-1\n.\n\n\nint freeMemory(int mID)\n Free all memory units with the id \nmID\n. Return the number of memory units you have freed.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Allocator\", \"allocate\", \"allocate\", \"allocate\", \"freeMemory\", \"allocate\", \"allocate\", \"allocate\", \"freeMemory\", \"allocate\", \"freeMemory\"]\n[[10], [1, 1], [1, 2], [1, 3], [2], [3, 4], [1, 1], [1, 1], [1], [10, 2], [7]]\n\nOutput\n\n[null, 0, 1, 2, 1, 3, 1, 6, 3, -1, 0]\n\n\nExplanation\n\nAllocator loc = new Allocator(10); // Initialize a memory array of size 10. All memory units are initially free.\nloc.allocate(1, 1); // The leftmost block's first index is 0. The memory array becomes [\n1\n,_,_,_,_,_,_,_,_,_]. We return 0.\nloc.allocate(1, 2); // The leftmost block's first index is 1. The memory array becomes [1,\n2\n,_,_,_,_,_,_,_,_]. We return 1.\nloc.allocate(1, 3); // The leftmost block's first index is 2. The memory array becomes [1,2,\n3\n,_,_,_,_,_,_,_]. We return 2.\nloc.freeMemory(2); // Free all memory units with mID 2. The memory array becomes [1,_, 3,_,_,_,_,_,_,_]. We return 1 since there is only 1 unit with mID 2.\nloc.allocate(3, 4); // The leftmost block's first index is 3. The memory array becomes [1,_,3,\n4\n,\n4\n,\n4\n,_,_,_,_]. We return 3.\nloc.allocate(1, 1); // The leftmost block's first index is 1. The memory array becomes [1,\n1\n,3,4,4,4,_,_,_,_]. We return 1.\nloc.allocate(1, 1); // The leftmost block's first index is 6. The memory array becomes [1,1,3,4,4,4,\n1\n,_,_,_]. We return 6.\nloc.freeMemory(1); // Free all memory units with mID 1. The memory array becomes [_,_,3,4,4,4,_,_,_,_]. We return 3 since there are 3 units with mID 1.\nloc.allocate(10, 2); // We can not find any free block with 10 consecutive free memory units, so we return -1.\nloc.freeMemory(7); // Free all memory units with mID 7. The memory array remains the same since there is no memory unit with mID 7. We return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, size, mID <= 1000\n\n\nAt most \n1000\n calls will be made to \nallocate\n and \nfreeMemory\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Design",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2501,
        "slug": "longest-square-streak-in-an-array",
        "url": "https://leetcode.com/problems/longest-square-streak-in-an-array/",
        "titulo": "Longest Square Streak in an Array",
        "enunciado": "You are given an integer array \nnums\n. A subsequence of \nnums\n is called a \nsquare streak\n if:\n\n\n\n\nThe length of the subsequence is at least \n2\n, and\n\n\nafter\n sorting the subsequence, each element (except the first element) is the \nsquare\n of the previous number.\n\n\n\n\nReturn\n the length of the \nlongest square streak\n in \nnums\n, or return \n-1\n if there is no \nsquare streak\n.\n\n\nA \nsubsequence\n is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,3,6,16,8,2]\n\nOutput:\n 3\n\nExplanation:\n Choose the subsequence [4,16,2]. After sorting it, it becomes [2,4,16].\n- 4 = 2 * 2.\n- 16 = 4 * 4.\nTherefore, [4,16,2] is a square streak.\nIt can be shown that every subsequence of length 4 is not a square streak.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,3,5,6,7]\n\nOutput:\n -1\n\nExplanation:\n There is no square streak in nums so return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n2 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2492,
        "slug": "minimum-score-of-a-path-between-two-cities",
        "url": "https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities/",
        "titulo": "Minimum Score of a Path Between Two Cities",
        "enunciado": "You are given a positive integer \nn\n representing \nn\n cities numbered from \n1\n to \nn\n. You are also given a \n2D\n array \nroads\n where \nroads[i] = [a\ni\n, b\ni\n, distance\ni\n]\n indicates that there is a \nbidirectional \nroad between cities \na\ni\n and \nb\ni\n with a distance equal to \ndistance\ni\n. The cities graph is not necessarily connected.\n\n\nThe \nscore\n of a path between two cities is defined as the \nminimum \ndistance of a road in this path.\n\n\nReturn \nthe \nminimum \npossible score of a path between cities \n1\n and \nn\n.\n\n\nNote\n:\n\n\n\n\nA path is a sequence of roads between two cities.\n\n\nIt is allowed for a path to contain the same road \nmultiple\n times, and you can visit cities \n1\n and \nn\n multiple times along the path.\n\n\nThe test cases are generated such that there is \nat least\n one path between \n1\n and \nn\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, roads = [[1,2,9],[2,3,6],[2,4,5],[1,4,7]]\n\nOutput:\n 5\n\nExplanation:\n The path from city 1 to 4 with the minimum score is: 1 -> 2 -> 4. The score of this path is min(9,5) = 5.\nIt can be shown that no other path has less score.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 4, roads = [[1,2,2],[1,3,4],[3,4,7]]\n\nOutput:\n 2\n\nExplanation:\n The path from city 1 to 4 with the minimum score is: 1 -> 2 -> 1 -> 3 -> 4. The score of this path is min(2,2,4,7) = 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\n1 <= roads.length <= 10\n5\n\n\nroads[i].length == 3\n\n\n1 <= a\ni\n, b\ni\n <= n\n\n\na\ni\n != b\ni\n\n\n1 <= distance\ni\n <= 10\n4\n\n\nThere are no repeated edges.\n\n\nThere is at least one path between \n1\n and \nn\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 2491,
        "slug": "divide-players-into-teams-of-equal-skill",
        "url": "https://leetcode.com/problems/divide-players-into-teams-of-equal-skill/",
        "titulo": "Divide Players Into Teams of Equal Skill",
        "enunciado": "You are given a positive integer array \nskill\n of \neven\n length \nn\n where \nskill[i]\n denotes the skill of the \ni\nth\n player. Divide the players into \nn / 2\n teams of size \n2\n such that the total skill of each team is \nequal\n.\n\n\nThe \nchemistry\n of a team is equal to the \nproduct\n of the skills of the players on that team.\n\n\nReturn \nthe sum of the \nchemistry\n of all the teams, or return \n-1\n if there is no way to divide the players into teams such that the total skill of each team is equal.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n skill = [3,2,5,1,3,4]\n\nOutput:\n 22\n\nExplanation:\n \nDivide the players into the following teams: (1, 5), (2, 4), (3, 3), where each team has a total skill of 6.\nThe sum of the chemistry of all the teams is: 1 * 5 + 2 * 4 + 3 * 3 = 5 + 8 + 9 = 22.\n\n\n\nExample 2:\n\n\n\n\nInput:\n skill = [3,4]\n\nOutput:\n 12\n\nExplanation:\n \nThe two players form a team with a total skill of 7.\nThe chemistry of the team is 3 * 4 = 12.\n\n\n\nExample 3:\n\n\n\n\nInput:\n skill = [1,1,2,3]\n\nOutput:\n -1\n\nExplanation:\n \nThere is no way to divide the players into teams such that the total skill of each team is equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= skill.length <= 10\n5\n\n\nskill.length\n is even.\n\n\n1 <= skill[i] <= 1000",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2483,
        "slug": "minimum-penalty-for-a-shop",
        "url": "https://leetcode.com/problems/minimum-penalty-for-a-shop/",
        "titulo": "Minimum Penalty for a Shop",
        "enunciado": "You are given the customer visit log of a shop represented by a \n0-indexed\n string \ncustomers\n consisting only of characters \n'N'\n and \n'Y'\n:\n\n\n\n\nif the \ni\nth\n character is \n'Y'\n, it means that customers come at the \ni\nth\n hour\n\n\nwhereas \n'N'\n indicates that no customers come at the \ni\nth\n hour.\n\n\n\n\nIf the shop closes at the \nj\nth\n hour (\n0 <= j <= n\n), the \npenalty\n is calculated as follows:\n\n\n\n\nFor every hour when the shop is open and no customers come, the penalty increases by \n1\n.\n\n\nFor every hour when the shop is closed and customers come, the penalty increases by \n1\n.\n\n\n\n\nReturn\n the \nearliest\n hour at which the shop must be closed to incur a \nminimum\n penalty.\n\n\nNote\n that if a shop closes at the \nj\nth\n hour, it means the shop is closed at the hour \nj\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n customers = \"YYNY\"\n\nOutput:\n 2\n\nExplanation:\n \n- Closing the shop at the 0\nth\n hour incurs in 1+1+0+1 = 3 penalty.\n- Closing the shop at the 1\nst\n hour incurs in 0+1+0+1 = 2 penalty.\n- Closing the shop at the 2\nnd\n hour incurs in 0+0+0+1 = 1 penalty.\n- Closing the shop at the 3\nrd\n hour incurs in 0+0+1+1 = 2 penalty.\n- Closing the shop at the 4\nth\n hour incurs in 0+0+1+0 = 1 penalty.\nClosing the shop at 2\nnd\n or 4\nth\n hour gives a minimum penalty. Since 2 is earlier, the optimal closing time is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n customers = \"NNNNN\"\n\nOutput:\n 0\n\nExplanation:\n It is best to close the shop at the 0\nth\n hour as no customers arrive.\n\n\nExample 3:\n\n\n\n\nInput:\n customers = \"YYYY\"\n\nOutput:\n 4\n\nExplanation:\n It is best to close the shop at the 4\nth\n hour as customers arrive at each hour.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= customers.length <= 10\n5\n\n\ncustomers\n consists only of characters \n'Y'\n and \n'N'\n.",
        "temas": [
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2487,
        "slug": "remove-nodes-from-linked-list",
        "url": "https://leetcode.com/problems/remove-nodes-from-linked-list/",
        "titulo": "Remove Nodes From Linked List",
        "enunciado": "You are given the \nhead\n of a linked list.\n\n\nRemove every node which has a node with a greater value anywhere to the right side of it.\n\n\nReturn \nthe \nhead\n of the modified linked list.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [5,2,13,3,8]\n\nOutput:\n [13,8]\n\nExplanation:\n The nodes that should be removed are 5, 2 and 3.\n- Node 13 is to the right of node 5.\n- Node 13 is to the right of node 2.\n- Node 8 is to the right of node 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = [1,1,1,1]\n\nOutput:\n [1,1,1,1]\n\nExplanation:\n Every node has value 1, so no nodes are removed.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of the nodes in the given list is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5",
        "temas": [
            "Linked List",
            "Stack",
            "Recursion",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2486,
        "slug": "append-characters-to-string-to-make-subsequence",
        "url": "https://leetcode.com/problems/append-characters-to-string-to-make-subsequence/",
        "titulo": "Append Characters to String to Make Subsequence",
        "enunciado": "You are given two strings \ns\n and \nt\n consisting of only lowercase English letters.\n\n\nReturn \nthe minimum number of characters that need to be appended to the end of \ns\n so that \nt\n becomes a \nsubsequence\n of \ns\n.\n\n\nA \nsubsequence\n is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"coaching\", t = \"coding\"\n\nOutput:\n 4\n\nExplanation:\n Append the characters \"ding\" to the end of s so that s = \"coachingding\".\nNow, t is a subsequence of s (\"\nco\naching\nding\n\").\nIt can be shown that appending any 3 characters to the end of s will never make t a subsequence.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcde\", t = \"a\"\n\nOutput:\n 0\n\nExplanation:\n t is already a subsequence of s (\"\na\nbcde\").\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"z\", t = \"abcde\"\n\nOutput:\n 5\n\nExplanation:\n Append the characters \"abcde\" to the end of s so that s = \"zabcde\".\nNow, t is a subsequence of s (\"z\nabcde\n\").\nIt can be shown that appending any 4 characters to the end of s will never make t a subsequence.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, t.length <= 10\n5\n\n\ns\n and \nt\n consist only of lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 2477,
        "slug": "minimum-fuel-cost-to-report-to-the-capital",
        "url": "https://leetcode.com/problems/minimum-fuel-cost-to-report-to-the-capital/",
        "titulo": "Minimum Fuel Cost to Report to the Capital",
        "enunciado": "There is a tree (i.e., a connected, undirected graph with no cycles) structure country network consisting of \nn\n cities numbered from \n0\n to \nn - 1\n and exactly \nn - 1\n roads. The capital city is city \n0\n. You are given a 2D integer array \nroads\n where \nroads[i] = [a\ni\n, b\ni\n]\n denotes that there exists a \nbidirectional road\n connecting cities \na\ni\n and \nb\ni\n.\n\n\nThere is a meeting for the representatives of each city. The meeting is in the capital city.\n\n\nThere is a car in each city. You are given an integer \nseats\n that indicates the number of seats in each car.\n\n\nA representative can use the car in their city to travel or change the car and ride with another representative. The cost of traveling between two cities is one liter of fuel.\n\n\nReturn \nthe minimum number of liters of fuel to reach the capital city\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n roads = [[0,1],[0,2],[0,3]], seats = 5\n\nOutput:\n 3\n\nExplanation:\n \n- Representative\n1\n goes directly to the capital with 1 liter of fuel.\n- Representative\n2\n goes directly to the capital with 1 liter of fuel.\n- Representative\n3\n goes directly to the capital with 1 liter of fuel.\nIt costs 3 liters of fuel at minimum. \nIt can be proven that 3 is the minimum number of liters of fuel needed.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n roads = [[3,1],[3,2],[1,0],[0,4],[0,5],[4,6]], seats = 2\n\nOutput:\n 7\n\nExplanation:\n \n- Representative\n2\n goes directly to city 3 with 1 liter of fuel.\n- Representative\n2\n and representative\n3\n go together to city 1 with 1 liter of fuel.\n- Representative\n2\n and representative\n3\n go together to the capital with 1 liter of fuel.\n- Representative\n1\n goes directly to the capital with 1 liter of fuel.\n- Representative\n5\n goes directly to the capital with 1 liter of fuel.\n- Representative\n6\n goes directly to city 4 with 1 liter of fuel.\n- Representative\n4\n and representative\n6\n go together to the capital with 1 liter of fuel.\nIt costs 7 liters of fuel at minimum. \nIt can be proven that 7 is the minimum number of liters of fuel needed.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n roads = [], seats = 1\n\nOutput:\n 0\n\nExplanation:\n No representatives need to travel to the capital city.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\nroads.length == n - 1\n\n\nroads[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nroads\n represents a valid tree.\n\n\n1 <= seats <= 10\n5",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 2476,
        "slug": "closest-nodes-queries-in-a-binary-search-tree",
        "url": "https://leetcode.com/problems/closest-nodes-queries-in-a-binary-search-tree/",
        "titulo": "Closest Nodes Queries in a Binary Search Tree",
        "enunciado": "You are given the \nroot\n of a \nbinary search tree \nand an array \nqueries\n of size \nn\n consisting of positive integers.\n\n\nFind a \n2D\n array \nanswer\n of size \nn\n where \nanswer[i] = [min\ni\n, max\ni\n]\n:\n\n\n\n\nmin\ni\n is the \nlargest\n value in the tree that is smaller than or equal to \nqueries[i]\n. If a such value does not exist, add \n-1\n instead.\n\n\nmax\ni\n is the \nsmallest\n value in the tree that is greater than or equal to \nqueries[i]\n. If a such value does not exist, add \n-1\n instead.\n\n\n\n\nReturn \nthe array\n \nanswer\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [6,2,13,1,4,9,15,null,null,null,null,null,null,14], queries = [2,5,16]\n\nOutput:\n [[2,2],[4,6],[15,-1]]\n\nExplanation:\n We answer the queries in the following way:\n- The largest number that is smaller or equal than 2 in the tree is 2, and the smallest number that is greater or equal than 2 is still 2. So the answer for the first query is [2,2].\n- The largest number that is smaller or equal than 5 in the tree is 4, and the smallest number that is greater or equal than 5 is 6. So the answer for the second query is [4,6].\n- The largest number that is smaller or equal than 16 in the tree is 15, and the smallest number that is greater or equal than 16 does not exist. So the answer for the third query is [15,-1].\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [4,null,9], queries = [3]\n\nOutput:\n [[-1,4]]\n\nExplanation:\n The largest number that is smaller or equal to 3 in the tree does not exist, and the smallest number that is greater or equal to 3 is 4. So the answer for the query is [-1,4].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[2, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n6\n\n\nn == queries.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= queries[i] <= 10\n6",
        "temas": [
            "Array",
            "Binary Search",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2467,
        "slug": "most-profitable-path-in-a-tree",
        "url": "https://leetcode.com/problems/most-profitable-path-in-a-tree/",
        "titulo": "Most Profitable Path in a Tree",
        "enunciado": "There is an undirected tree with \nn\n nodes labeled from \n0\n to \nn - 1\n, rooted at node \n0\n. You are given a 2D integer array \nedges\n of length \nn - 1\n where \nedges[i] = [a\ni\n, b\ni\n]\n indicates that there is an edge between nodes \na\ni\n and \nb\ni\n in the tree.\n\n\nAt every node \ni\n, there is a gate. You are also given an array of even integers \namount\n, where \namount[i]\n represents:\n\n\n\n\nthe price needed to open the gate at node \ni\n, if \namount[i]\n is negative, or,\n\n\nthe cash reward obtained on opening the gate at node \ni\n, otherwise.\n\n\n\n\nThe game goes on as follows:\n\n\n\n\nInitially, Alice is at node \n0\n and Bob is at node \nbob\n.\n\n\nAt every second, Alice and Bob \neach\n move to an adjacent node. Alice moves towards some \nleaf node\n, while Bob moves towards node \n0\n.\n\n\nFor \nevery\n node along their path, Alice and Bob either spend money to open the gate at that node, or accept the reward. Note that:\n\t\n\n\nIf the gate is \nalready open\n, no price will be required, nor will there be any cash reward.\n\n\nIf Alice and Bob reach the node \nsimultaneously\n, they share the price/reward for opening the gate there. In other words, if the price to open the gate is \nc\n, then both Alice and Bob pay \nc / 2\n each. Similarly, if the reward at the gate is \nc\n, both of them receive \nc / 2\n each.\n\n\n\n\n\n\nIf Alice reaches a leaf node, she stops moving. Similarly, if Bob reaches node \n0\n, he stops moving. Note that these events are \nindependent\n of each other.\n\n\n\n\nReturn\n the \nmaximum\n net income Alice can have if she travels towards the optimal leaf node.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [[0,1],[1,2],[1,3],[3,4]], bob = 3, amount = [-2,4,2,-4,6]\n\nOutput:\n 6\n\nExplanation:\n \nThe above diagram represents the given tree. The game goes as follows:\n- Alice is initially on node 0, Bob on node 3. They open the gates of their respective nodes.\n  Alice's net income is now -2.\n- Both Alice and Bob move to node 1. \n  Since they reach here simultaneously, they open the gate together and share the reward.\n  Alice's net income becomes -2 + (4 / 2) = 0.\n- Alice moves on to node 3. Since Bob already opened its gate, Alice's income remains unchanged.\n  Bob moves on to node 0, and stops moving.\n- Alice moves on to node 4 and opens the gate there. Her net income becomes 0 + 6 = 6.\nNow, neither Alice nor Bob can make any further moves, and the game ends.\nIt is not possible for Alice to get a higher net income.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [[0,1]], bob = 1, amount = [-7280,2350]\n\nOutput:\n -7280\n\nExplanation:\n \nAlice follows the path 0->1 whereas Bob follows the path 1->0.\nThus, Alice opens the gate at node 0 only. Hence, her net income is -7280. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\nedges.length == n - 1\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nedges\n represents a valid tree.\n\n\n1 <= bob < n\n\n\namount.length == n\n\n\namount[i]\n is an \neven\n integer in the range \n[-10\n4\n, 10\n4\n]\n.",
        "temas": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2466,
        "slug": "count-ways-to-build-good-strings",
        "url": "https://leetcode.com/problems/count-ways-to-build-good-strings/",
        "titulo": "Count Ways To Build Good Strings",
        "enunciado": "Given the integers \nzero\n, \none\n, \nlow\n, and \nhigh\n, we can construct a string by starting with an empty string, and then at each step perform either of the following:\n\n\n\n\nAppend the character \n'0'\n \nzero\n times.\n\n\nAppend the character \n'1'\n \none\n times.\n\n\n\n\nThis can be performed any number of times.\n\n\nA \ngood\n string is a string constructed by the above process having a \nlength\n between \nlow\n and \nhigh\n (\ninclusive\n).\n\n\nReturn \nthe number of \ndifferent\n good strings that can be constructed satisfying these properties.\n Since the answer can be large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n low = 3, high = 3, zero = 1, one = 1\n\nOutput:\n 8\n\nExplanation:\n \nOne possible valid good string is \"011\". \nIt can be constructed as follows: \"\" -> \"0\" -> \"01\" -> \"011\". \nAll binary strings from \"000\" to \"111\" are good strings in this example.\n\n\n\nExample 2:\n\n\n\n\nInput:\n low = 2, high = 3, zero = 1, one = 2\n\nOutput:\n 5\n\nExplanation:\n The good strings are \"00\", \"11\", \"000\", \"110\", and \"011\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= low <= high <= 10\n5\n\n\n1 <= zero, one <= low",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 2471,
        "slug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-sort-a-binary-tree-by-level/",
        "titulo": "Minimum Number of Operations to Sort a Binary Tree by Level",
        "enunciado": "You are given the \nroot\n of a binary tree with \nunique values\n.\n\n\nIn one operation, you can choose any two nodes \nat the same level\n and swap their values.\n\n\nReturn \nthe minimum number of operations needed to make the values at each level sorted in a \nstrictly increasing order\n.\n\n\nThe \nlevel\n of a node is the number of edges along the path between it and the root node\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,4,3,7,6,8,5,null,null,null,null,9,null,10]\n\nOutput:\n 3\n\nExplanation:\n\n- Swap 4 and 3. The 2\nnd\n level becomes [3,4].\n- Swap 7 and 5. The 3\nrd\n level becomes [5,6,8,7].\n- Swap 8 and 7. The 3\nrd\n level becomes [5,6,7,8].\nWe used 3 operations so return 3.\nIt can be proven that 3 is the minimum number of operations needed.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,3,2,7,6,5,4]\n\nOutput:\n 3\n\nExplanation:\n\n- Swap 3 and 2. The 2\nnd\n level becomes [2,3].\n- Swap 7 and 4. The 3\nrd\n level becomes [4,6,5,7].\n- Swap 6 and 5. The 3\nrd\n level becomes [4,5,6,7].\nWe used 3 operations so return 3.\nIt can be proven that 3 is the minimum number of operations needed.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6]\n\nOutput:\n 0\n\nExplanation:\n Each level is already sorted in increasing order so return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5\n\n\nAll the values of the tree are \nunique\n.",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 2470,
        "slug": "number-of-subarrays-with-lcm-equal-to-k",
        "url": "https://leetcode.com/problems/number-of-subarrays-with-lcm-equal-to-k/",
        "titulo": "Number of Subarrays With LCM Equal to K",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \nthe number of \nsubarrays\n of \nnums\n where the least common multiple of the subarray's elements is \nk\n.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\nThe \nleast common multiple of an array\n is the smallest positive integer that is divisible by all the array elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,6,2,7,1], k = 6\n\nOutput:\n 4\n\nExplanation:\n The subarrays of nums where 6 is the least common multiple of all the subarray's elements are:\n- [\n3\n,\n6\n,2,7,1]\n- [\n3\n,\n6\n,\n2\n,7,1]\n- [3,\n6\n,2,7,1]\n- [3,\n6\n,\n2\n,7,1]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3], k = 2\n\nOutput:\n 0\n\nExplanation:\n There are no subarrays of nums where 2 is the least common multiple of all the subarray's elements.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i], k <= 1000",
        "temas": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2462,
        "slug": "total-cost-to-hire-k-workers",
        "url": "https://leetcode.com/problems/total-cost-to-hire-k-workers/",
        "titulo": "Total Cost to Hire K Workers",
        "enunciado": "You are given a \n0-indexed\n integer array \ncosts\n where \ncosts[i]\n is the cost of hiring the \ni\nth\n worker.\n\n\nYou are also given two integers \nk\n and \ncandidates\n. We want to hire exactly \nk\n workers according to the following rules:\n\n\n\n\nYou will run \nk\n sessions and hire exactly one worker in each session.\n\n\nIn each hiring session, choose the worker with the lowest cost from either the first \ncandidates\n workers or the last \ncandidates\n workers. Break the tie by the smallest index.\n\t\n\n\nFor example, if \ncosts = [3,2,7,7,1,2]\n and \ncandidates = 2\n, then in the first hiring session, we will choose the \n4\nth\n worker because they have the lowest cost \n[\n3,2\n,7,7,\n1\n,2\n]\n.\n\n\nIn the second hiring session, we will choose \n1\nst\n worker because they have the same lowest cost as \n4\nth\n worker but they have the smallest index \n[\n3,\n2\n,7,\n7,2\n]\n. Please note that the indexing may be changed in the process.\n\n\n\n\n\n\nIf there are fewer than candidates workers remaining, choose the worker with the lowest cost among them. Break the tie by the smallest index.\n\n\nA worker can only be chosen once.\n\n\n\n\nReturn \nthe total cost to hire exactly \nk\n workers.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n costs = [17,12,10,2,7,2,11,20,8], k = 3, candidates = 4\n\nOutput:\n 11\n\nExplanation:\n We hire 3 workers in total. The total cost is initially 0.\n- In the first hiring round we choose the worker from [\n17,12,10,2\n,7,\n2,11,20,8\n]. The lowest cost is 2, and we break the tie by the smallest index, which is 3. The total cost = 0 + 2 = 2.\n- In the second hiring round we choose the worker from [\n17,12,10,7\n,\n2,11,20,8\n]. The lowest cost is 2 (index 4). The total cost = 2 + 2 = 4.\n- In the third hiring round we choose the worker from [\n17,12,10,7,11,20,8\n]. The lowest cost is 7 (index 3). The total cost = 4 + 7 = 11. Notice that the worker with index 3 was common in the first and last four workers.\nThe total hiring cost is 11.\n\n\n\nExample 2:\n\n\n\n\nInput:\n costs = [1,2,4,1], k = 3, candidates = 3\n\nOutput:\n 4\n\nExplanation:\n We hire 3 workers in total. The total cost is initially 0.\n- In the first hiring round we choose the worker from [\n1,2,4,1\n]. The lowest cost is 1, and we break the tie by the smallest index, which is 0. The total cost = 0 + 1 = 1. Notice that workers with index 1 and 2 are common in the first and last 3 workers.\n- In the second hiring round we choose the worker from [\n2,4,1\n]. The lowest cost is 1 (index 2). The total cost = 1 + 1 = 2.\n- In the third hiring round there are less than three candidates. We choose the worker from the remaining workers [\n2,4\n]. The lowest cost is 2 (index 0). The total cost = 2 + 2 = 4.\nThe total hiring cost is 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= costs.length <= 10\n5 \n\n\n1 <= costs[i] <= 10\n5\n\n\n1 <= k, candidates <= costs.length",
        "temas": [
            "Array",
            "Two Pointers",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2461,
        "slug": "maximum-sum-of-distinct-subarrays-with-length-k",
        "url": "https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k/",
        "titulo": "Maximum Sum of Distinct Subarrays With Length K",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n. Find the maximum subarray sum of all the subarrays of \nnums\n that meet the following conditions:\n\n\n\n\nThe length of the subarray is \nk\n, and\n\n\nAll the elements of the subarray are \ndistinct\n.\n\n\n\n\nReturn \nthe maximum subarray sum of all the subarrays that meet the conditions\n.\n If no subarray meets the conditions, return \n0\n.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,5,4,2,9,9,9], k = 3\n\nOutput:\n 15\n\nExplanation:\n The subarrays of nums with length 3 are:\n- [1,5,4] which meets the requirements and has a sum of 10.\n- [5,4,2] which meets the requirements and has a sum of 11.\n- [4,2,9] which meets the requirements and has a sum of 15.\n- [2,9,9] which does not meet the requirements because the element 9 is repeated.\n- [9,9,9] which does not meet the requirements because the element 9 is repeated.\nWe return 15 because it is the maximum subarray sum of all the subarrays that meet the conditions\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,4,4], k = 3\n\nOutput:\n 0\n\nExplanation:\n The subarrays of nums with length 3 are:\n- [4,4,4] which does not meet the requirements because the element 4 is repeated.\nWe return 0 because no subarrays meet the conditions.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2452,
        "slug": "words-within-two-edits-of-dictionary",
        "url": "https://leetcode.com/problems/words-within-two-edits-of-dictionary/",
        "titulo": "Words Within Two Edits of Dictionary",
        "enunciado": "You are given two string arrays, \nqueries\n and \ndictionary\n. All words in each array comprise of lowercase English letters and have the same length.\n\n\nIn one \nedit\n you can take a word from \nqueries\n, and change any letter in it to any other letter. Find all words from \nqueries\n that, after a \nmaximum\n of two edits, equal some word from \ndictionary\n.\n\n\nReturn\n a list of all words from \nqueries\n, \nthat match with some word from \ndictionary\n after a maximum of \ntwo edits\n. Return the words in the \nsame order\n they appear in \nqueries\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n queries = [\"word\",\"note\",\"ants\",\"wood\"], dictionary = [\"wood\",\"joke\",\"moat\"]\n\nOutput:\n [\"word\",\"note\",\"wood\"]\n\nExplanation:\n\n- Changing the 'r' in \"word\" to 'o' allows it to equal the dictionary word \"wood\".\n- Changing the 'n' to 'j' and the 't' to 'k' in \"note\" changes it to \"joke\".\n- It would take more than 2 edits for \"ants\" to equal a dictionary word.\n- \"wood\" can remain unchanged (0 edits) and match the corresponding dictionary word.\nThus, we return [\"word\",\"note\",\"wood\"].\n\n\n\nExample 2:\n\n\n\n\nInput:\n queries = [\"yes\"], dictionary = [\"not\"]\n\nOutput:\n []\n\nExplanation:\n\nApplying any two edits to \"yes\" cannot make it equal to \"not\". Thus, we return an empty array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= queries.length, dictionary.length <= 100\n\n\nn == queries[i].length == dictionary[j].length\n\n\n1 <= n <= 100\n\n\nAll \nqueries[i]\n and \ndictionary[j]\n are composed of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2453,
        "slug": "destroy-sequential-targets",
        "url": "https://leetcode.com/problems/destroy-sequential-targets/",
        "titulo": "Destroy Sequential Targets",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n consisting of positive integers, representing targets on a number line. You are also given an integer \nspace\n.\n\n\nYou have a machine which can destroy targets. \nSeeding\n the machine with some \nnums[i]\n allows it to destroy all targets with values that can be represented as \nnums[i] + c * space\n, where \nc\n is any non-negative integer. You want to destroy the \nmaximum\n number of targets in \nnums\n.\n\n\nReturn\n the \nminimum value\n of \nnums[i]\n you can seed the machine with to destroy the maximum number of targets.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,7,8,1,1,5], space = 2\n\nOutput:\n 1\n\nExplanation:\n If we seed the machine with nums[3], then we destroy all targets equal to 1,3,5,7,9,... \nIn this case, we would destroy 5 total targets (all except for nums[2]). \nIt is impossible to destroy more than 5 targets, so we return nums[3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,5,2,4,6], space = 2\n\nOutput:\n 1\n\nExplanation:\n Seeding the machine with nums[0], or nums[3] destroys 3 targets. \nIt is not possible to destroy more than 3 targets.\nSince nums[0] is the minimal integer that can destroy 3 targets, we return 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [6,2,5], space = 100\n\nOutput:\n 2\n\nExplanation:\n Whatever initial seed we select, we can only destroy 1 target. The minimal seed is nums[1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= space <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2447,
        "slug": "number-of-subarrays-with-gcd-equal-to-k",
        "url": "https://leetcode.com/problems/number-of-subarrays-with-gcd-equal-to-k/",
        "titulo": "Number of Subarrays With GCD Equal to K",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \nthe number of \nsubarrays\n of \nnums\n where the greatest common divisor of the subarray's elements is \nk\n.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\nThe \ngreatest common divisor of an array\n is the largest integer that evenly divides all the array elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [9,3,1,2,6,3], k = 3\n\nOutput:\n 4\n\nExplanation:\n The subarrays of nums where 3 is the greatest common divisor of all the subarray's elements are:\n- [9,\n3\n,1,2,6,3]\n- [9,3,1,2,6,\n3\n]\n- [\n9,3\n,1,2,6,3]\n- [9,3,1,2,\n6,3\n]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4], k = 7\n\nOutput:\n 0\n\nExplanation:\n There are no subarrays of nums where 7 is the greatest common divisor of all the subarray's elements.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i], k <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2457,
        "slug": "minimum-addition-to-make-integer-beautiful",
        "url": "https://leetcode.com/problems/minimum-addition-to-make-integer-beautiful/",
        "titulo": "Minimum Addition to Make Integer Beautiful",
        "enunciado": "You are given two positive integers \nn\n and \ntarget\n.\n\n\nAn integer is considered \nbeautiful\n if the sum of its digits is less than or equal to \ntarget\n.\n\n\nReturn the \nminimum \nnon-negative\n integer \nx\n such that \nn + x\n is beautiful\n. The input will be generated such that it is always possible to make \nn\n beautiful.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 16, target = 6\n\nOutput:\n 4\n\nExplanation:\n Initially n is 16 and its digit sum is 1 + 6 = 7. After adding 4, n becomes 20 and digit sum becomes 2 + 0 = 2. It can be shown that we can not make n beautiful with adding non-negative integer less than 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 467, target = 6\n\nOutput:\n 33\n\nExplanation:\n Initially n is 467 and its digit sum is 4 + 6 + 7 = 17. After adding 33, n becomes 500 and digit sum becomes 5 + 0 + 0 = 5. It can be shown that we can not make n beautiful with adding non-negative integer less than 33.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 1, target = 1\n\nOutput:\n 0\n\nExplanation:\n Initially n is 1 and its digit sum is 1, which is already smaller than or equal to target.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n12\n\n\n1 <= target <= 150\n\n\nThe input will be generated such that it is always possible to make \nn\n beautiful.",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2456,
        "slug": "most-popular-video-creator",
        "url": "https://leetcode.com/problems/most-popular-video-creator/",
        "titulo": "Most Popular Video Creator",
        "enunciado": "You are given two string arrays \ncreators\n and \nids\n, and an integer array \nviews\n, all of length \nn\n. The \ni\nth\n video on a platform was created by \ncreators[i]\n, has an id of \nids[i]\n, and has \nviews[i]\n views.\n\n\nThe \npopularity\n of a creator is the \nsum\n of the number of views on \nall\n of the creator's videos. Find the creator with the \nhighest\n popularity and the id of their \nmost\n viewed video.\n\n\n\n\nIf multiple creators have the highest popularity, find all of them.\n\n\nIf multiple videos have the highest view count for a creator, find the lexicographically \nsmallest\n id.\n\n\n\n\nNote: It is possible for different videos to have the same \nid\n, meaning that \nid\ns do not uniquely identify a video. For example, two videos with the same ID are considered as distinct videos with their own viewcount.\n\n\nReturn\n \na \n2D array\n of \nstrings\n \nanswer\n where \nanswer[i] = [creators\ni\n, id\ni\n]\n means that \ncreators\ni\n has the \nhighest\n popularity and \nid\ni\n is the \nid\n of their most \npopular\n video. The answer can be returned in any order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncreators = [\"alice\",\"bob\",\"alice\",\"chris\"], ids = [\"one\",\"two\",\"three\",\"four\"], views = [5,10,5,4]\n\n\nOutput:\n \n[[\"alice\",\"one\"],[\"bob\",\"two\"]]\n\n\nExplanation:\n\n\nThe popularity of alice is 5 + 5 = 10.\n\nThe popularity of bob is 10.\n\nThe popularity of chris is 4.\n\nalice and bob are the most popular creators.\n\nFor bob, the video with the highest view count is \"two\".\n\nFor alice, the videos with the highest view count are \"one\" and \"three\". Since \"one\" is lexicographically smaller than \"three\", it is included in the answer.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncreators = [\"alice\",\"alice\",\"alice\"], ids = [\"a\",\"b\",\"c\"], views = [1,2,2]\n\n\nOutput:\n \n[[\"alice\",\"b\"]]\n\n\nExplanation:\n\n\nThe videos with id \"b\" and \"c\" have the highest view count.\n\nSince \"b\" is lexicographically smaller than \"c\", it is included in the answer.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == creators.length == ids.length == views.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= creators[i].length, ids[i].length <= 5\n\n\ncreators[i]\n and \nids[i]\n consist only of lowercase English letters.\n\n\n0 <= views[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2443,
        "slug": "sum-of-number-and-its-reverse",
        "url": "https://leetcode.com/problems/sum-of-number-and-its-reverse/",
        "titulo": "Sum of Number and Its Reverse",
        "enunciado": "Given a \nnon-negative\n integer \nnum\n, return \ntrue\n if \nnum\n can be expressed as the sum of any \nnon-negative\n integer and its reverse, or \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 443\n\nOutput:\n true\n\nExplanation:\n 172 + 271 = 443 so we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = 63\n\nOutput:\n false\n\nExplanation:\n 63 cannot be expressed as the sum of a non-negative integer and its reverse so we return false.\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = 181\n\nOutput:\n true\n\nExplanation:\n 140 + 041 = 181 so we return true. Note that when a number is reversed, there may be leading zeros.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= num <= 10\n5",
        "temas": [
            "Math",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2425,
        "slug": "bitwise-xor-of-all-pairings",
        "url": "https://leetcode.com/problems/bitwise-xor-of-all-pairings/",
        "titulo": "Bitwise XOR of All Pairings",
        "enunciado": "You are given two \n0-indexed\n arrays, \nnums1\n and \nnums2\n, consisting of non-negative integers. Let there be another array, \nnums3\n, which contains the bitwise XOR of \nall pairings\n of integers between \nnums1\n and \nnums2\n (every integer in \nnums1\n is paired with every integer in \nnums2\n \nexactly once\n).\n\n\nReturn\n the \nbitwise XOR\n of all integers in \nnums3\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [2,1,3], nums2 = [10,2,5,0]\n\nOutput:\n 13\n\nExplanation:\n\nA possible nums3 array is [8,0,7,2,11,3,4,1,9,1,6,3].\nThe bitwise XOR of all these numbers is 13, so we return 13.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,2], nums2 = [3,4]\n\nOutput:\n 0\n\nExplanation:\n\nAll possible pairs of bitwise XORs are nums1[0] ^ nums2[0], nums1[0] ^ nums2[1], nums1[1] ^ nums2[0],\nand nums1[1] ^ nums2[1].\nThus, one possible nums3 array is [2,5,1,6].\n2 ^ 5 ^ 1 ^ 6 = 0, so we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 10\n5\n\n\n0 <= nums1[i], nums2[j] <= 10\n9",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2439,
        "slug": "minimize-maximum-of-array",
        "url": "https://leetcode.com/problems/minimize-maximum-of-array/",
        "titulo": "Minimize Maximum of Array",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n comprising of \nn\n non-negative integers.\n\n\nIn one operation, you must:\n\n\n\n\nChoose an integer \ni\n such that \n1 <= i < n\n and \nnums[i] > 0\n.\n\n\nDecrease \nnums[i]\n by 1.\n\n\nIncrease \nnums[i - 1]\n by 1.\n\n\n\n\nReturn\n the \nminimum\n possible value of the \nmaximum\n integer of \nnums\n after performing \nany\n number of operations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,7,1,6]\n\nOutput:\n 5\n\nExplanation:\n\nOne set of optimal operations is as follows:\n1. Choose i = 1, and nums becomes [4,6,1,6].\n2. Choose i = 3, and nums becomes [4,6,2,5].\n3. Choose i = 1, and nums becomes [5,5,2,5].\nThe maximum integer of nums is 5. It can be shown that the maximum number cannot be less than 5.\nTherefore, we return 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [10,1]\n\nOutput:\n 10\n\nExplanation:\n\nIt is optimal to leave nums as is, and since 10 is the maximum value, we return 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n2 <= n <= 10\n5\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Greedy",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2438,
        "slug": "range-product-queries-of-powers",
        "url": "https://leetcode.com/problems/range-product-queries-of-powers/",
        "titulo": "Range Product Queries of Powers",
        "enunciado": "Given a positive integer \nn\n, there exists a \n0-indexed\n array called \npowers\n, composed of the \nminimum\n number of powers of \n2\n that sum to \nn\n. The array is sorted in \nnon-decreasing\n order, and there is \nonly one\n way to form the array.\n\n\nYou are also given a \n0-indexed\n 2D integer array \nqueries\n, where \nqueries[i] = [left\ni\n, right\ni\n]\n. Each \nqueries[i]\n represents a query where you have to find the product of all \npowers[j]\n with \nleft\ni\n <= j <= right\ni\n.\n\n\nReturn\n an array \nanswers\n, equal in length to \nqueries\n, where \nanswers[i]\n is the answer to the \ni\nth\n query\n. Since the answer to the \ni\nth\n query may be too large, each \nanswers[i]\n should be returned \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 15, queries = [[0,1],[2,2],[0,3]]\n\nOutput:\n [2,4,64]\n\nExplanation:\n\nFor n = 15, powers = [1,2,4,8]. It can be shown that powers cannot be a smaller size.\nAnswer to 1st query: powers[0] * powers[1] = 1 * 2 = 2.\nAnswer to 2nd query: powers[2] = 4.\nAnswer to 3rd query: powers[0] * powers[1] * powers[2] * powers[3] = 1 * 2 * 4 * 8 = 64.\nEach answer modulo 10\n9\n + 7 yields the same answer, so [2,4,64] is returned.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, queries = [[0,0]]\n\nOutput:\n [2]\n\nExplanation:\n\nFor n = 2, powers = [2].\nThe answer to the only query is powers[0] = 2. The answer modulo 10\n9\n + 7 is the same, so [2] is returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n9\n\n\n1 <= queries.length <= 10\n5\n\n\n0 <= start\ni\n <= end\ni\n < powers.length",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2442,
        "slug": "count-number-of-distinct-integers-after-reverse-operations",
        "url": "https://leetcode.com/problems/count-number-of-distinct-integers-after-reverse-operations/",
        "titulo": "Count Number of Distinct Integers After Reverse Operations",
        "enunciado": "You are given an array \nnums\n consisting of \npositive\n integers.\n\n\nYou have to take each integer in the array, \nreverse its digits\n, and add it to the end of the array. You should apply this operation to the original integers in \nnums\n.\n\n\nReturn \nthe number of \ndistinct\n integers in the final array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,13,10,12,31]\n\nOutput:\n 6\n\nExplanation:\n After including the reverse of each number, the resulting array is [1,13,10,12,31,\n1,31,1,21,13\n].\nThe reversed integers that were added to the end of the array are underlined. Note that for the integer 10, after reversing it, it becomes 01 which is just 1.\nThe number of distinct integers in this array is 6 (The numbers 1, 10, 12, 13, 21, and 31).\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,2,2]\n\nOutput:\n 1\n\nExplanation:\n After including the reverse of each number, the resulting array is [2,2,2,\n2,2,2\n].\nThe number of distinct integers in this array is 1 (The number 2).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2434,
        "slug": "using-a-robot-to-print-the-lexicographically-smallest-string",
        "url": "https://leetcode.com/problems/using-a-robot-to-print-the-lexicographically-smallest-string/",
        "titulo": "Using a Robot to Print the Lexicographically Smallest String",
        "enunciado": "You are given a string \ns\n and a robot that currently holds an empty string \nt\n. Apply one of the following operations until \ns\n and \nt\n \nare both empty\n:\n\n\n\n\nRemove the \nfirst\n character of a string \ns\n and give it to the robot. The robot will append this character to the string \nt\n.\n\n\nRemove the \nlast\n character of a string \nt\n and give it to the robot. The robot will write this character on paper.\n\n\n\n\nReturn \nthe lexicographically smallest string that can be written on the paper.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"zza\"\n\nOutput:\n \"azz\"\n\nExplanation:\n Let p denote the written string.\nInitially p=\"\", s=\"zza\", t=\"\".\nPerform first operation three times p=\"\", s=\"\", t=\"zza\".\nPerform second operation three times p=\"azz\", s=\"\", t=\"\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"bac\"\n\nOutput:\n \"abc\"\n\nExplanation:\n Let p denote the written string.\nPerform first operation twice p=\"\", s=\"c\", t=\"ba\". \nPerform second operation twice p=\"ab\", s=\"c\", t=\"\". \nPerform first operation p=\"ab\", s=\"\", t=\"c\". \nPerform second operation p=\"abc\", s=\"\", t=\"\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"bdda\"\n\nOutput:\n \"addb\"\n\nExplanation:\n Let p denote the written string.\nInitially p=\"\", s=\"bdda\", t=\"\".\nPerform first operation four times p=\"\", s=\"\", t=\"bdda\".\nPerform second operation four times p=\"addb\", s=\"\", t=\"\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of only English lowercase letters.",
        "temas": [
            "Hash Table",
            "String",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2433,
        "slug": "find-the-original-array-of-prefix-xor",
        "url": "https://leetcode.com/problems/find-the-original-array-of-prefix-xor/",
        "titulo": "Find The Original Array of Prefix Xor",
        "enunciado": "You are given an \ninteger\n array \npref\n of size \nn\n. Find and return \nthe array \narr\n of size \nn\n that satisfies\n:\n\n\n\n\npref[i] = arr[0] ^ arr[1] ^ ... ^ arr[i]\n.\n\n\n\n\nNote that \n^\n denotes the \nbitwise-xor\n operation.\n\n\nIt can be proven that the answer is \nunique\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n pref = [5,2,0,3,1]\n\nOutput:\n [5,7,2,3,2]\n\nExplanation:\n From the array [5,7,2,3,2] we have the following:\n- pref[0] = 5.\n- pref[1] = 5 ^ 7 = 2.\n- pref[2] = 5 ^ 7 ^ 2 = 0.\n- pref[3] = 5 ^ 7 ^ 2 ^ 3 = 3.\n- pref[4] = 5 ^ 7 ^ 2 ^ 3 ^ 2 = 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n pref = [13]\n\nOutput:\n [13]\n\nExplanation:\n We have pref[0] = arr[0] = 13.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= pref.length <= 10\n5\n\n\n0 <= pref[i] <= 10\n6",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2424,
        "slug": "longest-uploaded-prefix",
        "url": "https://leetcode.com/problems/longest-uploaded-prefix/",
        "titulo": "Longest Uploaded Prefix",
        "enunciado": "You are given a stream of \nn\n videos, each represented by a \ndistinct\n number from \n1\n to \nn\n that you need to \"upload\" to a server. You need to implement a data structure that calculates the length of the \nlongest uploaded prefix\n at various points in the upload process.\n\n\nWe consider \ni\n to be an uploaded prefix if all videos in the range \n1\n to \ni\n (\ninclusive\n) have been uploaded to the server. The longest uploaded prefix is the \nmaximum \nvalue of \ni\n that satisfies this definition.\n\n\n\nImplement the \nLUPrefix \nclass:\n\n\n\n\nLUPrefix(int n)\n Initializes the object for a stream of \nn\n videos.\n\n\nvoid upload(int video)\n Uploads \nvideo\n to the server.\n\n\nint longest()\n Returns the length of the \nlongest uploaded prefix\n defined above.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"LUPrefix\", \"upload\", \"longest\", \"upload\", \"longest\", \"upload\", \"longest\"]\n[[4], [3], [], [1], [], [2], []]\n\nOutput\n\n[null, null, 0, null, 1, null, 3]\n\n\nExplanation\n\nLUPrefix server = new LUPrefix(4);   // Initialize a stream of 4 videos.\nserver.upload(3);                    // Upload video 3.\nserver.longest();                    // Since video 1 has not been uploaded yet, there is no prefix.\n                                     // So, we return 0.\nserver.upload(1);                    // Upload video 1.\nserver.longest();                    // The prefix [1] is the longest uploaded prefix, so we return 1.\nserver.upload(2);                    // Upload video 2.\nserver.longest();                    // The prefix [1,2,3] is the longest uploaded prefix, so we return 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= video <= n\n\n\nAll values of \nvideo\n are \ndistinct\n.\n\n\nAt most \n2 * 10\n5\n calls \nin total\n will be made to \nupload\n and \nlongest\n.\n\n\nAt least one call will be made to \nlongest\n.",
        "temas": [
            "Binary Search",
            "Union Find",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Binary Search",
        "has_image": false
    },
    {
        "id": 2522,
        "slug": "partition-string-into-substrings-with-values-at-most-k",
        "url": "https://leetcode.com/problems/partition-string-into-substrings-with-values-at-most-k/",
        "titulo": "Partition String Into Substrings With Values at Most K",
        "enunciado": "You are given a string \ns\n consisting of digits from \n1\n to \n9\n and an integer \nk\n.\n\n\nA partition of a string \ns\n is called \ngood\n if:\n\n\n\n\nEach digit of \ns\n is part of \nexactly\n one substring.\n\n\nThe value of each substring is less than or equal to \nk\n.\n\n\n\n\nReturn \nthe \nminimum\n number of substrings in a \ngood\n partition of\n \ns\n. If no \ngood\n partition of \ns\n exists, return \n-1\n.\n\n\nNote\n that:\n\n\n\n\nThe \nvalue\n of a string is its result when interpreted as an integer. For example, the value of \n\"123\"\n is \n123\n and the value of \n\"1\"\n is \n1\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"165462\", k = 60\n\nOutput:\n 4\n\nExplanation:\n We can partition the string into substrings \"16\", \"54\", \"6\", and \"2\". Each substring has a value less than or equal to k = 60.\nIt can be shown that we cannot partition the string into less than 4 substrings.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"238182\", k = 5\n\nOutput:\n -1\n\nExplanation:\n There is no good partition for this string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is a digit from \n'1'\n to \n'9'\n.\n\n\n1 <= k <= 10\n9",
        "temas": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2429,
        "slug": "minimize-xor",
        "url": "https://leetcode.com/problems/minimize-xor/",
        "titulo": "Minimize XOR",
        "enunciado": "Given two positive integers \nnum1\n and \nnum2\n, find the positive integer \nx\n such that:\n\n\n\n\nx\n has the same number of set bits as \nnum2\n, and\n\n\nThe value \nx XOR num1\n is \nminimal\n.\n\n\n\n\nNote that \nXOR\n is the bitwise XOR operation.\n\n\nReturn \nthe integer \nx\n. The test cases are generated such that \nx\n is \nuniquely determined\n.\n\n\nThe number of \nset bits\n of an integer is the number of \n1\n's in its binary representation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num1 = 3, num2 = 5\n\nOutput:\n 3\n\nExplanation:\n\nThe binary representations of num1 and num2 are 0011 and 0101, respectively.\nThe integer \n3\n has the same number of set bits as num2, and the value \n3 XOR 3 = 0\n is minimal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num1 = 1, num2 = 12\n\nOutput:\n 3\n\nExplanation:\n\nThe binary representations of num1 and num2 are 0001 and 1100, respectively.\nThe integer \n3\n has the same number of set bits as num2, and the value \n3 XOR 1 = 2\n is minimal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num1, num2 <= 10\n9",
        "temas": [
            "Greedy",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Greedy",
        "has_image": false
    },
    {
        "id": 2428,
        "slug": "maximum-sum-of-an-hourglass",
        "url": "https://leetcode.com/problems/maximum-sum-of-an-hourglass/",
        "titulo": "Maximum Sum of an Hourglass",
        "enunciado": "You are given an \nm x n\n integer matrix \ngrid\n.\n\n\nWe define an \nhourglass\n as a part of the matrix with the following form:\n\n\n\n\nReturn \nthe \nmaximum\n sum of the elements of an hourglass\n.\n\n\nNote\n that an hourglass cannot be rotated and must be entirely contained within the matrix.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[6,2,1,3],[4,2,1,5],[9,2,8,7],[4,1,2,9]]\n\nOutput:\n 30\n\nExplanation:\n The cells shown above represent the hourglass with the maximum sum: 6 + 2 + 1 + 2 + 9 + 2 + 8 = 30.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput:\n 35\n\nExplanation:\n There is only one hourglass in the matrix, with the sum: 1 + 2 + 3 + 5 + 7 + 8 + 9 = 35.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n3 <= m, n <= 150\n\n\n0 <= grid[i][j] <= 10\n6",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2420,
        "slug": "find-all-good-indices",
        "url": "https://leetcode.com/problems/find-all-good-indices/",
        "titulo": "Find All Good Indices",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of size \nn\n and a positive integer \nk\n.\n\n\nWe call an index \ni\n in the range \nk <= i < n - k\n \ngood\n if the following conditions are satisfied:\n\n\n\n\nThe \nk\n elements that are just \nbefore\n the index \ni\n are in \nnon-increasing\n order.\n\n\nThe \nk\n elements that are just \nafter\n the index \ni\n are in \nnon-decreasing\n order.\n\n\n\n\nReturn \nan array of all good indices sorted in \nincreasing\n order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,1,1,1,3,4,1], k = 2\n\nOutput:\n [2,3]\n\nExplanation:\n There are two good indices in the array:\n- Index 2. The subarray [2,1] is in non-increasing order, and the subarray [1,3] is in non-decreasing order.\n- Index 3. The subarray [1,1] is in non-increasing order, and the subarray [3,4] is in non-decreasing order.\nNote that the index 4 is not good because [4,1] is not non-decreasing.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,1,1,2], k = 2\n\nOutput:\n []\n\nExplanation:\n There are no good indices in this array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n3 <= n <= 10\n5\n\n\n1 <= nums[i] <= 10\n6\n\n\n1 <= k <= n / 2",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2419,
        "slug": "longest-subarray-with-maximum-bitwise-and",
        "url": "https://leetcode.com/problems/longest-subarray-with-maximum-bitwise-and/",
        "titulo": "Longest Subarray With Maximum Bitwise AND",
        "enunciado": "You are given an integer array \nnums\n of size \nn\n.\n\n\nConsider a \nnon-empty\n subarray from \nnums\n that has the \nmaximum\n possible \nbitwise AND\n.\n\n\n\n\nIn other words, let \nk\n be the maximum value of the bitwise AND of \nany\n subarray of \nnums\n. Then, only subarrays with a bitwise AND equal to \nk\n should be considered.\n\n\n\n\nReturn \nthe length of the \nlongest\n such subarray\n.\n\n\nThe bitwise AND of an array is the bitwise AND of all the numbers in it.\n\n\nA \nsubarray\n is a contiguous sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,3,2,2]\n\nOutput:\n 2\n\nExplanation:\n\nThe maximum possible bitwise AND of a subarray is 3.\nThe longest subarray with that value is [3,3], so we return 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n 1\n\nExplanation:\n\nThe maximum possible bitwise AND of a subarray is 4.\nThe longest subarray with that value is [4], so we return 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2411,
        "slug": "smallest-subarrays-with-maximum-bitwise-or",
        "url": "https://leetcode.com/problems/smallest-subarrays-with-maximum-bitwise-or/",
        "titulo": "Smallest Subarrays With Maximum Bitwise OR",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n of length \nn\n, consisting of non-negative integers. For each index \ni\n from \n0\n to \nn - 1\n, you must determine the size of the \nminimum sized\n non-empty subarray of \nnums\n starting at \ni\n (\ninclusive\n) that has the \nmaximum\n possible \nbitwise OR\n.\n\n\n\n\nIn other words, let \nB\nij\n be the bitwise OR of the subarray \nnums[i...j]\n. You need to find the smallest subarray starting at \ni\n, such that bitwise OR of this subarray is equal to \nmax(B\nik\n)\n where \ni <= k <= n - 1\n.\n\n\n\n\nThe bitwise OR of an array is the bitwise OR of all the numbers in it.\n\n\nReturn \nan integer array \nanswer\n of size \nn\n where \nanswer[i]\n is the length of the \nminimum\n sized subarray starting at \ni\n with \nmaximum\n bitwise OR.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,0,2,1,3]\n\nOutput:\n [3,3,2,2,1]\n\nExplanation:\n\nThe maximum possible bitwise OR starting at any index is 3. \n- Starting at index 0, the shortest subarray that yields it is [1,0,2].\n- Starting at index 1, the shortest subarray that yields the maximum bitwise OR is [0,2,1].\n- Starting at index 2, the shortest subarray that yields the maximum bitwise OR is [2,1].\n- Starting at index 3, the shortest subarray that yields the maximum bitwise OR is [1,3].\n- Starting at index 4, the shortest subarray that yields the maximum bitwise OR is [3].\nTherefore, we return [3,3,2,2,1]. \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2]\n\nOutput:\n [2,1]\n\nExplanation:\n\nStarting at index 0, the shortest subarray that yields the maximum bitwise OR is of length 2.\nStarting at index 1, the shortest subarray that yields the maximum bitwise OR is of length 1.\nTherefore, we return [2,1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2410,
        "slug": "maximum-matching-of-players-with-trainers",
        "url": "https://leetcode.com/problems/maximum-matching-of-players-with-trainers/",
        "titulo": "Maximum Matching of Players With Trainers",
        "enunciado": "You are given a \n0-indexed\n integer array \nplayers\n, where \nplayers[i]\n represents the \nability\n of the \ni\nth\n player. You are also given a \n0-indexed\n integer array \ntrainers\n, where \ntrainers[j]\n represents the \ntraining capacity \nof the \nj\nth\n trainer.\n\n\nThe \ni\nth\n player can \nmatch\n with the \nj\nth\n trainer if the player's ability is \nless than or equal to\n the trainer's training capacity. Additionally, the \ni\nth\n player can be matched with at most one trainer, and the \nj\nth\n trainer can be matched with at most one player.\n\n\nReturn \nthe \nmaximum\n number of matchings between \nplayers\n and \ntrainers\n that satisfy these conditions.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n players = [4,7,9], trainers = [8,2,5,8]\n\nOutput:\n 2\n\nExplanation:\n\nOne of the ways we can form two matchings is as follows:\n- players[0] can be matched with trainers[0] since 4 <= 8.\n- players[1] can be matched with trainers[3] since 7 <= 8.\nIt can be proven that 2 is the maximum number of matchings that can be formed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n players = [1,1,1], trainers = [10]\n\nOutput:\n 1\n\nExplanation:\n\nThe trainer can be matched with any of the 3 players.\nEach player can only be matched with one trainer, so the maximum answer is 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= players.length, trainers.length <= 10\n5\n\n\n1 <= players[i], trainers[j] <= 10\n9\n\n\n\n\n \n\n\nNote:\n This question is the same as \n 445: Assign Cookies.",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2415,
        "slug": "reverse-odd-levels-of-binary-tree",
        "url": "https://leetcode.com/problems/reverse-odd-levels-of-binary-tree/",
        "titulo": "Reverse Odd Levels of Binary Tree",
        "enunciado": "Given the \nroot\n of a \nperfect\n binary tree, reverse the node values at each \nodd\n level of the tree.\n\n\n\n\nFor example, suppose the node values at level 3 are \n[2,1,3,4,7,11,29,18]\n, then it should become \n[18,29,11,7,4,3,1,2]\n.\n\n\n\n\nReturn \nthe root of the reversed tree\n.\n\n\nA binary tree is \nperfect\n if all parent nodes have two children and all leaves are on the same level.\n\n\nThe \nlevel\n of a node is the number of edges along the path between it and the root node.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [2,3,5,8,13,21,34]\n\nOutput:\n [2,5,3,8,13,21,34]\n\nExplanation:\n \nThe tree has only one odd level.\nThe nodes at level 1 are 3, 5 respectively, which are reversed and become 5, 3.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [7,13,11]\n\nOutput:\n [7,11,13]\n\nExplanation:\n \nThe nodes at level 1 are 13, 11, which are reversed and become 11, 13.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [0,1,2,0,0,0,0,1,1,1,1,2,2,2,2]\n\nOutput:\n [0,2,1,0,0,0,0,2,2,2,2,1,1,1,1]\n\nExplanation:\n \nThe odd levels have non-zero values.\nThe nodes at level 1 were 1, 2, and are 2, 1 after the reversal.\nThe nodes at level 3 were 1, 1, 1, 1, 2, 2, 2, 2, and are 2, 2, 2, 2, 1, 1, 1, 1 after the reversal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 2\n14\n]\n.\n\n\n0 <= Node.val <= 10\n5\n\n\nroot\n is a \nperfect\n binary tree.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 2414,
        "slug": "length-of-the-longest-alphabetical-continuous-substring",
        "url": "https://leetcode.com/problems/length-of-the-longest-alphabetical-continuous-substring/",
        "titulo": "Length of the Longest Alphabetical Continuous Substring",
        "enunciado": "An \nalphabetical continuous string\n is a string consisting of consecutive letters in the alphabet. In other words, it is any substring of the string \n\"abcdefghijklmnopqrstuvwxyz\"\n.\n\n\n\n\nFor example, \n\"abc\"\n is an alphabetical continuous string, while \n\"acb\"\n and \n\"za\"\n are not.\n\n\n\n\nGiven a string \ns\n consisting of lowercase letters only, return the \nlength of the \nlongest\n alphabetical continuous substring.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abacaba\"\n\nOutput:\n 2\n\nExplanation:\n There are 4 distinct continuous substrings: \"a\", \"b\", \"c\" and \"ab\".\n\"ab\" is the longest continuous substring.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcde\"\n\nOutput:\n 5\n\nExplanation:\n \"abcde\" is the longest continuous substring.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of only English lowercase letters.",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2406,
        "slug": "divide-intervals-into-minimum-number-of-groups",
        "url": "https://leetcode.com/problems/divide-intervals-into-minimum-number-of-groups/",
        "titulo": "Divide Intervals Into Minimum Number of Groups",
        "enunciado": "You are given a 2D integer array \nintervals\n where \nintervals[i] = [left\ni\n, right\ni\n]\n represents the \ninclusive\n interval \n[left\ni\n, right\ni\n]\n.\n\n\nYou have to divide the intervals into one or more \ngroups\n such that each interval is in \nexactly\n one group, and no two intervals that are in the same group \nintersect\n each other.\n\n\nReturn \nthe \nminimum\n number of groups you need to make\n.\n\n\nTwo intervals \nintersect\n if there is at least one common number between them. For example, the intervals \n[1, 5]\n and \n[5, 8]\n intersect.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n intervals = [[5,10],[6,8],[1,5],[2,3],[1,10]]\n\nOutput:\n 3\n\nExplanation:\n We can divide the intervals into the following groups:\n- Group 1: [1, 5], [6, 8].\n- Group 2: [2, 3], [5, 10].\n- Group 3: [1, 10].\nIt can be proven that it is not possible to divide the intervals into fewer than 3 groups.\n\n\n\nExample 2:\n\n\n\n\nInput:\n intervals = [[1,3],[5,6],[8,10],[11,13]]\n\nOutput:\n 1\n\nExplanation:\n None of the intervals overlap, so we can put all of them in one group.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= intervals.length <= 10\n5\n\n\nintervals[i].length == 2\n\n\n1 <= left\ni\n <= right\ni\n <= 10\n6",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2405,
        "slug": "optimal-partition-of-string",
        "url": "https://leetcode.com/problems/optimal-partition-of-string/",
        "titulo": "Optimal Partition of String",
        "enunciado": "Given a string \ns\n, partition the string into one or more \nsubstrings\n such that the characters in each substring are \nunique\n. That is, no letter appears in a single substring more than \nonce\n.\n\n\nReturn \nthe \nminimum\n number of substrings in such a partition.\n\n\nNote that each character should belong to exactly one substring in a partition.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abacaba\"\n\nOutput:\n 4\n\nExplanation:\n\nTwo possible partitions are (\"a\",\"ba\",\"cab\",\"a\") and (\"ab\",\"a\",\"ca\",\"ba\").\nIt can be shown that 4 is the minimum number of substrings needed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"ssssss\"\n\nOutput:\n 6\n\nExplanation:\n\nThe only valid partition is (\"s\",\"s\",\"s\",\"s\",\"s\",\"s\").\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of only English lowercase letters.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2365,
        "slug": "task-scheduler-ii",
        "url": "https://leetcode.com/problems/task-scheduler-ii/",
        "titulo": "Task Scheduler II",
        "enunciado": "You are given a \n0-indexed\n array of positive integers \ntasks\n, representing tasks that need to be completed \nin order\n, where \ntasks[i]\n represents the \ntype\n of the \ni\nth\n task.\n\n\nYou are also given a positive integer \nspace\n, which represents the \nminimum\n number of days that must pass \nafter\n the completion of a task before another task of the \nsame\n type can be performed.\n\n\nEach day, until all tasks have been completed, you must either:\n\n\n\n\nComplete the next task from \ntasks\n, or\n\n\nTake a break.\n\n\n\n\nReturn\n the \nminimum\n number of days needed to complete all tasks\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tasks = [1,2,1,2,3,1], space = 3\n\nOutput:\n 9\n\nExplanation:\n\nOne way to complete all tasks in 9 days is as follows:\nDay 1: Complete the 0th task.\nDay 2: Complete the 1st task.\nDay 3: Take a break.\nDay 4: Take a break.\nDay 5: Complete the 2nd task.\nDay 6: Complete the 3rd task.\nDay 7: Take a break.\nDay 8: Complete the 4th task.\nDay 9: Complete the 5th task.\nIt can be shown that the tasks cannot be completed in less than 9 days.\n\n\n\nExample 2:\n\n\n\n\nInput:\n tasks = [5,8,8,5], space = 2\n\nOutput:\n 6\n\nExplanation:\n\nOne way to complete all tasks in 6 days is as follows:\nDay 1: Complete the 0th task.\nDay 2: Complete the 1st task.\nDay 3: Take a break.\nDay 4: Take a break.\nDay 5: Complete the 2nd task.\nDay 6: Complete the 3rd task.\nIt can be shown that the tasks cannot be completed in less than 6 days.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tasks.length <= 10\n5\n\n\n1 <= tasks[i] <= 10\n9\n\n\n1 <= space <= tasks.length",
        "temas": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2397,
        "slug": "maximum-rows-covered-by-columns",
        "url": "https://leetcode.com/problems/maximum-rows-covered-by-columns/",
        "titulo": "Maximum Rows Covered by Columns",
        "enunciado": "You are given an \nm x n\n binary matrix \nmatrix\n and an integer \nnumSelect\n.\n\n\nYour goal is to select exactly \nnumSelect\n \ndistinct \ncolumns from \nmatrix\n such that you cover as many rows as possible.\n\n\nA row is considered \ncovered\n if all the \n1\n's in that row are also part of a column that you have selected. If a row does not have any \n1\ns, it is also considered covered.\n\n\nMore formally, let us consider \nselected = {c\n1\n, c\n2\n, ...., c\nnumSelect\n}\n as the set of columns selected by you. A row \ni\n is \ncovered\n by \nselected\n if:\n\n\n\n\nFor each cell where \nmatrix[i][j] == 1\n, the column \nj\n is in \nselected\n.\n\n\nOr, no cell in row \ni\n has a value of \n1\n.\n\n\n\n\nReturn the \nmaximum\n number of rows that can be \ncovered\n by a set of \nnumSelect\n columns.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \nmatrix = [[0,0,0],[1,0,1],[0,1,1],[0,0,1]], numSelect = 2\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\nOne possible way to cover 3 rows is shown in the diagram above.\n\nWe choose s = {0, 2}.\n\n- Row 0 is covered because it has no occurrences of 1.\n\n- Row 1 is covered because the columns with value 1, i.e. 0 and 2 are present in s.\n\n- Row 2 is not covered because matrix[2][1] == 1 but 1 is not present in s.\n\n- Row 3 is covered because matrix[2][2] == 1 and 2 is present in s.\n\nThus, we can cover three rows.\n\nNote that s = {1, 2} will also cover 3 rows, but it can be shown that no more than three rows can be covered.\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \nmatrix = [[1],[0]], numSelect = 1\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\nSelecting the only column will result in both rows being covered since the entire matrix is selected.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 12\n\n\nmatrix[i][j]\n is either \n0\n or \n1\n.\n\n\n1 <= numSelect <= n",
        "temas": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Matrix",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2396,
        "slug": "strictly-palindromic-number",
        "url": "https://leetcode.com/problems/strictly-palindromic-number/",
        "titulo": "Strictly Palindromic Number",
        "enunciado": "An integer \nn\n is \nstrictly palindromic\n if, for \nevery\n base \nb\n between \n2\n and \nn - 2\n (\ninclusive\n), the string representation of the integer \nn\n in base \nb\n is \npalindromic\n.\n\n\nGiven an integer \nn\n, return \ntrue\n \nif \nn\n is \nstrictly palindromic\n and \nfalse\n otherwise\n.\n\n\nA string is \npalindromic\n if it reads the same forward and backward.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 9\n\nOutput:\n false\n\nExplanation:\n In base 2: 9 = 1001 (base 2), which is palindromic.\nIn base 3: 9 = 100 (base 3), which is not palindromic.\nTherefore, 9 is not strictly palindromic so we return false.\nNote that in bases 4, 5, 6, and 7, n = 9 is also not palindromic.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n false\n\nExplanation:\n We only consider base 2: 4 = 100 (base 2), which is not palindromic.\nTherefore, we return false.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n4 <= n <= 10\n5",
        "temas": [
            "Math",
            "Two Pointers",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2401,
        "slug": "longest-nice-subarray",
        "url": "https://leetcode.com/problems/longest-nice-subarray/",
        "titulo": "Longest Nice Subarray",
        "enunciado": "You are given an array \nnums\n consisting of \npositive\n integers.\n\n\nWe call a subarray of \nnums\n \nnice\n if the bitwise \nAND\n of every pair of elements that are in \ndifferent\n positions in the subarray is equal to \n0\n.\n\n\nReturn \nthe length of the \nlongest\n nice subarray\n.\n\n\nA \nsubarray\n is a \ncontiguous\n part of an array.\n\n\nNote\n that subarrays of length \n1\n are always considered nice.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,8,48,10]\n\nOutput:\n 3\n\nExplanation:\n The longest nice subarray is [3,8,48]. This subarray satisfies the conditions:\n- 3 AND 8 = 0.\n- 3 AND 48 = 0.\n- 8 AND 48 = 0.\nIt can be proven that no longer nice subarray can be obtained, so we return 3.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,1,5,11,13]\n\nOutput:\n 1\n\nExplanation:\n The length of the longest nice subarray is 1. Any subarray of length 1 can be chosen.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2400,
        "slug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
        "url": "https://leetcode.com/problems/number-of-ways-to-reach-a-position-after-exactly-k-steps/",
        "titulo": "Number of Ways to Reach a Position After Exactly k Steps",
        "enunciado": "You are given two \npositive\n integers \nstartPos\n and \nendPos\n. Initially, you are standing at position \nstartPos\n on an \ninfinite\n number line. With one step, you can move either one position to the left, or one position to the right.\n\n\nGiven a positive integer \nk\n, return \nthe number of \ndifferent\n ways to reach the position \nendPos\n starting from \nstartPos\n, such that you perform \nexactly\n \nk\n steps\n. Since the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nTwo ways are considered different if the order of the steps made is not exactly the same.\n\n\nNote\n that the number line includes negative integers.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n startPos = 1, endPos = 2, k = 3\n\nOutput:\n 3\n\nExplanation:\n We can reach position 2 from 1 in exactly 3 steps in three ways:\n- 1 -> 2 -> 3 -> 2.\n- 1 -> 2 -> 1 -> 2.\n- 1 -> 0 -> 1 -> 2.\nIt can be proven that no other way is possible, so we return 3.\n\n\nExample 2:\n\n\n\n\nInput:\n startPos = 2, endPos = 5, k = 10\n\nOutput:\n 0\n\nExplanation:\n It is impossible to reach position 5 from position 2 in exactly 10 steps.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= startPos, endPos, k <= 1000",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2384,
        "slug": "largest-palindromic-number",
        "url": "https://leetcode.com/problems/largest-palindromic-number/",
        "titulo": "Largest Palindromic Number",
        "enunciado": "You are given a string \nnum\n consisting of digits only.\n\n\nReturn \nthe \nlargest palindromic\n integer (in the form of a string) that can be formed using digits taken from \nnum\n. It should not contain \nleading zeroes\n.\n\n\nNotes:\n\n\n\n\nYou do \nnot\n need to use all the digits of \nnum\n, but you must use \nat least\n one digit.\n\n\nThe digits can be reordered.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"444947137\"\n\nOutput:\n \"7449447\"\n\nExplanation:\n \nUse the digits \"4449477\" from \"\n44494\n7\n13\n7\n\" to form the palindromic integer \"7449447\".\nIt can be shown that \"7449447\" is the largest palindromic integer that can be formed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"00009\"\n\nOutput:\n \"9\"\n\nExplanation:\n \nIt can be shown that \"9\" is the largest palindromic integer that can be formed.\nNote that the integer returned should not contain leading zeroes.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num.length <= 10\n5\n\n\nnum\n consists of digits.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2342,
        "slug": "max-sum-of-a-pair-with-equal-sum-of-digits",
        "url": "https://leetcode.com/problems/max-sum-of-a-pair-with-equal-sum-of-digits/",
        "titulo": "Max Sum of a Pair With Equal Sum of Digits",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n consisting of \npositive\n integers. You can choose two indices \ni\n and \nj\n, such that \ni != j\n, and the sum of digits of the number \nnums[i]\n is equal to that of \nnums[j]\n.\n\n\nReturn the \nmaximum\n value of\n \nnums[i] + nums[j]\n \nthat you can obtain over all possible indices \ni\n and \nj\n that satisfy the conditions. If no such pair of indices exists, return -1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [18,43,36,13,7]\n\nOutput:\n 54\n\nExplanation:\n The pairs (i, j) that satisfy the conditions are:\n- (0, 2), both numbers have a sum of digits equal to 9, and their sum is 18 + 36 = 54.\n- (1, 4), both numbers have a sum of digits equal to 7, and their sum is 43 + 7 = 50.\nSo the maximum sum that we can obtain is 54.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [10,12,19,14]\n\nOutput:\n -1\n\nExplanation:\n There are no two numbers that satisfy the conditions, so we return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2391,
        "slug": "minimum-amount-of-time-to-collect-garbage",
        "url": "https://leetcode.com/problems/minimum-amount-of-time-to-collect-garbage/",
        "titulo": "Minimum Amount of Time to Collect Garbage",
        "enunciado": "You are given a \n0-indexed\n array of strings \ngarbage\n where \ngarbage[i]\n represents the assortment of garbage at the \ni\nth\n house. \ngarbage[i]\n consists only of the characters \n'M'\n, \n'P'\n and \n'G'\n representing one unit of metal, paper and glass garbage respectively. Picking up \none\n unit of any type of garbage takes \n1\n minute.\n\n\nYou are also given a \n0-indexed\n integer array \ntravel\n where \ntravel[i]\n is the number of minutes needed to go from house \ni\n to house \ni + 1\n.\n\n\nThere are three garbage trucks in the city, each responsible for picking up one type of garbage. Each garbage truck starts at house \n0\n and must visit each house \nin order\n; however, they do \nnot\n need to visit every house.\n\n\nOnly \none\n garbage truck may be used at any given moment. While one truck is driving or picking up garbage, the other two trucks \ncannot\n do anything.\n\n\nReturn\n the \nminimum\n number of minutes needed to pick up all the garbage.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n garbage = [\"G\",\"P\",\"GP\",\"GG\"], travel = [2,4,3]\n\nOutput:\n 21\n\nExplanation:\n\nThe paper garbage truck:\n1. Travels from house 0 to house 1\n2. Collects the paper garbage at house 1\n3. Travels from house 1 to house 2\n4. Collects the paper garbage at house 2\nAltogether, it takes 8 minutes to pick up all the paper garbage.\nThe glass garbage truck:\n1. Collects the glass garbage at house 0\n2. Travels from house 0 to house 1\n3. Travels from house 1 to house 2\n4. Collects the glass garbage at house 2\n5. Travels from house 2 to house 3\n6. Collects the glass garbage at house 3\nAltogether, it takes 13 minutes to pick up all the glass garbage.\nSince there is no metal garbage, we do not need to consider the metal garbage truck.\nTherefore, it takes a total of 8 + 13 = 21 minutes to collect all the garbage.\n\n\n\nExample 2:\n\n\n\n\nInput:\n garbage = [\"MMM\",\"PGM\",\"GP\"], travel = [3,10]\n\nOutput:\n 37\n\nExplanation:\n\nThe metal garbage truck takes 7 minutes to pick up all the metal garbage.\nThe paper garbage truck takes 15 minutes to pick up all the paper garbage.\nThe glass garbage truck takes 15 minutes to pick up all the glass garbage.\nIt takes a total of 7 + 15 + 15 = 37 minutes to collect all the garbage.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= garbage.length <= 10\n5\n\n\ngarbage[i]\n consists of only the letters \n'M'\n, \n'P'\n, and \n'G'\n.\n\n\n1 <= garbage[i].length <= 10\n\n\ntravel.length == garbage.length - 1\n\n\n1 <= travel[i] <= 100",
        "temas": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2390,
        "slug": "removing-stars-from-a-string",
        "url": "https://leetcode.com/problems/removing-stars-from-a-string/",
        "titulo": "Removing Stars From a String",
        "enunciado": "You are given a string \ns\n, which contains stars \n*\n.\n\n\nIn one operation, you can:\n\n\n\n\nChoose a star in \ns\n.\n\n\nRemove the closest \nnon-star\n character to its \nleft\n, as well as remove the star itself.\n\n\n\n\nReturn \nthe string after \nall\n stars have been removed\n.\n\n\nNote:\n\n\n\n\nThe input will be generated such that the operation is always possible.\n\n\nIt can be shown that the resulting string will always be unique.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"leet**cod*e\"\n\nOutput:\n \"lecoe\"\n\nExplanation:\n Performing the removals from left to right:\n- The closest character to the 1\nst\n star is 't' in \"lee\nt\n**cod*e\". s becomes \"lee*cod*e\".\n- The closest character to the 2\nnd\n star is 'e' in \"le\ne\n*cod*e\". s becomes \"lecod*e\".\n- The closest character to the 3\nrd\n star is 'd' in \"leco\nd\n*e\". s becomes \"lecoe\".\nThere are no more stars, so we return \"lecoe\".\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"erase*****\"\n\nOutput:\n \"\"\n\nExplanation:\n The entire string is removed, so we return an empty string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters and stars \n*\n.\n\n\nThe operation above can be performed on \ns\n.",
        "temas": [
            "String",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2381,
        "slug": "shifting-letters-ii",
        "url": "https://leetcode.com/problems/shifting-letters-ii/",
        "titulo": "Shifting Letters II",
        "enunciado": "You are given a string \ns\n of lowercase English letters and a 2D integer array \nshifts\n where \nshifts[i] = [start\ni\n, end\ni\n, direction\ni\n]\n. For every \ni\n, \nshift\n the characters in \ns\n from the index \nstart\ni\n to the index \nend\ni\n (\ninclusive\n) forward if \ndirection\ni\n = 1\n, or shift the characters backward if \ndirection\ni\n = 0\n.\n\n\nShifting a character \nforward\n means replacing it with the \nnext\n letter in the alphabet (wrapping around so that \n'z'\n becomes \n'a'\n). Similarly, shifting a character \nbackward\n means replacing it with the \nprevious\n letter in the alphabet (wrapping around so that \n'a'\n becomes \n'z'\n).\n\n\nReturn \nthe final string after all such shifts to \ns\n are applied\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abc\", shifts = [[0,1,0],[1,2,1],[0,2,1]]\n\nOutput:\n \"ace\"\n\nExplanation:\n Firstly, shift the characters from index 0 to index 1 backward. Now s = \"zac\".\nSecondly, shift the characters from index 1 to index 2 forward. Now s = \"zbd\".\nFinally, shift the characters from index 0 to index 2 forward. Now s = \"ace\".\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"dztz\", shifts = [[0,0,0],[1,1,1]]\n\nOutput:\n \"catz\"\n\nExplanation:\n Firstly, shift the characters from index 0 to index 0 backward. Now s = \"cztz\".\nFinally, shift the characters from index 1 to index 1 forward. Now s = \"catz\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, shifts.length <= 5 * 10\n4\n\n\nshifts[i].length == 3\n\n\n0 <= start\ni\n <= end\ni\n < s.length\n\n\n0 <= direction\ni\n <= 1\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2380,
        "slug": "time-needed-to-rearrange-a-binary-string",
        "url": "https://leetcode.com/problems/time-needed-to-rearrange-a-binary-string/",
        "titulo": "Time Needed to Rearrange a Binary String",
        "enunciado": "You are given a binary string \ns\n. In one second, \nall\n occurrences of \n\"01\"\n are \nsimultaneously\n replaced with \n\"10\"\n. This process \nrepeats\n until no occurrences of \n\"01\"\n exist.\n\n\nReturn\n the number of seconds needed to complete this process.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"0110101\"\n\nOutput:\n 4\n\nExplanation:\n \nAfter one second, s becomes \"1011010\".\nAfter another second, s becomes \"1101100\".\nAfter the third second, s becomes \"1110100\".\nAfter the fourth second, s becomes \"1111000\".\nNo occurrence of \"01\" exists any longer, and the process needed 4 seconds to complete,\nso we return 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"11100\"\n\nOutput:\n 0\n\nExplanation:\n\nNo occurrence of \"01\" exists in s, and the processes needed 0 seconds to complete,\nso we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.\n\n\n\n\n \n\n\nFollow up:\n\n\nCan you solve this problem in O(n) time complexity?",
        "temas": [
            "String",
            "Dynamic Programming",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2385,
        "slug": "amount-of-time-for-binary-tree-to-be-infected",
        "url": "https://leetcode.com/problems/amount-of-time-for-binary-tree-to-be-infected/",
        "titulo": "Amount of Time for Binary Tree to Be Infected",
        "enunciado": "You are given the \nroot\n of a binary tree with \nunique\n values, and an integer \nstart\n. At minute \n0\n, an \ninfection\n starts from the node with value \nstart\n.\n\n\nEach minute, a node becomes infected if:\n\n\n\n\nThe node is currently uninfected.\n\n\nThe node is adjacent to an infected node.\n\n\n\n\nReturn \nthe number of minutes needed for the entire tree to be infected.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,5,3,null,4,10,6,9,2], start = 3\n\nOutput:\n 4\n\nExplanation:\n The following nodes are infected during:\n- Minute 0: Node 3\n- Minute 1: Nodes 1, 10 and 6\n- Minute 2: Node 5\n- Minute 3: Node 4\n- Minute 4: Nodes 9 and 2\nIt takes 4 minutes for the whole tree to be infected so we return 4.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1], start = 1\n\nOutput:\n 0\n\nExplanation:\n At minute 0, the only node in the tree is infected so we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5\n\n\nEach node has a \nunique\n value.\n\n\nA node with a value of \nstart\n exists in the tree.",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 2375,
        "slug": "construct-smallest-number-from-di-string",
        "url": "https://leetcode.com/problems/construct-smallest-number-from-di-string/",
        "titulo": "Construct Smallest Number From DI String",
        "enunciado": "You are given a \n0-indexed\n string \npattern\n of length \nn\n consisting of the characters \n'I'\n meaning \nincreasing\n and \n'D'\n meaning \ndecreasing\n.\n\n\nA \n0-indexed\n string \nnum\n of length \nn + 1\n is created using the following conditions:\n\n\n\n\nnum\n consists of the digits \n'1'\n to \n'9'\n, where each digit is used \nat most\n once.\n\n\nIf \npattern[i] == 'I'\n, then \nnum[i] < num[i + 1]\n.\n\n\nIf \npattern[i] == 'D'\n, then \nnum[i] > num[i + 1]\n.\n\n\n\n\nReturn \nthe lexicographically \nsmallest\n possible string \nnum\n that meets the conditions.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n pattern = \"IIIDIDDD\"\n\nOutput:\n \"123549876\"\n\nExplanation:\n\nAt indices 0, 1, 2, and 4 we must have that num[i] < num[i+1].\nAt indices 3, 5, 6, and 7 we must have that num[i] > num[i+1].\nSome possible values of num are \"245639871\", \"135749862\", and \"123849765\".\nIt can be proven that \"123549876\" is the smallest possible num that meets the conditions.\nNote that \"123414321\" is not possible because the digit '1' is used more than once.\n\n\nExample 2:\n\n\n\n\nInput:\n pattern = \"DDD\"\n\nOutput:\n \"4321\"\n\nExplanation:\n\nSome possible values of num are \"9876\", \"7321\", and \"8742\".\nIt can be proven that \"4321\" is the smallest possible num that meets the conditions.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= pattern.length <= 8\n\n\npattern\n consists of only the letters \n'I'\n and \n'D'\n.",
        "temas": [
            "String",
            "Backtracking",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2374,
        "slug": "node-with-highest-edge-score",
        "url": "https://leetcode.com/problems/node-with-highest-edge-score/",
        "titulo": "Node With Highest Edge Score",
        "enunciado": "You are given a directed graph with \nn\n nodes labeled from \n0\n to \nn - 1\n, where each node has \nexactly one\n outgoing edge.\n\n\nThe graph is represented by a given \n0-indexed\n integer array \nedges\n of length \nn\n, where \nedges[i]\n indicates that there is a \ndirected\n edge from node \ni\n to node \nedges[i]\n.\n\n\nThe \nedge score\n of a node \ni\n is defined as the sum of the \nlabels\n of all the nodes that have an edge pointing to \ni\n.\n\n\nReturn \nthe node with the highest \nedge score\n. If multiple nodes have the same \nedge score\n, return the node with the \nsmallest\n index.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [1,0,0,0,0,7,7,5]\n\nOutput:\n 7\n\nExplanation:\n\n- The nodes 1, 2, 3 and 4 have an edge pointing to node 0. The edge score of node 0 is 1 + 2 + 3 + 4 = 10.\n- The node 0 has an edge pointing to node 1. The edge score of node 1 is 0.\n- The node 7 has an edge pointing to node 5. The edge score of node 5 is 7.\n- The nodes 5 and 6 have an edge pointing to node 7. The edge score of node 7 is 5 + 6 = 11.\nNode 7 has the highest edge score so return 7.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [2,0,0,2]\n\nOutput:\n 0\n\nExplanation:\n\n- The nodes 1 and 2 have an edge pointing to node 0. The edge score of node 0 is 1 + 2 = 3.\n- The nodes 0 and 3 have an edge pointing to node 2. The edge score of node 2 is 0 + 3 = 3.\nNodes 0 and 2 both have an edge score of 3. Since node 0 has a smaller index, we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == edges.length\n\n\n2 <= n <= 10\n5\n\n\n0 <= edges[i] < n\n\n\nedges[i] != i",
        "temas": [
            "Hash Table",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 2364,
        "slug": "count-number-of-bad-pairs",
        "url": "https://leetcode.com/problems/count-number-of-bad-pairs/",
        "titulo": "Count Number of Bad Pairs",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. A pair of indices \n(i, j)\n is a \nbad pair\n if \ni < j\n and \nj - i != nums[j] - nums[i]\n.\n\n\nReturn\n the total number of \nbad pairs\n in \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,1,3,3]\n\nOutput:\n 5\n\nExplanation:\n The pair (0, 1) is a bad pair since 1 - 0 != 1 - 4.\nThe pair (0, 2) is a bad pair since 2 - 0 != 3 - 4, 2 != -1.\nThe pair (0, 3) is a bad pair since 3 - 0 != 3 - 4, 3 != -1.\nThe pair (1, 2) is a bad pair since 2 - 1 != 3 - 1, 1 != 2.\nThe pair (2, 3) is a bad pair since 3 - 2 != 3 - 3, 1 != 0.\nThere are a total of 5 bad pairs, so we return 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n 0\n\nExplanation:\n There are no bad pairs.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2368,
        "slug": "reachable-nodes-with-restrictions",
        "url": "https://leetcode.com/problems/reachable-nodes-with-restrictions/",
        "titulo": "Reachable Nodes With Restrictions",
        "enunciado": "There is an undirected tree with \nn\n nodes labeled from \n0\n to \nn - 1\n and \nn - 1\n edges.\n\n\nYou are given a 2D integer array \nedges\n of length \nn - 1\n where \nedges[i] = [a\ni\n, b\ni\n]\n indicates that there is an edge between nodes \na\ni\n and \nb\ni\n in the tree. You are also given an integer array \nrestricted\n which represents \nrestricted\n nodes.\n\n\nReturn \nthe \nmaximum\n number of nodes you can reach from node \n0\n without visiting a restricted node.\n\n\nNote that node \n0\n will \nnot\n be a restricted node.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[0,1],[1,2],[3,1],[4,0],[0,5],[5,6]], restricted = [4,5]\n\nOutput:\n 4\n\nExplanation:\n The diagram above shows the tree.\nWe have that [0,1,2,3] are the only nodes that can be reached from node 0 without visiting a restricted node.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[0,1],[0,2],[0,5],[0,4],[3,2],[6,5]], restricted = [4,2,1]\n\nOutput:\n 3\n\nExplanation:\n The diagram above shows the tree.\nWe have that [0,5,6] are the only nodes that can be reached from node 0 without visiting a restricted node.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10\n5\n\n\nedges.length == n - 1\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nedges\n represents a valid tree.\n\n\n1 <= restricted.length < n\n\n\n1 <= restricted[i] < n\n\n\nAll the values of \nrestricted\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2370,
        "slug": "longest-ideal-subsequence",
        "url": "https://leetcode.com/problems/longest-ideal-subsequence/",
        "titulo": "Longest Ideal Subsequence",
        "enunciado": "You are given a string \ns\n consisting of lowercase letters and an integer \nk\n. We call a string \nt\n \nideal\n if the following conditions are satisfied:\n\n\n\n\nt\n is a \nsubsequence\n of the string \ns\n.\n\n\nThe absolute difference in the alphabet order of every two \nadjacent\n letters in \nt\n is less than or equal to \nk\n.\n\n\n\n\nReturn \nthe length of the \nlongest\n ideal string\n.\n\n\nA \nsubsequence\n is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n\n\nNote\n that the alphabet order is not cyclic. For example, the absolute difference in the alphabet order of \n'a'\n and \n'z'\n is \n25\n, not \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"acfgbd\", k = 2\n\nOutput:\n 4\n\nExplanation:\n The longest ideal string is \"acbd\". The length of this string is 4, so 4 is returned.\nNote that \"acfgbd\" is not ideal because 'c' and 'f' have a difference of 3 in alphabet order.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcd\", k = 3\n\nOutput:\n 4\n\nExplanation:\n The longest ideal string is \"abcd\". The length of this string is 4, so 4 is returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\n0 <= k <= 25\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2369,
        "slug": "check-if-there-is-a-valid-partition-for-the-array",
        "url": "https://leetcode.com/problems/check-if-there-is-a-valid-partition-for-the-array/",
        "titulo": "Check if There is a Valid Partition For The Array",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. You have to partition the array into one or more \ncontiguous\n subarrays.\n\n\nWe call a partition of the array \nvalid\n if each of the obtained subarrays satisfies \none\n of the following conditions:\n\n\n\n\nThe subarray consists of \nexactly\n \n2,\n equal elements. For example, the subarray \n[2,2]\n is good.\n\n\nThe subarray consists of \nexactly\n \n3,\n equal elements. For example, the subarray \n[4,4,4]\n is good.\n\n\nThe subarray consists of \nexactly\n \n3\n consecutive increasing elements, that is, the difference between adjacent elements is \n1\n. For example, the subarray \n[3,4,5]\n is good, but the subarray \n[1,3,5]\n is not.\n\n\n\n\nReturn \ntrue\n if the array has \nat least\n one valid partition\n. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,4,4,5,6]\n\nOutput:\n true\n\nExplanation:\n The array can be partitioned into the subarrays [4,4] and [4,5,6].\nThis partition is valid, so we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1,2]\n\nOutput:\n false\n\nExplanation:\n There is no valid partition for this array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2359,
        "slug": "find-closest-node-to-given-two-nodes",
        "url": "https://leetcode.com/problems/find-closest-node-to-given-two-nodes/",
        "titulo": "Find Closest Node to Given Two Nodes",
        "enunciado": "You are given a \ndirected\n graph of \nn\n nodes numbered from \n0\n to \nn - 1\n, where each node has \nat most one\n outgoing edge.\n\n\nThe graph is represented with a given \n0-indexed\n array \nedges\n of size \nn\n, indicating that there is a directed edge from node \ni\n to node \nedges[i]\n. If there is no outgoing edge from \ni\n, then \nedges[i] == -1\n.\n\n\nYou are also given two integers \nnode1\n and \nnode2\n.\n\n\nReturn \nthe \nindex\n of the node that can be reached from both \nnode1\n and \nnode2\n, such that the \nmaximum\n between the distance from \nnode1\n to that node, and from \nnode2\n to that node is \nminimized\n. If there are multiple answers, return the node with the \nsmallest\n index, and if no possible answer exists, return \n-1\n.\n\n\nNote that \nedges\n may contain cycles.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [2,2,3,-1], node1 = 0, node2 = 1\n\nOutput:\n 2\n\nExplanation:\n The distance from node 0 to node 2 is 1, and the distance from node 1 to node 2 is 1.\nThe maximum of those two distances is 1. It can be proven that we cannot get a node with a smaller maximum distance than 1, so we return node 2.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [1,2,-1], node1 = 0, node2 = 2\n\nOutput:\n 2\n\nExplanation:\n The distance from node 0 to node 2 is 2, and the distance from node 2 to itself is 0.\nThe maximum of those two distances is 2. It can be proven that we cannot get a node with a smaller maximum distance than 2, so we return node 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == edges.length\n\n\n2 <= n <= 10\n5\n\n\n-1 <= edges[i] < n\n\n\nedges[i] != i\n\n\n0 <= node1, node2 < n",
        "temas": [
            "Depth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 2358,
        "slug": "maximum-number-of-groups-entering-a-competition",
        "url": "https://leetcode.com/problems/maximum-number-of-groups-entering-a-competition/",
        "titulo": "Maximum Number of Groups Entering a Competition",
        "enunciado": "You are given a positive integer array \ngrades\n which represents the grades of students in a university. You would like to enter \nall\n these students into a competition in \nordered\n non-empty groups, such that the ordering meets the following conditions:\n\n\n\n\nThe sum of the grades of students in the \ni\nth\n group is \nless than\n the sum of the grades of students in the \n(i + 1)\nth\n group, for all groups (except the last).\n\n\nThe total number of students in the \ni\nth\n group is \nless than\n the total number of students in the \n(i + 1)\nth\n group, for all groups (except the last).\n\n\n\n\nReturn \nthe \nmaximum\n number of groups that can be formed\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n grades = [10,6,12,7,3,5]\n\nOutput:\n 3\n\nExplanation:\n The following is a possible way to form 3 groups of students:\n- 1\nst\n group has the students with grades = [12]. Sum of grades: 12. Student count: 1\n- 2\nnd\n group has the students with grades = [6,7]. Sum of grades: 6 + 7 = 13. Student count: 2\n- 3\nrd\n group has the students with grades = [10,3,5]. Sum of grades: 10 + 3 + 5 = 18. Student count: 3\nIt can be shown that it is not possible to form more than 3 groups.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grades = [8,8]\n\nOutput:\n 1\n\nExplanation:\n We can only form 1 group, since forming 2 groups would lead to an equal number of students in both groups.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grades.length <= 10\n5\n\n\n1 <= grades[i] <= 10\n5",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2349,
        "slug": "design-a-number-container-system",
        "url": "https://leetcode.com/problems/design-a-number-container-system/",
        "titulo": "Design a Number Container System",
        "enunciado": "Design a number container system that can do the following:\n\n\n\n\nInsert \nor \nReplace\n a number at the given index in the system.\n\n\nReturn \nthe smallest index for the given number in the system.\n\n\n\n\nImplement the \nNumberContainers\n class:\n\n\n\n\nNumberContainers()\n Initializes the number container system.\n\n\nvoid change(int index, int number)\n Fills the container at \nindex\n with the \nnumber\n. If there is already a number at that \nindex\n, replace it.\n\n\nint find(int number)\n Returns the smallest index for the given \nnumber\n, or \n-1\n if there is no index that is filled by \nnumber\n in the system.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"NumberContainers\", \"find\", \"change\", \"change\", \"change\", \"change\", \"find\", \"change\", \"find\"]\n[[], [10], [2, 10], [1, 10], [3, 10], [5, 10], [10], [1, 20], [10]]\n\nOutput\n\n[null, -1, null, null, null, null, 1, null, 2]\n\n\nExplanation\n\nNumberContainers nc = new NumberContainers();\nnc.find(10); // There is no index that is filled with number 10. Therefore, we return -1.\nnc.change(2, 10); // Your container at index 2 will be filled with number 10.\nnc.change(1, 10); // Your container at index 1 will be filled with number 10.\nnc.change(3, 10); // Your container at index 3 will be filled with number 10.\nnc.change(5, 10); // Your container at index 5 will be filled with number 10.\nnc.find(10); // Number 10 is at the indices 1, 2, 3, and 5. Since the smallest index that is filled with 10 is 1, we return 1.\nnc.change(1, 20); // Your container at index 1 will be filled with number 20. Note that index 1 was filled with 10 and then replaced with 20. \nnc.find(10); // Number 10 is at the indices 2, 3, and 5. The smallest index that is filled with 10 is 2. Therefore, we return 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= index, number <= 10\n9\n\n\nAt most \n10\n5\n calls will be made \nin total\n to \nchange\n and \nfind\n.",
        "temas": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2348,
        "slug": "number-of-zero-filled-subarrays",
        "url": "https://leetcode.com/problems/number-of-zero-filled-subarrays/",
        "titulo": "Number of Zero-Filled Subarrays",
        "enunciado": "Given an integer array \nnums\n, return \nthe number of \nsubarrays\n filled with \n0\n.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,0,0,2,0,0,4]\n\nOutput:\n 6\n\nExplanation:\n \nThere are 4 occurrences of [0] as a subarray.\nThere are 2 occurrences of [0,0] as a subarray.\nThere is no occurrence of a subarray with a size more than 2 filled with 0. Therefore, we return 6.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,0,0,2,0,0]\n\nOutput:\n 9\n\nExplanation:\n\nThere are 5 occurrences of [0] as a subarray.\nThere are 3 occurrences of [0,0] as a subarray.\nThere is 1 occurrence of [0,0,0] as a subarray.\nThere is no occurrence of a subarray with a size more than 3 filled with 0. Therefore, we return 9.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,10,2019]\n\nOutput:\n 0\n\nExplanation:\n There is no subarray filled with 0. Therefore, we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2353,
        "slug": "design-a-food-rating-system",
        "url": "https://leetcode.com/problems/design-a-food-rating-system/",
        "titulo": "Design a Food Rating System",
        "enunciado": "Design a food rating system that can do the following:\n\n\n\n\nModify\n the rating of a food item listed in the system.\n\n\nReturn the highest-rated food item for a type of cuisine in the system.\n\n\n\n\nImplement the \nFoodRatings\n class:\n\n\n\n\nFoodRatings(String[] foods, String[] cuisines, int[] ratings)\n Initializes the system. The food items are described by \nfoods\n, \ncuisines\n and \nratings\n, all of which have a length of \nn\n.\n\n\t\n\n\nfoods[i]\n is the name of the \ni\nth\n food,\n\n\ncuisines[i]\n is the type of cuisine of the \ni\nth\n food, and\n\n\nratings[i]\n is the initial rating of the \ni\nth\n food.\n\n\n\n\n\n\nvoid changeRating(String food, int newRating)\n Changes the rating of the food item with the name \nfood\n.\n\n\nString highestRated(String cuisine)\n Returns the name of the food item that has the highest rating for the given type of \ncuisine\n. If there is a tie, return the item with the \nlexicographically smaller\n name.\n\n\n\n\nNote that a string \nx\n is lexicographically smaller than string \ny\n if \nx\n comes before \ny\n in dictionary order, that is, either \nx\n is a prefix of \ny\n, or if \ni\n is the first position such that \nx[i] != y[i]\n, then \nx[i]\n comes before \ny[i]\n in alphabetic order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"FoodRatings\", \"highestRated\", \"highestRated\", \"changeRating\", \"highestRated\", \"changeRating\", \"highestRated\"]\n[[[\"kimchi\", \"miso\", \"sushi\", \"moussaka\", \"ramen\", \"bulgogi\"], [\"korean\", \"japanese\", \"japanese\", \"greek\", \"japanese\", \"korean\"], [9, 12, 8, 15, 14, 7]], [\"korean\"], [\"japanese\"], [\"sushi\", 16], [\"japanese\"], [\"ramen\", 16], [\"japanese\"]]\n\nOutput\n\n[null, \"kimchi\", \"ramen\", null, \"sushi\", null, \"ramen\"]\n\n\nExplanation\n\nFoodRatings foodRatings = new FoodRatings([\"kimchi\", \"miso\", \"sushi\", \"moussaka\", \"ramen\", \"bulgogi\"], [\"korean\", \"japanese\", \"japanese\", \"greek\", \"japanese\", \"korean\"], [9, 12, 8, 15, 14, 7]);\nfoodRatings.highestRated(\"korean\"); // return \"kimchi\"\n                                    // \"kimchi\" is the highest rated korean food with a rating of 9.\nfoodRatings.highestRated(\"japanese\"); // return \"ramen\"\n                                      // \"ramen\" is the highest rated japanese food with a rating of 14.\nfoodRatings.changeRating(\"sushi\", 16); // \"sushi\" now has a rating of 16.\nfoodRatings.highestRated(\"japanese\"); // return \"sushi\"\n                                      // \"sushi\" is the highest rated japanese food with a rating of 16.\nfoodRatings.changeRating(\"ramen\", 16); // \"ramen\" now has a rating of 16.\nfoodRatings.highestRated(\"japanese\"); // return \"ramen\"\n                                      // Both \"sushi\" and \"ramen\" have a rating of 16.\n                                      // However, \"ramen\" is lexicographically smaller than \"sushi\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2 * 10\n4\n\n\nn == foods.length == cuisines.length == ratings.length\n\n\n1 <= foods[i].length, cuisines[i].length <= 10\n\n\nfoods[i]\n, \ncuisines[i]\n consist of lowercase English letters.\n\n\n1 <= ratings[i] <= 10\n8\n\n\nAll the strings in \nfoods\n are \ndistinct\n.\n\n\nfood\n will be the name of a food item in the system across all calls to \nchangeRating\n.\n\n\ncuisine\n will be a type of cuisine of \nat least one\n food item in the system across all calls to \nhighestRated\n.\n\n\nAt most \n2 * 10\n4\n calls \nin total\n will be made to \nchangeRating\n and \nhighestRated\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2352,
        "slug": "equal-row-and-column-pairs",
        "url": "https://leetcode.com/problems/equal-row-and-column-pairs/",
        "titulo": "Equal Row and Column Pairs",
        "enunciado": "Given a \n0-indexed\n \nn x n\n integer matrix \ngrid\n, \nreturn the number of pairs \n(r\ni\n, c\nj\n)\n such that row \nr\ni\n and column \nc\nj\n are equal\n.\n\n\nA row and column pair is considered equal if they contain the same elements in the same order (i.e., an equal array).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[3,2,1],[1,7,6],[2,7,7]]\n\nOutput:\n 1\n\nExplanation:\n There is 1 equal row and column pair:\n- (Row 2, Column 1): [2,7,7]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[3,1,2,2],[1,4,4,5],[2,4,2,2],[2,4,2,2]]\n\nOutput:\n 3\n\nExplanation:\n There are 3 equal row and column pairs:\n- (Row 0, Column 0): [3,1,2,2]\n- (Row 2, Column 2): [2,4,2,2]\n- (Row 3, Column 2): [2,4,2,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length == grid[i].length\n\n\n1 <= n <= 200\n\n\n1 <= grid[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2343,
        "slug": "query-kth-smallest-trimmed-number",
        "url": "https://leetcode.com/problems/query-kth-smallest-trimmed-number/",
        "titulo": "Query Kth Smallest Trimmed Number",
        "enunciado": "You are given a \n0-indexed\n array of strings \nnums\n, where each string is of \nequal length\n and consists of only digits.\n\n\nYou are also given a \n0-indexed\n 2D integer array \nqueries\n where \nqueries[i] = [k\ni\n, trim\ni\n]\n. For each \nqueries[i]\n, you need to:\n\n\n\n\nTrim\n each number in \nnums\n to its \nrightmost\n \ntrim\ni\n digits.\n\n\nDetermine the \nindex\n of the \nk\ni\nth\n smallest trimmed number in \nnums\n. If two trimmed numbers are equal, the number with the \nlower\n index is considered to be smaller.\n\n\nReset each number in \nnums\n to its original length.\n\n\n\n\nReturn \nan array \nanswer\n of the same length as \nqueries\n,\n where \nanswer[i]\n is the answer to the \ni\nth\n query.\n\n\nNote\n:\n\n\n\n\nTo trim to the rightmost \nx\n digits means to keep removing the leftmost digit, until only \nx\n digits remain.\n\n\nStrings in \nnums\n may contain leading zeros.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [\"102\",\"473\",\"251\",\"814\"], queries = [[1,1],[2,3],[4,2],[1,2]]\n\nOutput:\n [2,2,1,0]\n\nExplanation:\n\n1. After trimming to the last digit, nums = [\"2\",\"3\",\"1\",\"4\"]. The smallest number is 1 at index 2.\n2. Trimmed to the last 3 digits, nums is unchanged. The 2\nnd\n smallest number is 251 at index 2.\n3. Trimmed to the last 2 digits, nums = [\"02\",\"73\",\"51\",\"14\"]. The 4\nth\n smallest number is 73.\n4. Trimmed to the last 2 digits, the smallest number is 2 at index 0.\n   Note that the trimmed number \"02\" is evaluated as 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [\"24\",\"37\",\"96\",\"04\"], queries = [[2,1],[2,2]]\n\nOutput:\n [3,0]\n\nExplanation:\n\n1. Trimmed to the last digit, nums = [\"4\",\"7\",\"6\",\"4\"]. The 2\nnd\n smallest number is 4 at index 3.\n   There are two occurrences of 4, but the one at index 0 is considered smaller than the one at index 3.\n2. Trimmed to the last 2 digits, nums is unchanged. The 2\nnd\n smallest number is 24.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n1 <= nums[i].length <= 100\n\n\nnums[i]\n consists of only digits.\n\n\nAll \nnums[i].length\n are \nequal\n.\n\n\n1 <= queries.length <= 100\n\n\nqueries[i].length == 2\n\n\n1 <= k\ni\n <= nums.length\n\n\n1 <= trim\ni\n <= nums[i].length\n\n\n\n\n \n\n\nFollow up:\n Could you use the \nRadix Sort Algorithm\n to solve this problem? What will be the complexity of that solution?",
        "temas": [
            "Array",
            "String",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Radix Sort",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2333,
        "slug": "minimum-sum-of-squared-difference",
        "url": "https://leetcode.com/problems/minimum-sum-of-squared-difference/",
        "titulo": "Minimum Sum of Squared Difference",
        "enunciado": "You are given two positive \n0-indexed\n integer arrays \nnums1\n and \nnums2\n, both of length \nn\n.\n\n\nThe \nsum of squared difference\n of arrays \nnums1\n and \nnums2\n is defined as the \nsum\n of \n(nums1[i] - nums2[i])\n2\n for each \n0 <= i < n\n.\n\n\nYou are also given two positive integers \nk1\n and \nk2\n. You can modify any of the elements of \nnums1\n by \n+1\n or \n-1\n at most \nk1\n times. Similarly, you can modify any of the elements of \nnums2\n by \n+1\n or \n-1\n at most \nk2\n times.\n\n\nReturn \nthe minimum \nsum of squared difference\n after modifying array \nnums1\n at most \nk1\n times and modifying array \nnums2\n at most \nk2\n times\n.\n\n\nNote\n: You are allowed to modify the array elements to become \nnegative\n integers.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,2,3,4], nums2 = [2,10,20,19], k1 = 0, k2 = 0\n\nOutput:\n 579\n\nExplanation:\n The elements in nums1 and nums2 cannot be modified because k1 = 0 and k2 = 0. \nThe sum of square difference will be: (1 - 2)\n2 \n+ (2 - 10)\n2 \n+ (3 - 20)\n2 \n+ (4 - 19)\n2\n = 579.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,4,10,12], nums2 = [5,8,6,9], k1 = 1, k2 = 1\n\nOutput:\n 43\n\nExplanation:\n One way to obtain the minimum sum of square difference is: \n- Increase nums1[0] once.\n- Increase nums2[2] once.\nThe minimum of the sum of square difference will be: \n(2 - 5)\n2 \n+ (4 - 8)\n2 \n+ (10 - 7)\n2 \n+ (12 - 9)\n2\n = 43.\nNote that, there are other ways to obtain the minimum of the sum of square difference, but there is no way to obtain a sum smaller than 43.\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length == nums2.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= nums1[i], nums2[i] <= 10\n5\n\n\n0 <= k1, k2 <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2332,
        "slug": "the-latest-time-to-catch-a-bus",
        "url": "https://leetcode.com/problems/the-latest-time-to-catch-a-bus/",
        "titulo": "The Latest Time to Catch a Bus",
        "enunciado": "You are given a \n0-indexed\n integer array \nbuses\n of length \nn\n, where \nbuses[i]\n represents the departure time of the \ni\nth\n bus. You are also given a \n0-indexed\n integer array \npassengers\n of length \nm\n, where \npassengers[j]\n represents the arrival time of the \nj\nth\n passenger. All bus departure times are unique. All passenger arrival times are unique.\n\n\nYou are given an integer \ncapacity\n, which represents the \nmaximum\n number of passengers that can get on each bus.\n\n\nWhen a passenger arrives, they will wait in line for the next available bus. You can get on a bus that departs at \nx\n minutes if you arrive at \ny\n minutes where \ny <= x\n, and the bus is not full. Passengers with the \nearliest\n arrival times get on the bus first.\n\n\nMore formally when a bus arrives, either:\n\n\n\n\nIf \ncapacity\n or fewer passengers are waiting for a bus, they will \nall\n get on the bus, or\n\n\nThe \ncapacity\n passengers with the \nearliest\n arrival times will get on the bus.\n\n\n\n\nReturn \nthe latest time you may arrive at the bus station to catch a bus\n. You \ncannot\n arrive at the same time as another passenger.\n\n\nNote: \nThe arrays \nbuses\n and \npassengers\n are not necessarily sorted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n buses = [10,20], passengers = [2,17,18,19], capacity = 2\n\nOutput:\n 16\n\nExplanation:\n Suppose you arrive at time 16.\nAt time 10, the first bus departs with the 0\nth\n passenger. \nAt time 20, the second bus departs with you and the 1\nst\n passenger.\nNote that you may not arrive at the same time as another passenger, which is why you must arrive before the 1\nst\n passenger to catch the bus.\n\n\nExample 2:\n\n\n\n\nInput:\n buses = [20,30,10], passengers = [19,13,26,4,25,11,21], capacity = 2\n\nOutput:\n 20\n\nExplanation:\n Suppose you arrive at time 20.\nAt time 10, the first bus departs with the 3\nrd\n passenger. \nAt time 20, the second bus departs with the 5\nth\n and 1\nst\n passengers.\nAt time 30, the third bus departs with the 0\nth\n passenger and you.\nNotice if you had arrived any later, then the 6\nth\n passenger would have taken your seat on the third bus.\n\n\n \n\n\nConstraints:\n\n\n\n\nn == buses.length\n\n\nm == passengers.length\n\n\n1 <= n, m, capacity <= 10\n5\n\n\n2 <= buses[i], passengers[i] <= 10\n9\n\n\nEach element in \nbuses\n is \nunique\n.\n\n\nEach element in \npassengers\n is \nunique\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2337,
        "slug": "move-pieces-to-obtain-a-string",
        "url": "https://leetcode.com/problems/move-pieces-to-obtain-a-string/",
        "titulo": "Move Pieces to Obtain a String",
        "enunciado": "You are given two strings \nstart\n and \ntarget\n, both of length \nn\n. Each string consists \nonly\n of the characters \n'L'\n, \n'R'\n, and \n'_'\n where:\n\n\n\n\nThe characters \n'L'\n and \n'R'\n represent pieces, where a piece \n'L'\n can move to the \nleft\n only if there is a \nblank\n space directly to its left, and a piece \n'R'\n can move to the \nright\n only if there is a \nblank\n space directly to its right.\n\n\nThe character \n'_'\n represents a blank space that can be occupied by \nany\n of the \n'L'\n or \n'R'\n pieces.\n\n\n\n\nReturn \ntrue\n \nif it is possible to obtain the string\n \ntarget\n by moving the pieces of the string \nstart\n \nany\n number of times\n. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n start = \"_L__R__R_\", target = \"L______RR\"\n\nOutput:\n true\n\nExplanation:\n We can obtain the string target from start by doing the following moves:\n- Move the first piece one step to the left, start becomes equal to \"\nL\n___R__R_\".\n- Move the last piece one step to the right, start becomes equal to \"L___R___\nR\n\".\n- Move the second piece three steps to the right, start becomes equal to \"L______\nR\nR\".\nSince it is possible to get the string target from start, we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n start = \"R_L_\", target = \"__LR\"\n\nOutput:\n false\n\nExplanation:\n The 'R' piece in the string start can move one step to the right to obtain \"_\nR\nL_\".\nAfter that, no pieces can move anymore, so it is impossible to obtain the string target from start.\n\n\n\nExample 3:\n\n\n\n\nInput:\n start = \"_R\", target = \"R_\"\n\nOutput:\n false\n\nExplanation:\n The piece in the string start can move only to the right, so it is impossible to obtain the string target from start.\n\n\n \n\n\nConstraints:\n\n\n\n\nn == start.length == target.length\n\n\n1 <= n <= 10\n5\n\n\nstart\n and \ntarget\n consist of the characters \n'L'\n, \n'R'\n, and \n'_'\n.",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 2336,
        "slug": "smallest-number-in-infinite-set",
        "url": "https://leetcode.com/problems/smallest-number-in-infinite-set/",
        "titulo": "Smallest Number in Infinite Set",
        "enunciado": "You have a set which contains all positive integers \n[1, 2, 3, 4, 5, ...]\n.\n\n\nImplement the \nSmallestInfiniteSet\n class:\n\n\n\n\nSmallestInfiniteSet()\n Initializes the \nSmallestInfiniteSet\n object to contain \nall\n positive integers.\n\n\nint popSmallest()\n \nRemoves\n and returns the smallest integer contained in the infinite set.\n\n\nvoid addBack(int num)\n \nAdds\n a positive integer \nnum\n back into the infinite set, if it is \nnot\n already in the infinite set.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"SmallestInfiniteSet\", \"addBack\", \"popSmallest\", \"popSmallest\", \"popSmallest\", \"addBack\", \"popSmallest\", \"popSmallest\", \"popSmallest\"]\n[[], [2], [], [], [], [1], [], [], []]\n\nOutput\n\n[null, null, 1, 2, 3, null, 1, 4, 5]\n\n\nExplanation\n\nSmallestInfiniteSet smallestInfiniteSet = new SmallestInfiniteSet();\nsmallestInfiniteSet.addBack(2);    // 2 is already in the set, so no change is made.\nsmallestInfiniteSet.popSmallest(); // return 1, since 1 is the smallest number, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 2, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 3, and remove it from the set.\nsmallestInfiniteSet.addBack(1);    // 1 is added back to the set.\nsmallestInfiniteSet.popSmallest(); // return 1, since 1 was added back to the set and\n                                   // is the smallest number, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 4, and remove it from the set.\nsmallestInfiniteSet.popSmallest(); // return 5, and remove it from the set.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num <= 1000\n\n\nAt most \n1000\n calls will be made \nin total\n to \npopSmallest\n and \naddBack\n.",
        "temas": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2326,
        "slug": "spiral-matrix-iv",
        "url": "https://leetcode.com/problems/spiral-matrix-iv/",
        "titulo": "Spiral Matrix IV",
        "enunciado": "You are given two integers \nm\n and \nn\n, which represent the dimensions of a matrix.\n\n\nYou are also given the \nhead\n of a linked list of integers.\n\n\nGenerate an \nm x n\n matrix that contains the integers in the linked list presented in \nspiral\n order \n(clockwise)\n, starting from the \ntop-left\n of the matrix. If there are remaining empty spaces, fill them with \n-1\n.\n\n\nReturn \nthe generated matrix\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n m = 3, n = 5, head = [3,0,2,6,8,1,7,9,4,2,5,5,0]\n\nOutput:\n [[3,0,2,6,8],[5,0,-1,-1,1],[5,2,4,9,7]]\n\nExplanation:\n The diagram above shows how the values are printed in the matrix.\nNote that the remaining spaces in the matrix are filled with -1.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n m = 1, n = 4, head = [0,1,2]\n\nOutput:\n [[0,1,2,-1]]\n\nExplanation:\n The diagram above shows how the values are printed from left to right in the matrix.\nThe last space in the matrix is set to -1.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\nThe number of nodes in the list is in the range \n[1, m * n]\n.\n\n\n0 <= Node.val <= 1000",
        "temas": [
            "Array",
            "Linked List",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2327,
        "slug": "number-of-people-aware-of-a-secret",
        "url": "https://leetcode.com/problems/number-of-people-aware-of-a-secret/",
        "titulo": "Number of People Aware of a Secret",
        "enunciado": "On day \n1\n, one person discovers a secret.\n\n\nYou are given an integer \ndelay\n, which means that each person will \nshare\n the secret with a new person \nevery day\n, starting from \ndelay\n days after discovering the secret. You are also given an integer \nforget\n, which means that each person will \nforget\n the secret \nforget\n days after discovering it. A person \ncannot\n share the secret on the same day they forgot it, or on any day afterwards.\n\n\nGiven an integer \nn\n, return\n the number of people who know the secret at the end of day \nn\n. Since the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 6, delay = 2, forget = 4\n\nOutput:\n 5\n\nExplanation:\n\nDay 1: Suppose the first person is named A. (1 person)\nDay 2: A is the only person who knows the secret. (1 person)\nDay 3: A shares the secret with a new person, B. (2 people)\nDay 4: A shares the secret with a new person, C. (3 people)\nDay 5: A forgets the secret, and B shares the secret with a new person, D. (3 people)\nDay 6: B shares the secret with E, and C shares the secret with F. (5 people)\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4, delay = 1, forget = 3\n\nOutput:\n 6\n\nExplanation:\n\nDay 1: The first person is named A. (1 person)\nDay 2: A shares the secret with B. (2 people)\nDay 3: A and B share the secret with 2 new people, C and D. (4 people)\nDay 4: A forgets the secret. B, C, and D share the secret with 3 new people. (6 people)\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 1000\n\n\n1 <= delay < forget <= n",
        "temas": [
            "Dynamic Programming",
            "Queue",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 2316,
        "slug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
        "url": "https://leetcode.com/problems/count-unreachable-pairs-of-nodes-in-an-undirected-graph/",
        "titulo": "Count Unreachable Pairs of Nodes in an Undirected Graph",
        "enunciado": "You are given an integer \nn\n. There is an \nundirected\n graph with \nn\n nodes, numbered from \n0\n to \nn - 1\n. You are given a 2D integer array \nedges\n where \nedges[i] = [a\ni\n, b\ni\n]\n denotes that there exists an \nundirected\n edge connecting nodes \na\ni\n and \nb\ni\n.\n\n\nReturn \nthe \nnumber of pairs\n of different nodes that are \nunreachable\n from each other\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, edges = [[0,1],[0,2],[1,2]]\n\nOutput:\n 0\n\nExplanation:\n There are no pairs of nodes that are unreachable from each other. Therefore, we return 0.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[0,2],[0,5],[2,4],[1,6],[5,4]]\n\nOutput:\n 14\n\nExplanation:\n There are 14 pairs of nodes that are unreachable from each other:\n[[0,1],[0,3],[0,6],[1,2],[1,3],[1,4],[1,5],[2,3],[2,6],[3,4],[3,5],[3,6],[4,6],[5,6]].\nTherefore, we return 14.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n0 <= edges.length <= 2 * 10\n5\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nThere are no repeated edges.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 2317,
        "slug": "maximum-xor-after-operations",
        "url": "https://leetcode.com/problems/maximum-xor-after-operations/",
        "titulo": "Maximum XOR After Operations ",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. In one operation, select \nany\n non-negative integer \nx\n and an index \ni\n, then \nupdate\n \nnums[i]\n to be equal to \nnums[i] AND (nums[i] XOR x)\n.\n\n\nNote that \nAND\n is the bitwise AND operation and \nXOR\n is the bitwise XOR operation.\n\n\nReturn \nthe \nmaximum\n possible bitwise XOR of all elements of \nnums\n after applying the operation \nany number\n of times\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,2,4,6]\n\nOutput:\n 7\n\nExplanation:\n Apply the operation with x = 4 and i = 3, num[3] = 6 AND (6 XOR 4) = 6 AND 2 = 2.\nNow, nums = [3, 2, 4, 2] and the bitwise XOR of all the elements = 3 XOR 2 XOR 4 XOR 2 = 7.\nIt can be shown that 7 is the maximum possible bitwise XOR.\nNote that other operations may be used to achieve a bitwise XOR of 7.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,9,2]\n\nOutput:\n 11\n\nExplanation:\n Apply the operation zero times.\nThe bitwise XOR of all the elements = 1 XOR 2 XOR 3 XOR 9 XOR 2 = 11.\nIt can be shown that 11 is the maximum possible bitwise XOR.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n8",
        "temas": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2320,
        "slug": "count-number-of-ways-to-place-houses",
        "url": "https://leetcode.com/problems/count-number-of-ways-to-place-houses/",
        "titulo": "Count Number of Ways to Place Houses",
        "enunciado": "There is a street with \nn * 2\n \nplots\n, where there are \nn\n plots on each side of the street. The plots on each side are numbered from \n1\n to \nn\n. On each plot, a house can be placed.\n\n\nReturn \nthe number of ways houses can be placed such that no two houses are adjacent to each other on the same side of the street\n. Since the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nNote that if a house is placed on the \ni\nth\n plot on one side of the street, a house can also be placed on the \ni\nth\n plot on the other side of the street.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 4\n\nExplanation:\n \nPossible arrangements:\n1. All plots are empty.\n2. A house is placed on one side of the street.\n3. A house is placed on the other side of the street.\n4. Two houses are placed, one on each side of the street.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 9\n\nExplanation:\n The 9 possible arrangements are shown in the diagram above.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 2311,
        "slug": "longest-binary-subsequence-less-than-or-equal-to-k",
        "url": "https://leetcode.com/problems/longest-binary-subsequence-less-than-or-equal-to-k/",
        "titulo": "Longest Binary Subsequence Less Than or Equal to K",
        "enunciado": "You are given a binary string \ns\n and a positive integer \nk\n.\n\n\nReturn \nthe length of the \nlongest\n subsequence of \ns\n that makes up a \nbinary\n number less than or equal to\n \nk\n.\n\n\nNote:\n\n\n\n\nThe subsequence can contain \nleading zeroes\n.\n\n\nThe empty string is considered to be equal to \n0\n.\n\n\nA \nsubsequence\n is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"1001010\", k = 5\n\nOutput:\n 5\n\nExplanation:\n The longest subsequence of s that makes up a binary number less than or equal to 5 is \"00010\", as this number is equal to 2 in decimal.\nNote that \"00100\" and \"00101\" are also possible, which are equal to 4 and 5 in decimal, respectively.\nThe length of this subsequence is 5, so 5 is returned.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"00101001\", k = 1\n\nOutput:\n 6\n\nExplanation:\n \"000001\" is the longest subsequence of s that makes up a binary number less than or equal to 1, as this number is equal to 1 in decimal.\nThe length of this subsequence is 6, so 6 is returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.\n\n\n1 <= k <= 10\n9",
        "temas": [
            "String",
            "Dynamic Programming",
            "Greedy",
            "Memoization"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2300,
        "slug": "successful-pairs-of-spells-and-potions",
        "url": "https://leetcode.com/problems/successful-pairs-of-spells-and-potions/",
        "titulo": "Successful Pairs of Spells and Potions",
        "enunciado": "You are given two positive integer arrays \nspells\n and \npotions\n, of length \nn\n and \nm\n respectively, where \nspells[i]\n represents the strength of the \ni\nth\n spell and \npotions[j]\n represents the strength of the \nj\nth\n potion.\n\n\nYou are also given an integer \nsuccess\n. A spell and potion pair is considered \nsuccessful\n if the \nproduct\n of their strengths is \nat least\n \nsuccess\n.\n\n\nReturn \nan integer array \npairs\n of length \nn\n where \npairs[i]\n is the number of \npotions\n that will form a successful pair with the \ni\nth\n spell.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n spells = [5,1,3], potions = [1,2,3,4,5], success = 7\n\nOutput:\n [4,0,3]\n\nExplanation:\n\n- 0\nth\n spell: 5 * [1,2,3,4,5] = [5,\n10\n,\n15\n,\n20\n,\n25\n]. 4 pairs are successful.\n- 1\nst\n spell: 1 * [1,2,3,4,5] = [1,2,3,4,5]. 0 pairs are successful.\n- 2\nnd\n spell: 3 * [1,2,3,4,5] = [3,6,\n9\n,\n12\n,\n15\n]. 3 pairs are successful.\nThus, [4,0,3] is returned.\n\n\n\nExample 2:\n\n\n\n\nInput:\n spells = [3,1,2], potions = [8,5,8], success = 16\n\nOutput:\n [2,0,2]\n\nExplanation:\n\n- 0\nth\n spell: 3 * [8,5,8] = [\n24\n,15,\n24\n]. 2 pairs are successful.\n- 1\nst\n spell: 1 * [8,5,8] = [8,5,8]. 0 pairs are successful. \n- 2\nnd\n spell: 2 * [8,5,8] = [\n16\n,10,\n16\n]. 2 pairs are successful. \nThus, [2,0,2] is returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == spells.length\n\n\nm == potions.length\n\n\n1 <= n, m <= 10\n5\n\n\n1 <= spells[i], potions[i] <= 10\n5\n\n\n1 <= success <= 10\n10",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2295,
        "slug": "replace-elements-in-an-array",
        "url": "https://leetcode.com/problems/replace-elements-in-an-array/",
        "titulo": "Replace Elements in an Array",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n that consists of \nn\n \ndistinct\n positive integers. Apply \nm\n operations to this array, where in the \ni\nth\n operation you replace the number \noperations[i][0]\n with \noperations[i][1]\n.\n\n\nIt is guaranteed that in the \ni\nth\n operation:\n\n\n\n\noperations[i][0]\n \nexists\n in \nnums\n.\n\n\noperations[i][1]\n does \nnot\n exist in \nnums\n.\n\n\n\n\nReturn \nthe array obtained after applying all the operations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,4,6], operations = [[1,3],[4,7],[6,1]]\n\nOutput:\n [3,2,7,1]\n\nExplanation:\n We perform the following operations on nums:\n- Replace the number 1 with 3. nums becomes [\n3\n,2,4,6].\n- Replace the number 4 with 7. nums becomes [3,2,\n7\n,6].\n- Replace the number 6 with 1. nums becomes [3,2,7,\n1\n].\nWe return the final array [3,2,7,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2], operations = [[1,3],[2,1],[3,2]]\n\nOutput:\n [2,1]\n\nExplanation:\n We perform the following operations to nums:\n- Replace the number 1 with 3. nums becomes [\n3\n,2].\n- Replace the number 2 with 1. nums becomes [3,\n1\n].\n- Replace the number 3 with 2. nums becomes [\n2\n,1].\nWe return the array [2,1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\nm == operations.length\n\n\n1 <= n, m <= 10\n5\n\n\nAll the values of \nnums\n are \ndistinct\n.\n\n\noperations[i].length == 2\n\n\n1 <= nums[i], operations[i][0], operations[i][1] <= 10\n6\n\n\noperations[i][0]\n will exist in \nnums\n when applying the \ni\nth\n operation.\n\n\noperations[i][1]\n will not exist in \nnums\n when applying the \ni\nth\n operation.",
        "temas": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2294,
        "slug": "partition-array-such-that-maximum-difference-is-k",
        "url": "https://leetcode.com/problems/partition-array-such-that-maximum-difference-is-k/",
        "titulo": "Partition Array Such That Maximum Difference Is K",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n. You may partition \nnums\n into one or more \nsubsequences\n such that each element in \nnums\n appears in \nexactly\n one of the subsequences.\n\n\nReturn \nthe \nminimum \nnumber of subsequences needed such that the difference between the maximum and minimum values in each subsequence is \nat most\n \nk\n.\n\n\nA \nsubsequence\n is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,6,1,2,5], k = 2\n\nOutput:\n 2\n\nExplanation:\n\nWe can partition nums into the two subsequences [3,1,2] and [6,5].\nThe difference between the maximum and minimum value in the first subsequence is 3 - 1 = 2.\nThe difference between the maximum and minimum value in the second subsequence is 6 - 5 = 1.\nSince two subsequences were created, we return 2. It can be shown that 2 is the minimum number of subsequences needed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3], k = 1\n\nOutput:\n 2\n\nExplanation:\n\nWe can partition nums into the two subsequences [1,2] and [3].\nThe difference between the maximum and minimum value in the first subsequence is 2 - 1 = 1.\nThe difference between the maximum and minimum value in the second subsequence is 3 - 3 = 0.\nSince two subsequences were created, we return 2. Note that another optimal solution is to partition nums into the two subsequences [1] and [2,3].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,2,4,5], k = 0\n\nOutput:\n 3\n\nExplanation:\n\nWe can partition nums into the three subsequences [2,2], [4], and [5].\nThe difference between the maximum and minimum value in the first subsequences is 2 - 2 = 0.\nThe difference between the maximum and minimum value in the second subsequences is 4 - 4 = 0.\nThe difference between the maximum and minimum value in the third subsequences is 5 - 5 = 0.\nSince three subsequences were created, we return 3. It can be shown that 3 is the minimum number of subsequences needed.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5\n\n\n0 <= k <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2285,
        "slug": "maximum-total-importance-of-roads",
        "url": "https://leetcode.com/problems/maximum-total-importance-of-roads/",
        "titulo": "Maximum Total Importance of Roads",
        "enunciado": "You are given an integer \nn\n denoting the number of cities in a country. The cities are numbered from \n0\n to \nn - 1\n.\n\n\nYou are also given a 2D integer array \nroads\n where \nroads[i] = [a\ni\n, b\ni\n]\n denotes that there exists a \nbidirectional\n road connecting cities \na\ni\n and \nb\ni\n.\n\n\nYou need to assign each city with an integer value from \n1\n to \nn\n, where each value can only be used \nonce\n. The \nimportance\n of a road is then defined as the \nsum\n of the values of the two cities it connects.\n\n\nReturn \nthe \nmaximum total importance\n of all roads possible after assigning the values optimally.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 5, roads = [[0,1],[1,2],[2,3],[0,2],[1,3],[2,4]]\n\nOutput:\n 43\n\nExplanation:\n The figure above shows the country and the assigned values of [2,4,5,3,1].\n- The road (0,1) has an importance of 2 + 4 = 6.\n- The road (1,2) has an importance of 4 + 5 = 9.\n- The road (2,3) has an importance of 5 + 3 = 8.\n- The road (0,2) has an importance of 2 + 5 = 7.\n- The road (1,3) has an importance of 4 + 3 = 7.\n- The road (2,4) has an importance of 5 + 1 = 6.\nThe total importance of all roads is 6 + 9 + 8 + 7 + 7 + 6 = 43.\nIt can be shown that we cannot obtain a greater total importance than 43.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, roads = [[0,3],[2,4],[1,3]]\n\nOutput:\n 20\n\nExplanation:\n The figure above shows the country and the assigned values of [4,3,2,5,1].\n- The road (0,3) has an importance of 4 + 5 = 9.\n- The road (2,4) has an importance of 2 + 1 = 3.\n- The road (1,3) has an importance of 3 + 5 = 8.\nThe total importance of all roads is 9 + 3 + 8 = 20.\nIt can be shown that we cannot obtain a greater total importance than 20.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 5 * 10\n4\n\n\n1 <= roads.length <= 5 * 10\n4\n\n\nroads[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= n - 1\n\n\na\ni\n != b\ni\n\n\nThere are no duplicate roads.",
        "temas": [
            "Greedy",
            "Graph",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Greedy",
        "has_image": true
    },
    {
        "id": 2284,
        "slug": "sender-with-largest-word-count",
        "url": "https://leetcode.com/problems/sender-with-largest-word-count/",
        "titulo": "Sender With Largest Word Count",
        "enunciado": "You have a chat log of \nn\n messages. You are given two string arrays \nmessages\n and \nsenders\n where \nmessages[i]\n is a \nmessage\n sent by \nsenders[i]\n.\n\n\nA \nmessage\n is list of \nwords\n that are separated by a single space with no leading or trailing spaces. The \nword count\n of a sender is the total number of \nwords\n sent by the sender. Note that a sender may send more than one message.\n\n\nReturn \nthe sender with the \nlargest\n word count\n. If there is more than one sender with the largest word count, return \nthe one with the \nlexicographically largest\n name\n.\n\n\nNote:\n\n\n\n\nUppercase letters come before lowercase letters in lexicographical order.\n\n\n\"Alice\"\n and \n\"alice\"\n are distinct.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n messages = [\"Hello userTwooo\",\"Hi userThree\",\"Wonderful day Alice\",\"Nice day userThree\"], senders = [\"Alice\",\"userTwo\",\"userThree\",\"Alice\"]\n\nOutput:\n \"Alice\"\n\nExplanation:\n Alice sends a total of 2 + 3 = 5 words.\nuserTwo sends a total of 2 words.\nuserThree sends a total of 3 words.\nSince Alice has the largest word count, we return \"Alice\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n messages = [\"How is leetcode for everyone\",\"Leetcode is useful for practice\"], senders = [\"Bob\",\"Charlie\"]\n\nOutput:\n \"Charlie\"\n\nExplanation:\n Bob sends a total of 5 words.\nCharlie sends a total of 5 words.\nSince there is a tie for the largest word count, we return the sender with the lexicographically larger name, Charlie.\n\n\n \n\n\nConstraints:\n\n\n\n\nn == messages.length == senders.length\n\n\n1 <= n <= 10\n4\n\n\n1 <= messages[i].length <= 100\n\n\n1 <= senders[i].length <= 10\n\n\nmessages[i]\n consists of uppercase and lowercase English letters and \n' '\n.\n\n\nAll the words in \nmessages[i]\n are separated by \na single space\n.\n\n\nmessages[i]\n does not have leading or trailing spaces.\n\n\nsenders[i]\n consists of uppercase and lowercase English letters only.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2289,
        "slug": "steps-to-make-array-non-decreasing",
        "url": "https://leetcode.com/problems/steps-to-make-array-non-decreasing/",
        "titulo": "Steps to Make Array Non-decreasing",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. In one step, \nremove\n all elements \nnums[i]\n where \nnums[i - 1] > nums[i]\n for all \n0 < i < nums.length\n.\n\n\nReturn \nthe number of steps performed until \nnums\n becomes a \nnon-decreasing\n array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,3,4,4,7,3,6,11,8,5,11]\n\nOutput:\n 3\n\nExplanation:\n The following are the steps performed:\n- Step 1: [5,\n3\n,4,4,7,\n3\n,6,11,\n8\n,\n5\n,11] becomes [5,4,4,7,6,11,11]\n- Step 2: [5,\n4\n,4,7,\n6\n,11,11] becomes [5,4,7,11,11]\n- Step 3: [5,\n4\n,7,11,11] becomes [5,7,11,11]\n[5,7,11,11] is a non-decreasing array. Therefore, we return 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,5,7,7,13]\n\nOutput:\n 0\n\nExplanation:\n nums is already a non-decreasing array. Therefore, we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Linked List",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2288,
        "slug": "apply-discount-to-prices",
        "url": "https://leetcode.com/problems/apply-discount-to-prices/",
        "titulo": "Apply Discount to Prices",
        "enunciado": "A \nsentence\n is a string of single-space separated words where each word can contain digits, lowercase letters, and the dollar sign \n'$'\n. A word represents a \nprice\n if it is a sequence of digits preceded by a dollar sign.\n\n\n\n\nFor example, \n\"$100\"\n, \n\"$23\"\n, and \n\"$6\"\n represent prices while \n\"100\"\n, \n\"$\"\n, and \n\"$1e5\"\n do not.\n\n\n\n\nYou are given a string \nsentence\n representing a sentence and an integer \ndiscount\n. For each word representing a price, apply a discount of \ndiscount%\n on the price and \nupdate\n the word in the sentence. All updated prices should be represented with \nexactly two\n decimal places.\n\n\nReturn \na string representing the modified sentence\n.\n\n\nNote that all prices will contain \nat most\n \n10\n digits.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n sentence = \"there are $1 $2 and 5$ candies in the shop\", discount = 50\n\nOutput:\n \"there are $0.50 $1.00 and 5$ candies in the shop\"\n\nExplanation:\n \nThe words which represent prices are \"$1\" and \"$2\". \n- A 50% discount on \"$1\" yields \"$0.50\", so \"$1\" is replaced by \"$0.50\".\n- A 50% discount on \"$2\" yields \"$1\". Since we need to have exactly 2 decimal places after a price, we replace \"$2\" with \"$1.00\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n sentence = \"1 2 $3 4 $5 $6 7 8$ $9 $10$\", discount = 100\n\nOutput:\n \"1 2 $0.00 4 $0.00 $0.00 7 8$ $0.00 $10$\"\n\nExplanation:\n \nApplying a 100% discount on any price will result in 0.\nThe words representing prices are \"$3\", \"$5\", \"$6\", and \"$9\".\nEach of them is replaced by \"$0.00\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= sentence.length <= 10\n5\n\n\nsentence\n consists of lowercase English letters, digits, \n' '\n, and \n'$'\n.\n\n\nsentence\n does not have leading or trailing spaces.\n\n\nAll words in \nsentence\n are separated by a single space.\n\n\nAll prices will be \npositive\n numbers without leading zeros.\n\n\nAll prices will have \nat most\n \n10\n digits.\n\n\n0 <= discount <= 100",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2280,
        "slug": "minimum-lines-to-represent-a-line-chart",
        "url": "https://leetcode.com/problems/minimum-lines-to-represent-a-line-chart/",
        "titulo": "Minimum Lines to Represent a Line Chart",
        "enunciado": "You are given a 2D integer array \nstockPrices\n where \nstockPrices[i] = [day\ni\n, price\ni\n]\n indicates the price of the stock on day \nday\ni\n is \nprice\ni\n. A \nline chart\n is created from the array by plotting the points on an XY plane with the X-axis representing the day and the Y-axis representing the price and connecting adjacent points. One such example is shown below:\n\n\n\n\nReturn \nthe \nminimum number of lines\n needed to represent the line chart\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n stockPrices = [[1,7],[2,6],[3,5],[4,4],[5,4],[6,3],[7,2],[8,1]]\n\nOutput:\n 3\n\nExplanation:\n\nThe diagram above represents the input, with the X-axis representing the day and Y-axis representing the price.\nThe following 3 lines can be drawn to represent the line chart:\n- Line 1 (in red) from (1,7) to (4,4) passing through (1,7), (2,6), (3,5), and (4,4).\n- Line 2 (in blue) from (4,4) to (5,4).\n- Line 3 (in green) from (5,4) to (8,1) passing through (5,4), (6,3), (7,2), and (8,1).\nIt can be shown that it is not possible to represent the line chart using less than 3 lines.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n stockPrices = [[3,4],[1,2],[7,8],[2,3]]\n\nOutput:\n 1\n\nExplanation:\n\nAs shown in the diagram above, the line chart can be represented with a single line.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= stockPrices.length <= 10\n5\n\n\nstockPrices[i].length == 2\n\n\n1 <= day\ni\n, price\ni\n <= 10\n9\n\n\nAll \nday\ni\n are \ndistinct\n.",
        "temas": [
            "Array",
            "Math",
            "Geometry",
            "Sorting",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2279,
        "slug": "maximum-bags-with-full-capacity-of-rocks",
        "url": "https://leetcode.com/problems/maximum-bags-with-full-capacity-of-rocks/",
        "titulo": "Maximum Bags With Full Capacity of Rocks",
        "enunciado": "You have \nn\n bags numbered from \n0\n to \nn - 1\n. You are given two \n0-indexed\n integer arrays \ncapacity\n and \nrocks\n. The \ni\nth\n bag can hold a maximum of \ncapacity[i]\n rocks and currently contains \nrocks[i]\n rocks. You are also given an integer \nadditionalRocks\n, the number of additional rocks you can place in \nany\n of the bags.\n\n\nReturn\n the \nmaximum\n number of bags that could have full capacity after placing the additional rocks in some bags.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n capacity = [2,3,4,5], rocks = [1,2,4,4], additionalRocks = 2\n\nOutput:\n 3\n\nExplanation:\n\nPlace 1 rock in bag 0 and 1 rock in bag 1.\nThe number of rocks in each bag are now [2,3,4,4].\nBags 0, 1, and 2 have full capacity.\nThere are 3 bags at full capacity, so we return 3.\nIt can be shown that it is not possible to have more than 3 bags at full capacity.\nNote that there may be other ways of placing the rocks that result in an answer of 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n capacity = [10,2,2], rocks = [2,2,0], additionalRocks = 100\n\nOutput:\n 3\n\nExplanation:\n\nPlace 8 rocks in bag 0 and 2 rocks in bag 2.\nThe number of rocks in each bag are now [10,2,2].\nBags 0, 1, and 2 have full capacity.\nThere are 3 bags at full capacity, so we return 3.\nIt can be shown that it is not possible to have more than 3 bags at full capacity.\nNote that we did not use all of the additional rocks.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == capacity.length == rocks.length\n\n\n1 <= n <= 5 * 10\n4\n\n\n1 <= capacity[i] <= 10\n9\n\n\n0 <= rocks[i] <= capacity[i]\n\n\n1 <= additionalRocks <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2245,
        "slug": "maximum-trailing-zeros-in-a-cornered-path",
        "url": "https://leetcode.com/problems/maximum-trailing-zeros-in-a-cornered-path/",
        "titulo": "Maximum Trailing Zeros in a Cornered Path",
        "enunciado": "You are given a 2D integer array \ngrid\n of size \nm x n\n, where each cell contains a positive integer.\n\n\nA \ncornered path\n is defined as a set of adjacent cells with \nat most\n one turn. More specifically, the path should exclusively move either \nhorizontally\n or \nvertically\n up to the turn (if there is one), without returning to a previously visited cell. After the turn, the path will then move exclusively in the \nalternate\n direction: move vertically if it moved horizontally, and vice versa, also without returning to a previously visited cell.\n\n\nThe \nproduct\n of a path is defined as the product of all the values in the path.\n\n\nReturn \nthe \nmaximum\n number of \ntrailing zeros\n in the product of a cornered path found in \ngrid\n.\n\n\nNote:\n\n\n\n\nHorizontal\n movement means moving in either the left or right direction.\n\n\nVertical\n movement means moving in either the up or down direction.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[23,17,15,3,20],[8,1,20,27,11],[9,4,6,2,21],[40,9,1,10,6],[22,7,4,5,3]]\n\nOutput:\n 3\n\nExplanation:\n The grid on the left shows a valid cornered path.\nIt has a product of 15 * 20 * 6 * 1 * 10 = 18000 which has 3 trailing zeros.\nIt can be shown that this is the maximum trailing zeros in the product of a cornered path.\n\nThe grid in the middle is not a cornered path as it has more than one turn.\nThe grid on the right is not a cornered path as it requires a return to a previously visited cell.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[4,3,2],[7,6,1],[8,8,8]]\n\nOutput:\n 0\n\nExplanation:\n The grid is shown in the figure above.\nThere are no cornered paths in the grid that result in a product with a trailing zero.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\n1 <= grid[i][j] <= 1000",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2244,
        "slug": "minimum-rounds-to-complete-all-tasks",
        "url": "https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/",
        "titulo": "Minimum Rounds to Complete All Tasks",
        "enunciado": "You are given a \n0-indexed\n integer array \ntasks\n, where \ntasks[i]\n represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the \nsame difficulty level\n.\n\n\nReturn \nthe \nminimum\n rounds required to complete all the tasks, or \n-1\n if it is not possible to complete all the tasks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tasks = [2,2,3,3,2,4,4,4,4,4]\n\nOutput:\n 4\n\nExplanation:\n To complete all the tasks, a possible plan is:\n- In the first round, you complete 3 tasks of difficulty level 2. \n- In the second round, you complete 2 tasks of difficulty level 3. \n- In the third round, you complete 3 tasks of difficulty level 4. \n- In the fourth round, you complete 2 tasks of difficulty level 4.  \nIt can be shown that all the tasks cannot be completed in fewer than 4 rounds, so the answer is 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n tasks = [2,3,3]\n\nOutput:\n -1\n\nExplanation:\n There is only 1 task of difficulty level 2, but in each round, you can only complete either 2 or 3 tasks of the same difficulty level. Hence, you cannot complete all the tasks, and the answer is -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tasks.length <= 10\n5\n\n\n1 <= tasks[i] <= 10\n9\n\n\n\n\n \n\n\nNote:\n This question is the same as \n2870: Minimum Number of Operations to Make Array Empty.",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2271,
        "slug": "maximum-white-tiles-covered-by-a-carpet",
        "url": "https://leetcode.com/problems/maximum-white-tiles-covered-by-a-carpet/",
        "titulo": "Maximum White Tiles Covered by a Carpet",
        "enunciado": "You are given a 2D integer array \ntiles\n where \ntiles[i] = [l\ni\n, r\ni\n]\n represents that every tile \nj\n in the range \nl\ni\n <= j <= r\ni\n is colored white.\n\n\nYou are also given an integer \ncarpetLen\n, the length of a single carpet that can be placed \nanywhere\n.\n\n\nReturn \nthe \nmaximum\n number of white tiles that can be covered by the carpet\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n tiles = [[1,5],[10,11],[12,18],[20,25],[30,32]], carpetLen = 10\n\nOutput:\n 9\n\nExplanation:\n Place the carpet starting on tile 10. \nIt covers 9 white tiles, so we return 9.\nNote that there may be other places where the carpet covers 9 white tiles.\nIt can be shown that the carpet cannot cover more than 9 white tiles.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n tiles = [[10,11],[1,1]], carpetLen = 2\n\nOutput:\n 2\n\nExplanation:\n Place the carpet starting on tile 10. \nIt covers 2 white tiles, so we return 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tiles.length <= 5 * 10\n4\n\n\ntiles[i].length == 2\n\n\n1 <= l\ni\n <= r\ni\n <= 10\n9\n\n\n1 <= carpetLen <= 10\n9\n\n\nThe \ntiles\n are \nnon-overlapping\n.",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2270,
        "slug": "number-of-ways-to-split-array",
        "url": "https://leetcode.com/problems/number-of-ways-to-split-array/",
        "titulo": "Number of Ways to Split Array",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of length \nn\n.\n\n\nnums\n contains a \nvalid split\n at index \ni\n if the following are true:\n\n\n\n\nThe sum of the first \ni + 1\n elements is \ngreater than or equal to\n the sum of the last \nn - i - 1\n elements.\n\n\nThere is \nat least one\n element to the right of \ni\n. That is, \n0 <= i < n - 1\n.\n\n\n\n\nReturn \nthe number of \nvalid splits\n in\n \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,4,-8,7]\n\nOutput:\n 2\n\nExplanation:\n \nThere are three ways of splitting nums into two non-empty parts:\n- Split nums at index 0. Then, the first part is [10], and its sum is 10. The second part is [4,-8,7], and its sum is 3. Since 10 >= 3, i = 0 is a valid split.\n- Split nums at index 1. Then, the first part is [10,4], and its sum is 14. The second part is [-8,7], and its sum is -1. Since 14 >= -1, i = 1 is a valid split.\n- Split nums at index 2. Then, the first part is [10,4,-8], and its sum is 6. The second part is [7], and its sum is 7. Since 6 < 7, i = 2 is not a valid split.\nThus, the number of valid splits in nums is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,3,1,0]\n\nOutput:\n 2\n\nExplanation:\n \nThere are two valid splits in nums:\n- Split nums at index 1. Then, the first part is [2,3], and its sum is 5. The second part is [1,0], and its sum is 1. Since 5 >= 1, i = 1 is a valid split. \n- Split nums at index 2. Then, the first part is [2,3,1], and its sum is 6. The second part is [0], and its sum is 0. Since 6 >= 0, i = 2 is a valid split.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n-10\n5\n <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2275,
        "slug": "largest-combination-with-bitwise-and-greater-than-zero",
        "url": "https://leetcode.com/problems/largest-combination-with-bitwise-and-greater-than-zero/",
        "titulo": "Largest Combination With Bitwise AND Greater Than Zero",
        "enunciado": "The \nbitwise AND\n of an array \nnums\n is the bitwise AND of all integers in \nnums\n.\n\n\n\n\nFor example, for \nnums = [1, 5, 3]\n, the bitwise AND is equal to \n1 & 5 & 3 = 1\n.\n\n\nAlso, for \nnums = [7]\n, the bitwise AND is \n7\n.\n\n\n\n\nYou are given an array of positive integers \ncandidates\n. Compute the \nbitwise AND\n for all possible \ncombinations\n of elements in the \ncandidates\n array.\n\n\nReturn \nthe size of the \nlargest\n combination of \ncandidates\n with a bitwise AND \ngreater\n than \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n candidates = [16,17,71,62,12,24,14]\n\nOutput:\n 4\n\nExplanation:\n The combination [16,17,62,24] has a bitwise AND of 16 & 17 & 62 & 24 = 16 > 0.\nThe size of the combination is 4.\nIt can be shown that no combination with a size greater than 4 has a bitwise AND greater than 0.\nNote that more than one combination may have the largest size.\nFor example, the combination [62,12,24,14] has a bitwise AND of 62 & 12 & 24 & 14 = 8 > 0.\n\n\n\nExample 2:\n\n\n\n\nInput:\n candidates = [8,8]\n\nOutput:\n 2\n\nExplanation:\n The largest combination [8,8] has a bitwise AND of 8 & 8 = 8 > 0.\nThe size of the combination is 2, so we return 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= candidates.length <= 10\n5\n\n\n1 <= candidates[i] <= 10\n7",
        "temas": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2274,
        "slug": "maximum-consecutive-floors-without-special-floors",
        "url": "https://leetcode.com/problems/maximum-consecutive-floors-without-special-floors/",
        "titulo": "Maximum Consecutive Floors Without Special Floors",
        "enunciado": "Alice manages a company and has rented some floors of a building as office space. Alice has decided some of these floors should be \nspecial floors\n, used for relaxation only.\n\n\nYou are given two integers \nbottom\n and \ntop\n, which denote that Alice has rented all the floors from \nbottom\n to \ntop\n (\ninclusive\n). You are also given the integer array \nspecial\n, where \nspecial[i]\n denotes a special floor that Alice has designated for relaxation.\n\n\nReturn \nthe \nmaximum\n number of consecutive floors without a special floor\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n bottom = 2, top = 9, special = [4,6]\n\nOutput:\n 3\n\nExplanation:\n The following are the ranges (inclusive) of consecutive floors without a special floor:\n- (2, 3) with a total amount of 2 floors.\n- (5, 5) with a total amount of 1 floor.\n- (7, 9) with a total amount of 3 floors.\nTherefore, we return the maximum number which is 3 floors.\n\n\n\nExample 2:\n\n\n\n\nInput:\n bottom = 6, top = 8, special = [7,6,8]\n\nOutput:\n 0\n\nExplanation:\n Every floor rented is a special floor, so we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= special.length <= 10\n5\n\n\n1 <= bottom <= special[i] <= top <= 10\n9\n\n\nAll the values of \nspecial\n are \nunique\n.",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2241,
        "slug": "design-an-atm-machine",
        "url": "https://leetcode.com/problems/design-an-atm-machine/",
        "titulo": "Design an ATM Machine",
        "enunciado": "There is an ATM machine that stores banknotes of \n5\n denominations: \n20\n, \n50\n, \n100\n, \n200\n, and \n500\n dollars. Initially the ATM is empty. The user can use the machine to deposit or withdraw any amount of money.\n\n\nWhen withdrawing, the machine prioritizes using banknotes of \nlarger\n values.\n\n\n\n\nFor example, if you want to withdraw \n$300\n and there are \n2\n \n$50\n banknotes, \n1\n \n$100\n banknote, and \n1\n \n$200\n banknote, then the machine will use the \n$100\n and \n$200\n banknotes.\n\n\nHowever, if you try to withdraw \n$600\n and there are \n3\n \n$200\n banknotes and \n1\n \n$500\n banknote, then the withdraw request will be rejected because the machine will first try to use the \n$500\n banknote and then be unable to use banknotes to complete the remaining \n$100\n. Note that the machine is \nnot\n allowed to use the \n$200\n banknotes instead of the \n$500\n banknote.\n\n\n\n\nImplement the ATM class:\n\n\n\n\nATM()\n Initializes the ATM object.\n\n\nvoid deposit(int[] banknotesCount)\n Deposits new banknotes in the order \n$20\n, \n$50\n, \n$100\n, \n$200\n, and \n$500\n.\n\n\nint[] withdraw(int amount)\n Returns an array of length \n5\n of the number of banknotes that will be handed to the user in the order \n$20\n, \n$50\n, \n$100\n, \n$200\n, and \n$500\n, and update the number of banknotes in the ATM after withdrawing. Returns \n[-1]\n if it is not possible (do \nnot\n withdraw any banknotes in this case).\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"ATM\", \"deposit\", \"withdraw\", \"deposit\", \"withdraw\", \"withdraw\"]\n[[], [[0,0,1,2,1]], [600], [[0,1,0,1,1]], [600], [550]]\n\nOutput\n\n[null, null, [0,0,1,0,1], null, [-1], [0,1,0,0,1]]\n\n\nExplanation\n\nATM atm = new ATM();\natm.deposit([0,0,1,2,1]); // Deposits 1 $100 banknote, 2 $200 banknotes,\n                          // and 1 $500 banknote.\natm.withdraw(600);        // Returns [0,0,1,0,1]. The machine uses 1 $100 banknote\n                          // and 1 $500 banknote. The banknotes left over in the\n                          // machine are [0,0,0,2,0].\natm.deposit([0,1,0,1,1]); // Deposits 1 $50, $200, and $500 banknote.\n                          // The banknotes in the machine are now [0,1,0,3,1].\natm.withdraw(600);        // Returns [-1]. The machine will try to use a $500 banknote\n                          // and then be unable to complete the remaining $100,\n                          // so the withdraw request will be rejected.\n                          // Since the request is rejected, the number of banknotes\n                          // in the machine is not modified.\natm.withdraw(550);        // Returns [0,1,0,0,1]. The machine uses 1 $50 banknote\n                          // and 1 $500 banknote.\n\n\n \n\n\nConstraints:\n\n\n\n\nbanknotesCount.length == 5\n\n\n0 <= banknotesCount[i] <= 10\n9\n\n\n1 <= amount <= 10\n9\n\n\nAt most \n5000\n calls \nin total\n will be made to \nwithdraw\n and \ndeposit\n.\n\n\nAt least \none\n call will be made to each function \nwithdraw\n and \ndeposit\n.\n\n\nSum of \nbanknotesCount[i]\n in all deposits doesn't exceed \n10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2240,
        "slug": "number-of-ways-to-buy-pens-and-pencils",
        "url": "https://leetcode.com/problems/number-of-ways-to-buy-pens-and-pencils/",
        "titulo": "Number of Ways to Buy Pens and Pencils",
        "enunciado": "You are given an integer \ntotal\n indicating the amount of money you have. You are also given two integers \ncost1\n and \ncost2\n indicating the price of a pen and pencil respectively. You can spend \npart or all\n of your money to buy multiple quantities (or none) of each kind of writing utensil.\n\n\nReturn \nthe \nnumber of distinct ways\n you can buy some number of pens and pencils.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n total = 20, cost1 = 10, cost2 = 5\n\nOutput:\n 9\n\nExplanation:\n The price of a pen is 10 and the price of a pencil is 5.\n- If you buy 0 pens, you can buy 0, 1, 2, 3, or 4 pencils.\n- If you buy 1 pen, you can buy 0, 1, or 2 pencils.\n- If you buy 2 pens, you cannot buy any pencils.\nThe total number of ways to buy pens and pencils is 5 + 3 + 1 = 9.\n\n\n\nExample 2:\n\n\n\n\nInput:\n total = 5, cost1 = 10, cost2 = 10\n\nOutput:\n 1\n\nExplanation:\n The price of both pens and pencils are 10, which cost more than total, so you cannot buy any writing utensils. Therefore, there is only 1 way: buy 0 pens and 0 pencils.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= total, cost1, cost2 <= 10\n6",
        "temas": [
            "Math",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2266,
        "slug": "count-number-of-texts",
        "url": "https://leetcode.com/problems/count-number-of-texts/",
        "titulo": "Count Number of Texts",
        "enunciado": "Alice is texting Bob using her phone. The \nmapping\n of digits to letters is shown in the figure below.\n\n\n\n\nIn order to \nadd\n a letter, Alice has to \npress\n the key of the corresponding digit \ni\n times, where \ni\n is the position of the letter in the key.\n\n\n\n\nFor example, to add the letter \n's'\n, Alice has to press \n'7'\n four times. Similarly, to add the letter \n'k'\n, Alice has to press \n'5'\n twice.\n\n\nNote that the digits \n'0'\n and \n'1'\n do not map to any letters, so Alice \ndoes not\n use them.\n\n\n\n\nHowever, due to an error in transmission, Bob did not receive Alice's text message but received a \nstring of pressed keys\n instead.\n\n\n\n\nFor example, when Alice sent the message \n\"bob\"\n, Bob received the string \n\"2266622\"\n.\n\n\n\n\nGiven a string \npressedKeys\n representing the string received by Bob, return \nthe \ntotal number of possible text messages\n Alice could have sent\n.\n\n\nSince the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n pressedKeys = \"22233\"\n\nOutput:\n 8\n\nExplanation:\n\nThe possible text messages Alice could have sent are:\n\"aaadd\", \"abdd\", \"badd\", \"cdd\", \"aaae\", \"abe\", \"bae\", and \"ce\".\nSince there are 8 possible messages, we return 8.\n\n\n\nExample 2:\n\n\n\n\nInput:\n pressedKeys = \"222222222222222222222222222222222222\"\n\nOutput:\n 82876089\n\nExplanation:\n\nThere are 2082876103 possible text messages Alice could have sent.\nSince we need to return the answer modulo 10\n9\n + 7, we return 2082876103 % (10\n9\n + 7) = 82876089.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= pressedKeys.length <= 10\n5\n\n\npressedKeys\n only consists of digits from \n'2'\n - \n'9'\n.",
        "temas": [
            "Hash Table",
            "Math",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 2265,
        "slug": "count-nodes-equal-to-average-of-subtree",
        "url": "https://leetcode.com/problems/count-nodes-equal-to-average-of-subtree/",
        "titulo": "Count Nodes Equal to Average of Subtree",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe number of nodes where the value of the node is equal to the \naverage\n of the values in its \nsubtree\n.\n\n\nNote:\n\n\n\n\nThe \naverage\n of \nn\n elements is the \nsum\n of the \nn\n elements divided by \nn\n and \nrounded down\n to the nearest integer.\n\n\nA \nsubtree\n of \nroot\n is a tree consisting of \nroot\n and all of its descendants.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [4,8,5,0,1,null,6]\n\nOutput:\n 5\n\nExplanation:\n \nFor the node with value 4: The average of its subtree is (4 + 8 + 5 + 0 + 1 + 6) / 6 = 24 / 6 = 4.\nFor the node with value 5: The average of its subtree is (5 + 6) / 2 = 11 / 2 = 5.\nFor the node with value 0: The average of its subtree is 0 / 1 = 0.\nFor the node with value 1: The average of its subtree is 1 / 1 = 1.\nFor the node with value 6: The average of its subtree is 6 / 1 = 6.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n 1\n\nExplanation:\n For the node with value 1: The average of its subtree is 1 / 1 = 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 1000]\n.\n\n\n0 <= Node.val <= 1000",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 2257,
        "slug": "count-unguarded-cells-in-the-grid",
        "url": "https://leetcode.com/problems/count-unguarded-cells-in-the-grid/",
        "titulo": "Count Unguarded Cells in the Grid",
        "enunciado": "You are given two integers \nm\n and \nn\n representing a \n0-indexed\n \nm x n\n grid. You are also given two 2D integer arrays \nguards\n and \nwalls\n where \nguards[i] = [row\ni\n, col\ni\n]\n and \nwalls[j] = [row\nj\n, col\nj\n]\n represent the positions of the \ni\nth\n guard and \nj\nth\n wall respectively.\n\n\nA guard can see \nevery\n cell in the four cardinal directions (north, east, south, or west) starting from their position unless \nobstructed\n by a wall or another guard. A cell is \nguarded\n if there is \nat least\n one guard that can see it.\n\n\nReturn\n the number of unoccupied cells that are \nnot\n \nguarded\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n m = 4, n = 6, guards = [[0,0],[1,1],[2,3]], walls = [[0,1],[2,2],[1,4]]\n\nOutput:\n 7\n\nExplanation:\n The guarded and unguarded cells are shown in red and green respectively in the above diagram.\nThere are a total of 7 unguarded cells, so we return 7.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n m = 3, n = 3, guards = [[1,1]], walls = [[0,1],[1,0],[2,1],[1,2]]\n\nOutput:\n 4\n\nExplanation:\n The unguarded cells are shown in green in the above diagram.\nThere are a total of 4 unguarded cells, so we return 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 10\n5\n\n\n2 <= m * n <= 10\n5\n\n\n1 <= guards.length, walls.length <= 5 * 10\n4\n\n\n2 <= guards.length + walls.length <= m * n\n\n\nguards[i].length == walls[j].length == 2\n\n\n0 <= row\ni\n, row\nj\n < m\n\n\n0 <= col\ni\n, col\nj\n < n\n\n\nAll the positions in \nguards\n and \nwalls\n are \nunique\n.",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2256,
        "slug": "minimum-average-difference",
        "url": "https://leetcode.com/problems/minimum-average-difference/",
        "titulo": "Minimum Average Difference",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of length \nn\n.\n\n\nThe \naverage difference\n of the index \ni\n is the \nabsolute\n \ndifference\n between the average of the \nfirst\n \ni + 1\n elements of \nnums\n and the average of the \nlast\n \nn - i - 1\n elements. Both averages should be \nrounded down\n to the nearest integer.\n\n\nReturn\n the index with the \nminimum average difference\n. If there are multiple such indices, return the \nsmallest\n one.\n\n\nNote:\n\n\n\n\nThe \nabsolute difference\n of two numbers is the absolute value of their difference.\n\n\nThe \naverage\n of \nn\n elements is the \nsum\n of the \nn\n elements divided (\ninteger division\n) by \nn\n.\n\n\nThe average of \n0\n elements is considered to be \n0\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,5,3,9,5,3]\n\nOutput:\n 3\n\nExplanation:\n\n- The average difference of index 0 is: |2 / 1 - (5 + 3 + 9 + 5 + 3) / 5| = |2 / 1 - 25 / 5| = |2 - 5| = 3.\n- The average difference of index 1 is: |(2 + 5) / 2 - (3 + 9 + 5 + 3) / 4| = |7 / 2 - 20 / 4| = |3 - 5| = 2.\n- The average difference of index 2 is: |(2 + 5 + 3) / 3 - (9 + 5 + 3) / 3| = |10 / 3 - 17 / 3| = |3 - 5| = 2.\n- The average difference of index 3 is: |(2 + 5 + 3 + 9) / 4 - (5 + 3) / 2| = |19 / 4 - 8 / 2| = |4 - 4| = 0.\n- The average difference of index 4 is: |(2 + 5 + 3 + 9 + 5) / 5 - 3 / 1| = |24 / 5 - 3 / 1| = |4 - 3| = 1.\n- The average difference of index 5 is: |(2 + 5 + 3 + 9 + 5 + 3) / 6 - 0| = |27 / 6 - 0| = |4 - 0| = 4.\nThe average difference of index 3 is the minimum average difference so return 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0]\n\nOutput:\n 0\n\nExplanation:\n\nThe only index is 0 so return 0.\nThe average difference of index 0 is: |0 / 1 - 0| = |0 - 0| = 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2261,
        "slug": "k-divisible-elements-subarrays",
        "url": "https://leetcode.com/problems/k-divisible-elements-subarrays/",
        "titulo": "K Divisible Elements Subarrays",
        "enunciado": "Given an integer array \nnums\n and two integers \nk\n and \np\n, return \nthe number of \ndistinct subarrays,\n which have \nat most\n \nk\n \nelements \nthat are \ndivisible by\n \np\n.\n\n\nTwo arrays \nnums1\n and \nnums2\n are said to be \ndistinct\n if:\n\n\n\n\nThey are of \ndifferent\n lengths, or\n\n\nThere exists \nat least\n one index \ni\n where \nnums1[i] != nums2[i]\n.\n\n\n\n\nA \nsubarray\n is defined as a \nnon-empty\n contiguous sequence of elements in an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [\n2\n,3,3,\n2\n,\n2\n], k = 2, p = 2\n\nOutput:\n 11\n\nExplanation:\n\nThe elements at indices 0, 3, and 4 are divisible by p = 2.\nThe 11 distinct subarrays which have at most k = 2 elements divisible by 2 are:\n[2], [2,3], [2,3,3], [2,3,3,2], [3], [3,3], [3,3,2], [3,3,2,2], [3,2], [3,2,2], and [2,2].\nNote that the subarrays [2] and [3] occur more than once in nums, but they should each be counted only once.\nThe subarray [2,3,3,2,2] should not be counted because it has 3 elements that are divisible by 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4], k = 4, p = 1\n\nOutput:\n 10\n\nExplanation:\n\nAll element of nums are divisible by p = 1.\nAlso, every subarray of nums will have at most 4 elements that are divisible by 1.\nSince all subarrays are distinct, the total number of subarrays satisfying all the constraints is 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 200\n\n\n1 <= nums[i], p <= 200\n\n\n1 <= k <= nums.length\n\n\n\n\n \n\n\nFollow up:\n\n\nCan you solve this problem in O(n\n2\n) time complexity?",
        "temas": [
            "Array",
            "Hash Table",
            "Trie",
            "Rolling Hash",
            "Hash Function",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2260,
        "slug": "minimum-consecutive-cards-to-pick-up",
        "url": "https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up/",
        "titulo": "Minimum Consecutive Cards to Pick Up",
        "enunciado": "You are given an integer array \ncards\n where \ncards[i]\n represents the \nvalue\n of the \ni\nth\n card. A pair of cards are \nmatching\n if the cards have the \nsame\n value.\n\n\nReturn\n the \nminimum\n number of \nconsecutive\n cards you have to pick up to have a pair of \nmatching\n cards among the picked cards.\n If it is impossible to have matching cards, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n cards = [3,4,2,3,4,7]\n\nOutput:\n 4\n\nExplanation:\n We can pick up the cards [3,4,2,3] which contain a matching pair of cards with value 3. Note that picking up the cards [4,2,3,4] is also optimal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n cards = [1,0,5,3]\n\nOutput:\n -1\n\nExplanation:\n There is no way to pick up a set of consecutive cards that contain a pair of matching cards.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= cards.length <= 10\n5\n\n\n0 <= cards[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2250,
        "slug": "count-number-of-rectangles-containing-each-point",
        "url": "https://leetcode.com/problems/count-number-of-rectangles-containing-each-point/",
        "titulo": "Count Number of Rectangles Containing Each Point",
        "enunciado": "You are given a 2D integer array \nrectangles\n where \nrectangles[i] = [l\ni\n, h\ni\n]\n indicates that \ni\nth\n rectangle has a length of \nl\ni\n and a height of \nh\ni\n. You are also given a 2D integer array \npoints\n where \npoints[j] = [x\nj\n, y\nj\n]\n is a point with coordinates \n(x\nj\n, y\nj\n)\n.\n\n\nThe \ni\nth\n rectangle has its \nbottom-left corner\n point at the coordinates \n(0, 0)\n and its \ntop-right corner\n point at \n(l\ni\n, h\ni\n)\n.\n\n\nReturn\n an integer array \ncount\n of length \npoints.length\n where \ncount[j]\n is the number of rectangles that \ncontain\n the \nj\nth\n point.\n\n\nThe \ni\nth\n rectangle \ncontains\n the \nj\nth\n point if \n0 <= x\nj\n <= l\ni\n and \n0 <= y\nj\n <= h\ni\n. Note that points that lie on the \nedges\n of a rectangle are also considered to be contained by that rectangle.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n rectangles = [[1,2],[2,3],[2,5]], points = [[2,1],[1,4]]\n\nOutput:\n [2,1]\n\nExplanation:\n \nThe first rectangle contains no points.\nThe second rectangle contains only the point (2, 1).\nThe third rectangle contains the points (2, 1) and (1, 4).\nThe number of rectangles that contain the point (2, 1) is 2.\nThe number of rectangles that contain the point (1, 4) is 1.\nTherefore, we return [2, 1].\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n rectangles = [[1,1],[2,2],[3,3]], points = [[1,3],[1,1]]\n\nOutput:\n [1,3]\n\nExplanation:\n\nThe first rectangle contains only the point (1, 1).\nThe second rectangle contains only the point (1, 1).\nThe third rectangle contains the points (1, 3) and (1, 1).\nThe number of rectangles that contain the point (1, 3) is 1.\nThe number of rectangles that contain the point (1, 1) is 3.\nTherefore, we return [1, 3].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rectangles.length, points.length <= 5 * 10\n4\n\n\nrectangles[i].length == points[j].length == 2\n\n\n1 <= l\ni\n, x\nj\n <= 10\n9\n\n\n1 <= h\ni\n, y\nj\n <= 100\n\n\nAll the \nrectangles\n are \nunique\n.\n\n\nAll the \npoints\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Binary Indexed Tree",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2249,
        "slug": "count-lattice-points-inside-a-circle",
        "url": "https://leetcode.com/problems/count-lattice-points-inside-a-circle/",
        "titulo": "Count Lattice Points Inside a Circle",
        "enunciado": "Given a 2D integer array \ncircles\n where \ncircles[i] = [x\ni\n, y\ni\n, r\ni\n]\n represents the center \n(x\ni\n, y\ni\n)\n and radius \nr\ni\n of the \ni\nth\n circle drawn on a grid, return \nthe \nnumber of lattice points\n \nthat are present inside \nat least one\n circle\n.\n\n\nNote:\n\n\n\n\nA \nlattice point\n is a point with integer coordinates.\n\n\nPoints that lie \non the circumference of a circle\n are also considered to be inside it.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n circles = [[2,2,1]]\n\nOutput:\n 5\n\nExplanation:\n\nThe figure above shows the given circle.\nThe lattice points present inside the circle are (1, 2), (2, 1), (2, 2), (2, 3), and (3, 2) and are shown in green.\nOther points such as (1, 1) and (1, 3), which are shown in red, are not considered inside the circle.\nHence, the number of lattice points present inside at least one circle is 5.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n circles = [[2,2,2],[3,4,1]]\n\nOutput:\n 16\n\nExplanation:\n\nThe figure above shows the given circles.\nThere are exactly 16 lattice points which are present inside at least one circle. \nSome of them are (0, 2), (2, 0), (2, 4), (3, 2), and (4, 4).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= circles.length <= 200\n\n\ncircles[i].length == 3\n\n\n1 <= x\ni\n, y\ni\n <= 100\n\n\n1 <= r\ni\n <= min(x\ni\n, y\ni\n)",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2233,
        "slug": "maximum-product-after-k-increments",
        "url": "https://leetcode.com/problems/maximum-product-after-k-increments/",
        "titulo": "Maximum Product After K Increments",
        "enunciado": "You are given an array of non-negative integers \nnums\n and an integer \nk\n. In one operation, you may choose \nany\n element from \nnums\n and \nincrement\n it by \n1\n.\n\n\nReturn\n the \nmaximum\n \nproduct\n of \nnums\n after \nat most\n \nk\n operations. \nSince the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n. Note that you should maximize the product before taking the modulo. \n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,4], k = 5\n\nOutput:\n 20\n\nExplanation:\n Increment the first number 5 times.\nNow nums = [5, 4], with a product of 5 * 4 = 20.\nIt can be shown that 20 is maximum product possible, so we return 20.\nNote that there may be other ways to increment nums to have the maximum product.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [6,3,3,2], k = 2\n\nOutput:\n 216\n\nExplanation:\n Increment the second number 1 time and increment the fourth number 1 time.\nNow nums = [6, 4, 3, 3], with a product of 6 * 4 * 3 * 3 = 216.\nIt can be shown that 216 is maximum product possible, so we return 216.\nNote that there may be other ways to increment nums to have the maximum product.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length, k <= 10\n5\n\n\n0 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2232,
        "slug": "minimize-result-by-adding-parentheses-to-expression",
        "url": "https://leetcode.com/problems/minimize-result-by-adding-parentheses-to-expression/",
        "titulo": "Minimize Result by Adding Parentheses to Expression",
        "enunciado": "You are given a \n0-indexed\n string \nexpression\n of the form \n\"<num1>+<num2>\"\n where \n<num1>\n and \n<num2>\n represent positive integers.\n\n\nAdd a pair of parentheses to \nexpression\n such that after the addition of parentheses, \nexpression\n is a \nvalid\n mathematical expression and evaluates to the \nsmallest\n possible value. The left parenthesis \nmust\n be added to the left of \n'+'\n and the right parenthesis \nmust\n be added to the right of \n'+'\n.\n\n\nReturn \nexpression\n after adding a pair of parentheses such that \nexpression\n evaluates to the \nsmallest\n possible value.\n If there are multiple answers that yield the same result, return any of them.\n\n\nThe input has been generated such that the original value of \nexpression\n, and the value of \nexpression\n after adding any pair of parentheses that meets the requirements fits within a signed 32-bit integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n expression = \"247+38\"\n\nOutput:\n \"2(47+38)\"\n\nExplanation:\n The \nexpression\n evaluates to 2 * (47 + 38) = 2 * 85 = 170.\nNote that \"2(4)7+38\" is invalid because the right parenthesis must be to the right of the \n'+'\n.\nIt can be shown that 170 is the smallest possible value.\n\n\n\nExample 2:\n\n\n\n\nInput:\n expression = \"12+34\"\n\nOutput:\n \"1(2+3)4\"\n\nExplanation:\n The expression evaluates to 1 * (2 + 3) * 4 = 1 * 5 * 4 = 20.\n\n\n\nExample 3:\n\n\n\n\nInput:\n expression = \"999+999\"\n\nOutput:\n \"(999+999)\"\n\nExplanation:\n The \nexpression\n evaluates to 999 + 999 = 1998.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= expression.length <= 10\n\n\nexpression\n consists of digits from \n'1'\n to \n'9'\n and \n'+'\n.\n\n\nexpression\n starts and ends with digits.\n\n\nexpression\n contains exactly one \n'+'\n.\n\n\nThe original value of \nexpression\n, and the value of \nexpression\n after adding any pair of parentheses that meets the requirements fits within a signed 32-bit integer.",
        "temas": [
            "String",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2222,
        "slug": "number-of-ways-to-select-buildings",
        "url": "https://leetcode.com/problems/number-of-ways-to-select-buildings/",
        "titulo": "Number of Ways to Select Buildings",
        "enunciado": "You are given a \n0-indexed\n binary string \ns\n which represents the types of buildings along a street where:\n\n\n\n\ns[i] = '0'\n denotes that the \ni\nth\n building is an office and\n\n\ns[i] = '1'\n denotes that the \ni\nth\n building is a restaurant.\n\n\n\n\nAs a city official, you would like to \nselect\n 3 buildings for random inspection. However, to ensure variety, \nno two consecutive\n buildings out of the \nselected\n buildings can be of the same type.\n\n\n\n\nFor example, given \ns = \"0\n0\n1\n1\n0\n1\n\"\n, we cannot select the \n1\nst\n, \n3\nrd\n, and \n5\nth\n buildings as that would form \n\"0\n11\n\"\n which is \nnot\n allowed due to having two consecutive buildings of the same type.\n\n\n\n\nReturn \nthe \nnumber of valid ways\n to select 3 buildings.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"001101\"\n\nOutput:\n 6\n\nExplanation:\n \nThe following sets of indices selected are valid:\n- [0,2,4] from \"\n0\n0\n1\n1\n0\n1\" forms \"010\"\n- [0,3,4] from \"\n0\n01\n10\n1\" forms \"010\"\n- [1,2,4] from \"0\n01\n1\n0\n1\" forms \"010\"\n- [1,3,4] from \"0\n0\n1\n10\n1\" forms \"010\"\n- [2,4,5] from \"00\n1\n1\n01\n\" forms \"101\"\n- [3,4,5] from \"001\n101\n\" forms \"101\"\nNo other selection is valid. Thus, there are 6 total ways.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"11100\"\n\nOutput:\n 0\n\nExplanation:\n It can be shown that there are no valid selections.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2221,
        "slug": "find-triangular-sum-of-an-array",
        "url": "https://leetcode.com/problems/find-triangular-sum-of-an-array/",
        "titulo": "Find Triangular Sum of an Array",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n, where \nnums[i]\n is a digit between \n0\n and \n9\n (\ninclusive\n).\n\n\nThe \ntriangular sum\n of \nnums\n is the value of the only element present in \nnums\n after the following process terminates:\n\n\n\n\nLet \nnums\n comprise of \nn\n elements. If \nn == 1\n, \nend\n the process. Otherwise, \ncreate\n a new \n0-indexed\n integer array \nnewNums\n of length \nn - 1\n.\n\n\nFor each index \ni\n, where \n0 <= i < n - 1\n, \nassign\n the value of \nnewNums[i]\n as \n(nums[i] + nums[i+1]) % 10\n, where \n%\n denotes modulo operator.\n\n\nReplace\n the array \nnums\n with \nnewNums\n.\n\n\nRepeat\n the entire process starting from step 1.\n\n\n\n\nReturn \nthe triangular sum of\n \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n 8\n\nExplanation:\n\nThe above diagram depicts the process from which we obtain the triangular sum of the array.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5]\n\nOutput:\n 5\n\nExplanation:\n\nSince there is only one element in nums, the triangular sum is the value of that element itself.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n0 <= nums[i] <= 9",
        "temas": [
            "Array",
            "Math",
            "Simulation",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2212,
        "slug": "maximum-points-in-an-archery-competition",
        "url": "https://leetcode.com/problems/maximum-points-in-an-archery-competition/",
        "titulo": "Maximum Points in an Archery Competition",
        "enunciado": "Alice and Bob are opponents in an archery competition. The competition has set the following rules:\n\n\n\n\nAlice first shoots \nnumArrows\n arrows and then Bob shoots \nnumArrows\n arrows.\n\n\nThe points are then calculated as follows:\n\t\n\n\nThe target has integer scoring sections ranging from \n0\n to \n11\n \ninclusive\n.\n\n\nFor \neach\n section of the target with score \nk\n (in between \n0\n to \n11\n), say Alice and Bob have shot \na\nk\n and \nb\nk\n arrows on that section respectively. If \na\nk\n >= b\nk\n, then Alice takes \nk\n points. If \na\nk\n < b\nk\n, then Bob takes \nk\n points.\n\n\nHowever, if \na\nk\n == b\nk\n == 0\n, then \nnobody\n takes \nk\n points.\n\n\n\n\n\n\n\n\n\n\n\n\nFor example, if Alice and Bob both shot \n2\n arrows on the section with score \n11\n, then Alice takes \n11\n points. On the other hand, if Alice shot \n0\n arrows on the section with score \n11\n and Bob shot \n2\n arrows on that same section, then Bob takes \n11\n points.\n\n\n\n\n\n\nYou are given the integer \nnumArrows\n and an integer array \naliceArrows\n of size \n12\n, which represents the number of arrows Alice shot on each scoring section from \n0\n to \n11\n. Now, Bob wants to \nmaximize\n the total number of points he can obtain.\n\n\nReturn \nthe array \nbobArrows\n which represents the number of arrows Bob shot on \neach\n scoring section from \n0\n to \n11\n. The sum of the values in \nbobArrows\n should equal \nnumArrows\n.\n\n\nIf there are multiple ways for Bob to earn the maximum total points, return \nany\n one of them.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n numArrows = 9, aliceArrows = [1,1,0,1,0,0,2,1,0,1,2,0]\n\nOutput:\n [0,0,0,0,1,1,0,0,1,2,3,1]\n\nExplanation:\n The table above shows how the competition is scored. \nBob earns a total point of 4 + 5 + 8 + 9 + 10 + 11 = 47.\nIt can be shown that Bob cannot obtain a score higher than 47 points.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n numArrows = 3, aliceArrows = [0,0,1,0,0,0,0,0,0,0,0,2]\n\nOutput:\n [0,0,0,0,0,0,0,0,1,1,1,0]\n\nExplanation:\n The table above shows how the competition is scored.\nBob earns a total point of 8 + 9 + 10 = 27.\nIt can be shown that Bob cannot obtain a score higher than 27 points.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= numArrows <= 10\n5\n\n\naliceArrows.length == bobArrows.length == 12\n\n\n0 <= aliceArrows[i], bobArrows[i] <= numArrows\n\n\nsum(aliceArrows[i]) == numArrows",
        "temas": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2211,
        "slug": "count-collisions-on-a-road",
        "url": "https://leetcode.com/problems/count-collisions-on-a-road/",
        "titulo": "Count Collisions on a Road",
        "enunciado": "There are \nn\n cars on an infinitely long road. The cars are numbered from \n0\n to \nn - 1\n from left to right and each car is present at a \nunique\n point.\n\n\nYou are given a \n0-indexed\n string \ndirections\n of length \nn\n. \ndirections[i]\n can be either \n'L'\n, \n'R'\n, or \n'S'\n denoting whether the \ni\nth\n car is moving towards the \nleft\n, towards the \nright\n, or \nstaying\n at its current point respectively. Each moving car has the \nsame speed\n.\n\n\nThe number of collisions can be calculated as follows:\n\n\n\n\nWhen two cars moving in \nopposite\n directions collide with each other, the number of collisions increases by \n2\n.\n\n\nWhen a moving car collides with a stationary car, the number of collisions increases by \n1\n.\n\n\n\n\nAfter a collision, the cars involved can no longer move and will stay at the point where they collided. Other than that, cars cannot change their state or direction of motion.\n\n\nReturn \nthe \ntotal number of collisions\n that will happen on the road\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n directions = \"RLRSLL\"\n\nOutput:\n 5\n\nExplanation:\n\nThe collisions that will happen on the road are:\n- Cars 0 and 1 will collide with each other. Since they are moving in opposite directions, the number of collisions becomes 0 + 2 = 2.\n- Cars 2 and 3 will collide with each other. Since car 3 is stationary, the number of collisions becomes 2 + 1 = 3.\n- Cars 3 and 4 will collide with each other. Since car 3 is stationary, the number of collisions becomes 3 + 1 = 4.\n- Cars 4 and 5 will collide with each other. After car 4 collides with car 3, it will stay at the point of collision and get hit by car 5. The number of collisions becomes 4 + 1 = 5.\nThus, the total number of collisions that will happen on the road is 5. \n\n\n\nExample 2:\n\n\n\n\nInput:\n directions = \"LLRR\"\n\nOutput:\n 0\n\nExplanation:\n\nNo cars will collide with each other. Thus, the total number of collisions that will happen on the road is 0.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= directions.length <= 10\n5\n\n\ndirections[i]\n is either \n'L'\n, \n'R'\n, or \n'S'\n.",
        "temas": [
            "String",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2208,
        "slug": "minimum-operations-to-halve-array-sum",
        "url": "https://leetcode.com/problems/minimum-operations-to-halve-array-sum/",
        "titulo": "Minimum Operations to Halve Array Sum",
        "enunciado": "You are given an array \nnums\n of positive integers. In one operation, you can choose \nany\n number from \nnums\n and reduce it to \nexactly\n half the number. (Note that you may choose this reduced number in future operations.)\n\n\nReturn\n the \nminimum\n number of operations to reduce the sum of \nnums\n by \nat least\n half.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,19,8,1]\n\nOutput:\n 3\n\nExplanation:\n The initial sum of nums is equal to 5 + 19 + 8 + 1 = 33.\nThe following is one of the ways to reduce the sum by at least half:\nPick the number 19 and reduce it to 9.5.\nPick the number 9.5 and reduce it to 4.75.\nPick the number 8 and reduce it to 4.\nThe final array is [5, 4.75, 4, 1] with a total sum of 5 + 4.75 + 4 + 1 = 14.75. \nThe sum of nums has been reduced by 33 - 14.75 = 18.25, which is at least half of the initial sum, 18.25 >= 33/2 = 16.5.\nOverall, 3 operations were used so we return 3.\nIt can be shown that we cannot reduce the sum by at least half in less than 3 operations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,8,20]\n\nOutput:\n 3\n\nExplanation:\n The initial sum of nums is equal to 3 + 8 + 20 = 31.\nThe following is one of the ways to reduce the sum by at least half:\nPick the number 20 and reduce it to 10.\nPick the number 10 and reduce it to 5.\nPick the number 3 and reduce it to 1.5.\nThe final array is [1.5, 8, 5] with a total sum of 1.5 + 8 + 5 = 14.5. \nThe sum of nums has been reduced by 31 - 14.5 = 16.5, which is at least half of the initial sum, 16.5 >= 31/2 = 15.5.\nOverall, 3 operations were used so we return 3.\nIt can be shown that we cannot reduce the sum by at least half in less than 3 operations.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n7",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2207,
        "slug": "maximize-number-of-subsequences-in-a-string",
        "url": "https://leetcode.com/problems/maximize-number-of-subsequences-in-a-string/",
        "titulo": "Maximize Number of Subsequences in a String",
        "enunciado": "You are given a \n0-indexed\n string \ntext\n and another \n0-indexed\n string \npattern\n of length \n2\n, both of which consist of only lowercase English letters.\n\n\nYou can add \neither\n \npattern[0]\n \nor\n \npattern[1]\n anywhere in \ntext\n \nexactly once\n. Note that the character can be added even at the beginning or at the end of \ntext\n.\n\n\nReturn \nthe \nmaximum\n number of times\n \npattern\n \ncan occur as a \nsubsequence\n of the modified \ntext\n.\n\n\nA \nsubsequence\n is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n text = \"abdcdbc\", pattern = \"ac\"\n\nOutput:\n 4\n\nExplanation:\n\nIf we add pattern[0] = 'a' in between text[1] and text[2], we get \"ab\na\ndcdbc\". Now, the number of times \"ac\" occurs as a subsequence is 4.\nSome other strings which have 4 subsequences \"ac\" after adding a character to text are \"\na\nabdcdbc\" and \"abd\na\ncdbc\".\nHowever, strings such as \"abdc\na\ndbc\", \"abd\nc\ncdbc\", and \"abdcdbc\nc\n\", although obtainable, have only 3 subsequences \"ac\" and are thus suboptimal.\nIt can be shown that it is not possible to get more than 4 subsequences \"ac\" by adding only one character.\n\n\n\nExample 2:\n\n\n\n\nInput:\n text = \"aabb\", pattern = \"ab\"\n\nOutput:\n 6\n\nExplanation:\n\nSome of the strings which can be obtained from text and have 6 subsequences \"ab\" are \"\na\naabb\", \"aa\na\nbb\", and \"aab\nb\nb\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= text.length <= 10\n5\n\n\npattern.length == 2\n\n\ntext\n and \npattern\n consist only of lowercase English letters.",
        "temas": [
            "String",
            "Greedy",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2196,
        "slug": "create-binary-tree-from-descriptions",
        "url": "https://leetcode.com/problems/create-binary-tree-from-descriptions/",
        "titulo": "Create Binary Tree From Descriptions",
        "enunciado": "You are given a 2D integer array \ndescriptions\n where \ndescriptions[i] = [parent\ni\n, child\ni\n, isLeft\ni\n]\n indicates that \nparent\ni\n is the \nparent\n of \nchild\ni\n in a \nbinary\n tree of \nunique\n values. Furthermore,\n\n\n\n\nIf \nisLeft\ni\n == 1\n, then \nchild\ni\n is the left child of \nparent\ni\n.\n\n\nIf \nisLeft\ni\n == 0\n, then \nchild\ni\n is the right child of \nparent\ni\n.\n\n\n\n\nConstruct the binary tree described by \ndescriptions\n and return \nits \nroot\n.\n\n\nThe test cases will be generated such that the binary tree is \nvalid\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n descriptions = [[20,15,1],[20,17,0],[50,20,1],[50,80,0],[80,19,1]]\n\nOutput:\n [50,20,80,15,17,19]\n\nExplanation:\n The root node is the node with value 50 since it has no parent.\nThe resulting binary tree is shown in the diagram.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n descriptions = [[1,2,1],[2,3,0],[3,4,1]]\n\nOutput:\n [1,2,null,null,3,4]\n\nExplanation:\n The root node is the node with value 1 since it has no parent.\nThe resulting binary tree is shown in the diagram.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= descriptions.length <= 10\n4\n\n\ndescriptions[i].length == 3\n\n\n1 <= parent\ni\n, child\ni\n <= 10\n5\n\n\n0 <= isLeft\ni\n <= 1\n\n\nThe binary tree described by \ndescriptions\n is valid.",
        "temas": [
            "Array",
            "Hash Table",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2195,
        "slug": "append-k-integers-with-minimal-sum",
        "url": "https://leetcode.com/problems/append-k-integers-with-minimal-sum/",
        "titulo": "Append K Integers With Minimal Sum",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n. Append \nk\n \nunique positive\n integers that do \nnot\n appear in \nnums\n to \nnums\n such that the resulting total sum is \nminimum\n.\n\n\nReturn\n the sum of the\n \nk\n \nintegers appended to\n \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,4,25,10,25], k = 2\n\nOutput:\n 5\n\nExplanation:\n The two unique positive integers that do not appear in nums which we append are 2 and 3.\nThe resulting sum of nums is 1 + 4 + 25 + 10 + 25 + 2 + 3 = 70, which is the minimum.\nThe sum of the two integers appended is 2 + 3 = 5, so we return 5.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,6], k = 6\n\nOutput:\n 25\n\nExplanation:\n The six unique positive integers that do not appear in nums which we append are 1, 2, 3, 4, 7, and 8.\nThe resulting sum of nums is 5 + 6 + 1 + 2 + 3 + 4 + 7 + 8 = 36, which is the minimum. \nThe sum of the six integers appended is 1 + 2 + 3 + 4 + 7 + 8 = 25, so we return 25.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= 10\n8",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2182,
        "slug": "construct-string-with-repeat-limit",
        "url": "https://leetcode.com/problems/construct-string-with-repeat-limit/",
        "titulo": "Construct String With Repeat Limit",
        "enunciado": "You are given a string \ns\n and an integer \nrepeatLimit\n. Construct a new string \nrepeatLimitedString\n using the characters of \ns\n such that no letter appears \nmore than\n \nrepeatLimit\n times \nin a row\n. You do \nnot\n have to use all characters from \ns\n.\n\n\nReturn \nthe \nlexicographically largest\n \nrepeatLimitedString\n \npossible\n.\n\n\nA string \na\n is \nlexicographically larger\n than a string \nb\n if in the first position where \na\n and \nb\n differ, string \na\n has a letter that appears later in the alphabet than the corresponding letter in \nb\n. If the first \nmin(a.length, b.length)\n characters do not differ, then the longer string is the lexicographically larger one.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"cczazcc\", repeatLimit = 3\n\nOutput:\n \"zzcccac\"\n\nExplanation:\n We use all of the characters from s to construct the repeatLimitedString \"zzcccac\".\nThe letter 'a' appears at most 1 time in a row.\nThe letter 'c' appears at most 3 times in a row.\nThe letter 'z' appears at most 2 times in a row.\nHence, no letter appears more than repeatLimit times in a row and the string is a valid repeatLimitedString.\nThe string is the lexicographically largest repeatLimitedString possible so we return \"zzcccac\".\nNote that the string \"zzcccca\" is lexicographically larger but the letter 'c' appears more than 3 times in a row, so it is not a valid repeatLimitedString.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aababab\", repeatLimit = 2\n\nOutput:\n \"bbabaa\"\n\nExplanation:\n We use only some of the characters from s to construct the repeatLimitedString \"bbabaa\". \nThe letter 'a' appears at most 2 times in a row.\nThe letter 'b' appears at most 2 times in a row.\nHence, no letter appears more than repeatLimit times in a row and the string is a valid repeatLimitedString.\nThe string is the lexicographically largest repeatLimitedString possible so we return \"bbabaa\".\nNote that the string \"bbabaaa\" is lexicographically larger but the letter 'a' appears more than 2 times in a row, so it is not a valid repeatLimitedString.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= repeatLimit <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2181,
        "slug": "merge-nodes-in-between-zeros",
        "url": "https://leetcode.com/problems/merge-nodes-in-between-zeros/",
        "titulo": "Merge Nodes in Between Zeros",
        "enunciado": "You are given the \nhead\n of a linked list, which contains a series of integers \nseparated\n by \n0\n's. The \nbeginning\n and \nend\n of the linked list will have \nNode.val == 0\n.\n\n\nFor \nevery \ntwo consecutive \n0\n's, \nmerge\n all the nodes lying in between them into a single node whose value is the \nsum\n of all the merged nodes. The modified list should not contain any \n0\n's.\n\n\nReturn \nthe\n \nhead\n \nof the modified linked list\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [0,3,1,0,4,5,2,0]\n\nOutput:\n [4,11]\n\nExplanation:\n \nThe above figure represents the given linked list. The modified list contains\n- The sum of the nodes marked in green: 3 + 1 = 4.\n- The sum of the nodes marked in red: 4 + 5 + 2 = 11.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [0,1,0,3,0,2,2,0]\n\nOutput:\n [1,3,4]\n\nExplanation:\n \nThe above figure represents the given linked list. The modified list contains\n- The sum of the nodes marked in green: 1 = 1.\n- The sum of the nodes marked in red: 3 = 3.\n- The sum of the nodes marked in yellow: 2 + 2 = 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[3, 2 * 10\n5\n]\n.\n\n\n0 <= Node.val <= 1000\n\n\nThere are \nno\n two consecutive nodes with \nNode.val == 0\n.\n\n\nThe \nbeginning\n and \nend\n of the linked list have \nNode.val == 0\n.",
        "temas": [
            "Linked List",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2187,
        "slug": "minimum-time-to-complete-trips",
        "url": "https://leetcode.com/problems/minimum-time-to-complete-trips/",
        "titulo": "Minimum Time to Complete Trips",
        "enunciado": "You are given an array \ntime\n where \ntime[i]\n denotes the time taken by the \ni\nth\n bus to complete \none trip\n.\n\n\nEach bus can make multiple trips \nsuccessively\n; that is, the next trip can start \nimmediately after\n completing the current trip. Also, each bus operates \nindependently\n; that is, the trips of one bus do not influence the trips of any other bus.\n\n\nYou are also given an integer \ntotalTrips\n, which denotes the number of trips all buses should make \nin total\n. Return \nthe \nminimum time\n required for all buses to complete \nat least\n \ntotalTrips\n trips\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n time = [1,2,3], totalTrips = 5\n\nOutput:\n 3\n\nExplanation:\n\n- At time t = 1, the number of trips completed by each bus are [1,0,0]. \n  The total number of trips completed is 1 + 0 + 0 = 1.\n- At time t = 2, the number of trips completed by each bus are [2,1,0]. \n  The total number of trips completed is 2 + 1 + 0 = 3.\n- At time t = 3, the number of trips completed by each bus are [3,1,1]. \n  The total number of trips completed is 3 + 1 + 1 = 5.\nSo the minimum time needed for all buses to complete at least 5 trips is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n time = [2], totalTrips = 1\n\nOutput:\n 2\n\nExplanation:\n\nThere is only one bus, and it will complete its first trip at t = 2.\nSo the minimum time needed to complete 1 trip is 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= time.length <= 10\n5\n\n\n1 <= time[i], totalTrips <= 10\n7",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2186,
        "slug": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
        "url": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram-ii/",
        "titulo": "Minimum Number of Steps to Make Two Strings Anagram II",
        "enunciado": "You are given two strings \ns\n and \nt\n. In one step, you can append \nany character\n to either \ns\n or \nt\n.\n\n\nReturn \nthe minimum number of steps to make \ns\n and \nt\n \nanagrams\n of each other.\n\n\nAn \nanagram\n of a string is a string that contains the same characters with a different (or the same) ordering.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"\nlee\ntco\nde\n\", t = \"co\na\nt\ns\n\"\n\nOutput:\n 7\n\nExplanation:\n \n- In 2 steps, we can append the letters in \"as\" onto s = \"leetcode\", forming s = \"leetcode\nas\n\".\n- In 5 steps, we can append the letters in \"leede\" onto t = \"coats\", forming t = \"coats\nleede\n\".\n\"leetcodeas\" and \"coatsleede\" are now anagrams of each other.\nWe used a total of 2 + 5 = 7 steps.\nIt can be shown that there is no way to make them anagrams of each other with less than 7 steps.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"night\", t = \"thing\"\n\nOutput:\n 0\n\nExplanation:\n The given strings are already anagrams of each other. Thus, we do not need any further steps.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, t.length <= 2 * 10\n5\n\n\ns\n and \nt\n consist of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2171,
        "slug": "removing-minimum-number-of-magic-beans",
        "url": "https://leetcode.com/problems/removing-minimum-number-of-magic-beans/",
        "titulo": "Removing Minimum Number of Magic Beans",
        "enunciado": "You are given an array of \npositive\n integers \nbeans\n, where each integer represents the number of magic beans found in a particular magic bag.\n\n\nRemove\n any number of beans (\npossibly none\n) from each bag such that the number of beans in each remaining \nnon-empty\n bag (still containing \nat least one\n bean) is \nequal\n. Once a bean has been removed from a bag, you are \nnot\n allowed to return it to any of the bags.\n\n\nReturn \nthe \nminimum\n number of magic beans that you have to remove\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n beans = [4,1,6,5]\n\nOutput:\n 4\n\nExplanation:\n \n- We remove 1 bean from the bag with only 1 bean.\n  This results in the remaining bags: [4,\n0\n,6,5]\n- Then we remove 2 beans from the bag with 6 beans.\n  This results in the remaining bags: [4,0,\n4\n,5]\n- Then we remove 1 bean from the bag with 5 beans.\n  This results in the remaining bags: [4,0,4,\n4\n]\nWe removed a total of 1 + 2 + 1 = 4 beans to make the remaining non-empty bags have an equal number of beans.\nThere are no other solutions that remove 4 beans or fewer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n beans = [2,10,3,2]\n\nOutput:\n 7\n\nExplanation:\n\n- We remove 2 beans from one of the bags with 2 beans.\n  This results in the remaining bags: [\n0\n,10,3,2]\n- Then we remove 2 beans from the other bag with 2 beans.\n  This results in the remaining bags: [0,10,3,\n0\n]\n- Then we remove 3 beans from the bag with 3 beans. \n  This results in the remaining bags: [0,10,\n0\n,0]\nWe removed a total of 2 + 2 + 3 = 7 beans to make the remaining non-empty bags have an equal number of beans.\nThere are no other solutions that removes 7 beans or fewer.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= beans.length <= 10\n5\n\n\n1 <= beans[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Enumeration",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2170,
        "slug": "minimum-operations-to-make-the-array-alternating",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-the-array-alternating/",
        "titulo": "Minimum Operations to Make the Array Alternating",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n consisting of \nn\n positive integers.\n\n\nThe array \nnums\n is called \nalternating\n if:\n\n\n\n\nnums[i - 2] == nums[i]\n, where \n2 <= i <= n - 1\n.\n\n\nnums[i - 1] != nums[i]\n, where \n1 <= i <= n - 1\n.\n\n\n\n\nIn one \noperation\n, you can choose an index \ni\n and \nchange\n \nnums[i]\n into \nany\n positive integer.\n\n\nReturn \nthe \nminimum number of operations\n required to make the array alternating\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,1,3,2,4,3]\n\nOutput:\n 3\n\nExplanation:\n\nOne way to make the array alternating is by converting it to [3,1,3,\n1\n,\n3\n,\n1\n].\nThe number of operations required in this case is 3.\nIt can be proven that it is not possible to make the array alternating in less than 3 operations. \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,2,2,2]\n\nOutput:\n 2\n\nExplanation:\n\nOne way to make the array alternating is by converting it to [1,2,\n1\n,2,\n1\n].\nThe number of operations required in this case is 2.\nNote that the array cannot be converted to [\n2\n,2,2,2,2] because in this case nums[0] == nums[1] which violates the conditions of an alternating array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2166,
        "slug": "design-bitset",
        "url": "https://leetcode.com/problems/design-bitset/",
        "titulo": "Design Bitset",
        "enunciado": "A \nBitset\n is a data structure that compactly stores bits.\n\n\nImplement the \nBitset\n class:\n\n\n\n\nBitset(int size)\n Initializes the Bitset with \nsize\n bits, all of which are \n0\n.\n\n\nvoid fix(int idx)\n Updates the value of the bit at the index \nidx\n to \n1\n. If the value was already \n1\n, no change occurs.\n\n\nvoid unfix(int idx)\n Updates the value of the bit at the index \nidx\n to \n0\n. If the value was already \n0\n, no change occurs.\n\n\nvoid flip()\n Flips the values of each bit in the Bitset. In other words, all bits with value \n0\n will now have value \n1\n and vice versa.\n\n\nboolean all()\n Checks if the value of \neach\n bit in the Bitset is \n1\n. Returns \ntrue\n if it satisfies the condition, \nfalse\n otherwise.\n\n\nboolean one()\n Checks if there is \nat least one\n bit in the Bitset with value \n1\n. Returns \ntrue\n if it satisfies the condition, \nfalse\n otherwise.\n\n\nint count()\n Returns the \ntotal number\n of bits in the Bitset which have value \n1\n.\n\n\nString toString()\n Returns the current composition of the Bitset. Note that in the resultant string, the character at the \ni\nth\n index should coincide with the value at the \ni\nth\n bit of the Bitset.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Bitset\", \"fix\", \"fix\", \"flip\", \"all\", \"unfix\", \"flip\", \"one\", \"unfix\", \"count\", \"toString\"]\n[[5], [3], [1], [], [], [0], [], [], [0], [], []]\n\nOutput\n\n[null, null, null, null, false, null, null, true, null, 2, \"01010\"]\n\n\nExplanation\n\nBitset bs = new Bitset(5); // bitset = \"00000\".\nbs.fix(3);     // the value at idx = 3 is updated to 1, so bitset = \"00010\".\nbs.fix(1);     // the value at idx = 1 is updated to 1, so bitset = \"01010\". \nbs.flip();     // the value of each bit is flipped, so bitset = \"10101\". \nbs.all();      // return False, as not all values of the bitset are 1.\nbs.unfix(0);   // the value at idx = 0 is updated to 0, so bitset = \"00101\".\nbs.flip();     // the value of each bit is flipped, so bitset = \"11010\". \nbs.one();      // return True, as there is at least 1 index with value 1.\nbs.unfix(0);   // the value at idx = 0 is updated to 0, so bitset = \"01010\".\nbs.count();    // return 2, as there are 2 bits with value 1.\nbs.toString(); // return \"01010\", which is the composition of bitset.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= size <= 10\n5\n\n\n0 <= idx <= size - 1\n\n\nAt most \n10\n5\n calls will be made \nin total\n to \nfix\n, \nunfix\n, \nflip\n, \nall\n, \none\n, \ncount\n, and \ntoString\n.\n\n\nAt least one call will be made to \nall\n, \none\n, \ncount\n, or \ntoString\n.\n\n\nAt most \n5\n calls will be made to \ntoString\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2165,
        "slug": "smallest-value-of-the-rearranged-number",
        "url": "https://leetcode.com/problems/smallest-value-of-the-rearranged-number/",
        "titulo": "Smallest Value of the Rearranged Number",
        "enunciado": "You are given an integer \nnum.\n \nRearrange\n the digits of \nnum\n such that its value is \nminimized\n and it does not contain \nany\n leading zeros.\n\n\nReturn \nthe rearranged number with minimal value\n.\n\n\nNote that the sign of the number does not change after rearranging the digits.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 310\n\nOutput:\n 103\n\nExplanation:\n The possible arrangements for the digits of 310 are 013, 031, 103, 130, 301, 310. \nThe arrangement with the smallest value that does not contain any leading zeros is 103.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = -7605\n\nOutput:\n -7650\n\nExplanation:\n Some possible arrangements for the digits of -7605 are -7650, -6705, -5076, -0567.\nThe arrangement with the smallest value that does not contain any leading zeros is -7650.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-10\n15\n <= num <= 10\n15",
        "temas": [
            "Math",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2178,
        "slug": "maximum-split-of-positive-even-integers",
        "url": "https://leetcode.com/problems/maximum-split-of-positive-even-integers/",
        "titulo": "Maximum Split of Positive Even Integers",
        "enunciado": "You are given an integer \nfinalSum\n. Split it into a sum of a \nmaximum\n number of \nunique\n positive even integers.\n\n\n\n\nFor example, given \nfinalSum = 12\n, the following splits are \nvalid\n (unique positive even integers summing up to \nfinalSum\n): \n(12)\n, \n(2 + 10)\n, \n(2 + 4 + 6)\n, and \n(4 + 8)\n. Among them, \n(2 + 4 + 6)\n contains the maximum number of integers. Note that \nfinalSum\n cannot be split into \n(2 + 2 + 4 + 4)\n as all the numbers should be unique.\n\n\n\n\nReturn \na list of integers that represent a valid split containing a \nmaximum\n number of integers\n. If no valid split exists for \nfinalSum\n, return \nan \nempty\n list\n. You may return the integers in \nany\n order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n finalSum = 12\n\nOutput:\n [2,4,6]\n\nExplanation:\n The following are valid splits: \n(12)\n, \n(2 + 10)\n, \n(2 + 4 + 6)\n, and \n(4 + 8)\n.\n(2 + 4 + 6) has the maximum number of integers, which is 3. Thus, we return [2,4,6].\nNote that [2,6,4], [6,2,4], etc. are also accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n finalSum = 7\n\nOutput:\n []\n\nExplanation:\n There are no valid splits for the given finalSum.\nThus, we return an empty array.\n\n\n\nExample 3:\n\n\n\n\nInput:\n finalSum = 28\n\nOutput:\n [6,8,2,12]\n\nExplanation:\n The following are valid splits: \n(2 + 26)\n, \n(6 + 8 + 2 + 12)\n, and \n(4 + 24)\n. \n\n(6 + 8 + 2 + 12)\n has the maximum number of integers, which is 4. Thus, we return [6,8,2,12].\nNote that [10,2,4,12], [6,2,4,16], etc. are also accepted.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= finalSum <= 10\n10",
        "temas": [
            "Math",
            "Backtracking",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2177,
        "slug": "find-three-consecutive-integers-that-sum-to-a-given-number",
        "url": "https://leetcode.com/problems/find-three-consecutive-integers-that-sum-to-a-given-number/",
        "titulo": "Find Three Consecutive Integers That Sum to a Given Number",
        "enunciado": "Given an integer \nnum\n, return \nthree consecutive integers (as a sorted array)\n that \nsum\n to \nnum\n. If \nnum\n cannot be expressed as the sum of three consecutive integers, return\n an \nempty\n array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 33\n\nOutput:\n [10,11,12]\n\nExplanation:\n 33 can be expressed as 10 + 11 + 12 = 33.\n10, 11, 12 are 3 consecutive integers, so we return [10, 11, 12].\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = 4\n\nOutput:\n []\n\nExplanation:\n There is no way to express 4 as the sum of 3 consecutive integers.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= num <= 10\n15",
        "temas": [
            "Math",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2149,
        "slug": "rearrange-array-elements-by-sign",
        "url": "https://leetcode.com/problems/rearrange-array-elements-by-sign/",
        "titulo": "Rearrange Array Elements by Sign",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n of \neven\n length consisting of an \nequal\n number of positive and negative integers.\n\n\nYou should return the array of nums such that the the array follows the given conditions:\n\n\n\n\nEvery \nconsecutive pair\n of integers have \nopposite signs\n.\n\n\nFor all integers with the same sign, the \norder\n in which they were present in \nnums\n is \npreserved\n.\n\n\nThe rearranged array begins with a positive integer.\n\n\n\n\nReturn \nthe modified array after rearranging the elements to satisfy the aforementioned conditions\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,1,-2,-5,2,-4]\n\nOutput:\n [3,-2,1,-5,2,-4]\n\nExplanation:\n\nThe positive integers in nums are [3,1,2]. The negative integers are [-2,-5,-4].\nThe only possible way to rearrange them such that they satisfy all conditions is [3,-2,1,-5,2,-4].\nOther ways such as [1,-2,2,-5,3,-4], [3,1,2,-2,-5,-4], [-2,3,-5,1,-4,2] are incorrect because they do not satisfy one or more conditions.  \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-1,1]\n\nOutput:\n [1,-1]\n\nExplanation:\n\n1 is the only positive integer and -1 the only negative integer in nums.\nSo nums is rearranged to [1,-1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 2 * 10\n5\n\n\nnums.length\n is \neven\n\n\n1 <= |nums[i]| <= 10\n5\n\n\nnums\n consists of \nequal\n number of positive and negative integers.\n\n\n\n\n \n\nIt is not required to do the modifications in-place.",
        "temas": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2150,
        "slug": "find-all-lonely-numbers-in-the-array",
        "url": "https://leetcode.com/problems/find-all-lonely-numbers-in-the-array/",
        "titulo": "Find All Lonely Numbers in the Array",
        "enunciado": "You are given an integer array \nnums\n. A number \nx\n is \nlonely\n when it appears only \nonce\n, and no \nadjacent\n numbers (i.e. \nx + 1\n and \nx - 1)\n appear in the array.\n\n\nReturn \nall\n lonely numbers in \nnums\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,6,5,8]\n\nOutput:\n [10,8]\n\nExplanation:\n \n- 10 is a lonely number since it appears exactly once and 9 and 11 does not appear in nums.\n- 8 is a lonely number since it appears exactly once and 7 and 9 does not appear in nums.\n- 5 is not a lonely number since 6 appears in nums and vice versa.\nHence, the lonely numbers in nums are [10, 8].\nNote that [8, 10] may also be returned.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,5,3]\n\nOutput:\n [1,5]\n\nExplanation:\n \n- 1 is a lonely number since it appears exactly once and 0 and 2 does not appear in nums.\n- 5 is a lonely number since it appears exactly once and 4 and 6 does not appear in nums.\n- 3 is not a lonely number since it appears twice.\nHence, the lonely numbers in nums are [1, 5].\nNote that [5, 1] may also be returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2162,
        "slug": "minimum-cost-to-set-cooking-time",
        "url": "https://leetcode.com/problems/minimum-cost-to-set-cooking-time/",
        "titulo": "Minimum Cost to Set Cooking Time",
        "enunciado": "A generic microwave supports cooking times for:\n\n\n\n\nat least \n1\n second.\n\n\nat most \n99\n minutes and \n99\n seconds.\n\n\n\n\nTo set the cooking time, you push \nat most four digits\n. The microwave normalizes what you push as four digits by \nprepending zeroes\n. It interprets the \nfirst\n two digits as the minutes and the \nlast\n two digits as the seconds. It then \nadds\n them up as the cooking time. For example,\n\n\n\n\nYou push \n9\n \n5\n \n4\n (three digits). It is normalized as \n0954\n and interpreted as \n9\n minutes and \n54\n seconds.\n\n\nYou push \n0\n \n0\n \n0\n \n8\n (four digits). It is interpreted as \n0\n minutes and \n8\n seconds.\n\n\nYou push \n8\n \n0\n \n9\n \n0\n. It is interpreted as \n80\n minutes and \n90\n seconds.\n\n\nYou push \n8\n \n1\n \n3\n \n0\n. It is interpreted as \n81\n minutes and \n30\n seconds.\n\n\n\n\nYou are given integers \nstartAt\n, \nmoveCost\n, \npushCost\n, and \ntargetSeconds\n. \nInitially\n, your finger is on the digit \nstartAt\n. Moving the finger above \nany specific digit\n costs \nmoveCost\n units of fatigue. Pushing the digit below the finger \nonce\n costs \npushCost\n units of fatigue.\n\n\nThere can be multiple ways to set the microwave to cook for \ntargetSeconds\n seconds but you are interested in the way with the minimum cost.\n\n\nReturn \nthe \nminimum cost\n to set\n \ntargetSeconds\n \nseconds of cooking time\n.\n\n\nRemember that one minute consists of \n60\n seconds.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n startAt = 1, moveCost = 2, pushCost = 1, targetSeconds = 600\n\nOutput:\n 6\n\nExplanation:\n The following are the possible ways to set the cooking time.\n- 1 0 0 0, interpreted as 10 minutes and 0 seconds.\n  The finger is already on digit 1, pushes 1 (with cost 1), moves to 0 (with cost 2), pushes 0 (with cost 1), pushes 0 (with cost 1), and pushes 0 (with cost 1).\n  The cost is: 1 + 2 + 1 + 1 + 1 = 6. This is the minimum cost.\n- 0 9 6 0, interpreted as 9 minutes and 60 seconds. That is also 600 seconds.\n  The finger moves to 0 (with cost 2), pushes 0 (with cost 1), moves to 9 (with cost 2), pushes 9 (with cost 1), moves to 6 (with cost 2), pushes 6 (with cost 1), moves to 0 (with cost 2), and pushes 0 (with cost 1).\n  The cost is: 2 + 1 + 2 + 1 + 2 + 1 + 2 + 1 = 12.\n- 9 6 0, normalized as 0960 and interpreted as 9 minutes and 60 seconds.\n  The finger moves to 9 (with cost 2), pushes 9 (with cost 1), moves to 6 (with cost 2), pushes 6 (with cost 1), moves to 0 (with cost 2), and pushes 0 (with cost 1).\n  The cost is: 2 + 1 + 2 + 1 + 2 + 1 = 9.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n startAt = 0, moveCost = 1, pushCost = 2, targetSeconds = 76\n\nOutput:\n 6\n\nExplanation:\n The optimal way is to push two digits: 7 6, interpreted as 76 seconds.\nThe finger moves to 7 (with cost 1), pushes 7 (with cost 2), moves to 6 (with cost 1), and pushes 6 (with cost 2). The total cost is: 1 + 2 + 1 + 2 = 6\nNote other possible ways are 0076, 076, 0116, and 116, but none of them produces the minimum cost.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= startAt <= 9\n\n\n1 <= moveCost, pushCost <= 10\n5\n\n\n1 <= targetSeconds <= 6039",
        "temas": [
            "Math",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 2161,
        "slug": "partition-array-according-to-given-pivot",
        "url": "https://leetcode.com/problems/partition-array-according-to-given-pivot/",
        "titulo": "Partition Array According to Given Pivot",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \npivot\n. Rearrange \nnums\n such that the following conditions are satisfied:\n\n\n\n\nEvery element less than \npivot\n appears \nbefore\n every element greater than \npivot\n.\n\n\nEvery element equal to \npivot\n appears \nin between\n the elements less than and greater than \npivot\n.\n\n\nThe \nrelative order\n of the elements less than \npivot\n and the elements greater than \npivot\n is maintained.\n\t\n\n\nMore formally, consider every \np\ni\n, \np\nj\n where \np\ni\n is the new position of the \ni\nth\n element and \np\nj\n is the new position of the \nj\nth\n element. If \ni < j\n and \nboth\n elements are smaller (\nor larger\n) than \npivot\n, then \np\ni\n < p\nj\n.\n\n\n\n\n\n\n\n\nReturn \nnums\n after the rearrangement.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [9,12,5,10,14,3,10], pivot = 10\n\nOutput:\n [9,5,3,10,10,12,14]\n\nExplanation:\n \nThe elements 9, 5, and 3 are less than the pivot so they are on the left side of the array.\nThe elements 12 and 14 are greater than the pivot so they are on the right side of the array.\nThe relative ordering of the elements less than and greater than pivot is also maintained. [9, 5, 3] and [12, 14] are the respective orderings.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-3,4,3,2], pivot = 2\n\nOutput:\n [-3,2,4,3]\n\nExplanation:\n \nThe element -3 is less than the pivot so it is on the left side of the array.\nThe elements 4 and 3 are greater than the pivot so they are on the right side of the array.\nThe relative ordering of the elements less than and greater than pivot is also maintained. [-3] and [4, 3] are the respective orderings.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n6\n <= nums[i] <= 10\n6\n\n\npivot\n equals to an element of \nnums\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2140,
        "slug": "solving-questions-with-brainpower",
        "url": "https://leetcode.com/problems/solving-questions-with-brainpower/",
        "titulo": "Solving Questions With Brainpower",
        "enunciado": "You are given a \n0-indexed\n 2D integer array \nquestions\n where \nquestions[i] = [points\ni\n, brainpower\ni\n]\n.\n\n\nThe array describes the questions of an exam, where you have to process the questions \nin order\n (i.e., starting from question \n0\n) and make a decision whether to \nsolve\n or \nskip\n each question. Solving question \ni\n will \nearn\n you \npoints\ni\n points but you will be \nunable\n to solve each of the next \nbrainpower\ni\n questions. If you skip question \ni\n, you get to make the decision on the next question.\n\n\n\n\nFor example, given \nquestions = [[3, 2], [4, 3], [4, 4], [2, 5]]\n:\n\n\t\n\n\nIf question \n0\n is solved, you will earn \n3\n points but you will be unable to solve questions \n1\n and \n2\n.\n\n\nIf instead, question \n0\n is skipped and question \n1\n is solved, you will earn \n4\n points but you will be unable to solve questions \n2\n and \n3\n.\n\n\n\n\n\n\n\n\nReturn \nthe \nmaximum\n points you can earn for the exam\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n questions = [[3,2],[4,3],[4,4],[2,5]]\n\nOutput:\n 5\n\nExplanation:\n The maximum points can be earned by solving questions 0 and 3.\n- Solve question 0: Earn 3 points, will be unable to solve the next 2 questions\n- Unable to solve questions 1 and 2\n- Solve question 3: Earn 2 points\nTotal points earned: 3 + 2 = 5. There is no other way to earn 5 or more points.\n\n\n\nExample 2:\n\n\n\n\nInput:\n questions = [[1,1],[2,2],[3,3],[4,4],[5,5]]\n\nOutput:\n 7\n\nExplanation:\n The maximum points can be earned by solving questions 1 and 4.\n- Skip question 0\n- Solve question 1: Earn 2 points, will be unable to solve the next 2 questions\n- Unable to solve questions 2 and 3\n- Solve question 4: Earn 5 points\nTotal points earned: 2 + 5 = 7. There is no other way to earn 7 or more points.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= questions.length <= 10\n5\n\n\nquestions[i].length == 2\n\n\n1 <= points\ni\n, brainpower\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2155,
        "slug": "all-divisions-with-the-highest-score-of-a-binary-array",
        "url": "https://leetcode.com/problems/all-divisions-with-the-highest-score-of-a-binary-array/",
        "titulo": "All Divisions With the Highest Score of a Binary Array",
        "enunciado": "You are given a \n0-indexed\n binary array \nnums\n of length \nn\n. \nnums\n can be divided at index \ni\n (where \n0 <= i <= n)\n into two arrays (possibly empty) \nnums\nleft\n and \nnums\nright\n:\n\n\n\n\nnums\nleft\n has all the elements of \nnums\n between index \n0\n and \ni - 1\n \n(inclusive)\n, while \nnums\nright\n has all the elements of nums between index \ni\n and \nn - 1\n \n(inclusive)\n.\n\n\nIf \ni == 0\n, \nnums\nleft\n is \nempty\n, while \nnums\nright\n has all the elements of \nnums\n.\n\n\nIf \ni == n\n, \nnums\nleft\n has all the elements of nums, while \nnums\nright\n is \nempty\n.\n\n\n\n\nThe \ndivision score\n of an index \ni\n is the \nsum\n of the number of \n0\n's in \nnums\nleft\n and the number of \n1\n's in \nnums\nright\n.\n\n\nReturn \nall distinct indices\n that have the \nhighest\n possible \ndivision score\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,0,1,0]\n\nOutput:\n [2,4]\n\nExplanation:\n Division at index\n- 0: nums\nleft\n is []. nums\nright\n is [0,0,\n1\n,0]. The score is 0 + 1 = 1.\n- 1: nums\nleft\n is [\n0\n]. nums\nright\n is [0,\n1\n,0]. The score is 1 + 1 = 2.\n- 2: nums\nleft\n is [\n0\n,\n0\n]. nums\nright\n is [\n1\n,0]. The score is 2 + 1 = 3.\n- 3: nums\nleft\n is [\n0\n,\n0\n,1]. nums\nright\n is [0]. The score is 2 + 0 = 2.\n- 4: nums\nleft\n is [\n0\n,\n0\n,1,\n0\n]. nums\nright\n is []. The score is 3 + 0 = 3.\nIndices 2 and 4 both have the highest possible division score 3.\nNote the answer [4,2] would also be accepted.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,0,0]\n\nOutput:\n [3]\n\nExplanation:\n Division at index\n- 0: nums\nleft\n is []. nums\nright\n is [0,0,0]. The score is 0 + 0 = 0.\n- 1: nums\nleft\n is [\n0\n]. nums\nright\n is [0,0]. The score is 1 + 0 = 1.\n- 2: nums\nleft\n is [\n0\n,\n0\n]. nums\nright\n is [0]. The score is 2 + 0 = 2.\n- 3: nums\nleft\n is [\n0\n,\n0\n,\n0\n]. nums\nright\n is []. The score is 3 + 0 = 3.\nOnly index 3 has the highest possible division score 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1]\n\nOutput:\n [0]\n\nExplanation:\n Division at index\n- 0: nums\nleft\n is []. nums\nright\n is [\n1\n,\n1\n]. The score is 0 + 2 = 2.\n- 1: nums\nleft\n is [1]. nums\nright\n is [\n1\n]. The score is 0 + 1 = 1.\n- 2: nums\nleft\n is [1,1]. nums\nright\n is []. The score is 0 + 0 = 0.\nOnly index 0 has the highest possible division score 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\nnums[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2135,
        "slug": "count-words-obtained-after-adding-a-letter",
        "url": "https://leetcode.com/problems/count-words-obtained-after-adding-a-letter/",
        "titulo": "Count Words Obtained After Adding a Letter",
        "enunciado": "You are given two \n0-indexed\n arrays of strings \nstartWords\n and \ntargetWords\n. Each string consists of \nlowercase English letters\n only.\n\n\nFor each string in \ntargetWords\n, check if it is possible to choose a string from \nstartWords\n and perform a \nconversion operation\n on it to be equal to that from \ntargetWords\n.\n\n\nThe \nconversion operation\n is described in the following two steps:\n\n\n\n\nAppend\n any lowercase letter that is \nnot present\n in the string to its end.\n\n\t\n\n\nFor example, if the string is \n\"abc\"\n, the letters \n'd'\n, \n'e'\n, or \n'y'\n can be added to it, but not \n'a'\n. If \n'd'\n is added, the resulting string will be \n\"abcd\"\n.\n\n\n\n\n\n\nRearrange\n the letters of the new string in \nany\n arbitrary order.\n\t\n\n\nFor example, \n\"abcd\"\n can be rearranged to \n\"acbd\"\n, \n\"bacd\"\n, \n\"cbda\"\n, and so on. Note that it can also be rearranged to \n\"abcd\"\n itself.\n\n\n\n\n\n\n\n\nReturn \nthe \nnumber of strings\n in \ntargetWords\n that can be obtained by performing the operations on \nany\n string of \nstartWords\n.\n\n\nNote\n that you will only be verifying if the string in \ntargetWords\n can be obtained from a string in \nstartWords\n by performing the operations. The strings in \nstartWords\n \ndo not\n actually change during this process.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n startWords = [\"ant\",\"act\",\"tack\"], targetWords = [\"tack\",\"act\",\"acti\"]\n\nOutput:\n 2\n\nExplanation:\n\n- In order to form targetWords[0] = \"tack\", we use startWords[1] = \"act\", append 'k' to it, and rearrange \"actk\" to \"tack\".\n- There is no string in startWords that can be used to obtain targetWords[1] = \"act\".\n  Note that \"act\" does exist in startWords, but we \nmust\n append one letter to the string before rearranging it.\n- In order to form targetWords[2] = \"acti\", we use startWords[1] = \"act\", append 'i' to it, and rearrange \"acti\" to \"acti\" itself.\n\n\n\nExample 2:\n\n\n\n\nInput:\n startWords = [\"ab\",\"a\"], targetWords = [\"abc\",\"abcd\"]\n\nOutput:\n 1\n\nExplanation:\n\n- In order to form targetWords[0] = \"abc\", we use startWords[0] = \"ab\", add 'c' to it, and rearrange it to \"abc\".\n- There is no string in startWords that can be used to obtain targetWords[1] = \"abcd\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= startWords.length, targetWords.length <= 5 * 10\n4\n\n\n1 <= startWords[i].length, targetWords[j].length <= 26\n\n\nEach string of \nstartWords\n and \ntargetWords\n consists of lowercase English letters only.\n\n\nNo letter occurs more than once in any string of \nstartWords\n or \ntargetWords\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2134,
        "slug": "minimum-swaps-to-group-all-1s-together-ii",
        "url": "https://leetcode.com/problems/minimum-swaps-to-group-all-1s-together-ii/",
        "titulo": "Minimum Swaps to Group All 1's Together II",
        "enunciado": "A \nswap\n is defined as taking two \ndistinct\n positions in an array and swapping the values in them.\n\n\nA \ncircular\n array is defined as an array where we consider the \nfirst\n element and the \nlast\n element to be \nadjacent\n.\n\n\nGiven a \nbinary\n \ncircular\n array \nnums\n, return \nthe minimum number of swaps required to group all \n1\n's present in the array together at \nany location\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,1,0,1,1,0,0]\n\nOutput:\n 1\n\nExplanation:\n Here are a few of the ways to group all the 1's together:\n[0,\n0\n,\n1\n,1,1,0,0] using 1 swap.\n[0,1,\n1\n,1,\n0\n,0,0] using 1 swap.\n[1,1,0,0,0,0,1] using 2 swaps (using the circular property of the array).\nThere is no way to group all 1's together with 0 swaps.\nThus, the minimum number of swaps required is 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,1,1,0,0,1,1,0]\n\nOutput:\n 2\n\nExplanation:\n Here are a few of the ways to group all the 1's together:\n[1,1,1,0,0,0,0,1,1] using 2 swaps (using the circular property of the array).\n[1,1,1,1,1,0,0,0,0] using 2 swaps.\nThere is no way to group all 1's together with 0 or 1 swaps.\nThus, the minimum number of swaps required is 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1,0,0,1]\n\nOutput:\n 0\n\nExplanation:\n All the 1's are already grouped together due to the circular property of the array.\nThus, the minimum number of swaps required is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\nnums[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2146,
        "slug": "k-highest-ranked-items-within-a-price-range",
        "url": "https://leetcode.com/problems/k-highest-ranked-items-within-a-price-range/",
        "titulo": "K Highest Ranked Items Within a Price Range",
        "enunciado": "You are given a \n0-indexed\n 2D integer array \ngrid\n of size \nm x n\n that represents a map of the items in a shop. The integers in the grid represent the following:\n\n\n\n\n0\n represents a wall that you cannot pass through.\n\n\n1\n represents an empty cell that you can freely move to and from.\n\n\nAll other positive integers represent the price of an item in that cell. You may also freely move to and from these item cells.\n\n\n\n\nIt takes \n1\n step to travel between adjacent grid cells.\n\n\nYou are also given integer arrays \npricing\n and \nstart\n where \npricing = [low, high]\n and \nstart = [row, col]\n indicates that you start at the position \n(row, col)\n and are interested only in items with a price in the range of \n[low, high]\n (\ninclusive\n). You are further given an integer \nk\n.\n\n\nYou are interested in the \npositions\n of the \nk\n \nhighest-ranked\n items whose prices are \nwithin\n the given price range. The rank is determined by the \nfirst\n of these criteria that is different:\n\n\n\n\nDistance, defined as the length of the shortest path from the \nstart\n (\nshorter\n distance has a higher rank).\n\n\nPrice (\nlower\n price has a higher rank, but it must be \nin the price range\n).\n\n\nThe row number (\nsmaller\n row number has a higher rank).\n\n\nThe column number (\nsmaller\n column number has a higher rank).\n\n\n\n\nReturn \nthe \nk\n highest-ranked items within the price range \nsorted\n by their rank (highest to lowest)\n. If there are fewer than \nk\n reachable items within the price range, return \nall\n of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,2,0,1],[1,3,0,1],[0,2,5,1]], pricing = [2,5], start = [0,0], k = 3\n\nOutput:\n [[0,1],[1,1],[2,1]]\n\nExplanation:\n You start at (0,0).\nWith a price range of [2,5], we can take items from (0,1), (1,1), (2,1) and (2,2).\nThe ranks of these items are:\n- (0,1) with distance 1\n- (1,1) with distance 2\n- (2,1) with distance 3\n- (2,2) with distance 4\nThus, the 3 highest ranked items in the price range are (0,1), (1,1), and (2,1).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,2,0,1],[1,3,3,1],[0,2,5,1]], pricing = [2,3], start = [2,3], k = 2\n\nOutput:\n [[2,1],[1,2]]\n\nExplanation:\n You start at (2,3).\nWith a price range of [2,3], we can take items from (0,1), (1,1), (1,2) and (2,1).\nThe ranks of these items are:\n- (2,1) with distance 2, price 2\n- (1,2) with distance 2, price 3\n- (1,1) with distance 3\n- (0,1) with distance 4\nThus, the 2 highest ranked items in the price range are (2,1) and (1,2).\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1],[0,0,1],[2,3,4]], pricing = [2,3], start = [0,0], k = 3\n\nOutput:\n [[2,1],[2,0]]\n\nExplanation:\n You start at (0,0).\nWith a price range of [2,3], we can take items from (2,0) and (2,1). \nThe ranks of these items are: \n- (2,1) with distance 5\n- (2,0) with distance 6\nThus, the 2 highest ranked items in the price range are (2,1) and (2,0). \nNote that k = 3 but there are only 2 reachable items within the price range.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\n0 <= grid[i][j] <= 10\n5\n\n\npricing.length == 2\n\n\n2 <= low <= high <= 10\n5\n\n\nstart.length == 2\n\n\n0 <= row <= m - 1\n\n\n0 <= col <= n - 1\n\n\ngrid[row][col] > 0\n\n\n1 <= k <= m * n",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2145,
        "slug": "count-the-hidden-sequences",
        "url": "https://leetcode.com/problems/count-the-hidden-sequences/",
        "titulo": "Count the Hidden Sequences",
        "enunciado": "You are given a \n0-indexed\n array of \nn\n integers \ndifferences\n, which describes the \ndifferences \nbetween each pair of \nconsecutive \nintegers of a \nhidden\n sequence of length \n(n + 1)\n. More formally, call the hidden sequence \nhidden\n, then we have that \ndifferences[i] = hidden[i + 1] - hidden[i]\n.\n\n\nYou are further given two integers \nlower\n and \nupper\n that describe the \ninclusive\n range of values \n[lower, upper]\n that the hidden sequence can contain.\n\n\n\n\nFor example, given \ndifferences = [1, -3, 4]\n, \nlower = 1\n, \nupper = 6\n, the hidden sequence is a sequence of length \n4\n whose elements are in between \n1\n and \n6\n (\ninclusive\n).\n\n\t\n\n\n[3, 4, 1, 5]\n and \n[4, 5, 2, 6]\n are possible hidden sequences.\n\n\n[5, 6, 3, 7]\n is not possible since it contains an element greater than \n6\n.\n\n\n[1, 2, 3, 4]\n is not possible since the differences are not correct.\n\n\n\n\n\n\n\n\nReturn \nthe number of \npossible\n hidden sequences there are.\n If there are no possible sequences, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n differences = [1,-3,4], lower = 1, upper = 6\n\nOutput:\n 2\n\nExplanation:\n The possible hidden sequences are:\n- [3, 4, 1, 5]\n- [4, 5, 2, 6]\nThus, we return 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n differences = [3,-4,5,1,-2], lower = -4, upper = 5\n\nOutput:\n 4\n\nExplanation:\n The possible hidden sequences are:\n- [-3, 0, -4, 1, 2, 0]\n- [-2, 1, -3, 2, 3, 1]\n- [-1, 2, -2, 3, 4, 2]\n- [0, 3, -1, 4, 5, 3]\nThus, we return 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n differences = [4,-7,2], lower = 3, upper = 6\n\nOutput:\n 0\n\nExplanation:\n There are no possible hidden sequences. Thus, we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == differences.length\n\n\n1 <= n <= 10\n5\n\n\n-10\n5\n <= differences[i] <= 10\n5\n\n\n-10\n5\n <= lower <= upper <= 10\n5",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2126,
        "slug": "destroying-asteroids",
        "url": "https://leetcode.com/problems/destroying-asteroids/",
        "titulo": "Destroying Asteroids",
        "enunciado": "You are given an integer \nmass\n, which represents the original mass of a planet. You are further given an integer array \nasteroids\n, where \nasteroids[i]\n is the mass of the \ni\nth\n asteroid.\n\n\nYou can arrange for the planet to collide with the asteroids in \nany arbitrary order\n. If the mass of the planet is \ngreater than or equal to\n the mass of the asteroid, the asteroid is \ndestroyed\n and the planet \ngains\n the mass of the asteroid. Otherwise, the planet is destroyed.\n\n\nReturn \ntrue\n if \nall\n asteroids can be destroyed. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n mass = 10, asteroids = [3,9,19,5,21]\n\nOutput:\n true\n\nExplanation:\n One way to order the asteroids is [9,19,5,3,21]:\n- The planet collides with the asteroid with a mass of 9. New planet mass: 10 + 9 = 19\n- The planet collides with the asteroid with a mass of 19. New planet mass: 19 + 19 = 38\n- The planet collides with the asteroid with a mass of 5. New planet mass: 38 + 5 = 43\n- The planet collides with the asteroid with a mass of 3. New planet mass: 43 + 3 = 46\n- The planet collides with the asteroid with a mass of 21. New planet mass: 46 + 21 = 67\nAll asteroids are destroyed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n mass = 5, asteroids = [4,9,23,4]\n\nOutput:\n false\n\nExplanation:\n \nThe planet cannot ever gain enough mass to destroy the asteroid with a mass of 23.\nAfter the planet destroys the other asteroids, it will have a mass of 5 + 4 + 9 + 4 = 22.\nThis is less than 23, so a collision would not destroy the last asteroid.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= mass <= 10\n5\n\n\n1 <= asteroids.length <= 10\n5\n\n\n1 <= asteroids[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2125,
        "slug": "number-of-laser-beams-in-a-bank",
        "url": "https://leetcode.com/problems/number-of-laser-beams-in-a-bank/",
        "titulo": "Number of Laser Beams in a Bank",
        "enunciado": "Anti-theft security devices are activated inside a bank. You are given a \n0-indexed\n binary string array \nbank\n representing the floor plan of the bank, which is an \nm x n\n 2D matrix. \nbank[i]\n represents the \ni\nth\n row, consisting of \n'0'\ns and \n'1'\ns. \n'0'\n means the cell is empty, while\n'1'\n means the cell has a security device.\n\n\nThere is \none\n laser beam between any \ntwo\n security devices \nif both\n conditions are met:\n\n\n\n\nThe two devices are located on two \ndifferent rows\n: \nr\n1\n and \nr\n2\n, where \nr\n1\n < r\n2\n.\n\n\nFor \neach\n row \ni\n where \nr\n1\n < i < r\n2\n, there are \nno security devices\n in the \ni\nth\n row.\n\n\n\n\nLaser beams are independent, i.e., one beam does not interfere nor join with another.\n\n\nReturn \nthe total number of laser beams in the bank\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n bank = [\"011001\",\"000000\",\"010100\",\"001000\"]\n\nOutput:\n 8\n\nExplanation:\n Between each of the following device pairs, there is one beam. In total, there are 8 beams:\n * bank[0][1] -- bank[2][1]\n * bank[0][1] -- bank[2][3]\n * bank[0][2] -- bank[2][1]\n * bank[0][2] -- bank[2][3]\n * bank[0][5] -- bank[2][1]\n * bank[0][5] -- bank[2][3]\n * bank[2][1] -- bank[3][2]\n * bank[2][3] -- bank[3][2]\nNote that there is no beam between any device on the 0\nth\n row with any on the 3\nrd\n row.\nThis is because the 2\nnd\n row contains security devices, which breaks the second condition.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n bank = [\"000\",\"111\",\"000\"]\n\nOutput:\n 0\n\nExplanation:\n There does not exist two devices located on two different rows.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == bank.length\n\n\nn == bank[i].length\n\n\n1 <= m, n <= 500\n\n\nbank[i][j]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "Array",
            "Math",
            "String",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2121,
        "slug": "intervals-between-identical-elements",
        "url": "https://leetcode.com/problems/intervals-between-identical-elements/",
        "titulo": "Intervals Between Identical Elements",
        "enunciado": "You are given a \n0-indexed\n array of \nn\n integers \narr\n.\n\n\nThe \ninterval\n between two elements in \narr\n is defined as the \nabsolute difference\n between their indices. More formally, the \ninterval\n between \narr[i]\n and \narr[j]\n is \n|i - j|\n.\n\n\nReturn \nan array\n \nintervals\n \nof length\n \nn\n \nwhere\n \nintervals[i]\n \nis \nthe sum of intervals\n between \narr[i]\n and each element in \narr\n with the same value as \narr[i]\n.\n\n\nNote:\n \n|x|\n is the absolute value of \nx\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,1,3,1,2,3,3]\n\nOutput:\n [4,2,7,2,4,4,5]\n\nExplanation:\n\n- Index 0: Another 2 is found at index 4. |0 - 4| = 4\n- Index 1: Another 1 is found at index 3. |1 - 3| = 2\n- Index 2: Two more 3s are found at indices 5 and 6. |2 - 5| + |2 - 6| = 7\n- Index 3: Another 1 is found at index 1. |3 - 1| = 2\n- Index 4: Another 2 is found at index 0. |4 - 0| = 4\n- Index 5: Two more 3s are found at indices 2 and 6. |5 - 2| + |5 - 6| = 4\n- Index 6: Two more 3s are found at indices 2 and 5. |6 - 2| + |6 - 5| = 5\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [10,5,10,10]\n\nOutput:\n [5,0,3,4]\n\nExplanation:\n\n- Index 0: Two more 10s are found at indices 2 and 3. |0 - 2| + |0 - 3| = 5\n- Index 1: There is only one 5 in the array, so its sum of intervals to identical elements is 0.\n- Index 2: Two more 10s are found at indices 0 and 3. |2 - 0| + |2 - 3| = 3\n- Index 3: Two more 10s are found at indices 0 and 2. |3 - 0| + |3 - 2| = 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == arr.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= arr[i] <= 10\n5\n\n\n\n\n \n\n\nNote:\n This question is the same as \n 2615: Sum of Distances.",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2120,
        "slug": "execution-of-all-suffix-instructions-staying-in-a-grid",
        "url": "https://leetcode.com/problems/execution-of-all-suffix-instructions-staying-in-a-grid/",
        "titulo": "Execution of All Suffix Instructions Staying in a Grid",
        "enunciado": "There is an \nn x n\n grid, with the top-left cell at \n(0, 0)\n and the bottom-right cell at \n(n - 1, n - 1)\n. You are given the integer \nn\n and an integer array \nstartPos\n where \nstartPos = [start\nrow\n, start\ncol\n]\n indicates that a robot is initially at cell \n(start\nrow\n, start\ncol\n)\n.\n\n\nYou are also given a \n0-indexed\n string \ns\n of length \nm\n where \ns[i]\n is the \ni\nth\n instruction for the robot: \n'L'\n (move left), \n'R'\n (move right), \n'U'\n (move up), and \n'D'\n (move down).\n\n\nThe robot can begin executing from any \ni\nth\n instruction in \ns\n. It executes the instructions one by one towards the end of \ns\n but it stops if either of these conditions is met:\n\n\n\n\nThe next instruction will move the robot off the grid.\n\n\nThere are no more instructions left to execute.\n\n\n\n\nReturn \nan array\n \nanswer\n \nof length\n \nm\n \nwhere\n \nanswer[i]\n \nis \nthe number of instructions\n the robot can execute if the robot \nbegins executing from\n the\n \ni\nth\n \ninstruction in\n \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, startPos = [0,1], s = \"RRDDLU\"\n\nOutput:\n [1,5,4,3,1,0]\n\nExplanation:\n Starting from startPos and beginning execution from the i\nth\n instruction:\n- 0\nth\n: \"\nR\nRDDLU\". Only one instruction \"R\" can be executed before it moves off the grid.\n- 1\nst\n:  \"\nRDDLU\n\". All five instructions can be executed while it stays in the grid and ends at (1, 1).\n- 2\nnd\n:   \"\nDDLU\n\". All four instructions can be executed while it stays in the grid and ends at (1, 0).\n- 3\nrd\n:    \"\nDLU\n\". All three instructions can be executed while it stays in the grid and ends at (0, 0).\n- 4\nth\n:     \"\nL\nU\". Only one instruction \"L\" can be executed before it moves off the grid.\n- 5\nth\n:      \"U\". If moving up, it would move off the grid.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 2, startPos = [1,1], s = \"LURD\"\n\nOutput:\n [4,1,0,0]\n\nExplanation:\n\n- 0\nth\n: \"\nLURD\n\".\n- 1\nst\n:  \"\nU\nRD\".\n- 2\nnd\n:   \"RD\".\n- 3\nrd\n:    \"D\".\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 1, startPos = [0,0], s = \"LRUD\"\n\nOutput:\n [0,0,0,0]\n\nExplanation:\n No matter which instruction the robot begins execution from, it would move off the grid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == s.length\n\n\n1 <= n, m <= 500\n\n\nstartPos.length == 2\n\n\n0 <= start\nrow\n, start\ncol\n < n\n\n\ns\n consists of \n'L'\n, \n'R'\n, \n'U'\n, and \n'D'\n.",
        "temas": [
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 2131,
        "slug": "longest-palindrome-by-concatenating-two-letter-words",
        "url": "https://leetcode.com/problems/longest-palindrome-by-concatenating-two-letter-words/",
        "titulo": "Longest Palindrome by Concatenating Two Letter Words",
        "enunciado": "You are given an array of strings \nwords\n. Each element of \nwords\n consists of \ntwo\n lowercase English letters.\n\n\nCreate the \nlongest possible palindrome\n by selecting some elements from \nwords\n and concatenating them in \nany order\n. Each element can be selected \nat most once\n.\n\n\nReturn \nthe \nlength\n of the longest palindrome that you can create\n. If it is impossible to create any palindrome, return \n0\n.\n\n\nA \npalindrome\n is a string that reads the same forward and backward.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"lc\",\"cl\",\"gg\"]\n\nOutput:\n 6\n\nExplanation:\n One longest palindrome is \"lc\" + \"gg\" + \"cl\" = \"lcggcl\", of length 6.\nNote that \"clgglc\" is another longest palindrome that can be created.\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"ab\",\"ty\",\"yt\",\"lc\",\"cl\",\"ab\"]\n\nOutput:\n 8\n\nExplanation:\n One longest palindrome is \"ty\" + \"lc\" + \"cl\" + \"yt\" = \"tylcclyt\", of length 8.\nNote that \"lcyttycl\" is another longest palindrome that can be created.\n\n\n\nExample 3:\n\n\n\n\nInput:\n words = [\"cc\",\"ll\",\"xx\"]\n\nOutput:\n 2\n\nExplanation:\n One longest palindrome is \"cc\", of length 2.\nNote that \"ll\" is another longest palindrome that can be created, and so is \"xx\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 10\n5\n\n\nwords[i].length == 2\n\n\nwords[i]\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2130,
        "slug": "maximum-twin-sum-of-a-linked-list",
        "url": "https://leetcode.com/problems/maximum-twin-sum-of-a-linked-list/",
        "titulo": "Maximum Twin Sum of a Linked List",
        "enunciado": "In a linked list of size \nn\n, where \nn\n is \neven\n, the \ni\nth\n node (\n0-indexed\n) of the linked list is known as the \ntwin\n of the \n(n-1-i)\nth\n node, if \n0 <= i <= (n / 2) - 1\n.\n\n\n\n\nFor example, if \nn = 4\n, then node \n0\n is the twin of node \n3\n, and node \n1\n is the twin of node \n2\n. These are the only nodes with twins for \nn = 4\n.\n\n\n\n\nThe \ntwin sum \nis defined as the sum of a node and its twin.\n\n\nGiven the \nhead\n of a linked list with even length, return \nthe \nmaximum twin sum\n of the linked list\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [5,4,2,1]\n\nOutput:\n 6\n\nExplanation:\n\nNodes 0 and 1 are the twins of nodes 3 and 2, respectively. All have twin sum = 6.\nThere are no other nodes with twins in the linked list.\nThus, the maximum twin sum of the linked list is 6. \n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [4,2,2,3]\n\nOutput:\n 7\n\nExplanation:\n\nThe nodes with twins present in this linked list are:\n- Node 0 is the twin of node 3 having a twin sum of 4 + 3 = 7.\n- Node 1 is the twin of node 2 having a twin sum of 2 + 2 = 4.\nThus, the maximum twin sum of the linked list is max(7, 4) = 7. \n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n head = [1,100000]\n\nOutput:\n 100001\n\nExplanation:\n\nThere is only one node with a twin in the linked list having twin sum of 1 + 100000 = 100001.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is an \neven\n integer in the range \n[2, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5",
        "temas": [
            "Linked List",
            "Two Pointers",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2110,
        "slug": "number-of-smooth-descent-periods-of-a-stock",
        "url": "https://leetcode.com/problems/number-of-smooth-descent-periods-of-a-stock/",
        "titulo": "Number of Smooth Descent Periods of a Stock",
        "enunciado": "You are given an integer array \nprices\n representing the daily price history of a stock, where \nprices[i]\n is the stock price on the \ni\nth\n day.\n\n\nA \nsmooth descent period\n of a stock consists of \none or more contiguous\n days such that the price on each day is \nlower\n than the price on the \npreceding day\n by \nexactly\n \n1\n. The first day of the period is exempted from this rule.\n\n\nReturn \nthe number of \nsmooth descent periods\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n prices = [3,2,1,4]\n\nOutput:\n 7\n\nExplanation:\n There are 7 smooth descent periods:\n[3], [2], [1], [4], [3,2], [2,1], and [3,2,1]\nNote that a period with one day is a smooth descent period by the definition.\n\n\n\nExample 2:\n\n\n\n\nInput:\n prices = [8,6,7,7]\n\nOutput:\n 4\n\nExplanation:\n There are 4 smooth descent periods: [8], [6], [7], and [7]\nNote that [8,6] is not a smooth descent period as 8 - 6 ≠ 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n prices = [1]\n\nOutput:\n 1\n\nExplanation:\n There is 1 smooth descent period: [1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= prices.length <= 10\n5\n\n\n1 <= prices[i] <= 10\n5",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2109,
        "slug": "adding-spaces-to-a-string",
        "url": "https://leetcode.com/problems/adding-spaces-to-a-string/",
        "titulo": "Adding Spaces to a String",
        "enunciado": "You are given a \n0-indexed\n string \ns\n and a \n0-indexed\n integer array \nspaces\n that describes the indices in the original string where spaces will be added. Each space should be inserted \nbefore\n the character at the given index.\n\n\n\n\nFor example, given \ns = \"EnjoyYourCoffee\"\n and \nspaces = [5, 9]\n, we place spaces before \n'Y'\n and \n'C'\n, which are at indices \n5\n and \n9\n respectively. Thus, we obtain \n\"Enjoy \nY\nour \nC\noffee\"\n.\n\n\n\n\nReturn\n \nthe modified string \nafter\n the spaces have been added.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"LeetcodeHelpsMeLearn\", spaces = [8,13,15]\n\nOutput:\n \"Leetcode Helps Me Learn\"\n\nExplanation:\n \nThe indices 8, 13, and 15 correspond to the underlined characters in \"Leetcode\nH\nelps\nM\ne\nL\nearn\".\nWe then place spaces before those characters.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"icodeinpython\", spaces = [1,5,7,9]\n\nOutput:\n \"i code in py thon\"\n\nExplanation:\n\nThe indices 1, 5, 7, and 9 correspond to the underlined characters in \"i\nc\node\ni\nn\np\ny\nt\nhon\".\nWe then place spaces before those characters.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"spacing\", spaces = [0,1,2,3,4,5,6]\n\nOutput:\n \" s p a c i n g\"\n\nExplanation:\n\nWe are also able to place spaces before the first character of the string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 3 * 10\n5\n\n\ns\n consists only of lowercase and uppercase English letters.\n\n\n1 <= spaces.length <= 3 * 10\n5\n\n\n0 <= spaces[i] <= s.length - 1\n\n\nAll the values of \nspaces\n are \nstrictly increasing\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2105,
        "slug": "watering-plants-ii",
        "url": "https://leetcode.com/problems/watering-plants-ii/",
        "titulo": "Watering Plants II",
        "enunciado": "Alice and Bob want to water \nn\n plants in their garden. The plants are arranged in a row and are labeled from \n0\n to \nn - 1\n from left to right where the \ni\nth\n plant is located at \nx = i\n.\n\n\nEach plant needs a specific amount of water. Alice and Bob have a watering can each, \ninitially full\n. They water the plants in the following way:\n\n\n\n\nAlice waters the plants in order from \nleft to right\n, starting from the \n0\nth\n plant. Bob waters the plants in order from \nright to left\n, starting from the \n(n - 1)\nth\n plant. They begin watering the plants \nsimultaneously\n.\n\n\nIt takes the same amount of time to water each plant regardless of how much water it needs.\n\n\nAlice/Bob \nmust\n water the plant if they have enough in their can to \nfully\n water it. Otherwise, they \nfirst\n refill their can (instantaneously) then water the plant.\n\n\nIn case both Alice and Bob reach the same plant, the one with \nmore\n water currently in his/her watering can should water this plant. If they have the same amount of water, then Alice should water this plant.\n\n\n\n\nGiven a \n0-indexed\n integer array \nplants\n of \nn\n integers, where \nplants[i]\n is the amount of water the \ni\nth\n plant needs, and two integers \ncapacityA\n and \ncapacityB\n representing the capacities of Alice's and Bob's watering cans respectively, return \nthe \nnumber of times\n they have to refill to water all the plants\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n plants = [2,2,3,3], capacityA = 5, capacityB = 5\n\nOutput:\n 1\n\nExplanation:\n\n- Initially, Alice and Bob have 5 units of water each in their watering cans.\n- Alice waters plant 0, Bob waters plant 3.\n- Alice and Bob now have 3 units and 2 units of water respectively.\n- Alice has enough water for plant 1, so she waters it. Bob does not have enough water for plant 2, so he refills his can then waters it.\nSo, the total number of times they have to refill to water all the plants is 0 + 0 + 1 + 0 = 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n plants = [2,2,3,3], capacityA = 3, capacityB = 4\n\nOutput:\n 2\n\nExplanation:\n\n- Initially, Alice and Bob have 3 units and 4 units of water in their watering cans respectively.\n- Alice waters plant 0, Bob waters plant 3.\n- Alice and Bob now have 1 unit of water each, and need to water plants 1 and 2 respectively.\n- Since neither of them have enough water for their current plants, they refill their cans and then water the plants.\nSo, the total number of times they have to refill to water all the plants is 0 + 1 + 1 + 0 = 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n plants = [5], capacityA = 10, capacityB = 8\n\nOutput:\n 0\n\nExplanation:\n\n- There is only one plant.\n- Alice's watering can has 10 units of water, whereas Bob's can has 8 units. Since Alice has more water in her can, she waters this plant.\nSo, the total number of times they have to refill is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == plants.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= plants[i] <= 10\n6\n\n\nmax(plants[i]) <= capacityA, capacityB <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2104,
        "slug": "sum-of-subarray-ranges",
        "url": "https://leetcode.com/problems/sum-of-subarray-ranges/",
        "titulo": "Sum of Subarray Ranges",
        "enunciado": "You are given an integer array \nnums\n. The \nrange\n of a subarray of \nnums\n is the difference between the largest and smallest element in the subarray.\n\n\nReturn \nthe \nsum of all\n subarray ranges of \nnums\n.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 4\n\nExplanation:\n The 6 subarrays of nums are the following:\n[1], range = largest - smallest = 1 - 1 = 0 \n[2], range = 2 - 2 = 0\n[3], range = 3 - 3 = 0\n[1,2], range = 2 - 1 = 1\n[2,3], range = 3 - 2 = 1\n[1,2,3], range = 3 - 1 = 2\nSo the sum of all ranges is 0 + 0 + 0 + 1 + 1 + 2 = 4.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,3]\n\nOutput:\n 4\n\nExplanation:\n The 6 subarrays of nums are the following:\n[1], range = largest - smallest = 1 - 1 = 0\n[3], range = 3 - 3 = 0\n[3], range = 3 - 3 = 0\n[1,3], range = 3 - 1 = 2\n[3,3], range = 3 - 3 = 0\n[1,3,3], range = 3 - 1 = 2\nSo the sum of all ranges is 0 + 0 + 0 + 2 + 0 + 2 = 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [4,-2,-3,4,1]\n\nOutput:\n 59\n\nExplanation:\n The sum of all subarray ranges of nums is 59.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\n\n\n \n\n\nFollow-up:\n Could you find a solution with \nO(n)\n time complexity?",
        "temas": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2116,
        "slug": "check-if-a-parentheses-string-can-be-valid",
        "url": "https://leetcode.com/problems/check-if-a-parentheses-string-can-be-valid/",
        "titulo": "Check if a Parentheses String Can Be Valid",
        "enunciado": "A parentheses string is a \nnon-empty\n string consisting only of \n'('\n and \n')'\n. It is valid if \nany\n of the following conditions is \ntrue\n:\n\n\n\n\nIt is \n()\n.\n\n\nIt can be written as \nAB\n (\nA\n concatenated with \nB\n), where \nA\n and \nB\n are valid parentheses strings.\n\n\nIt can be written as \n(A)\n, where \nA\n is a valid parentheses string.\n\n\n\n\nYou are given a parentheses string \ns\n and a string \nlocked\n, both of length \nn\n. \nlocked\n is a binary string consisting only of \n'0'\ns and \n'1'\ns. For \neach\n index \ni\n of \nlocked\n,\n\n\n\n\nIf \nlocked[i]\n is \n'1'\n, you \ncannot\n change \ns[i]\n.\n\n\nBut if \nlocked[i]\n is \n'0'\n, you \ncan\n change \ns[i]\n to either \n'('\n or \n')'\n.\n\n\n\n\nReturn \ntrue\n \nif you can make \ns\n a valid parentheses string\n. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n s = \"))()))\", locked = \"010100\"\n\nOutput:\n true\n\nExplanation:\n locked[1] == '1' and locked[3] == '1', so we cannot change s[1] or s[3].\nWe change s[0] and s[4] to '(' while leaving s[2] and s[5] unchanged to make s valid.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"()()\", locked = \"0000\"\n\nOutput:\n true\n\nExplanation:\n We do not need to make any changes because s is already valid.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \")\", locked = \"0\"\n\nOutput:\n false\n\nExplanation:\n locked permits us to change s[0]. \nChanging s[0] to either '(' or ')' will not make s valid.\n\n\n\nExample 4:\n\n\n\n\nInput:\n s = \"(((())(((())\", locked = \"111111010111\"\n\nOutput:\n true\n\nExplanation:\n locked permits us to change s[6] and s[8]. \nWe change s[6] and s[8] to ')' to make s valid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == s.length == locked.length\n\n\n1 <= n <= 10\n5\n\n\ns[i]\n is either \n'('\n or \n')'\n.\n\n\nlocked[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 2115,
        "slug": "find-all-possible-recipes-from-given-supplies",
        "url": "https://leetcode.com/problems/find-all-possible-recipes-from-given-supplies/",
        "titulo": "Find All Possible Recipes from Given Supplies",
        "enunciado": "You have information about \nn\n different recipes. You are given a string array \nrecipes\n and a 2D string array \ningredients\n. The \ni\nth\n recipe has the name \nrecipes[i]\n, and you can \ncreate\n it if you have \nall\n the needed ingredients from \ningredients[i]\n. A recipe can also be an ingredient for \nother \nrecipes, i.e., \ningredients[i]\n may contain a string that is in \nrecipes\n.\n\n\nYou are also given a string array \nsupplies\n containing all the ingredients that you initially have, and you have an infinite supply of all of them.\n\n\nReturn \na list of all the recipes that you can create. \nYou may return the answer in \nany order\n.\n\n\nNote that two recipes may contain each other in their ingredients.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n recipes = [\"bread\"], ingredients = [[\"yeast\",\"flour\"]], supplies = [\"yeast\",\"flour\",\"corn\"]\n\nOutput:\n [\"bread\"]\n\nExplanation:\n\nWe can create \"bread\" since we have the ingredients \"yeast\" and \"flour\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n recipes = [\"bread\",\"sandwich\"], ingredients = [[\"yeast\",\"flour\"],[\"bread\",\"meat\"]], supplies = [\"yeast\",\"flour\",\"meat\"]\n\nOutput:\n [\"bread\",\"sandwich\"]\n\nExplanation:\n\nWe can create \"bread\" since we have the ingredients \"yeast\" and \"flour\".\nWe can create \"sandwich\" since we have the ingredient \"meat\" and can create the ingredient \"bread\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n recipes = [\"bread\",\"sandwich\",\"burger\"], ingredients = [[\"yeast\",\"flour\"],[\"bread\",\"meat\"],[\"sandwich\",\"meat\",\"bread\"]], supplies = [\"yeast\",\"flour\",\"meat\"]\n\nOutput:\n [\"bread\",\"sandwich\",\"burger\"]\n\nExplanation:\n\nWe can create \"bread\" since we have the ingredients \"yeast\" and \"flour\".\nWe can create \"sandwich\" since we have the ingredient \"meat\" and can create the ingredient \"bread\".\nWe can create \"burger\" since we have the ingredient \"meat\" and can create the ingredients \"bread\" and \"sandwich\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == recipes.length == ingredients.length\n\n\n1 <= n <= 100\n\n\n1 <= ingredients[i].length, supplies.length <= 100\n\n\n1 <= recipes[i].length, ingredients[i][j].length, supplies[k].length <= 10\n\n\nrecipes[i], ingredients[i][j]\n, and \nsupplies[k]\n consist only of lowercase English letters.\n\n\nAll the values of \nrecipes\n and \nsupplies\n combined are unique.\n\n\nEach \ningredients[i]\n does not contain any duplicate values.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2096,
        "slug": "step-by-step-directions-from-a-binary-tree-node-to-another",
        "url": "https://leetcode.com/problems/step-by-step-directions-from-a-binary-tree-node-to-another/",
        "titulo": "Step-By-Step Directions From a Binary Tree Node to Another",
        "enunciado": "You are given the \nroot\n of a \nbinary tree\n with \nn\n nodes. Each node is uniquely assigned a value from \n1\n to \nn\n. You are also given an integer \nstartValue\n representing the value of the start node \ns\n, and a different integer \ndestValue\n representing the value of the destination node \nt\n.\n\n\nFind the \nshortest path\n starting from node \ns\n and ending at node \nt\n. Generate step-by-step directions of such path as a string consisting of only the \nuppercase\n letters \n'L'\n, \n'R'\n, and \n'U'\n. Each letter indicates a specific direction:\n\n\n\n\n'L'\n means to go from a node to its \nleft child\n node.\n\n\n'R'\n means to go from a node to its \nright child\n node.\n\n\n'U'\n means to go from a node to its \nparent\n node.\n\n\n\n\nReturn \nthe step-by-step directions of the \nshortest path\n from node \ns\n to node\n \nt\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,1,2,3,null,6,4], startValue = 3, destValue = 6\n\nOutput:\n \"UURL\"\n\nExplanation:\n The shortest path is: 3 → 1 → 5 → 2 → 6.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [2,1], startValue = 2, destValue = 1\n\nOutput:\n \"L\"\n\nExplanation:\n The shortest path is: 2 → 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is \nn\n.\n\n\n2 <= n <= 10\n5\n\n\n1 <= Node.val <= n\n\n\nAll the values in the tree are \nunique\n.\n\n\n1 <= startValue, destValue <= n\n\n\nstartValue != destValue",
        "temas": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 2095,
        "slug": "delete-the-middle-node-of-a-linked-list",
        "url": "https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/",
        "titulo": "Delete the Middle Node of a Linked List",
        "enunciado": "You are given the \nhead\n of a linked list. \nDelete\n the \nmiddle node\n, and return \nthe\n \nhead\n \nof the modified linked list\n.\n\n\nThe \nmiddle node\n of a linked list of size \nn\n is the \n⌊n / 2⌋\nth\n node from the \nstart\n using \n0-based indexing\n, where \n⌊x⌋\n denotes the largest integer less than or equal to \nx\n.\n\n\n\n\nFor \nn\n = \n1\n, \n2\n, \n3\n, \n4\n, and \n5\n, the middle nodes are \n0\n, \n1\n, \n1\n, \n2\n, and \n2\n, respectively.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,3,4,7,1,2,6]\n\nOutput:\n [1,3,4,1,2,6]\n\nExplanation:\n\nThe above figure represents the given linked list. The indices of the nodes are written below.\nSince n = 7, node 3 with value 7 is the middle node, which is marked in red.\nWe return the new list after removing this node. \n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4]\n\nOutput:\n [1,2,4]\n\nExplanation:\n\nThe above figure represents the given linked list.\nFor n = 4, node 2 with value 3 is the middle node, which is marked in red.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n head = [2,1]\n\nOutput:\n [2]\n\nExplanation:\n\nThe above figure represents the given linked list.\nFor n = 2, node 1 with value 1 is the middle node, which is marked in red.\nNode 0 with value 2 is the only node remaining after removing node 1.\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5",
        "temas": [
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2091,
        "slug": "removing-minimum-and-maximum-from-array",
        "url": "https://leetcode.com/problems/removing-minimum-and-maximum-from-array/",
        "titulo": "Removing Minimum and Maximum From Array",
        "enunciado": "You are given a \n0-indexed\n array of \ndistinct\n integers \nnums\n.\n\n\nThere is an element in \nnums\n that has the \nlowest\n value and an element that has the \nhighest\n value. We call them the \nminimum\n and \nmaximum\n respectively. Your goal is to remove \nboth\n these elements from the array.\n\n\nA \ndeletion\n is defined as either removing an element from the \nfront\n of the array or removing an element from the \nback\n of the array.\n\n\nReturn \nthe \nminimum\n number of deletions it would take to remove \nboth\n the minimum and maximum element from the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,\n10\n,7,5,4,\n1\n,8,6]\n\nOutput:\n 5\n\nExplanation:\n \nThe minimum element in the array is nums[5], which is 1.\nThe maximum element in the array is nums[1], which is 10.\nWe can remove both the minimum and maximum by removing 2 elements from the front and 3 elements from the back.\nThis results in 2 + 3 = 5 deletions, which is the minimum number possible.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,\n-4\n,\n19\n,1,8,-2,-3,5]\n\nOutput:\n 3\n\nExplanation:\n \nThe minimum element in the array is nums[1], which is -4.\nThe maximum element in the array is nums[2], which is 19.\nWe can remove both the minimum and maximum by removing 3 elements from the front.\nThis results in only 3 deletions, which is the minimum number possible.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [\n101\n]\n\nOutput:\n 1\n\nExplanation:\n  \nThere is only one element in the array, which makes it both the minimum and maximum element.\nWe can remove it with 1 deletion.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n5\n <= nums[i] <= 10\n5\n\n\nThe integers in \nnums\n are \ndistinct\n.",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2090,
        "slug": "k-radius-subarray-averages",
        "url": "https://leetcode.com/problems/k-radius-subarray-averages/",
        "titulo": "K Radius Subarray Averages",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n of \nn\n integers, and an integer \nk\n.\n\n\nThe \nk-radius average\n for a subarray of \nnums\n \ncentered\n at some index \ni\n with the \nradius\n \nk\n is the average of \nall\n elements in \nnums\n between the indices \ni - k\n and \ni + k\n (\ninclusive\n). If there are less than \nk\n elements before \nor\n after the index \ni\n, then the \nk-radius average\n is \n-1\n.\n\n\nBuild and return \nan array \navgs\n of length \nn\n where \navgs[i]\n is the \nk-radius average\n for the subarray centered at index \ni\n.\n\n\nThe \naverage\n of \nx\n elements is the sum of the \nx\n elements divided by \nx\n, using \ninteger division\n. The integer division truncates toward zero, which means losing its fractional part.\n\n\n\n\nFor example, the average of four elements \n2\n, \n3\n, \n1\n, and \n5\n is \n(2 + 3 + 1 + 5) / 4 = 11 / 4 = 2.75\n, which truncates to \n2\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n nums = [7,4,3,9,1,8,5,2,6], k = 3\n\nOutput:\n [-1,-1,-1,5,4,4,-1,-1,-1]\n\nExplanation:\n\n- avg[0], avg[1], and avg[2] are -1 because there are less than k elements \nbefore\n each index.\n- The sum of the subarray centered at index 3 with radius 3 is: 7 + 4 + 3 + 9 + 1 + 8 + 5 = 37.\n  Using \ninteger division\n, avg[3] = 37 / 7 = 5.\n- For the subarray centered at index 4, avg[4] = (4 + 3 + 9 + 1 + 8 + 5 + 2) / 7 = 4.\n- For the subarray centered at index 5, avg[5] = (3 + 9 + 1 + 8 + 5 + 2 + 6) / 7 = 4.\n- avg[6], avg[7], and avg[8] are -1 because there are less than k elements \nafter\n each index.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [100000], k = 0\n\nOutput:\n [100000]\n\nExplanation:\n\n- The sum of the subarray centered at index 0 with radius 0 is: 100000.\n  avg[0] = 100000 / 1 = 100000.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [8], k = 100000\n\nOutput:\n [-1]\n\nExplanation:\n \n- avg[0] is -1 because there are less than k elements before and after index 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= nums[i], k <= 10\n5",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2101,
        "slug": "detonate-the-maximum-bombs",
        "url": "https://leetcode.com/problems/detonate-the-maximum-bombs/",
        "titulo": "Detonate the Maximum Bombs",
        "enunciado": "You are given a list of bombs. The \nrange\n of a bomb is defined as the area where its effect can be felt. This area is in the shape of a \ncircle\n with the center as the location of the bomb.\n\n\nThe bombs are represented by a \n0-indexed\n 2D integer array \nbombs\n where \nbombs[i] = [x\ni\n, y\ni\n, r\ni\n]\n. \nx\ni\n and \ny\ni\n denote the X-coordinate and Y-coordinate of the location of the \ni\nth\n bomb, whereas \nr\ni\n denotes the \nradius\n of its range.\n\n\nYou may choose to detonate a \nsingle\n bomb. When a bomb is detonated, it will detonate \nall bombs\n that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\n\n\nGiven the list of \nbombs\n, return \nthe \nmaximum\n number of bombs that can be detonated if you are allowed to detonate \nonly one\n bomb\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n bombs = [[2,1,3],[6,1,4]]\n\nOutput:\n 2\n\nExplanation:\n\nThe above figure shows the positions and ranges of the 2 bombs.\nIf we detonate the left bomb, the right bomb will not be affected.\nBut if we detonate the right bomb, both bombs will be detonated.\nSo the maximum bombs that can be detonated is max(1, 2) = 2.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n bombs = [[1,1,5],[10,10,5]]\n\nOutput:\n 1\n\nExplanation:\n\nDetonating either bomb will not detonate the other bomb, so the maximum number of bombs that can be detonated is 1.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n bombs = [[1,2,3],[2,3,1],[3,4,2],[4,5,3],[5,6,4]]\n\nOutput:\n 5\n\nExplanation:\n\nThe best bomb to detonate is bomb 0 because:\n- Bomb 0 detonates bombs 1 and 2. The red circle denotes the range of bomb 0.\n- Bomb 2 detonates bomb 3. The blue circle denotes the range of bomb 2.\n- Bomb 3 detonates bomb 4. The green circle denotes the range of bomb 3.\nThus all 5 bombs are detonated.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= bombs.length <= 100\n\n\nbombs[i].length == 3\n\n\n1 <= x\ni\n, y\ni\n, r\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Math",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2100,
        "slug": "find-good-days-to-rob-the-bank",
        "url": "https://leetcode.com/problems/find-good-days-to-rob-the-bank/",
        "titulo": "Find Good Days to Rob the Bank",
        "enunciado": "You and a gang of thieves are planning on robbing a bank. You are given a \n0-indexed\n integer array \nsecurity\n, where \nsecurity[i]\n is the number of guards on duty on the \ni\nth\n day. The days are numbered starting from \n0\n. You are also given an integer \ntime\n.\n\n\nThe \ni\nth\n day is a good day to rob the bank if:\n\n\n\n\nThere are at least \ntime\n days before and after the \ni\nth\n day,\n\n\nThe number of guards at the bank for the \ntime\n days \nbefore\n \ni\n are \nnon-increasing\n, and\n\n\nThe number of guards at the bank for the \ntime\n days \nafter\n \ni\n are \nnon-decreasing\n.\n\n\n\n\nMore formally, this means day \ni\n is a good day to rob the bank if and only if \nsecurity[i - time] >= security[i - time + 1] >= ... >= security[i] <= ... <= security[i + time - 1] <= security[i + time]\n.\n\n\nReturn \na list of \nall\n days \n(0-indexed) \nthat are good days to rob the bank\n.\n The order that the days are returned in does\n \nnot\n matter.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n security = [5,3,3,3,5,6,2], time = 2\n\nOutput:\n [2,3]\n\nExplanation:\n\nOn day 2, we have security[0] >= security[1] >= security[2] <= security[3] <= security[4].\nOn day 3, we have security[1] >= security[2] >= security[3] <= security[4] <= security[5].\nNo other days satisfy this condition, so days 2 and 3 are the only good days to rob the bank.\n\n\n\nExample 2:\n\n\n\n\nInput:\n security = [1,1,1,1,1], time = 0\n\nOutput:\n [0,1,2,3,4]\n\nExplanation:\n\nSince time equals 0, every day is a good day to rob the bank, so return every day.\n\n\n\nExample 3:\n\n\n\n\nInput:\n security = [1,2,3,4,5,6], time = 2\n\nOutput:\n []\n\nExplanation:\n\nNo day has 2 days before it that have a non-increasing number of guards.\nThus, no day is a good day to rob the bank, so return an empty list.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= security.length <= 10\n5\n\n\n0 <= security[i], time <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2075,
        "slug": "decode-the-slanted-ciphertext",
        "url": "https://leetcode.com/problems/decode-the-slanted-ciphertext/",
        "titulo": "Decode the Slanted Ciphertext",
        "enunciado": "A string \noriginalText\n is encoded using a \nslanted transposition cipher\n to a string \nencodedText\n with the help of a matrix having a \nfixed number of rows\n \nrows\n.\n\n\noriginalText\n is placed first in a top-left to bottom-right manner.\n\n\n\n\nThe blue cells are filled first, followed by the red cells, then the yellow cells, and so on, until we reach the end of \noriginalText\n. The arrow indicates the order in which the cells are filled. All empty cells are filled with \n' '\n. The number of columns is chosen such that the rightmost column will \nnot be empty\n after filling in \noriginalText\n.\n\n\nencodedText\n is then formed by appending all characters of the matrix in a row-wise fashion.\n\n\n\n\nThe characters in the blue cells are appended first to \nencodedText\n, then the red cells, and so on, and finally the yellow cells. The arrow indicates the order in which the cells are accessed.\n\n\nFor example, if \noriginalText = \"cipher\"\n and \nrows = 3\n, then we encode it in the following manner:\n\n\n\n\nThe blue arrows depict how \noriginalText\n is placed in the matrix, and the red arrows denote the order in which \nencodedText\n is formed. In the above example, \nencodedText = \"ch ie pr\"\n.\n\n\nGiven the encoded string \nencodedText\n and number of rows \nrows\n, return \nthe original string\n \noriginalText\n.\n\n\nNote:\n \noriginalText\n \ndoes not\n have any trailing spaces \n' '\n. The test cases are generated such that there is only one possible \noriginalText\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n encodedText = \"ch   ie   pr\", rows = 3\n\nOutput:\n \"cipher\"\n\nExplanation:\n This is the same example described in the problem description.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n encodedText = \"iveo    eed   l te   olc\", rows = 4\n\nOutput:\n \"i love leetcode\"\n\nExplanation:\n The figure above denotes the matrix that was used to encode originalText. \nThe blue arrows show how we can find originalText from encodedText.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n encodedText = \"coding\", rows = 1\n\nOutput:\n \"coding\"\n\nExplanation:\n Since there is only 1 row, both originalText and encodedText are the same.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= encodedText.length <= 10\n6\n\n\nencodedText\n consists of lowercase English letters and \n' '\n only.\n\n\nencodedText\n is a valid encoding of some \noriginalText\n that \ndoes not\n have trailing spaces.\n\n\n1 <= rows <= 1000\n\n\nThe testcases are generated such that there is \nonly one\n possible \noriginalText\n.",
        "temas": [
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 2074,
        "slug": "reverse-nodes-in-even-length-groups",
        "url": "https://leetcode.com/problems/reverse-nodes-in-even-length-groups/",
        "titulo": "Reverse Nodes in Even Length Groups",
        "enunciado": "You are given the \nhead\n of a linked list.\n\n\nThe nodes in the linked list are \nsequentially\n assigned to \nnon-empty\n groups whose lengths form the sequence of the natural numbers (\n1, 2, 3, 4, ...\n). The \nlength\n of a group is the number of nodes assigned to it. In other words,\n\n\n\n\nThe \n1\nst\n node is assigned to the first group.\n\n\nThe \n2\nnd\n and the \n3\nrd\n nodes are assigned to the second group.\n\n\nThe \n4\nth\n, \n5\nth\n, and \n6\nth\n nodes are assigned to the third group, and so on.\n\n\n\n\nNote that the length of the last group may be less than or equal to \n1 + the length of the second to last group\n.\n\n\nReverse\n the nodes in each group with an \neven\n length, and return \nthe\n \nhead\n \nof the modified linked list\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [5,2,6,3,9,1,7,3,8,4]\n\nOutput:\n [5,6,2,3,9,1,4,8,3,7]\n\nExplanation:\n\n- The length of the first group is 1, which is odd, hence no reversal occurs.\n- The length of the second group is 2, which is even, hence the nodes are reversed.\n- The length of the third group is 3, which is odd, hence no reversal occurs.\n- The length of the last group is 4, which is even, hence the nodes are reversed.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,1,0,6]\n\nOutput:\n [1,0,1,6]\n\nExplanation:\n\n- The length of the first group is 1. No reversal occurs.\n- The length of the second group is 2. The nodes are reversed.\n- The length of the last group is 1. No reversal occurs.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n head = [1,1,0,6,5]\n\nOutput:\n [1,0,1,5,6]\n\nExplanation:\n\n- The length of the first group is 1. No reversal occurs.\n- The length of the second group is 2. The nodes are reversed.\n- The length of the last group is 2. The nodes are reversed.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[1, 10\n5\n]\n.\n\n\n0 <= Node.val <= 10\n5",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2087,
        "slug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
        "url": "https://leetcode.com/problems/minimum-cost-homecoming-of-a-robot-in-a-grid/",
        "titulo": "Minimum Cost Homecoming of a Robot in a Grid",
        "enunciado": "There is an \nm x n\n grid, where \n(0, 0)\n is the top-left cell and \n(m - 1, n - 1)\n is the bottom-right cell. You are given an integer array \nstartPos\n where \nstartPos = [start\nrow\n, start\ncol\n]\n indicates that \ninitially\n, a \nrobot\n is at the cell \n(start\nrow\n, start\ncol\n)\n. You are also given an integer array \nhomePos\n where \nhomePos = [home\nrow\n, home\ncol\n]\n indicates that its \nhome\n is at the cell \n(home\nrow\n, home\ncol\n)\n.\n\n\nThe robot needs to go to its home. It can move one cell in four directions: \nleft\n, \nright\n, \nup\n, or \ndown\n, and it can not move outside the boundary. Every move incurs some cost. You are further given two \n0-indexed\n integer arrays: \nrowCosts\n of length \nm\n and \ncolCosts\n of length \nn\n.\n\n\n\n\nIf the robot moves \nup\n or \ndown\n into a cell whose \nrow\n is \nr\n, then this move costs \nrowCosts[r]\n.\n\n\nIf the robot moves \nleft\n or \nright\n into a cell whose \ncolumn\n is \nc\n, then this move costs \ncolCosts[c]\n.\n\n\n\n\nReturn \nthe \nminimum total cost\n for this robot to return home\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n startPos = [1, 0], homePos = [2, 3], rowCosts = [5, 4, 3], colCosts = [8, 2, 6, 7]\n\nOutput:\n 18\n\nExplanation:\n One optimal path is that:\nStarting from (1, 0)\n-> It goes down to (\n2\n, 0). This move costs rowCosts[2] = 3.\n-> It goes right to (2, \n1\n). This move costs colCosts[1] = 2.\n-> It goes right to (2, \n2\n). This move costs colCosts[2] = 6.\n-> It goes right to (2, \n3\n). This move costs colCosts[3] = 7.\nThe total cost is 3 + 2 + 6 + 7 = 18\n\n\nExample 2:\n\n\n\n\nInput:\n startPos = [0, 0], homePos = [0, 0], rowCosts = [5], colCosts = [26]\n\nOutput:\n 0\n\nExplanation:\n The robot is already at its home. Since no moves occur, the total cost is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == rowCosts.length\n\n\nn == colCosts.length\n\n\n1 <= m, n <= 10\n5\n\n\n0 <= rowCosts[r], colCosts[c] <= 10\n4\n\n\nstartPos.length == 2\n\n\nhomePos.length == 2\n\n\n0 <= start\nrow\n, home\nrow\n < m\n\n\n0 <= start\ncol\n, home\ncol\n < n",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2086,
        "slug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
        "url": "https://leetcode.com/problems/minimum-number-of-food-buckets-to-feed-the-hamsters/",
        "titulo": "Minimum Number of Food Buckets to Feed the Hamsters",
        "enunciado": "You are given a \n0-indexed\n string \nhamsters\n where \nhamsters[i]\n is either:\n\n\n\n\n'H'\n indicating that there is a hamster at index \ni\n, or\n\n\n'.'\n indicating that index \ni\n is empty.\n\n\n\n\nYou will add some number of food buckets at the empty indices in order to feed the hamsters. A hamster can be fed if there is at least one food bucket to its left or to its right. More formally, a hamster at index \ni\n can be fed if you place a food bucket at index \ni - 1\n \nand/or\n at index \ni + 1\n.\n\n\nReturn \nthe minimum number of food buckets you should \nplace at empty indices\n to feed all the hamsters or \n-1\n if it is impossible to feed all of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n hamsters = \"H..H\"\n\nOutput:\n 2\n\nExplanation:\n We place two food buckets at indices 1 and 2.\nIt can be shown that if we place only one food bucket, one of the hamsters will not be fed.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n hamsters = \".H.H.\"\n\nOutput:\n 1\n\nExplanation:\n We place one food bucket at index 2.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n hamsters = \".HHH.\"\n\nOutput:\n -1\n\nExplanation:\n If we place a food bucket at every empty index as shown, the hamster at index 2 will not be able to eat.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= hamsters.length <= 10\n5\n\n\nhamsters[i]\n is either\n'H'\n or \n'.'\n.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 2064,
        "slug": "minimized-maximum-of-products-distributed-to-any-store",
        "url": "https://leetcode.com/problems/minimized-maximum-of-products-distributed-to-any-store/",
        "titulo": "Minimized Maximum of Products Distributed to Any Store",
        "enunciado": "You are given an integer \nn\n indicating there are \nn\n specialty retail stores. There are \nm\n product types of varying amounts, which are given as a \n0-indexed\n integer array \nquantities\n, where \nquantities[i]\n represents the number of products of the \ni\nth\n product type.\n\n\nYou need to distribute \nall products\n to the retail stores following these rules:\n\n\n\n\nA store can only be given \nat most one product type\n but can be given \nany\n amount of it.\n\n\nAfter distribution, each store will have been given some number of products (possibly \n0\n). Let \nx\n represent the maximum number of products given to any store. You want \nx\n to be as small as possible, i.e., you want to \nminimize\n the \nmaximum\n number of products that are given to any store.\n\n\n\n\nReturn \nthe minimum possible\n \nx\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 6, quantities = [11,6]\n\nOutput:\n 3\n\nExplanation:\n One optimal way is:\n- The 11 products of type 0 are distributed to the first four stores in these amounts: 2, 3, 3, 3\n- The 6 products of type 1 are distributed to the other two stores in these amounts: 3, 3\nThe maximum number of products given to any store is max(2, 3, 3, 3, 3, 3) = 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 7, quantities = [15,10,10]\n\nOutput:\n 5\n\nExplanation:\n One optimal way is:\n- The 15 products of type 0 are distributed to the first three stores in these amounts: 5, 5, 5\n- The 10 products of type 1 are distributed to the next two stores in these amounts: 5, 5\n- The 10 products of type 2 are distributed to the last two stores in these amounts: 5, 5\nThe maximum number of products given to any store is max(5, 5, 5, 5, 5, 5, 5) = 5.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 1, quantities = [100000]\n\nOutput:\n 100000\n\nExplanation:\n The only optimal way is:\n- The 100000 products of type 0 are distributed to the only store.\nThe maximum number of products given to any store is max(100000) = 100000.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == quantities.length\n\n\n1 <= m <= n <= 10\n5\n\n\n1 <= quantities[i] <= 10\n5",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2063,
        "slug": "vowels-of-all-substrings",
        "url": "https://leetcode.com/problems/vowels-of-all-substrings/",
        "titulo": "Vowels of All Substrings",
        "enunciado": "Given a string \nword\n, return \nthe \nsum of the number of vowels\n (\n'a'\n, \n'e'\n,\n \n'i'\n,\n \n'o'\n, and\n \n'u'\n)\n \nin every substring of \nword\n.\n\n\nA \nsubstring\n is a contiguous (non-empty) sequence of characters within a string.\n\n\nNote:\n Due to the large constraints, the answer may not fit in a signed 32-bit integer. Please be careful during the calculations.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word = \"aba\"\n\nOutput:\n 6\n\nExplanation:\n \nAll possible substrings are: \"a\", \"ab\", \"aba\", \"b\", \"ba\", and \"a\".\n- \"b\" has 0 vowels in it\n- \"a\", \"ab\", \"ba\", and \"a\" have 1 vowel each\n- \"aba\" has 2 vowels in it\nHence, the total sum of vowels = 0 + 1 + 1 + 1 + 1 + 2 = 6. \n\n\n\nExample 2:\n\n\n\n\nInput:\n word = \"abc\"\n\nOutput:\n 3\n\nExplanation:\n \nAll possible substrings are: \"a\", \"ab\", \"abc\", \"b\", \"bc\", and \"c\".\n- \"a\", \"ab\", and \"abc\" have 1 vowel each\n- \"b\", \"bc\", and \"c\" have 0 vowels each\nHence, the total sum of vowels = 1 + 1 + 1 + 0 + 0 + 0 = 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n word = \"ltcd\"\n\nOutput:\n 0\n\nExplanation:\n There are no vowels in any substring of \"ltcd\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 10\n5\n\n\nword\n consists of lowercase English letters.",
        "temas": [
            "Math",
            "String",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2059,
        "slug": "minimum-operations-to-convert-number",
        "url": "https://leetcode.com/problems/minimum-operations-to-convert-number/",
        "titulo": "Minimum Operations to Convert Number",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n containing \ndistinct\n numbers, an integer \nstart\n, and an integer \ngoal\n. There is an integer \nx\n that is initially set to \nstart\n, and you want to perform operations on \nx\n such that it is converted to \ngoal\n. You can perform the following operation repeatedly on the number \nx\n:\n\n\nIf \n0 <= x <= 1000\n, then for any index \ni\n in the array (\n0 <= i < nums.length\n), you can set \nx\n to any of the following:\n\n\n\n\nx + nums[i]\n\n\nx - nums[i]\n\n\nx ^ nums[i]\n (bitwise-XOR)\n\n\n\n\nNote that you can use each \nnums[i]\n any number of times in any order. Operations that set \nx\n to be out of the range \n0 <= x <= 1000\n are valid, but no more operations can be done afterward.\n\n\nReturn \nthe \nminimum\n number of operations needed to convert \nx = start\n into \ngoal\n, and \n-1\n if it is not possible\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,4,12], start = 2, goal = 12\n\nOutput:\n 2\n\nExplanation:\n We can go from 2 → 14 → 12 with the following 2 operations.\n- 2 + 12 = 14\n- 14 - 2 = 12\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,5,7], start = 0, goal = -4\n\nOutput:\n 2\n\nExplanation:\n We can go from 0 → 3 → -4 with the following 2 operations. \n- 0 + 3 = 3\n- 3 - 7 = -4\nNote that the last operation sets x out of the range 0 <= x <= 1000, which is valid.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,8,16], start = 0, goal = 1\n\nOutput:\n -1\n\nExplanation:\n There is no way to convert 0 into 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n-10\n9\n <= nums[i], goal <= 10\n9\n\n\n0 <= start <= 1000\n\n\nstart != goal\n\n\nAll the integers in \nnums\n are distinct.",
        "temas": [
            "Array",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2058,
        "slug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
        "url": "https://leetcode.com/problems/find-the-minimum-and-maximum-number-of-nodes-between-critical-points/",
        "titulo": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
        "enunciado": "A \ncritical point\n in a linked list is defined as \neither\n a \nlocal maxima\n or a \nlocal minima\n.\n\n\nA node is a \nlocal maxima\n if the current node has a value \nstrictly greater\n than the previous node and the next node.\n\n\nA node is a \nlocal minima\n if the current node has a value \nstrictly smaller\n than the previous node and the next node.\n\n\nNote that a node can only be a local maxima/minima if there exists \nboth\n a previous node and a next node.\n\n\nGiven a linked list \nhead\n, return \nan array of length 2 containing \n[minDistance, maxDistance]\n where \nminDistance\n is the \nminimum distance\n between \nany two distinct\n critical points and \nmaxDistance\n is the \nmaximum distance\n between \nany two distinct\n critical points. If there are \nfewer\n than two critical points, return \n[-1, -1]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [3,1]\n\nOutput:\n [-1,-1]\n\nExplanation:\n There are no critical points in [3,1].\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [5,3,1,2,5,1,2]\n\nOutput:\n [1,3]\n\nExplanation:\n There are three critical points:\n- [5,3,\n1\n,2,5,1,2]: The third node is a local minima because 1 is less than 3 and 2.\n- [5,3,1,2,\n5\n,1,2]: The fifth node is a local maxima because 5 is greater than 2 and 1.\n- [5,3,1,2,5,\n1\n,2]: The sixth node is a local minima because 1 is less than 5 and 2.\nThe minimum distance is between the fifth and the sixth node. minDistance = 6 - 5 = 1.\nThe maximum distance is between the third and the sixth node. maxDistance = 6 - 3 = 3.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n head = [1,3,2,2,3,2,2,2,7]\n\nOutput:\n [3,3]\n\nExplanation:\n There are two critical points:\n- [1,\n3\n,2,2,3,2,2,2,7]: The second node is a local maxima because 3 is greater than 1 and 2.\n- [1,3,2,2,\n3\n,2,2,2,7]: The fifth node is a local maxima because 3 is greater than 2 and 2.\nBoth the minimum and maximum distances are between the second and the fifth node.\nThus, minDistance and maxDistance is 5 - 2 = 3.\nNote that the last node is not considered a local maxima because it does not have a next node.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[2, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n5",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 2070,
        "slug": "most-beautiful-item-for-each-query",
        "url": "https://leetcode.com/problems/most-beautiful-item-for-each-query/",
        "titulo": "Most Beautiful Item for Each Query",
        "enunciado": "You are given a 2D integer array \nitems\n where \nitems[i] = [price\ni\n, beauty\ni\n]\n denotes the \nprice\n and \nbeauty\n of an item respectively.\n\n\nYou are also given a \n0-indexed\n integer array \nqueries\n. For each \nqueries[j]\n, you want to determine the \nmaximum beauty\n of an item whose \nprice\n is \nless than or equal\n to \nqueries[j]\n. If no such item exists, then the answer to this query is \n0\n.\n\n\nReturn \nan array \nanswer\n of the same length as \nqueries\n where \nanswer[j]\n is the answer to the \nj\nth\n query\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n items = [[1,2],[3,2],[2,4],[5,6],[3,5]], queries = [1,2,3,4,5,6]\n\nOutput:\n [2,4,5,5,6,6]\n\nExplanation:\n\n- For queries[0]=1, [1,2] is the only item which has price <= 1. Hence, the answer for this query is 2.\n- For queries[1]=2, the items which can be considered are [1,2] and [2,4]. \n  The maximum beauty among them is 4.\n- For queries[2]=3 and queries[3]=4, the items which can be considered are [1,2], [3,2], [2,4], and [3,5].\n  The maximum beauty among them is 5.\n- For queries[4]=5 and queries[5]=6, all items can be considered.\n  Hence, the answer for them is the maximum beauty of all items, i.e., 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n items = [[1,2],[1,2],[1,3],[1,4]], queries = [1]\n\nOutput:\n [4]\n\nExplanation:\n \nThe price of every item is equal to 1, so we choose the item with the maximum beauty 4. \nNote that multiple items can have the same price and/or beauty.  \n\n\n\nExample 3:\n\n\n\n\nInput:\n items = [[10,1000]], queries = [5]\n\nOutput:\n [0]\n\nExplanation:\n\nNo item has a price less than or equal to 5, so no item can be chosen.\nHence, the answer to the query is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= items.length, queries.length <= 10\n5\n\n\nitems[i].length == 2\n\n\n1 <= price\ni\n, beauty\ni\n, queries[j] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2069,
        "slug": "walking-robot-simulation-ii",
        "url": "https://leetcode.com/problems/walking-robot-simulation-ii/",
        "titulo": "Walking Robot Simulation II",
        "enunciado": "A \nwidth x height\n grid is on an XY-plane with the \nbottom-left\n cell at \n(0, 0)\n and the \ntop-right\n cell at \n(width - 1, height - 1)\n. The grid is aligned with the four cardinal directions (\n\"North\"\n, \n\"East\"\n, \n\"South\"\n, and \n\"West\"\n). A robot is \ninitially\n at cell \n(0, 0)\n facing direction \n\"East\"\n.\n\n\nThe robot can be instructed to move for a specific number of \nsteps\n. For each step, it does the following.\n\n\n\n\nAttempts to move \nforward one\n cell in the direction it is facing.\n\n\nIf the cell the robot is \nmoving to\n is \nout of bounds\n, the robot instead \nturns\n 90 degrees \ncounterclockwise\n and retries the step.\n\n\n\n\nAfter the robot finishes moving the number of steps required, it stops and awaits the next instruction.\n\n\nImplement the \nRobot\n class:\n\n\n\n\nRobot(int width, int height)\n Initializes the \nwidth x height\n grid with the robot at \n(0, 0)\n facing \n\"East\"\n.\n\n\nvoid step(int num)\n Instructs the robot to move forward \nnum\n steps.\n\n\nint[] getPos()\n Returns the current cell the robot is at, as an array of length 2, \n[x, y]\n.\n\n\nString getDir()\n Returns the current direction of the robot, \n\"North\"\n, \n\"East\"\n, \n\"South\"\n, or \n\"West\"\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"Robot\", \"step\", \"step\", \"getPos\", \"getDir\", \"step\", \"step\", \"step\", \"getPos\", \"getDir\"]\n[[6, 3], [2], [2], [], [], [2], [1], [4], [], []]\n\nOutput\n\n[null, null, null, [4, 0], \"East\", null, null, null, [1, 2], \"West\"]\n\n\nExplanation\n\nRobot robot = new Robot(6, 3); // Initialize the grid and the robot at (0, 0) facing East.\nrobot.step(2);  // It moves two steps East to (2, 0), and faces East.\nrobot.step(2);  // It moves two steps East to (4, 0), and faces East.\nrobot.getPos(); // return [4, 0]\nrobot.getDir(); // return \"East\"\nrobot.step(2);  // It moves one step East to (5, 0), and faces East.\n                // Moving the next step East would be out of bounds, so it turns and faces North.\n                // Then, it moves one step North to (5, 1), and faces North.\nrobot.step(1);  // It moves one step North to (5, 2), and faces \nNorth\n (not West).\nrobot.step(4);  // Moving the next step North would be out of bounds, so it turns and faces West.\n                // Then, it moves four steps West to (1, 2), and faces West.\nrobot.getPos(); // return [1, 2]\nrobot.getDir(); // return \"West\"\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= width, height <= 100\n\n\n1 <= num <= 10\n5\n\n\nAt most \n10\n4\n calls \nin total\n will be made to \nstep\n, \ngetPos\n, and \ngetDir\n.",
        "temas": [
            "Design",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Design",
        "has_image": true
    },
    {
        "id": 2049,
        "slug": "count-nodes-with-the-highest-score",
        "url": "https://leetcode.com/problems/count-nodes-with-the-highest-score/",
        "titulo": "Count Nodes With the Highest Score",
        "enunciado": "There is a \nbinary\n tree rooted at \n0\n consisting of \nn\n nodes. The nodes are labeled from \n0\n to \nn - 1\n. You are given a \n0-indexed\n integer array \nparents\n representing the tree, where \nparents[i]\n is the parent of node \ni\n. Since node \n0\n is the root, \nparents[0] == -1\n.\n\n\nEach node has a \nscore\n. To find the score of a node, consider if the node and the edges connected to it were \nremoved\n. The tree would become one or more \nnon-empty\n subtrees. The \nsize\n of a subtree is the number of the nodes in it. The \nscore\n of the node is the \nproduct of the sizes\n of all those subtrees.\n\n\nReturn \nthe \nnumber\n of nodes that have the \nhighest score\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n parents = [-1,2,0,2,0]\n\nOutput:\n 3\n\nExplanation:\n\n- The score of node 0 is: 3 * 1 = 3\n- The score of node 1 is: 4 = 4\n- The score of node 2 is: 1 * 1 * 2 = 2\n- The score of node 3 is: 4 = 4\n- The score of node 4 is: 4 = 4\nThe highest score is 4, and three nodes (node 1, node 3, and node 4) have the highest score.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n parents = [-1,2,0]\n\nOutput:\n 2\n\nExplanation:\n\n- The score of node 0 is: 2 = 2\n- The score of node 1 is: 2 = 2\n- The score of node 2 is: 1 * 1 = 1\nThe highest score is 2, and two nodes (node 0 and node 1) have the highest score.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == parents.length\n\n\n2 <= n <= 10\n5\n\n\nparents[0] == -1\n\n\n0 <= parents[i] <= n - 1\n for \ni != 0\n\n\nparents\n represents a valid binary tree.",
        "temas": [
            "Array",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2048,
        "slug": "next-greater-numerically-balanced-number",
        "url": "https://leetcode.com/problems/next-greater-numerically-balanced-number/",
        "titulo": "Next Greater Numerically Balanced Number",
        "enunciado": "An integer \nx\n is \nnumerically balanced\n if for every digit \nd\n in the number \nx\n, there are \nexactly\n \nd\n occurrences of that digit in \nx\n.\n\n\nGiven an integer \nn\n, return \nthe \nsmallest numerically balanced\n number \nstrictly greater\n than \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 22\n\nExplanation:\n \n22 is numerically balanced since:\n- The digit 2 occurs 2 times. \nIt is also the smallest numerically balanced number strictly greater than 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1000\n\nOutput:\n 1333\n\nExplanation:\n \n1333 is numerically balanced since:\n- The digit 1 occurs 1 time.\n- The digit 3 occurs 3 times. \nIt is also the smallest numerically balanced number strictly greater than 1000.\nNote that 1022 cannot be the answer because 0 appeared more than 0 times.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 3000\n\nOutput:\n 3133\n\nExplanation:\n \n3133 is numerically balanced since:\n- The digit 1 occurs 1 time.\n- The digit 3 occurs 3 times.\nIt is also the smallest numerically balanced number strictly greater than 3000.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10\n6",
        "temas": [
            "Hash Table",
            "Math",
            "Backtracking",
            "Counting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2044,
        "slug": "count-number-of-maximum-bitwise-or-subsets",
        "url": "https://leetcode.com/problems/count-number-of-maximum-bitwise-or-subsets/",
        "titulo": "Count Number of Maximum Bitwise-OR Subsets",
        "enunciado": "Given an integer array \nnums\n, find the \nmaximum\n possible \nbitwise OR\n of a subset of \nnums\n and return \nthe \nnumber of different non-empty subsets\n with the maximum bitwise OR\n.\n\n\nAn array \na\n is a \nsubset\n of an array \nb\n if \na\n can be obtained from \nb\n by deleting some (possibly zero) elements of \nb\n. Two subsets are considered \ndifferent\n if the indices of the elements chosen are different.\n\n\nThe bitwise OR of an array \na\n is equal to \na[0] \nOR\n a[1] \nOR\n ... \nOR\n a[a.length - 1]\n (\n0-indexed\n).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,1]\n\nOutput:\n 2\n\nExplanation:\n The maximum possible bitwise OR of a subset is 3. There are 2 subsets with a bitwise OR of 3:\n- [3]\n- [3,1]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,2,2]\n\nOutput:\n 7\n\nExplanation:\n All non-empty subsets of [2,2,2] have a bitwise OR of 2. There are 2\n3\n - 1 = 7 total subsets.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,2,1,5]\n\nOutput:\n 6\n\nExplanation:\n The maximum possible bitwise OR of a subset is 7. There are 6 subsets with a bitwise OR of 7:\n- [3,5]\n- [3,1,5]\n- [3,2,5]\n- [3,2,1,5]\n- [2,5]\n- [2,1,5]\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 16\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Backtracking",
            "Bit Manipulation",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2043,
        "slug": "simple-bank-system",
        "url": "https://leetcode.com/problems/simple-bank-system/",
        "titulo": "Simple Bank System",
        "enunciado": "You have been tasked with writing a program for a popular bank that will automate all its incoming transactions (transfer, deposit, and withdraw). The bank has \nn\n accounts numbered from \n1\n to \nn\n. The initial balance of each account is stored in a \n0-indexed\n integer array \nbalance\n, with the \n(i + 1)\nth\n account having an initial balance of \nbalance[i]\n.\n\n\nExecute all the \nvalid\n transactions. A transaction is \nvalid\n if:\n\n\n\n\nThe given account number(s) are between \n1\n and \nn\n, and\n\n\nThe amount of money withdrawn or transferred from is \nless than or equal\n to the balance of the account.\n\n\n\n\nImplement the \nBank\n class:\n\n\n\n\nBank(long[] balance)\n Initializes the object with the \n0-indexed\n integer array \nbalance\n.\n\n\nboolean transfer(int account1, int account2, long money)\n Transfers \nmoney\n dollars from the account numbered \naccount1\n to the account numbered \naccount2\n. Return \ntrue\n if the transaction was successful, \nfalse\n otherwise.\n\n\nboolean deposit(int account, long money)\n Deposit \nmoney\n dollars into the account numbered \naccount\n. Return \ntrue\n if the transaction was successful, \nfalse\n otherwise.\n\n\nboolean withdraw(int account, long money)\n Withdraw \nmoney\n dollars from the account numbered \naccount\n. Return \ntrue\n if the transaction was successful, \nfalse\n otherwise.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Bank\", \"withdraw\", \"transfer\", \"deposit\", \"transfer\", \"withdraw\"]\n[[[10, 100, 20, 50, 30]], [3, 10], [5, 1, 20], [5, 20], [3, 4, 15], [10, 50]]\n\nOutput\n\n[null, true, true, true, false, false]\n\n\nExplanation\n\nBank bank = new Bank([10, 100, 20, 50, 30]);\nbank.withdraw(3, 10);    // return true, account 3 has a balance of $20, so it is valid to withdraw $10.\n                         // Account 3 has $20 - $10 = $10.\nbank.transfer(5, 1, 20); // return true, account 5 has a balance of $30, so it is valid to transfer $20.\n                         // Account 5 has $30 - $20 = $10, and account 1 has $10 + $20 = $30.\nbank.deposit(5, 20);     // return true, it is valid to deposit $20 to account 5.\n                         // Account 5 has $10 + $20 = $30.\nbank.transfer(3, 4, 15); // return false, the current balance of account 3 is $10,\n                         // so it is invalid to transfer $15 from it.\nbank.withdraw(10, 50);   // return false, it is invalid because account 10 does not exist.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == balance.length\n\n\n1 <= n, account, account1, account2 <= 10\n5\n\n\n0 <= balance[i], money <= 10\n12\n\n\nAt most \n10\n4\n calls will be made to \neach\n function \ntransfer\n, \ndeposit\n, \nwithdraw\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Design",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2055,
        "slug": "plates-between-candles",
        "url": "https://leetcode.com/problems/plates-between-candles/",
        "titulo": "Plates Between Candles",
        "enunciado": "There is a long table with a line of plates and candles arranged on top of it. You are given a \n0-indexed\n string \ns\n consisting of characters \n'*'\n and \n'|'\n only, where a \n'*'\n represents a \nplate\n and a \n'|'\n represents a \ncandle\n.\n\n\nYou are also given a \n0-indexed\n 2D integer array \nqueries\n where \nqueries[i] = [left\ni\n, right\ni\n]\n denotes the \nsubstring\n \ns[left\ni\n...right\ni\n]\n (\ninclusive\n). For each query, you need to find the \nnumber\n of plates \nbetween candles\n that are \nin the substring\n. A plate is considered \nbetween candles\n if there is at least one candle to its left \nand\n at least one candle to its right \nin the substring\n.\n\n\n\n\nFor example, \ns = \"||**||**|*\"\n, and a query \n[3, 8]\n denotes the substring \n\"*||\n**\n|\"\n. The number of plates between candles in this substring is \n2\n, as each of the two plates has at least one candle \nin the substring\n to its left \nand\n right.\n\n\n\n\nReturn \nan integer array\n \nanswer\n \nwhere\n \nanswer[i]\n \nis the answer to the\n \ni\nth\n \nquery\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n s = \"**|**|***|\", queries = [[2,5],[5,9]]\n\nOutput:\n [2,3]\n\nExplanation:\n\n- queries[0] has two plates between candles.\n- queries[1] has three plates between candles.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n s = \"***|**|*****|**||**|*\", queries = [[1,17],[4,5],[14,17],[5,11],[15,16]]\n\nOutput:\n [9,0,0,0,0]\n\nExplanation:\n\n- queries[0] has nine plates between candles.\n- The other queries have zero plates between candles.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 10\n5\n\n\ns\n consists of \n'*'\n and \n'|'\n characters.\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 2\n\n\n0 <= left\ni\n <= right\ni\n < s.length",
        "temas": [
            "Array",
            "String",
            "Binary Search",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2054,
        "slug": "two-best-non-overlapping-events",
        "url": "https://leetcode.com/problems/two-best-non-overlapping-events/",
        "titulo": "Two Best Non-Overlapping Events",
        "enunciado": "You are given a \n0-indexed\n 2D integer array of \nevents\n where \nevents[i] = [startTime\ni\n, endTime\ni\n, value\ni\n]\n. The \ni\nth\n event starts at \nstartTime\ni\n \nand ends at \nendTime\ni\n, and if you attend this event, you will receive a value of \nvalue\ni\n. You can choose \nat most\n \ntwo\n \nnon-overlapping\n events to attend such that the sum of their values is \nmaximized\n.\n\n\nReturn \nthis \nmaximum\n sum.\n\n\nNote that the start time and end time is \ninclusive\n: that is, you cannot attend two events where one of them starts and the other ends at the same time. More specifically, if you attend an event with end time \nt\n, the next event must start at or after \nt + 1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n events = [[1,3,2],[4,5,2],[2,4,3]]\n\nOutput:\n 4\n\nExplanation: \nChoose the green events, 0 and 1 for a sum of 2 + 2 = 4.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n events = [[1,3,2],[4,5,2],[1,5,5]]\n\nOutput:\n 5\n\nExplanation: \nChoose event 2 for a sum of 5.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n events = [[1,5,3],[1,5,1],[6,6,5]]\n\nOutput:\n 8\n\nExplanation: \nChoose events 0 and 2 for a sum of 3 + 5 = 8.\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= events.length <= 10\n5\n\n\nevents[i].length == 3\n\n\n1 <= startTime\ni\n <= endTime\ni\n <= 10\n9\n\n\n1 <= value\ni\n <= 10\n6",
        "temas": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2034,
        "slug": "stock-price-fluctuation",
        "url": "https://leetcode.com/problems/stock-price-fluctuation/",
        "titulo": "Stock Price Fluctuation ",
        "enunciado": "You are given a stream of \nrecords\n about a particular stock. Each record contains a \ntimestamp\n and the corresponding \nprice\n of the stock at that timestamp.\n\n\nUnfortunately due to the volatile nature of the stock market, the records do not come in order. Even worse, some records may be incorrect. Another record with the same timestamp may appear later in the stream \ncorrecting\n the price of the previous wrong record.\n\n\nDesign an algorithm that:\n\n\n\n\nUpdates\n the price of the stock at a particular timestamp, \ncorrecting\n the price from any previous records at the timestamp.\n\n\nFinds the \nlatest price\n of the stock based on the current records. The \nlatest price\n is the price at the latest timestamp recorded.\n\n\nFinds the \nmaximum price\n the stock has been based on the current records.\n\n\nFinds the \nminimum price\n the stock has been based on the current records.\n\n\n\n\nImplement the \nStockPrice\n class:\n\n\n\n\nStockPrice()\n Initializes the object with no price records.\n\n\nvoid update(int timestamp, int price)\n Updates the \nprice\n of the stock at the given \ntimestamp\n.\n\n\nint current()\n Returns the \nlatest price\n of the stock.\n\n\nint maximum()\n Returns the \nmaximum price\n of the stock.\n\n\nint minimum()\n Returns the \nminimum price\n of the stock.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"StockPrice\", \"update\", \"update\", \"current\", \"maximum\", \"update\", \"maximum\", \"update\", \"minimum\"]\n[[], [1, 10], [2, 5], [], [], [1, 3], [], [4, 2], []]\n\nOutput\n\n[null, null, null, 5, 10, null, 5, null, 2]\n\n\nExplanation\n\nStockPrice stockPrice = new StockPrice();\nstockPrice.update(1, 10); // Timestamps are [1] with corresponding prices [10].\nstockPrice.update(2, 5);  // Timestamps are [1,2] with corresponding prices [10,5].\nstockPrice.current();     // return 5, the latest timestamp is 2 with the price being 5.\nstockPrice.maximum();     // return 10, the maximum price is 10 at timestamp 1.\nstockPrice.update(1, 3);  // The previous timestamp 1 had the wrong price, so it is updated to 3.\n                          // Timestamps are [1,2] with corresponding prices [3,5].\nstockPrice.maximum();     // return 5, the maximum price is 5 after the correction.\nstockPrice.update(4, 2);  // Timestamps are [1,2,4] with corresponding prices [3,5,2].\nstockPrice.minimum();     // return 2, the minimum price is 2 at timestamp 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= timestamp, price <= 10\n9\n\n\nAt most \n10\n5\n calls will be made \nin total\n to \nupdate\n, \ncurrent\n, \nmaximum\n, and \nminimum\n.\n\n\ncurrent\n, \nmaximum\n, and \nminimum\n will be called \nonly after\n \nupdate\n has been called \nat least once\n.",
        "temas": [
            "Hash Table",
            "Design",
            "Heap (Priority Queue)",
            "Data Stream",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2033,
        "slug": "minimum-operations-to-make-a-uni-value-grid",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-a-uni-value-grid/",
        "titulo": "Minimum Operations to Make a Uni-Value Grid",
        "enunciado": "You are given a 2D integer \ngrid\n of size \nm x n\n and an integer \nx\n. In one operation, you can \nadd\n \nx\n to or \nsubtract\n \nx\n from any element in the \ngrid\n.\n\n\nA \nuni-value grid\n is a grid where all the elements of it are equal.\n\n\nReturn \nthe \nminimum\n number of operations to make the grid \nuni-value\n. If it is not possible, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[2,4],[6,8]], x = 2\n\nOutput:\n 4\n\nExplanation:\n We can make every element equal to 4 by doing the following: \n- Add x to 2 once.\n- Subtract x from 6 once.\n- Subtract x from 8 twice.\nA total of 4 operations were used.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,5],[2,3]], x = 1\n\nOutput:\n 5\n\nExplanation:\n We can make every element equal to 3.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[1,2],[3,4]], x = 2\n\nOutput:\n -1\n\nExplanation:\n It is impossible to make every element equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\n1 <= x, grid[i][j] <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Sorting",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2029,
        "slug": "stone-game-ix",
        "url": "https://leetcode.com/problems/stone-game-ix/",
        "titulo": "Stone Game IX",
        "enunciado": "Alice and Bob continue their games with stones. There is a row of n stones, and each stone has an associated value. You are given an integer array \nstones\n, where \nstones[i]\n is the \nvalue\n of the \ni\nth\n stone.\n\n\nAlice and Bob take turns, with \nAlice\n starting first. On each turn, the player may remove any stone from \nstones\n. The player who removes a stone \nloses\n if the \nsum\n of the values of \nall removed stones\n is divisible by \n3\n. Bob will win automatically if there are no remaining stones (even if it is Alice's turn).\n\n\nAssuming both players play \noptimally\n, return \ntrue\n \nif Alice wins and\n \nfalse\n \nif Bob wins\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n stones = [2,1]\n\nOutput:\n true\n\nExplanation:\n The game will be played as follows:\n- Turn 1: Alice can remove either stone.\n- Turn 2: Bob removes the remaining stone. \nThe sum of the removed stones is 1 + 2 = 3 and is divisible by 3. Therefore, Bob loses and Alice wins the game.\n\n\n\nExample 2:\n\n\n\n\nInput:\n stones = [2]\n\nOutput:\n false\n\nExplanation:\n Alice will remove the only stone, and the sum of the values on the removed stones is 2. \nSince all the stones are removed and the sum of values is not divisible by 3, Bob wins the game.\n\n\n\nExample 3:\n\n\n\n\nInput:\n stones = [5,1,2,4,3]\n\nOutput:\n false\n\nExplanation:\n Bob will always win. One possible way for Bob to win is shown below:\n- Turn 1: Alice can remove the second stone with value 1. Sum of removed stones = 1.\n- Turn 2: Bob removes the fifth stone with value 3. Sum of removed stones = 1 + 3 = 4.\n- Turn 3: Alices removes the fourth stone with value 4. Sum of removed stones = 1 + 3 + 4 = 8.\n- Turn 4: Bob removes the third stone with value 2. Sum of removed stones = 1 + 3 + 4 + 2 = 10.\n- Turn 5: Alice removes the first stone with value 5. Sum of removed stones = 1 + 3 + 4 + 2 + 5 = 15.\nAlice loses the game because the sum of the removed stones (15) is divisible by 3. Bob wins the game.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= stones.length <= 10\n5\n\n\n1 <= stones[i] <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Counting",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2028,
        "slug": "find-missing-observations",
        "url": "https://leetcode.com/problems/find-missing-observations/",
        "titulo": "Find Missing Observations",
        "enunciado": "You have observations of \nn + m\n \n6-sided\n dice rolls with each face numbered from \n1\n to \n6\n. \nn\n of the observations went missing, and you only have the observations of \nm\n rolls. Fortunately, you have also calculated the \naverage value\n of the \nn + m\n rolls.\n\n\nYou are given an integer array \nrolls\n of length \nm\n where \nrolls[i]\n is the value of the \ni\nth\n observation. You are also given the two integers \nmean\n and \nn\n.\n\n\nReturn \nan array of length \nn\n containing the missing observations such that the \naverage value \nof the \nn + m\n rolls is \nexactly\n \nmean\n. If there are multiple valid answers, return \nany of them\n. If no such array exists, return \nan empty array\n.\n\n\nThe \naverage value\n of a set of \nk\n numbers is the sum of the numbers divided by \nk\n.\n\n\nNote that \nmean\n is an integer, so the sum of the \nn + m\n rolls should be divisible by \nn + m\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rolls = [3,2,4,3], mean = 4, n = 2\n\nOutput:\n [6,6]\n\nExplanation:\n The mean of all n + m rolls is (3 + 2 + 4 + 3 + 6 + 6) / 6 = 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n rolls = [1,5,6], mean = 3, n = 4\n\nOutput:\n [2,3,2,2]\n\nExplanation:\n The mean of all n + m rolls is (1 + 5 + 6 + 2 + 3 + 2 + 2) / 7 = 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n rolls = [1,2,3,4], mean = 6, n = 4\n\nOutput:\n []\n\nExplanation:\n It is impossible for the mean to be 6 no matter what the 4 missing rolls are.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == rolls.length\n\n\n1 <= n, m <= 10\n5\n\n\n1 <= rolls[i], mean <= 6",
        "temas": [
            "Array",
            "Math",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2039,
        "slug": "the-time-when-the-network-becomes-idle",
        "url": "https://leetcode.com/problems/the-time-when-the-network-becomes-idle/",
        "titulo": "The Time When the Network Becomes Idle",
        "enunciado": "There is a network of \nn\n servers, labeled from \n0\n to \nn - 1\n. You are given a 2D integer array \nedges\n, where \nedges[i] = [u\ni\n, v\ni\n]\n indicates there is a message channel between servers \nu\ni\n and \nv\ni\n, and they can pass \nany\n number of messages to \neach other\n directly in \none\n second. You are also given a \n0-indexed\n integer array \npatience\n of length \nn\n.\n\n\nAll servers are \nconnected\n, i.e., a message can be passed from one server to any other server(s) directly or indirectly through the message channels.\n\n\nThe server labeled \n0\n is the \nmaster\n server. The rest are \ndata\n servers. Each data server needs to send its message to the master server for processing and wait for a reply. Messages move between servers \noptimally\n, so every message takes the \nleast amount of time\n to arrive at the master server. The master server will process all newly arrived messages \ninstantly\n and send a reply to the originating server via the \nreversed path\n the message had gone through.\n\n\nAt the beginning of second \n0\n, each data server sends its message to be processed. Starting from second \n1\n, at the \nbeginning\n of \nevery\n second, each data server will check if it has received a reply to the message it sent (including any newly arrived replies) from the master server:\n\n\n\n\nIf it has not, it will \nresend\n the message periodically. The data server \ni\n will resend the message every \npatience[i]\n second(s), i.e., the data server \ni\n will resend the message if \npatience[i]\n second(s) have \nelapsed\n since the \nlast\n time the message was sent from this server.\n\n\nOtherwise, \nno more resending\n will occur from this server.\n\n\n\n\nThe network becomes \nidle\n when there are \nno\n messages passing between servers or arriving at servers.\n\n\nReturn \nthe \nearliest second\n starting from which the network becomes \nidle\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [[0,1],[1,2]], patience = [0,2,1]\n\nOutput:\n 8\n\nExplanation:\n\nAt (the beginning of) second 0,\n- Data server 1 sends its message (denoted 1A) to the master server.\n- Data server 2 sends its message (denoted 2A) to the master server.\n\nAt second 1,\n- Message 1A arrives at the master server. Master server processes message 1A instantly and sends a reply 1A back.\n- Server 1 has not received any reply. 1 second (1 < patience[1] = 2) elapsed since this server has sent the message, therefore it does not resend the message.\n- Server 2 has not received any reply. 1 second (1 == patience[2] = 1) elapsed since this server has sent the message, therefore it resends the message (denoted 2B).\n\nAt second 2,\n- The reply 1A arrives at server 1. No more resending will occur from server 1.\n- Message 2A arrives at the master server. Master server processes message 2A instantly and sends a reply 2A back.\n- Server 2 resends the message (denoted 2C).\n...\nAt second 4,\n- The reply 2A arrives at server 2. No more resending will occur from server 2.\n...\nAt second 7, reply 2D arrives at server 2.\n\nStarting from the beginning of the second 8, there are no messages passing between servers or arriving at servers.\nThis is the time when the network becomes idle.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [[0,1],[0,2],[1,2]], patience = [0,10,10]\n\nOutput:\n 3\n\nExplanation:\n Data servers 1 and 2 receive a reply back at the beginning of second 2.\nFrom the beginning of the second 3, the network becomes idle.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == patience.length\n\n\n2 <= n <= 10\n5\n\n\npatience[0] == 0\n\n\n1 <= patience[i] <= 10\n5\n for \n1 <= i < n\n\n\n1 <= edges.length <= min(10\n5\n, n * (n - 1) / 2)\n\n\nedges[i].length == 2\n\n\n0 <= u\ni\n, v\ni\n < n\n\n\nu\ni\n != v\ni\n\n\nThere are no duplicate edges.\n\n\nEach server can directly or indirectly reach another server.",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2038,
        "slug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
        "url": "https://leetcode.com/problems/remove-colored-pieces-if-both-neighbors-are-the-same-color/",
        "titulo": "Remove Colored Pieces if Both Neighbors are the Same Color",
        "enunciado": "There are \nn\n pieces arranged in a line, and each piece is colored either by \n'A'\n or by \n'B'\n. You are given a string \ncolors\n of length \nn\n where \ncolors[i]\n is the color of the \ni\nth\n piece.\n\n\nAlice and Bob are playing a game where they take \nalternating turns\n removing pieces from the line. In this game, Alice moves\n first\n.\n\n\n\n\nAlice is only allowed to remove a piece colored \n'A'\n if \nboth its neighbors\n are also colored \n'A'\n. She is \nnot allowed\n to remove pieces that are colored \n'B'\n.\n\n\nBob is only allowed to remove a piece colored \n'B'\n if \nboth its neighbors\n are also colored \n'B'\n. He is \nnot allowed\n to remove pieces that are colored \n'A'\n.\n\n\nAlice and Bob \ncannot\n remove pieces from the edge of the line.\n\n\nIf a player cannot make a move on their turn, that player \nloses\n and the other player \nwins\n.\n\n\n\n\nAssuming Alice and Bob play optimally, return \ntrue\n if Alice wins, or return \nfalse\n if Bob wins\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n colors = \"AAABABB\"\n\nOutput:\n true\n\nExplanation:\n\nA\nA\nABABB -> AABABB\nAlice moves first.\nShe removes the second 'A' from the left since that is the only 'A' whose neighbors are both 'A'.\n\nNow it's Bob's turn.\nBob cannot make a move on his turn since there are no 'B's whose neighbors are both 'B'.\nThus, Alice wins, so return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n colors = \"AA\"\n\nOutput:\n false\n\nExplanation:\n\nAlice has her turn first.\nThere are only two 'A's and both are on the edge of the line, so she cannot move on her turn.\nThus, Bob wins, so return false.\n\n\n\nExample 3:\n\n\n\n\nInput:\n colors = \"ABBBBBBBAAA\"\n\nOutput:\n false\n\nExplanation:\n\nABBBBBBBA\nA\nA -> ABBBBBBBAA\nAlice moves first.\nHer only option is to remove the second to last 'A' from the right.\n\nABBBB\nB\nBBAA -> ABBBBBBAA\nNext is Bob's turn.\nHe has many options for which 'B' piece to remove. He can pick any.\n\nOn Alice's second turn, she has no more pieces that she can remove.\nThus, Bob wins, so return false.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= colors.length <= 10\n5\n\n\ncolors\n consists of only the letters \n'A'\n and \n'B'",
        "temas": [
            "Math",
            "String",
            "Greedy",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2018,
        "slug": "check-if-word-can-be-placed-in-crossword",
        "url": "https://leetcode.com/problems/check-if-word-can-be-placed-in-crossword/",
        "titulo": "Check if Word Can Be Placed In Crossword",
        "enunciado": "You are given an \nm x n\n matrix \nboard\n, representing the\n current \nstate of a crossword puzzle. The crossword contains lowercase English letters (from solved words), \n' '\n to represent any \nempty \ncells, and \n'#'\n to represent any \nblocked\n cells.\n\n\nA word can be placed\n horizontally\n (left to right \nor\n right to left) or \nvertically\n (top to bottom \nor\n bottom to top) in the board if:\n\n\n\n\nIt does not occupy a cell containing the character \n'#'\n.\n\n\nThe cell each letter is placed in must either be \n' '\n (empty) or \nmatch\n the letter already on the \nboard\n.\n\n\nThere must not be any empty cells \n' '\n or other lowercase letters \ndirectly left or right\n \nof the word if the word was placed \nhorizontally\n.\n\n\nThere must not be any empty cells \n' '\n or other lowercase letters \ndirectly above or below\n the word if the word was placed \nvertically\n.\n\n\n\n\nGiven a string \nword\n, return \ntrue\n if \nword\n can be placed in \nboard\n, or \nfalse\n \notherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[\"#\", \" \", \"#\"], [\" \", \" \", \"#\"], [\"#\", \"c\", \" \"]], word = \"abc\"\n\nOutput:\n true\n\nExplanation:\n The word \"abc\" can be placed as shown above (top to bottom).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n board = [[\" \", \"#\", \"a\"], [\" \", \"#\", \"c\"], [\" \", \"#\", \"a\"]], word = \"ac\"\n\nOutput:\n false\n\nExplanation:\n It is impossible to place the word because there will always be a space/letter above or below it.\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n board = [[\"#\", \" \", \"#\"], [\" \", \" \", \"#\"], [\"#\", \" \", \"c\"]], word = \"ca\"\n\nOutput:\n true\n\nExplanation:\n The word \"ca\" can be placed as shown above (right to left). \n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == board.length\n\n\nn == board[i].length\n\n\n1 <= m * n <= 2 * 10\n5\n\n\nboard[i][j]\n will be \n' '\n, \n'#'\n, or a lowercase English letter.\n\n\n1 <= word.length <= max(m, n)\n\n\nword\n will contain only lowercase English letters.",
        "temas": [
            "Array",
            "Matrix",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2017,
        "slug": "grid-game",
        "url": "https://leetcode.com/problems/grid-game/",
        "titulo": "Grid Game",
        "enunciado": "You are given a \n0-indexed\n 2D array \ngrid\n of size \n2 x n\n, where \ngrid[r][c]\n represents the number of points at position \n(r, c)\n on the matrix. Two robots are playing a game on this matrix.\n\n\nBoth robots initially start at \n(0, 0)\n and want to reach \n(1, n-1)\n. Each robot may only move to the \nright\n (\n(r, c)\n to \n(r, c + 1)\n) or \ndown \n(\n(r, c)\n to \n(r + 1, c)\n).\n\n\nAt the start of the game, the \nfirst\n robot moves from \n(0, 0)\n to \n(1, n-1)\n, collecting all the points from the cells on its path. For all cells \n(r, c)\n traversed on the path, \ngrid[r][c]\n is set to \n0\n. Then, the \nsecond\n robot moves from \n(0, 0)\n to \n(1, n-1)\n, collecting the points on its path. Note that their paths may intersect with one another.\n\n\nThe \nfirst\n robot wants to \nminimize\n the number of points collected by the \nsecond\n robot. In contrast, the \nsecond \nrobot wants to \nmaximize\n the number of points it collects. If both robots play \noptimally\n, return \nthe \nnumber of points\n collected by the \nsecond\n robot.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[2,5,4],[1,5,1]]\n\nOutput:\n 4\n\nExplanation:\n The optimal path taken by the first robot is shown in red, and the optimal path taken by the second robot is shown in blue.\nThe cells visited by the first robot are set to 0.\nThe second robot will collect 0 + 0 + 4 + 0 = 4 points.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[3,3,1],[8,5,2]]\n\nOutput:\n 4\n\nExplanation:\n The optimal path taken by the first robot is shown in red, and the optimal path taken by the second robot is shown in blue.\nThe cells visited by the first robot are set to 0.\nThe second robot will collect 0 + 3 + 1 + 0 = 4 points.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[1,3,1,15],[1,3,3,1]]\n\nOutput:\n 7\n\nExplanation: \nThe optimal path taken by the first robot is shown in red, and the optimal path taken by the second robot is shown in blue.\nThe cells visited by the first robot are set to 0.\nThe second robot will collect 0 + 1 + 3 + 3 + 0 = 7 points.\n\n\n\n \n\n\nConstraints:\n\n\n\n\ngrid.length == 2\n\n\nn == grid[r].length\n\n\n1 <= n <= 5 * 10\n4\n\n\n1 <= grid[r][c] <= 10\n5",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2013,
        "slug": "detect-squares",
        "url": "https://leetcode.com/problems/detect-squares/",
        "titulo": "Detect Squares",
        "enunciado": "You are given a stream of points on the X-Y plane. Design an algorithm that:\n\n\n\n\nAdds\n new points from the stream into a data structure. \nDuplicate\n points are allowed and should be treated as different points.\n\n\nGiven a query point, \ncounts\n the number of ways to choose three points from the data structure such that the three points and the query point form an \naxis-aligned square\n with \npositive area\n.\n\n\n\n\nAn \naxis-aligned square\n is a square whose edges are all the same length and are either parallel or perpendicular to the x-axis and y-axis.\n\n\nImplement the \nDetectSquares\n class:\n\n\n\n\nDetectSquares()\n Initializes the object with an empty data structure.\n\n\nvoid add(int[] point)\n Adds a new point \npoint = [x, y]\n to the data structure.\n\n\nint count(int[] point)\n Counts the number of ways to form \naxis-aligned squares\n with point \npoint = [x, y]\n as described above.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"DetectSquares\", \"add\", \"add\", \"add\", \"count\", \"count\", \"add\", \"count\"]\n[[], [[3, 10]], [[11, 2]], [[3, 2]], [[11, 10]], [[14, 8]], [[11, 2]], [[11, 10]]]\n\nOutput\n\n[null, null, null, null, 1, 0, null, 2]\n\n\nExplanation\n\nDetectSquares detectSquares = new DetectSquares();\ndetectSquares.add([3, 10]);\ndetectSquares.add([11, 2]);\ndetectSquares.add([3, 2]);\ndetectSquares.count([11, 10]); // return 1. You can choose:\n                               //   - The first, second, and third points\ndetectSquares.count([14, 8]);  // return 0. The query point cannot form a square with any points in the data structure.\ndetectSquares.add([11, 2]);    // Adding duplicate points is allowed.\ndetectSquares.count([11, 10]); // return 2. You can choose:\n                               //   - The first, second, and third points\n                               //   - The first, third, and fourth points\n\n\n\n \n\n\nConstraints:\n\n\n\n\npoint.length == 2\n\n\n0 <= x, y <= 1000\n\n\nAt most \n3000\n calls \nin total\n will be made to \nadd\n and \ncount\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Design",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2012,
        "slug": "sum-of-beauty-in-the-array",
        "url": "https://leetcode.com/problems/sum-of-beauty-in-the-array/",
        "titulo": "Sum of Beauty in the Array",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. For each index \ni\n (\n1 <= i <= nums.length - 2\n) the \nbeauty\n of \nnums[i]\n equals:\n\n\n\n\n2\n, if \nnums[j] < nums[i] < nums[k]\n, for \nall\n \n0 <= j < i\n and for \nall\n \ni < k <= nums.length - 1\n.\n\n\n1\n, if \nnums[i - 1] < nums[i] < nums[i + 1]\n, and the previous condition is not satisfied.\n\n\n0\n, if none of the previous conditions holds.\n\n\n\n\nReturn\n the \nsum of beauty\n of all \nnums[i]\n where \n1 <= i <= nums.length - 2\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 2\n\nExplanation:\n For each index i in the range 1 <= i <= 1:\n- The beauty of nums[1] equals 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,4,6,4]\n\nOutput:\n 1\n\nExplanation:\n For each index i in the range 1 <= i <= 2:\n- The beauty of nums[1] equals 1.\n- The beauty of nums[2] equals 0.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,2,1]\n\nOutput:\n 0\n\nExplanation:\n For each index i in the range 1 <= i <= 1:\n- The beauty of nums[1] equals 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2024,
        "slug": "maximize-the-confusion-of-an-exam",
        "url": "https://leetcode.com/problems/maximize-the-confusion-of-an-exam/",
        "titulo": "Maximize the Confusion of an Exam",
        "enunciado": "A teacher is writing a test with \nn\n true/false questions, with \n'T'\n denoting true and \n'F'\n denoting false. He wants to confuse the students by \nmaximizing\n the number of \nconsecutive\n questions with the \nsame\n answer (multiple trues or multiple falses in a row).\n\n\nYou are given a string \nanswerKey\n, where \nanswerKey[i]\n is the original answer to the \ni\nth\n question. In addition, you are given an integer \nk\n, the maximum number of times you may perform the following operation:\n\n\n\n\nChange the answer key for any question to \n'T'\n or \n'F'\n (i.e., set \nanswerKey[i]\n to \n'T'\n or \n'F'\n).\n\n\n\n\nReturn \nthe \nmaximum\n number of consecutive\n \n'T'\ns or \n'F'\ns \nin the answer key after performing the operation at most\n \nk\n \ntimes\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n answerKey = \"TTFF\", k = 2\n\nOutput:\n 4\n\nExplanation:\n We can replace both the 'F's with 'T's to make answerKey = \"\nTTTT\n\".\nThere are four consecutive 'T's.\n\n\n\nExample 2:\n\n\n\n\nInput:\n answerKey = \"TFFT\", k = 1\n\nOutput:\n 3\n\nExplanation:\n We can replace the first 'T' with an 'F' to make answerKey = \"\nFFF\nT\".\nAlternatively, we can replace the second 'T' with an 'F' to make answerKey = \"T\nFFF\n\".\nIn both cases, there are three consecutive 'F's.\n\n\n\nExample 3:\n\n\n\n\nInput:\n answerKey = \"TTFTTFTT\", k = 1\n\nOutput:\n 5\n\nExplanation:\n We can replace the first 'F' to make answerKey = \"\nTTTTT\nFTT\"\nAlternatively, we can replace the second 'F' to make answerKey = \"TTF\nTTTTT\n\". \nIn both cases, there are five consecutive 'T's.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == answerKey.length\n\n\n1 <= n <= 5 * 10\n4\n\n\nanswerKey[i]\n is either \n'T'\n or \n'F'\n\n\n1 <= k <= n",
        "temas": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2023,
        "slug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
        "url": "https://leetcode.com/problems/number-of-pairs-of-strings-with-concatenation-equal-to-target/",
        "titulo": "Number of Pairs of Strings With Concatenation Equal to Target",
        "enunciado": "Given an array of \ndigit\n strings \nnums\n and a \ndigit\n string \ntarget\n, return \nthe number of pairs of indices \n(i, j)\n (where \ni != j\n) such that the \nconcatenation\n of \nnums[i] + nums[j]\n equals \ntarget\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [\"777\",\"7\",\"77\",\"77\"], target = \"7777\"\n\nOutput:\n 4\n\nExplanation:\n Valid pairs are:\n- (0, 1): \"777\" + \"7\"\n- (1, 0): \"7\" + \"777\"\n- (2, 3): \"77\" + \"77\"\n- (3, 2): \"77\" + \"77\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [\"123\",\"4\",\"12\",\"34\"], target = \"1234\"\n\nOutput:\n 2\n\nExplanation:\n Valid pairs are:\n- (0, 1): \"123\" + \"4\"\n- (2, 3): \"12\" + \"34\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [\"1\",\"1\",\"1\"], target = \"11\"\n\nOutput:\n 6\n\nExplanation:\n Valid pairs are:\n- (0, 1): \"1\" + \"1\"\n- (1, 0): \"1\" + \"1\"\n- (0, 2): \"1\" + \"1\"\n- (2, 0): \"1\" + \"1\"\n- (1, 2): \"1\" + \"1\"\n- (2, 1): \"1\" + \"1\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 100\n\n\n1 <= nums[i].length <= 100\n\n\n2 <= target.length <= 100\n\n\nnums[i]\n and \ntarget\n consist of digits.\n\n\nnums[i]\n and \ntarget\n do not have leading zeros.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2002,
        "slug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
        "url": "https://leetcode.com/problems/maximum-product-of-the-length-of-two-palindromic-subsequences/",
        "titulo": "Maximum Product of the Length of Two Palindromic Subsequences",
        "enunciado": "Given a string \ns\n, find two \ndisjoint palindromic subsequences\n of \ns\n such that the \nproduct\n of their lengths is \nmaximized\n. The two subsequences are \ndisjoint\n if they do not both pick a character at the same index.\n\n\nReturn \nthe \nmaximum\n possible \nproduct\n of the lengths of the two palindromic subsequences\n.\n\n\nA \nsubsequence\n is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters. A string is \npalindromic\n if it reads the same forward and backward.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n s = \"leetcodecom\"\n\nOutput:\n 9\n\nExplanation\n: An optimal solution is to choose \"ete\" for the 1\nst\n subsequence and \"cdc\" for the 2\nnd\n subsequence.\nThe product of their lengths is: 3 * 3 = 9.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"bb\"\n\nOutput:\n 1\n\nExplanation\n: An optimal solution is to choose \"b\" (the first character) for the 1\nst\n subsequence and \"b\" (the second character) for the 2\nnd\n subsequence.\nThe product of their lengths is: 1 * 1 = 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"accbcaxxcxx\"\n\nOutput:\n 25\n\nExplanation\n: An optimal solution is to choose \"accca\" for the 1\nst\n subsequence and \"xxcxx\" for the 2\nnd\n subsequence.\nThe product of their lengths is: 5 * 5 = 25.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= s.length <= 12\n\n\ns\n consists of lowercase English letters only.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 2001,
        "slug": "number-of-pairs-of-interchangeable-rectangles",
        "url": "https://leetcode.com/problems/number-of-pairs-of-interchangeable-rectangles/",
        "titulo": "Number of Pairs of Interchangeable Rectangles",
        "enunciado": "You are given \nn\n rectangles represented by a \n0-indexed\n 2D integer array \nrectangles\n, where \nrectangles[i] = [width\ni\n, height\ni\n]\n denotes the width and height of the \ni\nth\n rectangle.\n\n\nTwo rectangles \ni\n and \nj\n (\ni < j\n) are considered \ninterchangeable\n if they have the \nsame\n width-to-height ratio. More formally, two rectangles are \ninterchangeable\n if \nwidth\ni\n/height\ni\n == width\nj\n/height\nj\n (using decimal division, not integer division).\n\n\nReturn \nthe \nnumber\n of pairs of \ninterchangeable\n rectangles in \nrectangles\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rectangles = [[4,8],[3,6],[10,20],[15,30]]\n\nOutput:\n 6\n\nExplanation:\n The following are the interchangeable pairs of rectangles by index (0-indexed):\n- Rectangle 0 with rectangle 1: 4/8 == 3/6.\n- Rectangle 0 with rectangle 2: 4/8 == 10/20.\n- Rectangle 0 with rectangle 3: 4/8 == 15/30.\n- Rectangle 1 with rectangle 2: 3/6 == 10/20.\n- Rectangle 1 with rectangle 3: 3/6 == 15/30.\n- Rectangle 2 with rectangle 3: 10/20 == 15/30.\n\n\n\nExample 2:\n\n\n\n\nInput:\n rectangles = [[4,5],[7,8]]\n\nOutput:\n 0\n\nExplanation:\n There are no interchangeable pairs of rectangles.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == rectangles.length\n\n\n1 <= n <= 10\n5\n\n\nrectangles[i].length == 2\n\n\n1 <= width\ni\n, height\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Counting",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1997,
        "slug": "first-day-where-you-have-been-in-all-the-rooms",
        "url": "https://leetcode.com/problems/first-day-where-you-have-been-in-all-the-rooms/",
        "titulo": "First Day Where You Have Been in All the Rooms",
        "enunciado": "There are \nn\n rooms you need to visit, labeled from \n0\n to \nn - 1\n. Each day is labeled, starting from \n0\n. You will go in and visit one room a day.\n\n\nInitially on day \n0\n, you visit room \n0\n. The \norder\n you visit the rooms for the coming days is determined by the following \nrules\n and a given \n0-indexed\n array \nnextVisit\n of length \nn\n:\n\n\n\n\nAssuming that on a day, you visit room \ni\n,\n\n\nif you have been in room \ni\n an \nodd\n number of times (\nincluding\n the current visit), on the \nnext\n day you will visit a room with a \nlower or equal room number\n specified by \nnextVisit[i]\n where \n0 <= nextVisit[i] <= i\n;\n\n\nif you have been in room \ni\n an \neven\n number of times (\nincluding\n the current visit), on the \nnext\n day you will visit room \n(i + 1) mod n\n.\n\n\n\n\nReturn \nthe label of the \nfirst\n day where you have been in \nall\n the rooms\n. It can be shown that such a day exists. Since the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nextVisit = [0,0]\n\nOutput:\n 2\n\nExplanation:\n\n- On day 0, you visit room 0. The total times you have been in room 0 is 1, which is odd.\n  On the next day you will visit room nextVisit[0] = 0\n- On day 1, you visit room 0, The total times you have been in room 0 is 2, which is even.\n  On the next day you will visit room (0 + 1) mod 2 = 1\n- On day 2, you visit room 1. This is the first day where you have been in all the rooms.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nextVisit = [0,0,2]\n\nOutput:\n 6\n\nExplanation:\n\nYour room visiting order for each day is: [0,0,1,0,0,1,2,...].\nDay 6 is the first day where you have been in all the rooms.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nextVisit = [0,1,2,0]\n\nOutput:\n 6\n\nExplanation:\n\nYour room visiting order for each day is: [0,0,1,1,2,2,3,...].\nDay 6 is the first day where you have been in all the rooms.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nextVisit.length\n\n\n2 <= n <= 10\n5\n\n\n0 <= nextVisit[i] <= i",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1996,
        "slug": "the-number-of-weak-characters-in-the-game",
        "url": "https://leetcode.com/problems/the-number-of-weak-characters-in-the-game/",
        "titulo": "The Number of Weak Characters in the Game",
        "enunciado": "You are playing a game that contains multiple characters, and each of the characters has \ntwo\n main properties: \nattack\n and \ndefense\n. You are given a 2D integer array \nproperties\n where \nproperties[i] = [attack\ni\n, defense\ni\n]\n represents the properties of the \ni\nth\n character in the game.\n\n\nA character is said to be \nweak\n if any other character has \nboth\n attack and defense levels \nstrictly greater\n than this character's attack and defense levels. More formally, a character \ni\n is said to be \nweak\n if there exists another character \nj\n where \nattack\nj\n > attack\ni\n and \ndefense\nj\n > defense\ni\n.\n\n\nReturn \nthe number of \nweak\n characters\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n properties = [[5,5],[6,3],[3,6]]\n\nOutput:\n 0\n\nExplanation:\n No character has strictly greater attack and defense than the other.\n\n\n\nExample 2:\n\n\n\n\nInput:\n properties = [[2,2],[3,3]]\n\nOutput:\n 1\n\nExplanation:\n The first character is weak because the second character has a strictly greater attack and defense.\n\n\n\nExample 3:\n\n\n\n\nInput:\n properties = [[1,5],[10,4],[4,3]]\n\nOutput:\n 1\n\nExplanation:\n The third character is weak because the second character has a strictly greater attack and defense.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= properties.length <= 10\n5\n\n\nproperties[i].length == 2\n\n\n1 <= attack\ni\n, defense\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2008,
        "slug": "maximum-earnings-from-taxi",
        "url": "https://leetcode.com/problems/maximum-earnings-from-taxi/",
        "titulo": "Maximum Earnings From Taxi",
        "enunciado": "There are \nn\n points on a road you are driving your taxi on. The \nn\n points on the road are labeled from \n1\n to \nn\n in the direction you are going, and you want to drive from point \n1\n to point \nn\n to make money by picking up passengers. You cannot change the direction of the taxi.\n\n\nThe passengers are represented by a \n0-indexed\n 2D integer array \nrides\n, where \nrides[i] = [start\ni\n, end\ni\n, tip\ni\n]\n denotes the \ni\nth\n passenger requesting a ride from point \nstart\ni\n to point \nend\ni\n who is willing to give a \ntip\ni\n dollar tip.\n\n\nFor\n each \npassenger \ni\n you pick up, you \nearn\n \nend\ni\n - start\ni\n + tip\ni\n dollars. You may only drive \nat most one \npassenger at a time.\n\n\nGiven \nn\n and \nrides\n, return \nthe \nmaximum\n number of dollars you can earn by picking up the passengers optimally.\n\n\nNote:\n You may drop off a passenger and pick up a different passenger at the same point.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 5, rides = [\n[2,5,4]\n,[1,5,1]]\n\nOutput:\n 7\n\nExplanation:\n We can pick up passenger 0 to earn 5 - 2 + 4 = 7 dollars.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 20, rides = [[1,6,1],\n[3,10,2]\n,\n[10,12,3]\n,[11,12,2],[12,15,2],\n[13,18,1]\n]\n\nOutput:\n 20\n\nExplanation:\n We will pick up the following passengers:\n- Drive passenger 1 from point 3 to point 10 for a profit of 10 - 3 + 2 = 9 dollars.\n- Drive passenger 2 from point 10 to point 12 for a profit of 12 - 10 + 3 = 5 dollars.\n- Drive passenger 5 from point 13 to point 18 for a profit of 18 - 13 + 1 = 6 dollars.\nWe earn 9 + 5 + 6 = 20 dollars in total.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= rides.length <= 3 * 10\n4\n\n\nrides[i].length == 3\n\n\n1 <= start\ni\n < end\ni\n <= n\n\n\n1 <= tip\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2007,
        "slug": "find-original-array-from-doubled-array",
        "url": "https://leetcode.com/problems/find-original-array-from-doubled-array/",
        "titulo": "Find Original Array From Doubled Array",
        "enunciado": "An integer array \noriginal\n is transformed into a \ndoubled\n array \nchanged\n by appending \ntwice the value\n of every element in \noriginal\n, and then randomly \nshuffling\n the resulting array.\n\n\nGiven an array \nchanged\n, return \noriginal\n if \nchanged\n is a \ndoubled\n array. If \nchanged\n is not a \ndoubled\n array, return an empty array. The elements in\n \noriginal\n \nmay be returned in \nany\n order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n changed = [1,3,4,2,6,8]\n\nOutput:\n [1,3,4]\n\nExplanation:\n One possible original array could be [1,3,4]:\n- Twice the value of 1 is 1 * 2 = 2.\n- Twice the value of 3 is 3 * 2 = 6.\n- Twice the value of 4 is 4 * 2 = 8.\nOther original arrays could be [4,3,1] or [3,1,4].\n\n\n\nExample 2:\n\n\n\n\nInput:\n changed = [6,3,0,1]\n\nOutput:\n []\n\nExplanation:\n changed is not a doubled array.\n\n\n\nExample 3:\n\n\n\n\nInput:\n changed = [1]\n\nOutput:\n []\n\nExplanation:\n changed is not a doubled array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= changed.length <= 10\n5\n\n\n0 <= changed[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1986,
        "slug": "minimum-number-of-work-sessions-to-finish-the-tasks",
        "url": "https://leetcode.com/problems/minimum-number-of-work-sessions-to-finish-the-tasks/",
        "titulo": "Minimum Number of Work Sessions to Finish the Tasks",
        "enunciado": "There are \nn\n tasks assigned to you. The task times are represented as an integer array \ntasks\n of length \nn\n, where the \ni\nth\n task takes \ntasks[i]\n hours to finish. A \nwork session\n is when you work for \nat most\n \nsessionTime\n consecutive hours and then take a break.\n\n\nYou should finish the given tasks in a way that satisfies the following conditions:\n\n\n\n\nIf you start a task in a work session, you must complete it in the \nsame\n work session.\n\n\nYou can start a new task \nimmediately\n after finishing the previous one.\n\n\nYou may complete the tasks in \nany order\n.\n\n\n\n\nGiven \ntasks\n and \nsessionTime\n, return \nthe \nminimum\n number of \nwork sessions\n needed to finish all the tasks following the conditions above.\n\n\nThe tests are generated such that \nsessionTime\n is \ngreater\n than or \nequal\n to the \nmaximum\n element in \ntasks[i]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tasks = [1,2,3], sessionTime = 3\n\nOutput:\n 2\n\nExplanation:\n You can finish the tasks in two work sessions.\n- First work session: finish the first and the second tasks in 1 + 2 = 3 hours.\n- Second work session: finish the third task in 3 hours.\n\n\n\nExample 2:\n\n\n\n\nInput:\n tasks = [3,1,3,1,1], sessionTime = 8\n\nOutput:\n 2\n\nExplanation:\n You can finish the tasks in two work sessions.\n- First work session: finish all the tasks except the last one in 3 + 1 + 3 + 1 = 8 hours.\n- Second work session: finish the last task in 1 hour.\n\n\n\nExample 3:\n\n\n\n\nInput:\n tasks = [1,2,3,4,5], sessionTime = 15\n\nOutput:\n 1\n\nExplanation:\n You can finish all the tasks in one work session.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == tasks.length\n\n\n1 <= n <= 14\n\n\n1 <= tasks[i] <= 10\n\n\nmax(tasks[i]) <= sessionTime <= 15",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1985,
        "slug": "find-the-kth-largest-integer-in-the-array",
        "url": "https://leetcode.com/problems/find-the-kth-largest-integer-in-the-array/",
        "titulo": "Find the Kth Largest Integer in the Array",
        "enunciado": "You are given an array of strings \nnums\n and an integer \nk\n. Each string in \nnums\n represents an integer without leading zeros.\n\n\nReturn \nthe string that represents the \nk\nth\n largest integer\n in \nnums\n.\n\n\nNote\n: Duplicate numbers should be counted distinctly. For example, if \nnums\n is \n[\"1\",\"2\",\"2\"]\n, \n\"2\"\n is the first largest integer, \n\"2\"\n is the second-largest integer, and \n\"1\"\n is the third-largest integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [\"3\",\"6\",\"7\",\"10\"], k = 4\n\nOutput:\n \"3\"\n\nExplanation:\n\nThe numbers in nums sorted in non-decreasing order are [\"3\",\"6\",\"7\",\"10\"].\nThe 4\nth\n largest integer in nums is \"3\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [\"2\",\"21\",\"12\",\"1\"], k = 3\n\nOutput:\n \"2\"\n\nExplanation:\n\nThe numbers in nums sorted in non-decreasing order are [\"1\",\"2\",\"12\",\"21\"].\nThe 3\nrd\n largest integer in nums is \"2\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [\"0\",\"0\"], k = 2\n\nOutput:\n \"0\"\n\nExplanation:\n\nThe numbers in nums sorted in non-decreasing order are [\"0\",\"0\"].\nThe 2\nnd\n largest integer in nums is \"0\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 10\n4\n\n\n1 <= nums[i].length <= 100\n\n\nnums[i]\n consists of only digits.\n\n\nnums[i]\n will not have any leading zeros.",
        "temas": [
            "Array",
            "String",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1981,
        "slug": "minimize-the-difference-between-target-and-chosen-elements",
        "url": "https://leetcode.com/problems/minimize-the-difference-between-target-and-chosen-elements/",
        "titulo": "Minimize the Difference Between Target and Chosen Elements",
        "enunciado": "You are given an \nm x n\n integer matrix \nmat\n and an integer \ntarget\n.\n\n\nChoose one integer from \neach row\n in the matrix such that the \nabsolute difference\n between \ntarget\n and the \nsum\n of the chosen elements is \nminimized\n.\n\n\nReturn \nthe \nminimum absolute difference\n.\n\n\nThe \nabsolute difference\n between two numbers \na\n and \nb\n is the absolute value of \na - b\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[1,2,3],[4,5,6],[7,8,9]], target = 13\n\nOutput:\n 0\n\nExplanation:\n One possible choice is to:\n- Choose 1 from the first row.\n- Choose 5 from the second row.\n- Choose 7 from the third row.\nThe sum of the chosen elements is 13, which equals the target, so the absolute difference is 0.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n mat = [[1],[2],[3]], target = 100\n\nOutput:\n 94\n\nExplanation:\n The best possible choice is to:\n- Choose 1 from the first row.\n- Choose 2 from the second row.\n- Choose 3 from the third row.\nThe sum of the chosen elements is 6, and the absolute difference is 94.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n mat = [[1,2,9,8,7]], target = 6\n\nOutput:\n 1\n\nExplanation:\n The best choice is to choose 7 from the first row.\nThe absolute difference is 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 70\n\n\n1 <= mat[i][j] <= 70\n\n\n1 <= target <= 800",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1980,
        "slug": "find-unique-binary-string",
        "url": "https://leetcode.com/problems/find-unique-binary-string/",
        "titulo": "Find Unique Binary String",
        "enunciado": "Given an array of strings \nnums\n containing \nn\n \nunique\n binary strings each of length \nn\n, return \na binary string of length \nn\n that \ndoes not appear\n in \nnums\n. If there are multiple answers, you may return \nany\n of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [\"01\",\"10\"]\n\nOutput:\n \"11\"\n\nExplanation:\n \"11\" does not appear in nums. \"00\" would also be correct.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [\"00\",\"01\"]\n\nOutput:\n \"11\"\n\nExplanation:\n \"11\" does not appear in nums. \"10\" would also be correct.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [\"111\",\"011\",\"001\"]\n\nOutput:\n \"101\"\n\nExplanation:\n \"101\" does not appear in nums. \"000\", \"010\", \"100\", and \"110\" would also be correct.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 16\n\n\nnums[i].length == n\n\n\nnums[i] \nis either \n'0'\n or \n'1'\n.\n\n\nAll the strings of \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1993,
        "slug": "operations-on-tree",
        "url": "https://leetcode.com/problems/operations-on-tree/",
        "titulo": "Operations on Tree",
        "enunciado": "You are given a tree with \nn\n nodes numbered from \n0\n to \nn - 1\n in the form of a parent array \nparent\n where \nparent[i]\n is the parent of the \ni\nth\n node. The root of the tree is node \n0\n, so \nparent[0] = -1\n since it has no parent. You want to design a data structure that allows users to lock, unlock, and upgrade nodes in the tree.\n\n\nThe data structure should support the following functions:\n\n\n\n\nLock:\n \nLocks\n the given node for the given user and prevents other users from locking the same node. You may only lock a node using this function if the node is unlocked.\n\n\nUnlock: Unlocks\n the given node for the given user. You may only unlock a node using this function if it is currently locked by the same user.\n\n\nUpgrade\n: Locks\n the given node for the given user and \nunlocks\n all of its descendants \nregardless\n of who locked it. You may only upgrade a node if \nall\n 3 conditions are true:\n\t\n\n\nThe node is unlocked,\n\n\nIt has at least one locked descendant (by \nany\n user), and\n\n\nIt does not have any locked ancestors.\n\n\n\n\n\n\n\n\nImplement the \nLockingTree\n class:\n\n\n\n\nLockingTree(int[] parent)\n initializes the data structure with the parent array.\n\n\nlock(int num, int user)\n returns \ntrue\n if it is possible for the user with id \nuser\n to lock the node \nnum\n, or \nfalse\n otherwise. If it is possible, the node \nnum\n will become\n locked\n by the user with id \nuser\n.\n\n\nunlock(int num, int user)\n returns \ntrue\n if it is possible for the user with id \nuser\n to unlock the node \nnum\n, or \nfalse\n otherwise. If it is possible, the node \nnum\n will become \nunlocked\n.\n\n\nupgrade(int num, int user)\n returns \ntrue\n if it is possible for the user with id \nuser\n to upgrade the node \nnum\n, or \nfalse\n otherwise. If it is possible, the node \nnum\n will be \nupgraded\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"LockingTree\", \"lock\", \"unlock\", \"unlock\", \"lock\", \"upgrade\", \"lock\"]\n[[[-1, 0, 0, 1, 1, 2, 2]], [2, 2], [2, 3], [2, 2], [4, 5], [0, 1], [0, 1]]\n\nOutput\n\n[null, true, false, true, true, true, false]\n\n\nExplanation\n\nLockingTree lockingTree = new LockingTree([-1, 0, 0, 1, 1, 2, 2]);\nlockingTree.lock(2, 2);    // return true because node 2 is unlocked.\n                           // Node 2 will now be locked by user 2.\nlockingTree.unlock(2, 3);  // return false because user 3 cannot unlock a node locked by user 2.\nlockingTree.unlock(2, 2);  // return true because node 2 was previously locked by user 2.\n                           // Node 2 will now be unlocked.\nlockingTree.lock(4, 5);    // return true because node 4 is unlocked.\n                           // Node 4 will now be locked by user 5.\nlockingTree.upgrade(0, 1); // return true because node 0 is unlocked and has at least one locked descendant (node 4).\n                           // Node 0 will now be locked by user 1 and node 4 will now be unlocked.\nlockingTree.lock(0, 1);    // return false because node 0 is already locked.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == parent.length\n\n\n2 <= n <= 2000\n\n\n0 <= parent[i] <= n - 1\n for \ni != 0\n\n\nparent[0] == -1\n\n\n0 <= num <= n - 1\n\n\n1 <= user <= 10\n4\n\n\nparent\n represents a valid tree.\n\n\nAt most \n2000\n calls \nin total\n will be made to \nlock\n, \nunlock\n, and \nupgrade\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1992,
        "slug": "find-all-groups-of-farmland",
        "url": "https://leetcode.com/problems/find-all-groups-of-farmland/",
        "titulo": "Find All Groups of Farmland",
        "enunciado": "You are given a \n0-indexed\n \nm x n\n binary matrix \nland\n where a \n0\n represents a hectare of forested land and a \n1\n represents a hectare of farmland.\n\n\nTo keep the land organized, there are designated rectangular areas of hectares that consist \nentirely\n of farmland. These rectangular areas are called \ngroups\n. No two groups are adjacent, meaning farmland in one group is \nnot\n four-directionally adjacent to another farmland in a different group.\n\n\nland\n can be represented by a coordinate system where the top left corner of \nland\n is \n(0, 0)\n and the bottom right corner of \nland\n is \n(m-1, n-1)\n. Find the coordinates of the top left and bottom right corner of each \ngroup\n of farmland. A \ngroup\n of farmland with a top left corner at \n(r\n1\n, c\n1\n)\n and a bottom right corner at \n(r\n2\n, c\n2\n)\n is represented by the 4-length array \n[r\n1\n, c\n1\n, r\n2\n, c\n2\n].\n\n\nReturn \na 2D array containing the 4-length arrays described above for each \ngroup\n of farmland in \nland\n. If there are no groups of farmland, return an empty array. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n land = [[1,0,0],[0,1,1],[0,1,1]]\n\nOutput:\n [[0,0,0,0],[1,1,2,2]]\n\nExplanation:\n\nThe first group has a top left corner at land[0][0] and a bottom right corner at land[0][0].\nThe second group has a top left corner at land[1][1] and a bottom right corner at land[2][2].\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n land = [[1,1],[1,1]]\n\nOutput:\n [[0,0,1,1]]\n\nExplanation:\n\nThe first group has a top left corner at land[0][0] and a bottom right corner at land[1][1].\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n land = [[0]]\n\nOutput:\n []\n\nExplanation:\n\nThere are no groups of farmland.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == land.length\n\n\nn == land[i].length\n\n\n1 <= m, n <= 300\n\n\nland\n consists of only \n0\n's and \n1\n's.\n\n\nGroups of farmland are \nrectangular\n in shape.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1969,
        "slug": "minimum-non-zero-product-of-the-array-elements",
        "url": "https://leetcode.com/problems/minimum-non-zero-product-of-the-array-elements/",
        "titulo": "Minimum Non-Zero Product of the Array Elements",
        "enunciado": "You are given a positive integer \np\n. Consider an array \nnums\n (\n1-indexed\n) that consists of the integers in the \ninclusive\n range \n[1, 2\np\n - 1]\n in their binary representations. You are allowed to do the following operation \nany\n number of times:\n\n\n\n\nChoose two elements \nx\n and \ny\n from \nnums\n.\n\n\nChoose a bit in \nx\n and swap it with its corresponding bit in \ny\n. Corresponding bit refers to the bit that is in the \nsame position\n in the other integer.\n\n\n\n\nFor example, if \nx = 11\n0\n1\n and \ny = 00\n1\n1\n, after swapping the \n2\nnd\n bit from the right, we have \nx = 11\n1\n1\n and \ny = 00\n0\n1\n.\n\n\nFind the \nminimum non-zero\n product of \nnums\n after performing the above operation \nany\n number of times. Return \nthis product\n \nmodulo\n \n10\n9\n + 7\n.\n\n\nNote:\n The answer should be the minimum product \nbefore\n the modulo operation is done.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n p = 1\n\nOutput:\n 1\n\nExplanation:\n nums = [1].\nThere is only one element, so the product equals that element.\n\n\n\nExample 2:\n\n\n\n\nInput:\n p = 2\n\nOutput:\n 6\n\nExplanation:\n nums = [01, 10, 11].\nAny swap would either make the product 0 or stay the same.\nThus, the array product of 1 * 2 * 3 = 6 is already minimized.\n\n\n\nExample 3:\n\n\n\n\nInput:\n p = 3\n\nOutput:\n 1512\n\nExplanation:\n nums = [001, 010, 011, 100, 101, 110, 111]\n- In the first operation we can swap the leftmost bit of the second and fifth elements.\n    - The resulting array is [001, \n1\n10, 011, 100, \n0\n01, 110, 111].\n- In the second operation we can swap the middle bit of the third and fourth elements.\n    - The resulting array is [001, 110, 0\n0\n1, 1\n1\n0, 001, 110, 111].\nThe array product is 1 * 6 * 1 * 6 * 1 * 6 * 7 = 1512, which is the minimum possible product.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= p <= 60",
        "temas": [
            "Math",
            "Greedy",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1963,
        "slug": "minimum-number-of-swaps-to-make-the-string-balanced",
        "url": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced/",
        "titulo": "Minimum Number of Swaps to Make the String Balanced",
        "enunciado": "You are given a \n0-indexed\n string \ns\n of \neven\n length \nn\n. The string consists of \nexactly\n \nn / 2\n opening brackets \n'['\n and \nn / 2\n closing brackets \n']'\n.\n\n\nA string is called \nbalanced\n if and only if:\n\n\n\n\nIt is the empty string, or\n\n\nIt can be written as \nAB\n, where both \nA\n and \nB\n are \nbalanced\n strings, or\n\n\nIt can be written as \n[C]\n, where \nC\n is a \nbalanced\n string.\n\n\n\n\nYou may swap the brackets at \nany\n two indices \nany\n number of times.\n\n\nReturn \nthe \nminimum\n number of swaps to make \ns\n \nbalanced\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"][][\"\n\nOutput:\n 1\n\nExplanation:\n You can make the string balanced by swapping index 0 with index 3.\nThe resulting string is \"[[]]\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"]]][[[\"\n\nOutput:\n 2\n\nExplanation:\n You can do the following to make the string balanced:\n- Swap index 0 with index 4. s = \"[]][][\".\n- Swap index 1 with index 5. s = \"[[][]]\".\nThe resulting string is \"[[][]]\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"[]\"\n\nOutput:\n 0\n\nExplanation:\n The string is already balanced.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == s.length\n\n\n2 <= n <= 10\n6\n\n\nn\n is even.\n\n\ns[i]\n is either \n'[' \nor \n']'\n.\n\n\nThe number of opening brackets \n'['\n equals \nn / 2\n, and the number of closing brackets \n']'\n equals \nn / 2\n.",
        "temas": [
            "Two Pointers",
            "String",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 1962,
        "slug": "remove-stones-to-minimize-the-total",
        "url": "https://leetcode.com/problems/remove-stones-to-minimize-the-total/",
        "titulo": "Remove Stones to Minimize the Total",
        "enunciado": "You are given a \n0-indexed\n integer array \npiles\n, where \npiles[i]\n represents the number of stones in the \ni\nth\n pile, and an integer \nk\n. You should apply the following operation \nexactly\n \nk\n times:\n\n\n\n\nChoose any \npiles[i]\n and \nremove\n \nceil(piles[i] / 2)\n stones from it.\n\n\n\n\nNotice\n that you can apply the operation on the \nsame\n pile more than once.\n\n\nReturn \nthe \nminimum\n possible total number of stones remaining after applying the \nk\n operations\n.\n\n\nceil(x)\n is the \nsmallest\n integer that is \ngreater\n than or \nequal\n to \nx\n (i.e., rounds \nx\n up).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n piles = [5,4,9], k = 2\n\nOutput:\n 12\n\nExplanation:\n Steps of a possible scenario are:\n- Apply the operation on pile 2. The resulting piles are [5,4,\n5\n].\n- Apply the operation on pile 0. The resulting piles are [\n3\n,4,5].\nThe total number of stones in [3,4,5] is 12.\n\n\n\nExample 2:\n\n\n\n\nInput:\n piles = [4,3,6,7], k = 3\n\nOutput:\n 12\n\nExplanation:\n Steps of a possible scenario are:\n- Apply the operation on pile 2. The resulting piles are [4,3,\n3\n,7].\n- Apply the operation on pile 3. The resulting piles are [4,3,3,\n4\n].\n- Apply the operation on pile 0. The resulting piles are [\n2\n,3,3,4].\nThe total number of stones in [2,3,3,4] is 12.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= piles.length <= 10\n5\n\n\n1 <= piles[i] <= 10\n4\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1976,
        "slug": "number-of-ways-to-arrive-at-destination",
        "url": "https://leetcode.com/problems/number-of-ways-to-arrive-at-destination/",
        "titulo": "Number of Ways to Arrive at Destination",
        "enunciado": "You are in a city that consists of \nn\n intersections numbered from \n0\n to \nn - 1\n with \nbi-directional\n roads between some intersections. The inputs are generated such that you can reach any intersection from any other intersection and that there is at most one road between any two intersections.\n\n\nYou are given an integer \nn\n and a 2D integer array \nroads\n where \nroads[i] = [u\ni\n, v\ni\n, time\ni\n]\n means that there is a road between intersections \nu\ni\n and \nv\ni\n that takes \ntime\ni\n minutes to travel. You want to know in how many ways you can travel from intersection \n0\n to intersection \nn - 1\n in the \nshortest amount of time\n.\n\n\nReturn \nthe \nnumber of ways\n you can arrive at your destination in the \nshortest amount of time\n. Since the answer may be large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 7, roads = [[0,6,7],[0,1,2],[1,2,3],[1,3,3],[6,3,3],[3,5,1],[6,5,1],[2,5,1],[0,4,5],[4,6,2]]\n\nOutput:\n 4\n\nExplanation:\n The shortest amount of time it takes to go from intersection 0 to intersection 6 is 7 minutes.\nThe four ways to get there in 7 minutes are:\n- 0 ➝ 6\n- 0 ➝ 4 ➝ 6\n- 0 ➝ 1 ➝ 2 ➝ 5 ➝ 6\n- 0 ➝ 1 ➝ 3 ➝ 5 ➝ 6\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, roads = [[1,0,10]]\n\nOutput:\n 1\n\nExplanation:\n There is only one way to go from intersection 0 to intersection 1, and it takes 10 minutes.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 200\n\n\nn - 1 <= roads.length <= n * (n - 1) / 2\n\n\nroads[i].length == 3\n\n\n0 <= u\ni\n, v\ni\n <= n - 1\n\n\n1 <= time\ni\n <= 10\n9\n\n\nu\ni \n!= v\ni\n\n\nThere is at most one road connecting any two intersections.\n\n\nYou can reach any intersection from any other intersection.",
        "temas": [
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 1975,
        "slug": "maximum-matrix-sum",
        "url": "https://leetcode.com/problems/maximum-matrix-sum/",
        "titulo": "Maximum Matrix Sum",
        "enunciado": "You are given an \nn x n\n integer \nmatrix\n. You can do the following operation \nany\n number of times:\n\n\n\n\nChoose any two \nadjacent\n elements of \nmatrix\n and \nmultiply\n each of them by \n-1\n.\n\n\n\n\nTwo elements are considered \nadjacent\n if and only if they share a \nborder\n.\n\n\nYour goal is to \nmaximize\n the summation of the matrix's elements. Return \nthe \nmaximum\n sum of the matrix's elements using the operation mentioned above.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[1,-1],[-1,1]]\n\nOutput:\n 4\n\nExplanation:\n We can follow the following steps to reach sum equals 4:\n- Multiply the 2 elements in the first row by -1.\n- Multiply the 2 elements in the first column by -1.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[1,2,3],[-1,-2,-3],[1,2,3]]\n\nOutput:\n 16\n\nExplanation:\n We can follow the following step to reach sum equals 16:\n- Multiply the 2 last elements in the second row by -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == matrix.length == matrix[i].length\n\n\n2 <= n <= 250\n\n\n-10\n5\n <= matrix[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1968,
        "slug": "array-with-elements-not-equal-to-average-of-neighbors",
        "url": "https://leetcode.com/problems/array-with-elements-not-equal-to-average-of-neighbors/",
        "titulo": "Array With Elements Not Equal to Average of Neighbors",
        "enunciado": "You are given a \n0-indexed\n array \nnums\n of \ndistinct\n integers. You want to rearrange the elements in the array such that every element in the rearranged array is \nnot\n equal to the \naverage\n of its neighbors.\n\n\nMore formally, the rearranged array should have the property such that for every \ni\n in the range \n1 <= i < nums.length - 1\n, \n(nums[i-1] + nums[i+1]) / 2\n is \nnot\n equal to \nnums[i]\n.\n\n\nReturn \nany\n rearrangement of \nnums\n that meets the requirements\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n [1,2,4,5,3]\n\nExplanation:\n\nWhen i=1, nums[i] = 2, and the average of its neighbors is (1+4) / 2 = 2.5.\nWhen i=2, nums[i] = 4, and the average of its neighbors is (2+5) / 2 = 3.5.\nWhen i=3, nums[i] = 5, and the average of its neighbors is (4+3) / 2 = 3.5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [6,2,0,9,7]\n\nOutput:\n [9,7,6,2,0]\n\nExplanation:\n\nWhen i=1, nums[i] = 7, and the average of its neighbors is (9+6) / 2 = 7.5.\nWhen i=2, nums[i] = 6, and the average of its neighbors is (7+2) / 2 = 4.5.\nWhen i=3, nums[i] = 2, and the average of its neighbors is (6+0) / 2 = 3.\nNote that the original array [6,2,0,9,7] also satisfies the conditions.\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1953,
        "slug": "maximum-number-of-weeks-for-which-you-can-work",
        "url": "https://leetcode.com/problems/maximum-number-of-weeks-for-which-you-can-work/",
        "titulo": "Maximum Number of Weeks for Which You Can Work",
        "enunciado": "There are \nn\n projects numbered from \n0\n to \nn - 1\n. You are given an integer array \nmilestones\n where each \nmilestones[i]\n denotes the number of milestones the \ni\nth\n project has.\n\n\nYou can work on the projects following these two rules:\n\n\n\n\nEvery week, you will finish \nexactly one\n milestone of \none\n project. You \nmust\n work every week.\n\n\nYou \ncannot\n work on two milestones from the same project for two \nconsecutive\n weeks.\n\n\n\n\nOnce all the milestones of all the projects are finished, or if the only milestones that you can work on will cause you to violate the above rules, you will \nstop working\n. Note that you may not be able to finish every project's milestones due to these constraints.\n\n\nReturn \nthe \nmaximum\n number of weeks you would be able to work on the projects without violating the rules mentioned above\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n milestones = [1,2,3]\n\nOutput:\n 6\n\nExplanation:\n One possible scenario is:\n​​​​- During the 1\nst\n week, you will work on a milestone of project 0.\n- During the 2\nnd\n week, you will work on a milestone of project 2.\n- During the 3\nrd\n week, you will work on a milestone of project 1.\n- During the 4\nth\n week, you will work on a milestone of project 2.\n- During the 5\nth\n week, you will work on a milestone of project 1.\n- During the 6\nth\n week, you will work on a milestone of project 2.\nThe total number of weeks is 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n milestones = [5,2,1]\n\nOutput:\n 7\n\nExplanation:\n One possible scenario is:\n- During the 1\nst\n week, you will work on a milestone of project 0.\n- During the 2\nnd\n week, you will work on a milestone of project 1.\n- During the 3\nrd\n week, you will work on a milestone of project 0.\n- During the 4\nth\n week, you will work on a milestone of project 1.\n- During the 5\nth\n week, you will work on a milestone of project 0.\n- During the 6\nth\n week, you will work on a milestone of project 2.\n- During the 7\nth\n week, you will work on a milestone of project 0.\nThe total number of weeks is 7.\nNote that you cannot work on the last milestone of project 0 on 8\nth\n week because it would violate the rules.\nThus, one milestone in project 0 will remain unfinished.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == milestones.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= milestones[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1959,
        "slug": "minimum-total-space-wasted-with-k-resizing-operations",
        "url": "https://leetcode.com/problems/minimum-total-space-wasted-with-k-resizing-operations/",
        "titulo": "Minimum Total Space Wasted With K Resizing Operations",
        "enunciado": "You are currently designing a dynamic array. You are given a \n0-indexed\n integer array \nnums\n, where \nnums[i]\n is the number of elements that will be in the array at time \ni\n. In addition, you are given an integer \nk\n, the \nmaximum\n number of times you can \nresize\n the array (to\n any\n size).\n\n\nThe size of the array at time \nt\n, \nsize\nt\n, must be at least \nnums[t]\n because there needs to be enough space in the array to hold all the elements. The \nspace wasted\n at time \nt\n is defined as \nsize\nt\n - nums[t]\n, and the \ntotal\n space wasted is the \nsum\n of the space wasted across every time \nt\n where \n0 <= t < nums.length\n.\n\n\nReturn \nthe \nminimum\n \ntotal space wasted\n if you can resize the array at most\n \nk\n \ntimes\n.\n\n\nNote:\n The array can have \nany size\n at the start and does\n not \ncount towards the number of resizing operations.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,20], k = 0\n\nOutput:\n 10\n\nExplanation:\n size = [20,20].\nWe can set the initial size to be 20.\nThe total wasted space is (20 - 10) + (20 - 20) = 10.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [10,20,30], k = 1\n\nOutput:\n 10\n\nExplanation:\n size = [20,20,30].\nWe can set the initial size to be 20 and resize to 30 at time 2. \nThe total wasted space is (20 - 10) + (20 - 20) + (30 - 30) = 10.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [10,20,15,30,20], k = 2\n\nOutput:\n 15\n\nExplanation:\n size = [10,20,20,30,30].\nWe can set the initial size to 10, resize to 20 at time 1, and resize to 30 at time 3.\nThe total wasted space is (10 - 10) + (20 - 20) + (20 - 15) + (30 - 30) + (30 - 20) = 15.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 200\n\n\n1 <= nums[i] <= 10\n6\n\n\n0 <= k <= nums.length - 1",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1958,
        "slug": "check-if-move-is-legal",
        "url": "https://leetcode.com/problems/check-if-move-is-legal/",
        "titulo": "Check if Move is Legal",
        "enunciado": "You are given a \n0-indexed\n \n8 x 8\n grid \nboard\n, where \nboard[r][c]\n represents the cell \n(r, c)\n on a game board. On the board, free cells are represented by \n'.'\n, white cells are represented by \n'W'\n, and black cells are represented by \n'B'\n.\n\n\nEach move in this game consists of choosing a free cell and changing it to the color you are playing as (either white or black). However, a move is only \nlegal\n if, after changing it, the cell becomes the \nendpoint of a good line\n (horizontal, vertical, or diagonal).\n\n\nA \ngood line\n is a line of \nthree or more cells (including the endpoints)\n where the endpoints of the line are \none color\n, and the remaining cells in the middle are the \nopposite color\n (no cells in the line are free). You can find examples for good lines in the figure below:\n\n\n\n\nGiven two integers \nrMove\n and \ncMove\n and a character \ncolor\n representing the color you are playing as (white or black), return \ntrue\n \nif changing cell \n(rMove, cMove)\n \nto color\n \ncolor\n \nis a \nlegal\n move, or \nfalse\n if it is not legal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"],[\"W\",\"B\",\"B\",\".\",\"W\",\"W\",\"W\",\"B\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"B\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\".\",\".\",\".\",\".\"]], rMove = 4, cMove = 3, color = \"B\"\n\nOutput:\n true\n\nExplanation:\n '.', 'W', and 'B' are represented by the colors blue, white, and black respectively, and cell (rMove, cMove) is marked with an 'X'.\nThe two good lines with the chosen cell as an endpoint are annotated above with the red rectangles.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n board = [[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\"B\",\".\",\".\",\"W\",\".\",\".\",\".\"],[\".\",\".\",\"W\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\"W\",\"B\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\".\"],[\".\",\".\",\".\",\".\",\"B\",\"W\",\".\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\"W\",\".\"],[\".\",\".\",\".\",\".\",\".\",\".\",\".\",\"B\"]], rMove = 4, cMove = 4, color = \"W\"\n\nOutput:\n false\n\nExplanation:\n While there are good lines with the chosen cell as a middle cell, there are no good lines with the chosen cell as an endpoint.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nboard.length == board[r].length == 8\n\n\n0 <= rMove, cMove < 8\n\n\nboard[rMove][cMove] == '.'\n\n\ncolor\n is either \n'B'\n or \n'W'\n.",
        "temas": [
            "Array",
            "Matrix",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1947,
        "slug": "maximum-compatibility-score-sum",
        "url": "https://leetcode.com/problems/maximum-compatibility-score-sum/",
        "titulo": "Maximum Compatibility Score Sum",
        "enunciado": "There is a survey that consists of \nn\n questions where each question's answer is either \n0\n (no) or \n1\n (yes).\n\n\nThe survey was given to \nm\n students numbered from \n0\n to \nm - 1\n and \nm\n mentors numbered from \n0\n to \nm - 1\n. The answers of the students are represented by a 2D integer array \nstudents\n where \nstudents[i]\n is an integer array that contains the answers of the \ni\nth\n student (\n0-indexed\n). The answers of the mentors are represented by a 2D integer array \nmentors\n where \nmentors[j]\n is an integer array that contains the answers of the \nj\nth\n mentor (\n0-indexed\n).\n\n\nEach student will be assigned to \none\n mentor, and each mentor will have \none\n student assigned to them. The \ncompatibility score\n of a student-mentor pair is the number of answers that are the same for both the student and the mentor.\n\n\n\n\nFor example, if the student's answers were \n[1, \n0\n, \n1\n]\n and the mentor's answers were \n[0, \n0\n, \n1\n]\n, then their compatibility score is 2 because only the second and the third answers are the same.\n\n\n\n\nYou are tasked with finding the optimal student-mentor pairings to \nmaximize\n the\n sum of the compatibility scores\n.\n\n\nGiven \nstudents\n and \nmentors\n, return \nthe \nmaximum compatibility score sum\n that can be achieved.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n students = [[1,1,0],[1,0,1],[0,0,1]], mentors = [[1,0,0],[0,0,1],[1,1,0]]\n\nOutput:\n 8\n\nExplanation:\n We assign students to mentors in the following way:\n- student 0 to mentor 2 with a compatibility score of 3.\n- student 1 to mentor 0 with a compatibility score of 2.\n- student 2 to mentor 1 with a compatibility score of 3.\nThe compatibility score sum is 3 + 2 + 3 = 8.\n\n\n\nExample 2:\n\n\n\n\nInput:\n students = [[0,0],[0,0],[0,0]], mentors = [[1,1],[1,1],[1,1]]\n\nOutput:\n 0\n\nExplanation:\n The compatibility score of any student-mentor pair is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == students.length == mentors.length\n\n\nn == students[i].length == mentors[j].length\n\n\n1 <= m, n <= 8\n\n\nstudents[i][k]\n is either \n0\n or \n1\n.\n\n\nmentors[j][k]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1946,
        "slug": "largest-number-after-mutating-substring",
        "url": "https://leetcode.com/problems/largest-number-after-mutating-substring/",
        "titulo": "Largest Number After Mutating Substring",
        "enunciado": "You are given a string \nnum\n, which represents a large integer. You are also given a \n0-indexed\n integer array \nchange\n of length \n10\n that maps each digit \n0-9\n to another digit. More formally, digit \nd\n maps to digit \nchange[d]\n.\n\n\nYou may \nchoose\n to \nmutate a single substring\n of \nnum\n. To mutate a substring, replace each digit \nnum[i]\n with the digit it maps to in \nchange\n (i.e. replace \nnum[i]\n with \nchange[num[i]]\n).\n\n\nReturn \na string representing the \nlargest\n possible integer after \nmutating\n (or choosing not to) a \nsingle substring\n of \nnum\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within the string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"\n1\n32\", change = [9,8,5,0,3,6,4,2,6,8]\n\nOutput:\n \"\n8\n32\"\n\nExplanation:\n Replace the substring \"1\":\n- 1 maps to change[1] = 8.\nThus, \"\n1\n32\" becomes \"\n8\n32\".\n\"832\" is the largest number that can be created, so return it.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"\n021\n\", change = [9,4,3,5,7,2,1,9,0,6]\n\nOutput:\n \"\n934\n\"\n\nExplanation:\n Replace the substring \"021\":\n- 0 maps to change[0] = 9.\n- 2 maps to change[2] = 3.\n- 1 maps to change[1] = 4.\nThus, \"\n021\n\" becomes \"\n934\n\".\n\"934\" is the largest number that can be created, so return it.\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = \"5\", change = [1,4,7,5,3,2,5,6,9,4]\n\nOutput:\n \"5\"\n\nExplanation:\n \"5\" is already the largest number that can be created, so return it.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num.length <= 10\n5\n\n\nnum\n consists of only digits \n0-9\n.\n\n\nchange.length == 10\n\n\n0 <= change[d] <= 9",
        "temas": [
            "Array",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1937,
        "slug": "maximum-number-of-points-with-cost",
        "url": "https://leetcode.com/problems/maximum-number-of-points-with-cost/",
        "titulo": "Maximum Number of Points with Cost",
        "enunciado": "You are given an \nm x n\n integer matrix \npoints\n (\n0-indexed\n). Starting with \n0\n points, you want to \nmaximize\n the number of points you can get from the matrix.\n\n\nTo gain points, you must pick one cell in \neach row\n. Picking the cell at coordinates \n(r, c)\n will \nadd\n \npoints[r][c]\n to your score.\n\n\nHowever, you will lose points if you pick a cell too far from the cell that you picked in the previous row. For every two adjacent rows \nr\n and \nr + 1\n (where \n0 <= r < m - 1\n), picking cells at coordinates \n(r, c\n1\n)\n and \n(r + 1, c\n2\n)\n will \nsubtract\n \nabs(c\n1\n - c\n2\n)\n from your score.\n\n\nReturn \nthe \nmaximum\n number of points you can achieve\n.\n\n\nabs(x)\n is defined as:\n\n\n\n\nx\n for \nx >= 0\n.\n\n\n-x\n for \nx < 0\n.\n\n\n\n\n \n\n\nExample 1:\n \n\n\n\n\n\n\nInput:\n points = [[1,2,3],[1,5,1],[3,1,1]]\n\nOutput:\n 9\n\nExplanation:\n\nThe blue cells denote the optimal cells to pick, which have coordinates (0, 2), (1, 1), and (2, 0).\nYou add 3 + 5 + 3 = 11 to your score.\nHowever, you must subtract abs(2 - 1) + abs(1 - 0) = 2 from your score.\nYour final score is 11 - 2 = 9.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n points = [[1,5],[2,3],[4,2]]\n\nOutput:\n 11\n\nExplanation:\n\nThe blue cells denote the optimal cells to pick, which have coordinates (0, 1), (1, 1), and (2, 0).\nYou add 5 + 3 + 4 = 12 to your score.\nHowever, you must subtract abs(1 - 1) + abs(1 - 0) = 1 from your score.\nYour final score is 12 - 1 = 11.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == points.length\n\n\nn == points[r].length\n\n\n1 <= m, n <= 10\n5\n\n\n1 <= m * n <= 10\n5\n\n\n0 <= points[r][c] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1936,
        "slug": "add-minimum-number-of-rungs",
        "url": "https://leetcode.com/problems/add-minimum-number-of-rungs/",
        "titulo": "Add Minimum Number of Rungs",
        "enunciado": "You are given a \nstrictly increasing\n integer array \nrungs\n that represents the \nheight\n of rungs on a ladder. You are currently on the \nfloor\n at height \n0\n, and you want to reach the last rung.\n\n\nYou are also given an integer \ndist\n. You can only climb to the next highest rung if the distance between where you are currently at (the floor or on a rung) and the next rung is \nat most\n \ndist\n. You are able to insert rungs at any positive \ninteger\n height if a rung is not already there.\n\n\nReturn \nthe \nminimum\n number of rungs that must be added to the ladder in order for you to climb to the last rung.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rungs = [1,3,5,10], dist = 2\n\nOutput:\n 2\n\nExplanation:\n\nYou currently cannot reach the last rung.\nAdd rungs at heights 7 and 8 to climb this ladder. \nThe ladder will now have rungs at [1,3,5,\n7\n,\n8\n,10].\n\n\n\nExample 2:\n\n\n\n\nInput:\n rungs = [3,6,8,10], dist = 3\n\nOutput:\n 0\n\nExplanation:\n\nThis ladder can be climbed without adding additional rungs.\n\n\n\nExample 3:\n\n\n\n\nInput:\n rungs = [3,4,6,7], dist = 2\n\nOutput:\n 1\n\nExplanation:\n\nYou currently cannot reach the first rung from the ground.\nAdd a rung at height 1 to climb this ladder.\nThe ladder will now have rungs at [\n1\n,3,4,6,7].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rungs.length <= 10\n5\n\n\n1 <= rungs[i] <= 10\n9\n\n\n1 <= dist <= 10\n9\n\n\nrungs\n is \nstrictly increasing\n.",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1930,
        "slug": "unique-length-3-palindromic-subsequences",
        "url": "https://leetcode.com/problems/unique-length-3-palindromic-subsequences/",
        "titulo": "Unique Length-3 Palindromic Subsequences",
        "enunciado": "Given a string \ns\n, return \nthe number of \nunique palindromes of length three\n that are a \nsubsequence\n of \ns\n.\n\n\nNote that even if there are multiple ways to obtain the same subsequence, it is still only counted \nonce\n.\n\n\nA \npalindrome\n is a string that reads the same forwards and backwards.\n\n\nA \nsubsequence\n of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\n\n\n\nFor example, \n\"ace\"\n is a subsequence of \n\"\na\nb\nc\nd\ne\n\"\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aabca\"\n\nOutput:\n 3\n\nExplanation:\n The 3 palindromic subsequences of length 3 are:\n- \"aba\" (subsequence of \"\na\na\nb\nc\na\n\")\n- \"aaa\" (subsequence of \"\naa\nbc\na\n\")\n- \"aca\" (subsequence of \"\na\nab\nca\n\")\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"adc\"\n\nOutput:\n 0\n\nExplanation:\n There are no palindromic subsequences of length 3 in \"adc\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"bbcbaba\"\n\nOutput:\n 4\n\nExplanation:\n The 4 palindromic subsequences of length 3 are:\n- \"bbb\" (subsequence of \"\nbb\nc\nb\naba\")\n- \"bcb\" (subsequence of \"\nb\nb\ncb\naba\")\n- \"bab\" (subsequence of \"\nb\nbcb\nab\na\")\n- \"aba\" (subsequence of \"bbcb\naba\n\")\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 10\n5\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1943,
        "slug": "describe-the-painting",
        "url": "https://leetcode.com/problems/describe-the-painting/",
        "titulo": "Describe the Painting",
        "enunciado": "There is a long and thin painting that can be represented by a number line. The painting was painted with multiple overlapping segments where each segment was painted with a \nunique\n color. You are given a 2D integer array \nsegments\n, where \nsegments[i] = [start\ni\n, end\ni\n, color\ni\n]\n represents the \nhalf-closed segment\n \n[start\ni\n, end\ni\n)\n with \ncolor\ni\n as the color.\n\n\nThe colors in the overlapping segments of the painting were \nmixed\n when it was painted. When two or more colors mix, they form a new color that can be represented as a \nset\n of mixed colors.\n\n\n\n\nFor example, if colors \n2\n, \n4\n, and \n6\n are mixed, then the resulting mixed color is \n{2,4,6}\n.\n\n\n\n\nFor the sake of simplicity, you should only output the \nsum\n of the elements in the set rather than the full set.\n\n\nYou want to \ndescribe\n the painting with the \nminimum\n number of non-overlapping \nhalf-closed segments\n of these mixed colors. These segments can be represented by the 2D array \npainting\n where \npainting[j] = [left\nj\n, right\nj\n, mix\nj\n]\n describes a \nhalf-closed segment\n \n[left\nj\n, right\nj\n)\n with the mixed color \nsum\n of \nmix\nj\n.\n\n\n\n\nFor example, the painting created with \nsegments = [[1,4,5],[1,7,7]]\n can be described by \npainting = [[1,4,12],[4,7,7]]\n because:\n\n\t\n\n\n[1,4)\n is colored \n{5,7}\n (with a sum of \n12\n) from both the first and second segments.\n\n\n[4,7)\n is colored \n{7}\n from only the second segment.\n\n\n\n\n\n\n\n\nReturn \nthe 2D array \npainting\n describing the finished painting (excluding any parts that are \nnot \npainted). You may return the segments in \nany order\n.\n\n\nA \nhalf-closed segment\n \n[a, b)\n is the section of the number line between points \na\n and \nb\n \nincluding\n point \na\n and \nnot including\n point \nb\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n segments = [[1,4,5],[4,7,7],[1,7,9]]\n\nOutput:\n [[1,4,14],[4,7,16]]\n\nExplanation: \nThe painting can be described as follows:\n- [1,4) is colored {5,9} (with a sum of 14) from the first and third segments.\n- [4,7) is colored {7,9} (with a sum of 16) from the second and third segments.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n segments = [[1,7,9],[6,8,15],[8,10,7]]\n\nOutput:\n [[1,6,9],[6,7,24],[7,8,15],[8,10,7]]\n\nExplanation: \nThe painting can be described as follows:\n- [1,6) is colored 9 from the first segment.\n- [6,7) is colored {9,15} (with a sum of 24) from the first and second segments.\n- [7,8) is colored 15 from the second segment.\n- [8,10) is colored 7 from the third segment.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n segments = [[1,4,5],[1,4,7],[4,7,1],[4,7,11]]\n\nOutput:\n [[1,4,12],[4,7,12]]\n\nExplanation: \nThe painting can be described as follows:\n- [1,4) is colored {5,7} (with a sum of 12) from the first and second segments.\n- [4,7) is colored {1,11} (with a sum of 12) from the third and fourth segments.\nNote that returning a single segment [1,7) is incorrect because the mixed color sets are different.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= segments.length <= 2 * 10\n4\n\n\nsegments[i].length == 3\n\n\n1 <= start\ni\n < end\ni\n <= 10\n5\n\n\n1 <= color\ni\n <= 10\n9\n\n\nEach \ncolor\ni\n is distinct.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1942,
        "slug": "the-number-of-the-smallest-unoccupied-chair",
        "url": "https://leetcode.com/problems/the-number-of-the-smallest-unoccupied-chair/",
        "titulo": "The Number of the Smallest Unoccupied Chair",
        "enunciado": "There is a party where \nn\n friends numbered from \n0\n to \nn - 1\n are attending. There is an \ninfinite\n number of chairs in this party that are numbered from \n0\n to \ninfinity\n. When a friend arrives at the party, they sit on the unoccupied chair with the \nsmallest number\n.\n\n\n\n\nFor example, if chairs \n0\n, \n1\n, and \n5\n are occupied when a friend comes, they will sit on chair number \n2\n.\n\n\n\n\nWhen a friend leaves the party, their chair becomes unoccupied at the moment they leave. If another friend arrives at that same moment, they can sit in that chair.\n\n\nYou are given a \n0-indexed\n 2D integer array \ntimes\n where \ntimes[i] = [arrival\ni\n, leaving\ni\n]\n, indicating the arrival and leaving times of the \ni\nth\n friend respectively, and an integer \ntargetFriend\n. All arrival times are \ndistinct\n.\n\n\nReturn\n the \nchair number\n that the friend numbered \ntargetFriend\n will sit on\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n times = [[1,4],[2,3],[4,6]], targetFriend = 1\n\nOutput:\n 1\n\nExplanation:\n \n- Friend 0 arrives at time 1 and sits on chair 0.\n- Friend 1 arrives at time 2 and sits on chair 1.\n- Friend 1 leaves at time 3 and chair 1 becomes empty.\n- Friend 0 leaves at time 4 and chair 0 becomes empty.\n- Friend 2 arrives at time 4 and sits on chair 0.\nSince friend 1 sat on chair 1, we return 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n times = [[3,10],[1,5],[2,6]], targetFriend = 0\n\nOutput:\n 2\n\nExplanation:\n \n- Friend 1 arrives at time 1 and sits on chair 0.\n- Friend 2 arrives at time 2 and sits on chair 1.\n- Friend 0 arrives at time 3 and sits on chair 2.\n- Friend 1 leaves at time 5 and chair 0 becomes empty.\n- Friend 2 leaves at time 6 and chair 1 becomes empty.\n- Friend 0 leaves at time 10 and chair 2 becomes empty.\nSince friend 0 sat on chair 2, we return 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == times.length\n\n\n2 <= n <= 10\n4\n\n\ntimes[i].length == 2\n\n\n1 <= arrival\ni\n < leaving\ni\n <= 10\n5\n\n\n0 <= targetFriend <= n - 1\n\n\nEach \narrival\ni\n time is \ndistinct\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1922,
        "slug": "count-good-numbers",
        "url": "https://leetcode.com/problems/count-good-numbers/",
        "titulo": "Count Good Numbers",
        "enunciado": "A digit string is \ngood\n if the digits \n(0-indexed)\n at \neven\n indices are \neven\n and the digits at \nodd\n indices are \nprime\n (\n2\n, \n3\n, \n5\n, or \n7\n).\n\n\n\n\nFor example, \n\"2582\"\n is good because the digits (\n2\n and \n8\n) at even positions are even and the digits (\n5\n and \n2\n) at odd positions are prime. However, \n\"3245\"\n is \nnot\n good because \n3\n is at an even index but is not even.\n\n\n\n\nGiven an integer \nn\n, return \nthe \ntotal\n number of good digit strings of length \nn\n. Since the answer may be large, \nreturn it modulo \n10\n9\n + 7\n.\n\n\nA \ndigit string\n is a string consisting of digits \n0\n through \n9\n that may contain leading zeros.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 5\n\nExplanation:\n The good numbers of length 1 are \"0\", \"2\", \"4\", \"6\", \"8\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n 400\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 50\n\nOutput:\n 564908303\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n15",
        "temas": [
            "Math",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1921,
        "slug": "eliminate-maximum-number-of-monsters",
        "url": "https://leetcode.com/problems/eliminate-maximum-number-of-monsters/",
        "titulo": "Eliminate Maximum Number of Monsters",
        "enunciado": "You are playing a video game where you are defending your city from a group of \nn\n monsters. You are given a \n0-indexed\n integer array \ndist\n of size \nn\n, where \ndist[i]\n is the \ninitial distance\n in kilometers of the \ni\nth\n monster from the city.\n\n\nThe monsters walk toward the city at a \nconstant\n speed. The speed of each monster is given to you in an integer array \nspeed\n of size \nn\n, where \nspeed[i]\n is the speed of the \ni\nth\n monster in kilometers per minute.\n\n\nYou have a weapon that, once fully charged, can eliminate a \nsingle\n monster. However, the weapon takes \none minute\n to charge. The weapon is fully charged at the very start.\n\n\nYou lose when any monster reaches your city. If a monster reaches the city at the exact moment the weapon is fully charged, it counts as a \nloss\n, and the game ends before you can use your weapon.\n\n\nReturn \nthe \nmaximum\n number of monsters that you can eliminate before you lose, or \nn\n if you can eliminate all the monsters before they reach the city.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n dist = [1,3,4], speed = [1,1,1]\n\nOutput:\n 3\n\nExplanation:\n\nIn the beginning, the distances of the monsters are [1,3,4]. You eliminate the first monster.\nAfter a minute, the distances of the monsters are [X,2,3]. You eliminate the second monster.\nAfter a minute, the distances of the monsters are [X,X,2]. You eliminate the third monster.\nAll 3 monsters can be eliminated.\n\n\nExample 2:\n\n\n\n\nInput:\n dist = [1,1,2,3], speed = [1,1,1,1]\n\nOutput:\n 1\n\nExplanation:\n\nIn the beginning, the distances of the monsters are [1,1,2,3]. You eliminate the first monster.\nAfter a minute, the distances of the monsters are [X,0,1,2], so you lose.\nYou can only eliminate 1 monster.\n\n\n\nExample 3:\n\n\n\n\nInput:\n dist = [3,2,4], speed = [5,3,2]\n\nOutput:\n 1\n\nExplanation:\n\nIn the beginning, the distances of the monsters are [3,2,4]. You eliminate the first monster.\nAfter a minute, the distances of the monsters are [X,0,2], so you lose.\nYou can only eliminate 1 monster.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == dist.length == speed.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= dist[i], speed[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1901,
        "slug": "find-a-peak-element-ii",
        "url": "https://leetcode.com/problems/find-a-peak-element-ii/",
        "titulo": "Find a Peak Element II",
        "enunciado": "A \npeak\n element in a 2D grid is an element that is \nstrictly greater\n than all of its \nadjacent \nneighbors to the left, right, top, and bottom.\n\n\nGiven a \n0-indexed\n \nm x n\n matrix \nmat\n where \nno two adjacent cells are equal\n, find \nany\n peak element \nmat[i][j]\n and return \nthe length 2 array \n[i,j]\n.\n\n\nYou may assume that the entire matrix is surrounded by an \nouter perimeter\n with the value \n-1\n in each cell.\n\n\nYou must write an algorithm that runs in \nO(m log(n))\n or \nO(n log(m))\n time.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[1,4],[3,2]]\n\nOutput:\n [0,1]\n\nExplanation:\n Both 3 and 4 are peak elements so [1,0] and [0,1] are both acceptable answers.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n mat = [[10,20,15],[21,30,14],[7,16,32]]\n\nOutput:\n [1,1]\n\nExplanation:\n Both 30 and 32 are peak elements so [1,1] and [2,2] are both acceptable answers.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 500\n\n\n1 <= mat[i][j] <= 10\n5\n\n\nNo two adjacent cells are equal.",
        "temas": [
            "Array",
            "Binary Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1915,
        "slug": "number-of-wonderful-substrings",
        "url": "https://leetcode.com/problems/number-of-wonderful-substrings/",
        "titulo": "Number of Wonderful Substrings",
        "enunciado": "A \nwonderful\n string is a string where \nat most one\n letter appears an \nodd\n number of times.\n\n\n\n\nFor example, \n\"ccjjc\"\n and \n\"abab\"\n are wonderful, but \n\"ab\"\n is not.\n\n\n\n\nGiven a string \nword\n that consists of the first ten lowercase English letters (\n'a'\n through \n'j'\n), return \nthe \nnumber of wonderful non-empty substrings\n in \nword\n. If the same substring appears multiple times in \nword\n, then count \neach occurrence\n separately.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n word = \"aba\"\r\n\nOutput:\n 4\r\n\nExplanation:\n The four wonderful substrings are underlined below:\r\n- \"\na\nba\" -> \"a\"\r\n- \"a\nb\na\" -> \"b\"\r\n- \"ab\na\n\" -> \"a\"\r\n- \"\naba\n\" -> \"aba\"\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n word = \"aabb\"\r\n\nOutput:\n 9\r\n\nExplanation:\n The nine wonderful substrings are underlined below:\r\n- \"\na\nabb\" -> \"a\"\r\n- \"\naa\nbb\" -> \"aa\"\r\n- \"\naab\nb\" -> \"aab\"\r\n- \"\naabb\n\" -> \"aabb\"\r\n- \"a\na\nbb\" -> \"a\"\r\n- \"a\nabb\n\" -> \"abb\"\r\n- \"aa\nb\nb\" -> \"b\"\r\n- \"aa\nbb\n\" -> \"bb\"\r\n- \"aab\nb\n\" -> \"b\"\r\n\n\n\nExample 3:\n\n\n\r\n\nInput:\n word = \"he\"\r\n\nOutput:\n 2\r\n\nExplanation:\n The two wonderful substrings are underlined below:\r\n- \"\nh\ne\" -> \"h\"\r\n- \"h\ne\n\" -> \"e\"\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 10\n5\n\n\nword\n consists of lowercase English letters from \n'a'\n to \n'j'\n.",
        "temas": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1914,
        "slug": "cyclically-rotating-a-grid",
        "url": "https://leetcode.com/problems/cyclically-rotating-a-grid/",
        "titulo": "Cyclically Rotating a Grid",
        "enunciado": "You are given an \nm x n\n integer matrix \ngrid\n​​​, where \nm\n and \nn\n are both \neven\n integers, and an integer \nk\n.\n\n\nThe matrix is composed of several layers, which is shown in the below image, where each color is its own layer:\n\n\n\n\nA cyclic rotation of the matrix is done by cyclically rotating \neach layer\n in the matrix. To cyclically rotate a layer once, each element in the layer will take the place of the adjacent element in the \ncounter-clockwise\n direction. An example rotation is shown below:\n\n\n\n\nReturn \nthe matrix after applying \nk\n \ncyclic rotations to it\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\r\n\nInput:\n grid = [[40,10],[30,20]], k = 1\r\n\nOutput:\n [[10,20],[40,30]]\r\n\nExplanation:\n The figures above represent the grid at every state.\r\n\n\n\nExample 2:\n\n\n \n \n\n\n\r\n\nInput:\n grid = [[1,2,3,4],[5,6,7,8],[9,10,11,12],[13,14,15,16]], k = 2\r\n\nOutput:\n [[3,4,8,12],[2,11,10,16],[1,7,6,15],[5,9,13,14]]\r\n\nExplanation:\n The figures above represent the grid at every state.\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n2 <= m, n <= 50\n\n\nBoth \nm\n and \nn\n are \neven\n integers.\n\n\n1 <= grid[i][j] <=\n \n5000\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1927,
        "slug": "sum-game",
        "url": "https://leetcode.com/problems/sum-game/",
        "titulo": "Sum Game",
        "enunciado": "Alice and Bob take turns playing a game, with \nAlice\n starting first\n.\n\n\nYou are given a string \nnum\n of \neven length\n consisting of digits and \n'?'\n characters. On each turn, a player will do the following if there is still at least one \n'?'\n in \nnum\n:\n\n\n\n\nChoose an index \ni\n where \nnum[i] == '?'\n.\n\n\nReplace \nnum[i]\n with any digit between \n'0'\n and \n'9'\n.\n\n\n\n\nThe game ends when there are no more \n'?'\n characters in \nnum\n.\n\n\nFor Bob to win, the sum of the digits in the first half of \nnum\n must be \nequal\n to the sum of the digits in the second half. For Alice to win, the sums must \nnot be equal\n.\n\n\n\n\nFor example, if the game ended with \nnum = \"243801\"\n, then Bob wins because \n2+4+3 = 8+0+1\n. If the game ended with \nnum = \"243803\"\n, then Alice wins because \n2+4+3 != 8+0+3\n.\n\n\n\n\nAssuming Alice and Bob play \noptimally\n, return \ntrue\n \nif Alice will win and \nfalse\n \nif Bob will win\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"5023\"\n\nOutput:\n false\n\nExplanation:\n There are no moves to be made.\nThe sum of the first half is equal to the sum of the second half: 5 + 0 = 2 + 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"25??\"\n\nOutput:\n true\n\nExplanation: \nAlice can replace one of the '?'s with '9' and it will be impossible for Bob to make the sums equal.\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = \"?3295???\"\n\nOutput:\n false\n\nExplanation:\n It can be proven that Bob will always win. One possible outcome is:\n- Alice replaces the first '?' with '9'. num = \"93295???\".\n- Bob replaces one of the '?' in the right half with '9'. num = \"932959??\".\n- Alice replaces one of the '?' in the right half with '2'. num = \"9329592?\".\n- Bob replaces the last '?' in the right half with '7'. num = \"93295927\".\nBob wins because 9 + 3 + 2 + 9 = 5 + 9 + 2 + 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= num.length <= 10\n5\n\n\nnum.length\n is \neven\n.\n\n\nnum\n consists of only digits and \n'?'\n.",
        "temas": [
            "Math",
            "String",
            "Greedy",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1926,
        "slug": "nearest-exit-from-entrance-in-maze",
        "url": "https://leetcode.com/problems/nearest-exit-from-entrance-in-maze/",
        "titulo": "Nearest Exit from Entrance in Maze",
        "enunciado": "You are given an \nm x n\n matrix \nmaze\n (\n0-indexed\n) with empty cells (represented as \n'.'\n) and walls (represented as \n'+'\n). You are also given the \nentrance\n of the maze, where \nentrance = [entrance\nrow\n, entrance\ncol\n]\n denotes the row and column of the cell you are initially standing at.\n\n\nIn one step, you can move one cell \nup\n, \ndown\n, \nleft\n, or \nright\n. You cannot step into a cell with a wall, and you cannot step outside the maze. Your goal is to find the \nnearest exit\n from the \nentrance\n. An \nexit\n is defined as an \nempty cell\n that is at the \nborder\n of the \nmaze\n. The \nentrance\n \ndoes not count\n as an exit.\n\n\nReturn \nthe \nnumber of steps\n in the shortest path from the \nentrance\n to the nearest exit, or \n-1\n if no such path exists\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n maze = [[\"+\",\"+\",\".\",\"+\"],[\".\",\".\",\".\",\"+\"],[\"+\",\"+\",\"+\",\".\"]], entrance = [1,2]\n\nOutput:\n 1\n\nExplanation:\n There are 3 exits in this maze at [1,0], [0,2], and [2,3].\nInitially, you are at the entrance cell [1,2].\n- You can reach [1,0] by moving 2 steps left.\n- You can reach [0,2] by moving 1 step up.\nIt is impossible to reach [2,3] from the entrance.\nThus, the nearest exit is [0,2], which is 1 step away.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n maze = [[\"+\",\"+\",\"+\"],[\".\",\".\",\".\"],[\"+\",\"+\",\"+\"]], entrance = [1,0]\n\nOutput:\n 2\n\nExplanation:\n There is 1 exit in this maze at [1,2].\n[1,0] does not count as an exit since it is the entrance cell.\nInitially, you are at the entrance cell [1,0].\n- You can reach [1,2] by moving 2 steps right.\nThus, the nearest exit is [1,2], which is 2 steps away.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n maze = [[\".\",\"+\"]], entrance = [0,0]\n\nOutput:\n -1\n\nExplanation:\n There are no exits in this maze.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nmaze.length == m\n\n\nmaze[i].length == n\n\n\n1 <= m, n <= 100\n\n\nmaze[i][j]\n is either \n'.'\n or \n'+'\n.\n\n\nentrance.length == 2\n\n\n0 <= entrance\nrow\n < m\n\n\n0 <= entrance\ncol\n < n\n\n\nentrance\n will always be an empty cell.",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1905,
        "slug": "count-sub-islands",
        "url": "https://leetcode.com/problems/count-sub-islands/",
        "titulo": "Count Sub Islands",
        "enunciado": "You are given two \nm x n\n binary matrices \ngrid1\n and \ngrid2\n containing only \n0\n's (representing water) and \n1\n's (representing land). An \nisland\n is a group of \n1\n's connected \n4-directionally\n (horizontal or vertical). Any cells outside of the grid are considered water cells.\n\n\nAn island in \ngrid2\n is considered a \nsub-island \nif there is an island in \ngrid1\n that contains \nall\n the cells that make up \nthis\n island in \ngrid2\n.\n\n\nReturn the \nnumber\n of islands in \ngrid2\n \nthat are considered \nsub-islands\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid1 = [[1,1,1,0,0],[0,1,1,1,1],[0,0,0,0,0],[1,0,0,0,0],[1,1,0,1,1]], grid2 = [[1,1,1,0,0],[0,0,1,1,1],[0,1,0,0,0],[1,0,1,1,0],[0,1,0,1,0]]\n\nOutput:\n 3\n\nExplanation: \nIn the picture above, the grid on the left is grid1 and the grid on the right is grid2.\nThe 1s colored red in grid2 are those considered to be part of a sub-island. There are three sub-islands.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid1 = [[1,0,1,0,1],[1,1,1,1,1],[0,0,0,0,0],[1,1,1,1,1],[1,0,1,0,1]], grid2 = [[0,0,0,0,0],[1,1,1,1,1],[0,1,0,1,0],[0,1,0,1,0],[1,0,0,0,1]]\n\nOutput:\n 2 \n\nExplanation: \nIn the picture above, the grid on the left is grid1 and the grid on the right is grid2.\nThe 1s colored red in grid2 are those considered to be part of a sub-island. There are two sub-islands.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid1.length == grid2.length\n\n\nn == grid1[i].length == grid2[i].length\n\n\n1 <= m, n <= 500\n\n\ngrid1[i][j]\n and \ngrid2[i][j]\n are either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1906,
        "slug": "minimum-absolute-difference-queries",
        "url": "https://leetcode.com/problems/minimum-absolute-difference-queries/",
        "titulo": "Minimum Absolute Difference Queries",
        "enunciado": "The \nminimum absolute difference\n of an array \na\n is defined as the \nminimum value\n of \n|a[i] - a[j]|\n, where \n0 <= i < j < a.length\n and \na[i] != a[j]\n. If all elements of \na\n are the \nsame\n, the minimum absolute difference is \n-1\n.\n\n\n\n\nFor example, the minimum absolute difference of the array \n[5,\n2\n,\n3\n,7,2]\n is \n|2 - 3| = 1\n. Note that it is not \n0\n because \na[i]\n and \na[j]\n must be different.\n\n\n\n\nYou are given an integer array \nnums\n and the array \nqueries\n where \nqueries[i] = [l\ni\n, r\ni\n]\n. For each query \ni\n, compute the \nminimum absolute difference\n of the \nsubarray\n \nnums[l\ni\n...r\ni\n]\n containing the elements of \nnums\n between the \n0-based\n indices \nl\ni\n and \nr\ni\n (\ninclusive\n).\n\n\nReturn \nan \narray\n \nans\n \nwhere\n \nans[i]\n \nis the answer to the\n \ni\nth\n \nquery\n.\n\n\nA \nsubarray\n is a contiguous sequence of elements in an array.\n\n\nThe value of \n|x|\n is defined as:\n\n\n\n\nx\n if \nx >= 0\n.\n\n\n-x\n if \nx < 0\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,4,8], queries = [[0,1],[1,2],[2,3],[0,3]]\n\nOutput:\n [2,1,4,1]\n\nExplanation:\n The queries are processed as follows:\n- queries[0] = [0,1]: The subarray is [\n1\n,\n3\n] and the minimum absolute difference is |1-3| = 2.\n- queries[1] = [1,2]: The subarray is [\n3\n,\n4\n] and the minimum absolute difference is |3-4| = 1.\n- queries[2] = [2,3]: The subarray is [\n4\n,\n8\n] and the minimum absolute difference is |4-8| = 4.\n- queries[3] = [0,3]: The subarray is [1,\n3\n,\n4\n,8] and the minimum absolute difference is |3-4| = 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,5,2,2,7,10], queries = [[2,3],[0,2],[0,5],[3,5]]\n\nOutput:\n [-1,1,1,3]\n\nExplanation: \nThe queries are processed as follows:\n- queries[0] = [2,3]: The subarray is [2,2] and the minimum absolute difference is -1 because all the\n  elements are the same.\n- queries[1] = [0,2]: The subarray is [\n4\n,\n5\n,2] and the minimum absolute difference is |4-5| = 1.\n- queries[2] = [0,5]: The subarray is [\n4\n,\n5\n,2,2,7,10] and the minimum absolute difference is |4-5| = 1.\n- queries[3] = [3,5]: The subarray is [2,\n7\n,\n10\n] and the minimum absolute difference is |7-10| = 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 100\n\n\n1 <= queries.length <= 2 * 10\n4\n\n\n0 <= l\ni\n < r\ni\n < nums.length",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1904,
        "slug": "the-number-of-full-rounds-you-have-played",
        "url": "https://leetcode.com/problems/the-number-of-full-rounds-you-have-played/",
        "titulo": "The Number of Full Rounds You Have Played",
        "enunciado": "You are participating in an online chess tournament. There is a chess round that starts every \n15\n minutes. The first round of the day starts at \n00:00\n, and after every \n15\n minutes, a new round starts.\n\n\n\n\nFor example, the second round starts at \n00:15\n, the fourth round starts at \n00:45\n, and the seventh round starts at \n01:30\n.\n\n\n\n\nYou are given two strings \nloginTime\n and \nlogoutTime\n where:\n\n\n\n\nloginTime\n is the time you will login to the game, and\n\n\nlogoutTime\n is the time you will logout from the game.\n\n\n\n\nIf \nlogoutTime\n is \nearlier\n than \nloginTime\n, this means you have played from \nloginTime\n to midnight and from midnight to \nlogoutTime\n.\n\n\nReturn \nthe number of full chess rounds you have played in the tournament\n.\n\n\nNote:\n All the given times follow the 24-hour clock. That means the first round of the day starts at \n00:00\n and the last round of the day starts at \n23:45\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n loginTime = \"09:31\", logoutTime = \"10:14\"\n\nOutput:\n 1\n\nExplanation:\n You played one full round from 09:45 to 10:00.\nYou did not play the full round from 09:30 to 09:45 because you logged in at 09:31 after it began.\nYou did not play the full round from 10:00 to 10:15 because you logged out at 10:14 before it ended.\n\n\n\nExample 2:\n\n\n\n\nInput:\n loginTime = \"21:30\", logoutTime = \"03:00\"\n\nOutput:\n 22\n\nExplanation:\n You played 10 full rounds from 21:30 to 00:00 and 12 full rounds from 00:00 to 03:00.\n10 + 12 = 22.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nloginTime\n and \nlogoutTime\n are in the format \nhh:mm\n.\n\n\n00 <= hh <= 23\n\n\n00 <= mm <= 59\n\n\nloginTime\n and \nlogoutTime\n are not equal.",
        "temas": [
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1884,
        "slug": "egg-drop-with-2-eggs-and-n-floors",
        "url": "https://leetcode.com/problems/egg-drop-with-2-eggs-and-n-floors/",
        "titulo": "Egg Drop With 2 Eggs and N Floors",
        "enunciado": "You are given \ntwo identical\n eggs and you have access to a building with \nn\n floors labeled from \n1\n to \nn\n.\n\n\nYou know that there exists a floor \nf\n where \n0 <= f <= n\n such that any egg dropped at a floor \nhigher\n than \nf\n will \nbreak\n, and any egg dropped \nat or below\n floor \nf\n will \nnot break\n.\n\n\nIn each move, you may take an \nunbroken\n egg and drop it from any floor \nx\n (where \n1 <= x <= n\n). If the egg breaks, you can no longer use it. However, if the egg does not break, you may \nreuse\n it in future moves.\n\n\nReturn \nthe \nminimum number of moves\n that you need to determine \nwith certainty\n what the value of \nf\n is.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 2\n\nExplanation:\n We can drop the first egg from floor 1 and the second egg from floor 2.\nIf the first egg breaks, we know that f = 0.\nIf the second egg breaks but the first egg didn't, we know that f = 1.\nOtherwise, if both eggs survive, we know that f = 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 100\n\nOutput:\n 14\n\nExplanation:\n One optimal strategy is:\n- Drop the 1st egg at floor 9. If it breaks, we know f is between 0 and 8. Drop the 2nd egg starting from floor 1 and going up one at a time to find f within 8 more drops. Total drops is 1 + 8 = 9.\n- If the 1st egg does not break, drop the 1st egg again at floor 22. If it breaks, we know f is between 9 and 21. Drop the 2nd egg starting from floor 10 and going up one at a time to find f within 12 more drops. Total drops is 2 + 12 = 14.\n- If the 1st egg does not break again, follow a similar process dropping the 1st egg from floors 34, 45, 55, 64, 72, 79, 85, 90, 94, 97, 99, and 100.\nRegardless of the outcome, it takes at most 14 drops to determine f.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000",
        "temas": [
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1898,
        "slug": "maximum-number-of-removable-characters",
        "url": "https://leetcode.com/problems/maximum-number-of-removable-characters/",
        "titulo": "Maximum Number of Removable Characters",
        "enunciado": "You are given two strings \ns\n and \np\n where \np\n is a \nsubsequence \nof \ns\n. You are also given a \ndistinct 0-indexed \ninteger array \nremovable\n containing a subset of indices of \ns\n (\ns\n is also \n0-indexed\n).\n\n\nYou want to choose an integer \nk\n (\n0 <= k <= removable.length\n) such that, after removing \nk\n characters from \ns\n using the \nfirst\n \nk\n indices in \nremovable\n, \np\n is still a \nsubsequence\n of \ns\n. More formally, you will mark the character at \ns[removable[i]]\n for each \n0 <= i < k\n, then remove all marked characters and check if \np\n is still a subsequence.\n\n\nReturn \nthe \nmaximum\n \nk\n you can choose such that \np\n is still a \nsubsequence\n of \ns\n after the removals\n.\n\n\nA \nsubsequence\n of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abcacb\", p = \"ab\", removable = [3,1,0]\n\nOutput:\n 2\n\nExplanation\n: After removing the characters at indices 3 and 1, \"a\nb\nc\na\ncb\" becomes \"accb\".\n\"ab\" is a subsequence of \"\na\ncc\nb\n\".\nIf we remove the characters at indices 3, 1, and 0, \"\nab\nc\na\ncb\" becomes \"ccb\", and \"ab\" is no longer a subsequence.\nHence, the maximum k is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcbddddd\", p = \"abcd\", removable = [3,2,1,4,5,6]\n\nOutput:\n 1\n\nExplanation\n: After removing the character at index 3, \"abc\nb\nddddd\" becomes \"abcddddd\".\n\"abcd\" is a subsequence of \"\nabcd\ndddd\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"abcab\", p = \"abc\", removable = [0,1,2,3,4]\n\nOutput:\n 0\n\nExplanation\n: If you remove the first index in the array removable, \"abc\" is no longer a subsequence.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= p.length <= s.length <= 10\n5\n\n\n0 <= removable.length < s.length\n\n\n0 <= removable[i] < s.length\n\n\np\n is a \nsubsequence\n of \ns\n.\n\n\ns\n and \np\n both consist of lowercase English letters.\n\n\nThe elements in \nremovable\n are \ndistinct\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "String",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1899,
        "slug": "merge-triplets-to-form-target-triplet",
        "url": "https://leetcode.com/problems/merge-triplets-to-form-target-triplet/",
        "titulo": "Merge Triplets to Form Target Triplet",
        "enunciado": "A \ntriplet\n is an array of three integers. You are given a 2D integer array \ntriplets\n, where \ntriplets[i] = [a\ni\n, b\ni\n, c\ni\n]\n describes the \ni\nth\n \ntriplet\n. You are also given an integer array \ntarget = [x, y, z]\n that describes the \ntriplet\n you want to obtain.\n\n\nTo obtain \ntarget\n, you may apply the following operation on \ntriplets\n \nany number\n of times (possibly \nzero\n):\n\n\n\n\nChoose two indices (\n0-indexed\n) \ni\n and \nj\n (\ni != j\n) and \nupdate\n \ntriplets[j]\n to become \n[max(a\ni\n, a\nj\n), max(b\ni\n, b\nj\n), max(c\ni\n, c\nj\n)]\n.\n\n\t\n\n\nFor example, if \ntriplets[i] = [2, 5, 3]\n and \ntriplets[j] = [1, 7, 5]\n, \ntriplets[j]\n will be updated to \n[max(2, 1), max(5, 7), max(3, 5)] = [2, 7, 5]\n.\n\n\n\n\n\n\n\n\nReturn \ntrue\n \nif it is possible to obtain the \ntarget\n \ntriplet\n \n[x, y, z]\n as an\n element\n of \ntriplets\n, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n triplets = [[2,5,3],[1,8,4],[1,7,5]], target = [2,7,5]\n\nOutput:\n true\n\nExplanation:\n Perform the following operations:\n- Choose the first and last triplets [\n[2,5,3]\n,[1,8,4],\n[1,7,5]\n]. Update the last triplet to be [max(2,1), max(5,7), max(3,5)] = [2,7,5]. triplets = [[2,5,3],[1,8,4],\n[2,7,5]\n]\nThe target triplet [2,7,5] is now an element of triplets.\n\n\n\nExample 2:\n\n\n\n\nInput:\n triplets = [[3,4,5],[4,5,6]], target = [3,2,5]\n\nOutput:\n false\n\nExplanation:\n It is impossible to have [3,2,5] as an element because there is no 2 in any of the triplets.\n\n\n\nExample 3:\n\n\n\n\nInput:\n triplets = [[2,5,3],[2,3,4],[1,2,5],[5,2,3]], target = [5,5,5]\n\nOutput:\n true\n\nExplanation: \nPerform the following operations:\n- Choose the first and third triplets [\n[2,5,3]\n,[2,3,4],\n[1,2,5]\n,[5,2,3]]. Update the third triplet to be [max(2,1), max(5,2), max(3,5)] = [2,5,5]. triplets = [[2,5,3],[2,3,4],\n[2,5,5]\n,[5,2,3]].\n- Choose the third and fourth triplets [[2,5,3],[2,3,4],\n[2,5,5]\n,\n[5,2,3]\n]. Update the fourth triplet to be [max(2,5), max(5,2), max(5,3)] = [5,5,5]. triplets = [[2,5,3],[2,3,4],[2,5,5],\n[5,5,5]\n].\nThe target triplet [5,5,5] is now an element of triplets.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= triplets.length <= 10\n5\n\n\ntriplets[i].length == target.length == 3\n\n\n1 <= a\ni\n, b\ni\n, c\ni\n, x, y, z <= 1000",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1911,
        "slug": "maximum-alternating-subsequence-sum",
        "url": "https://leetcode.com/problems/maximum-alternating-subsequence-sum/",
        "titulo": "Maximum Alternating Subsequence Sum",
        "enunciado": "The \nalternating sum\n of a \n0-indexed\n array is defined as the \nsum\n of the elements at \neven\n indices \nminus\n the \nsum\n of the elements at \nodd\n indices.\n\n\n\n\nFor example, the alternating sum of \n[4,2,5,3]\n is \n(4 + 5) - (2 + 3) = 4\n.\n\n\n\n\nGiven an array \nnums\n, return \nthe \nmaximum alternating sum\n of any subsequence of \nnums\n (after \nreindexing\n the elements of the subsequence)\n.\n\n\n\n\n\n\nA \nsubsequence\n of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the remaining elements' relative order. For example, \n[2,7,4]\n is a subsequence of \n[4,\n2\n,3,\n7\n,2,1,\n4\n]\n (the underlined elements), while \n[2,4,2]\n is not.\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n nums = [\n4\n,\n2\n,\n5\n,3]\r\n\nOutput:\n 7\r\n\nExplanation:\n It is optimal to choose the subsequence [4,2,5] with alternating sum (4 + 5) - 2 = 7.\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n nums = [5,6,7,\n8\n]\r\n\nOutput:\n 8\r\n\nExplanation:\n It is optimal to choose the subsequence [8] with alternating sum 8.\r\n\n\n\nExample 3:\n\n\n\r\n\nInput:\n nums = [\n6\n,2,\n1\n,2,4,\n5\n]\r\n\nOutput:\n 10\r\n\nExplanation:\n It is optimal to choose the subsequence [6,1,5] with alternating sum (6 + 5) - 1 = 10.\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1910,
        "slug": "remove-all-occurrences-of-a-substring",
        "url": "https://leetcode.com/problems/remove-all-occurrences-of-a-substring/",
        "titulo": "Remove All Occurrences of a Substring",
        "enunciado": "Given two strings \ns\n and \npart\n, perform the following operation on \ns\n until \nall\n occurrences of the substring \npart\n are removed:\n\n\n\n\nFind the \nleftmost\n occurrence of the substring \npart\n and \nremove\n it from \ns\n.\n\n\n\n\nReturn \ns\n after removing all occurrences of \npart\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"daabcbaabcbc\", part = \"abc\"\n\nOutput:\n \"dab\"\n\nExplanation\n: The following operations are done:\n- s = \"da\nabc\nbaabcbc\", remove \"abc\" starting at index 2, so s = \"dabaabcbc\".\n- s = \"daba\nabc\nbc\", remove \"abc\" starting at index 4, so s = \"dababc\".\n- s = \"dab\nabc\n\", remove \"abc\" starting at index 3, so s = \"dab\".\nNow s has no occurrences of \"abc\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"axxxxyyyyb\", part = \"xy\"\n\nOutput:\n \"ab\"\n\nExplanation\n: The following operations are done:\n- s = \"axxx\nxy\nyyyb\", remove \"xy\" starting at index 4 so s = \"axxxyyyb\".\n- s = \"axx\nxy\nyyb\", remove \"xy\" starting at index 3 so s = \"axxyyb\".\n- s = \"ax\nxy\nyb\", remove \"xy\" starting at index 2 so s = \"axyb\".\n- s = \"a\nxy\nb\", remove \"xy\" starting at index 1 so s = \"ab\".\nNow s has no occurrences of \"xy\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\n1 <= part.length <= 1000\n\n\ns\n​​​​​​ and \npart\n consists of lowercase English letters.",
        "temas": [
            "String",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1888,
        "slug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
        "url": "https://leetcode.com/problems/minimum-number-of-flips-to-make-the-binary-string-alternating/",
        "titulo": "Minimum Number of Flips to Make the Binary String Alternating",
        "enunciado": "You are given a binary string \ns\n. You are allowed to perform two types of operations on the string in any sequence:\n\n\n\n\nType-1: Remove\n the character at the start of the string \ns\n and \nappend\n it to the end of the string.\n\n\nType-2: Pick\n any character in \ns\n and \nflip\n its value, i.e., if its value is \n'0'\n it becomes \n'1'\n and vice-versa.\n\n\n\n\nReturn \nthe \nminimum\n number of \ntype-2\n operations you need to perform\n \nsuch that \ns\n \nbecomes \nalternating\n.\n\n\nThe string is called \nalternating\n if no two adjacent characters are equal.\n\n\n\n\nFor example, the strings \n\"010\"\n and \n\"1010\"\n are alternating, while the string \n\"0100\"\n is not.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"111000\"\n\nOutput:\n 2\n\nExplanation\n: Use the first operation two times to make s = \"100011\".\nThen, use the second operation on the third and sixth elements to make s = \"10\n1\n01\n0\n\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"010\"\n\nOutput:\n 0\n\nExplanation\n: The string is already alternating.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"1110\"\n\nOutput:\n 1\n\nExplanation\n: Use the second operation on the second element to make s = \"1\n0\n10\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1887,
        "slug": "reduction-operations-to-make-the-array-elements-equal",
        "url": "https://leetcode.com/problems/reduction-operations-to-make-the-array-elements-equal/",
        "titulo": "Reduction Operations to Make the Array Elements Equal",
        "enunciado": "Given an integer array \nnums\n, your goal is to make all elements in \nnums\n equal. To complete one operation, follow these steps:\n\n\n\n\nFind the \nlargest\n value in \nnums\n. Let its index be \ni\n (\n0-indexed\n) and its value be \nlargest\n. If there are multiple elements with the largest value, pick the smallest \ni\n.\n\n\nFind the \nnext largest\n value in \nnums\n \nstrictly smaller\n than \nlargest\n. Let its value be \nnextLargest\n.\n\n\nReduce \nnums[i]\n to \nnextLargest\n.\n\n\n\n\nReturn \nthe number of operations to make all elements in \nnums\n equal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,1,3]\n\nOutput:\n 3\n\nExplanation:\n It takes 3 operations to make all elements in nums equal:\n1. largest = 5 at index 0. nextLargest = 3. Reduce nums[0] to 3. nums = [\n3\n,1,3].\n2. largest = 3 at index 0. nextLargest = 1. Reduce nums[0] to 1. nums = [\n1\n,1,3].\n3. largest = 3 at index 2. nextLargest = 1. Reduce nums[2] to 1. nums = [1,1,\n1\n].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1]\n\nOutput:\n 0\n\nExplanation:\n All elements in nums are already equal.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1,2,2,3]\n\nOutput:\n 4\n\nExplanation:\n It takes 4 operations to make all elements in nums equal:\n1. largest = 3 at index 4. nextLargest = 2. Reduce nums[4] to 2. nums = [1,1,2,2,\n2\n].\n2. largest = 2 at index 2. nextLargest = 1. Reduce nums[2] to 1. nums = [1,1,\n1\n,2,2].\n3. largest = 2 at index 3. nextLargest = 1. Reduce nums[3] to 1. nums = [1,1,1,\n1\n,2].\n4. largest = 2 at index 4. nextLargest = 1. Reduce nums[4] to 1. nums = [1,1,1,1,\n1\n].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5 * 10\n4\n\n\n1 <= nums[i] <= 5 * 10\n4",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1882,
        "slug": "process-tasks-using-servers",
        "url": "https://leetcode.com/problems/process-tasks-using-servers/",
        "titulo": "Process Tasks Using Servers",
        "enunciado": "You are given two \n0-indexed\n integer arrays \nservers\n and \ntasks\n of lengths \nn\n​​​​​​ and \nm\n​​​​​​ respectively. \nservers[i]\n is the \nweight\n of the \ni\n​​​​​​th\n​​​​ server, and \ntasks[j]\n is the \ntime needed\n to process the \nj\n​​​​​​th\n​​​​ task \nin seconds\n.\n\n\nTasks are assigned to the servers using a \ntask queue\n. Initially, all servers are free, and the queue is \nempty\n.\n\n\nAt second \nj\n, the \nj\nth\n task is \ninserted\n into the queue (starting with the \n0\nth\n task being inserted at second \n0\n). As long as there are free servers and the queue is not empty, the task in the front of the queue will be assigned to a free server with the \nsmallest weight\n, and in case of a tie, it is assigned to a free server with the \nsmallest index\n.\n\n\nIf there are no free servers and the queue is not empty, we wait until a server becomes free and immediately assign the next task. If multiple servers become free at the same time, then multiple tasks from the queue will be assigned \nin order of insertion\n following the weight and index priorities above.\n\n\nA server that is assigned task \nj\n at second \nt\n will be free again at second \nt + tasks[j]\n.\n\n\nBuild an array \nans\n​​​​ of length \nm\n, where \nans[j]\n is the \nindex\n of the server the \nj\n​​​​​​th\n task will be assigned to.\n\n\nReturn \nthe array \nans\n​​​​.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n servers = [3,3,2], tasks = [1,2,3,2,1,2]\n\nOutput:\n [2,2,0,2,1,2]\n\nExplanation: \nEvents in chronological order go as follows:\n- At second 0, task 0 is added and processed using server 2 until second 1.\n- At second 1, server 2 becomes free. Task 1 is added and processed using server 2 until second 3.\n- At second 2, task 2 is added and processed using server 0 until second 5.\n- At second 3, server 2 becomes free. Task 3 is added and processed using server 2 until second 5.\n- At second 4, task 4 is added and processed using server 1 until second 5.\n- At second 5, all servers become free. Task 5 is added and processed using server 2 until second 7.\n\n\nExample 2:\n\n\n\n\nInput:\n servers = [5,1,4,3,2], tasks = [2,1,2,4,5,2,1]\n\nOutput:\n [1,4,1,4,1,3,2]\n\nExplanation: \nEvents in chronological order go as follows: \n- At second 0, task 0 is added and processed using server 1 until second 2.\n- At second 1, task 1 is added and processed using server 4 until second 2.\n- At second 2, servers 1 and 4 become free. Task 2 is added and processed using server 1 until second 4. \n- At second 3, task 3 is added and processed using server 4 until second 7.\n- At second 4, server 1 becomes free. Task 4 is added and processed using server 1 until second 9. \n- At second 5, task 5 is added and processed using server 3 until second 7.\n- At second 6, task 6 is added and processed using server 2 until second 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nservers.length == n\n\n\ntasks.length == m\n\n\n1 <= n, m <= 2 * 10\n5\n\n\n1 <= servers[i], tasks[j] <= 2 * 10\n5",
        "temas": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1881,
        "slug": "maximum-value-after-insertion",
        "url": "https://leetcode.com/problems/maximum-value-after-insertion/",
        "titulo": "Maximum Value after Insertion",
        "enunciado": "You are given a very large integer \nn\n, represented as a string,​​​​​​ and an integer digit \nx\n. The digits in \nn\n and the digit \nx\n are in the \ninclusive\n range \n[1, 9]\n, and \nn\n may represent a \nnegative\n number.\n\n\nYou want to \nmaximize \nn\n's numerical value\n by inserting \nx\n anywhere in the decimal representation of \nn\n​​​​​​. You \ncannot\n insert \nx\n to the left of the negative sign.\n\n\n\n\nFor example, if \nn = 73\n and \nx = 6\n, it would be best to insert it between \n7\n and \n3\n, making \nn = 763\n.\n\n\nIf \nn = -55\n and \nx = 2\n, it would be best to insert it before the first \n5\n, making \nn = -255\n.\n\n\n\n\nReturn \na string representing the \nmaximum\n value of \nn\n​​​​​​ after the insertion\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = \"99\", x = 9\n\nOutput:\n \"999\"\n\nExplanation:\n The result is the same regardless of where you insert 9.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = \"-13\", x = 2\n\nOutput:\n \"-123\"\n\nExplanation:\n You can make n one of {-213, -123, -132}, and the largest of those three is -123.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n.length <= 10\n5\n\n\n1 <= x <= 9\n\n\nThe digits in \nn\n​​​ are in the range \n[1, 9]\n.\n\n\nn\n is a valid representation of an integer.\n\n\nIn the case of a negative \nn\n,​​​​​​ it will begin with \n'-'\n.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1894,
        "slug": "find-the-student-that-will-replace-the-chalk",
        "url": "https://leetcode.com/problems/find-the-student-that-will-replace-the-chalk/",
        "titulo": "Find the Student that Will Replace the Chalk",
        "enunciado": "There are \nn\n students in a class numbered from \n0\n to \nn - 1\n. The teacher will give each student a problem starting with the student number \n0\n, then the student number \n1\n, and so on until the teacher reaches the student number \nn - 1\n. After that, the teacher will restart the process, starting with the student number \n0\n again.\n\n\nYou are given a \n0-indexed\n integer array \nchalk\n and an integer \nk\n. There are initially \nk\n pieces of chalk. When the student number \ni\n is given a problem to solve, they will use \nchalk[i]\n pieces of chalk to solve that problem. However, if the current number of chalk pieces is \nstrictly less\n than \nchalk[i]\n, then the student number \ni\n will be asked to \nreplace\n the chalk.\n\n\nReturn \nthe \nindex\n of the student that will \nreplace\n the chalk pieces\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n chalk = [5,1,5], k = 22\n\nOutput:\n 0\n\nExplanation: \nThe students go in turns as follows:\n- Student number 0 uses 5 chalk, so k = 17.\n- Student number 1 uses 1 chalk, so k = 16.\n- Student number 2 uses 5 chalk, so k = 11.\n- Student number 0 uses 5 chalk, so k = 6.\n- Student number 1 uses 1 chalk, so k = 5.\n- Student number 2 uses 5 chalk, so k = 0.\nStudent number 0 does not have enough chalk, so they will have to replace it.\n\n\nExample 2:\n\n\n\n\nInput:\n chalk = [3,4,1,2], k = 25\n\nOutput:\n 1\n\nExplanation: \nThe students go in turns as follows:\n- Student number 0 uses 3 chalk so k = 22.\n- Student number 1 uses 4 chalk so k = 18.\n- Student number 2 uses 1 chalk so k = 17.\n- Student number 3 uses 2 chalk so k = 15.\n- Student number 0 uses 3 chalk so k = 12.\n- Student number 1 uses 4 chalk so k = 8.\n- Student number 2 uses 1 chalk so k = 7.\n- Student number 3 uses 2 chalk so k = 5.\n- Student number 0 uses 3 chalk so k = 2.\nStudent number 1 does not have enough chalk, so they will have to replace it.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nchalk.length == n\n\n\n1 <= n <= 10\n5\n\n\n1 <= chalk[i] <= 10\n5\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Simulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1871,
        "slug": "jump-game-vii",
        "url": "https://leetcode.com/problems/jump-game-vii/",
        "titulo": "Jump Game VII",
        "enunciado": "You are given a \n0-indexed\n binary string \ns\n and two integers \nminJump\n and \nmaxJump\n. In the beginning, you are standing at index \n0\n, which is equal to \n'0'\n. You can move from index \ni\n to index \nj\n if the following conditions are fulfilled:\n\n\n\n\ni + minJump <= j <= min(i + maxJump, s.length - 1)\n, and\n\n\ns[j] == '0'\n.\n\n\n\n\nReturn \ntrue\n if you can reach index \ns.length - 1\n in \ns\n, or \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"\n0\n11\n0\n1\n0\n\", minJump = 2, maxJump = 3\n\nOutput:\n true\n\nExplanation:\n\nIn the first step, move from index 0 to index 3. \nIn the second step, move from index 3 to index 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"01101110\", minJump = 2, maxJump = 3\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.\n\n\ns[0] == '0'\n\n\n1 <= minJump <= maxJump < s.length",
        "temas": [
            "String",
            "Dynamic Programming",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1870,
        "slug": "minimum-speed-to-arrive-on-time",
        "url": "https://leetcode.com/problems/minimum-speed-to-arrive-on-time/",
        "titulo": "Minimum Speed to Arrive on Time",
        "enunciado": "You are given a floating-point number \nhour\n, representing the amount of time you have to reach the office. To commute to the office, you must take \nn\n trains in sequential order. You are also given an integer array \ndist\n of length \nn\n, where \ndist[i]\n describes the distance (in kilometers) of the \ni\nth\n train ride.\n\n\nEach train can only depart at an integer hour, so you may need to wait in between each train ride.\n\n\n\n\nFor example, if the \n1\nst\n train ride takes \n1.5\n hours, you must wait for an additional \n0.5\n hours before you can depart on the \n2\nnd\n train ride at the 2 hour mark.\n\n\n\n\nReturn \nthe \nminimum positive integer\n speed \n(in kilometers per hour)\n that all the trains must travel at for you to reach the office on time, or \n-1\n if it is impossible to be on time\n.\n\n\nTests are generated such that the answer will not exceed \n10\n7\n and \nhour\n will have \nat most two digits after the decimal point\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n dist = [1,3,2], hour = 6\n\nOutput:\n 1\n\nExplanation: \nAt speed 1:\n- The first train ride takes 1/1 = 1 hour.\n- Since we are already at an integer hour, we depart immediately at the 1 hour mark. The second train takes 3/1 = 3 hours.\n- Since we are already at an integer hour, we depart immediately at the 4 hour mark. The third train takes 2/1 = 2 hours.\n- You will arrive at exactly the 6 hour mark.\n\n\n\nExample 2:\n\n\n\n\nInput:\n dist = [1,3,2], hour = 2.7\n\nOutput:\n 3\n\nExplanation: \nAt speed 3:\n- The first train ride takes 1/3 = 0.33333 hours.\n- Since we are not at an integer hour, we wait until the 1 hour mark to depart. The second train ride takes 3/3 = 1 hour.\n- Since we are already at an integer hour, we depart immediately at the 2 hour mark. The third train takes 2/3 = 0.66667 hours.\n- You will arrive at the 2.66667 hour mark.\n\n\n\nExample 3:\n\n\n\n\nInput:\n dist = [1,3,2], hour = 1.9\n\nOutput:\n -1\n\nExplanation:\n It is impossible because the earliest the third train can depart is at the 2 hour mark.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == dist.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= dist[i] <= 10\n5\n\n\n1 <= hour <= 10\n9\n\n\nThere will be at most two digits after the decimal point in \nhour\n.",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1865,
        "slug": "finding-pairs-with-a-certain-sum",
        "url": "https://leetcode.com/problems/finding-pairs-with-a-certain-sum/",
        "titulo": "Finding Pairs With a Certain Sum",
        "enunciado": "You are given two integer arrays \nnums1\n and \nnums2\n. You are tasked to implement a data structure that supports queries of two types:\n\n\n\n\nAdd\n a positive integer to an element of a given index in the array \nnums2\n.\n\n\nCount\n the number of pairs \n(i, j)\n such that \nnums1[i] + nums2[j]\n equals a given value (\n0 <= i < nums1.length\n and \n0 <= j < nums2.length\n).\n\n\n\n\nImplement the \nFindSumPairs\n class:\n\n\n\n\nFindSumPairs(int[] nums1, int[] nums2)\n Initializes the \nFindSumPairs\n object with two integer arrays \nnums1\n and \nnums2\n.\n\n\nvoid add(int index, int val)\n Adds \nval\n to \nnums2[index]\n, i.e., apply \nnums2[index] += val\n.\n\n\nint count(int tot)\n Returns the number of pairs \n(i, j)\n such that \nnums1[i] + nums2[j] == tot\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"FindSumPairs\", \"count\", \"add\", \"count\", \"count\", \"add\", \"add\", \"count\"]\n[[[1, 1, 2, 2, 2, 3], [1, 4, 5, 2, 5, 4]], [7], [3, 2], [8], [4], [0, 1], [1, 1], [7]]\n\nOutput\n\n[null, 8, null, 2, 1, null, null, 11]\n\n\nExplanation\n\nFindSumPairs findSumPairs = new FindSumPairs([1, 1, 2, 2, 2, 3], [1, 4, 5, 2, 5, 4]);\nfindSumPairs.count(7);  // return 8; pairs (2,2), (3,2), (4,2), (2,4), (3,4), (4,4) make 2 + 5 and pairs (5,1), (5,5) make 3 + 4\nfindSumPairs.add(3, 2); // now nums2 = [1,4,5,\n4\n,5,4\n]\nfindSumPairs.count(8);  // return 2; pairs (5,2), (5,4) make 3 + 5\nfindSumPairs.count(4);  // return 1; pair (5,0) makes 3 + 1\nfindSumPairs.add(0, 1); // now nums2 = [\n2\n,4,5,4\n,5,4\n]\nfindSumPairs.add(1, 1); // now nums2 = [\n2\n,\n5\n,5,4\n,5,4\n]\nfindSumPairs.count(7);  // return 11; pairs (2,1), (2,2), (2,4), (3,1), (3,2), (3,4), (4,1), (4,2), (4,4) make 2 + 5 and pairs (5,3), (5,5) make 3 + 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length <= 1000\n\n\n1 <= nums2.length <= 10\n5\n\n\n1 <= nums1[i] <= 10\n9\n\n\n1 <= nums2[i] <= 10\n5\n\n\n0 <= index < nums2.length\n\n\n1 <= val <= 10\n5\n\n\n1 <= tot <= 10\n9\n\n\nAt most \n1000\n calls are made to \nadd\n and \ncount\n \neach\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1864,
        "slug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
        "url": "https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-binary-string-alternating/",
        "titulo": "Minimum Number of Swaps to Make the Binary String Alternating",
        "enunciado": "Given a binary string \ns\n, return \nthe \nminimum\n number of character swaps to make it \nalternating\n, or \n-1\n if it is impossible.\n\n\nThe string is called \nalternating\n if no two adjacent characters are equal. For example, the strings \n\"010\"\n and \n\"1010\"\n are alternating, while the string \n\"0100\"\n is not.\n\n\nAny two characters may be swapped, even if they are \nnot adjacent\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"111000\"\n\nOutput:\n 1\n\nExplanation:\n Swap positions 1 and 4: \"1\n1\n10\n0\n0\" -> \"1\n0\n10\n1\n0\"\nThe string is now alternating.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"010\"\n\nOutput:\n 0\n\nExplanation:\n The string is already alternating, no swaps are needed.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"1110\"\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1878,
        "slug": "get-biggest-three-rhombus-sums-in-a-grid",
        "url": "https://leetcode.com/problems/get-biggest-three-rhombus-sums-in-a-grid/",
        "titulo": "Get Biggest Three Rhombus Sums in a Grid",
        "enunciado": "You are given an \nm x n\n integer matrix \ngrid\n​​​.\n\n\nA \nrhombus sum\n is the sum of the elements that form \nthe\n \nborder\n of a regular rhombus shape in \ngrid\n​​​. The rhombus must have the shape of a square rotated 45 degrees with each of the corners centered in a grid cell. Below is an image of four valid rhombus shapes with the corresponding colored cells that should be included in each \nrhombus sum\n:\n\n\n\n\nNote that the rhombus can have an area of 0, which is depicted by the purple rhombus in the bottom right corner.\n\n\nReturn \nthe biggest three \ndistinct rhombus sums\n in the \ngrid\n in \ndescending order\n. If there are less than three distinct values, return all of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[3,4,5,1,3],[3,3,4,2,3],[20,30,200,40,10],[1,5,5,4,1],[4,3,2,2,5]]\n\nOutput:\n [228,216,211]\n\nExplanation:\n The rhombus shapes for the three biggest distinct rhombus sums are depicted above.\n- Blue: 20 + 3 + 200 + 5 = 228\n- Red: 200 + 2 + 10 + 4 = 216\n- Green: 5 + 200 + 4 + 2 = 211\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput:\n [20,9,8]\n\nExplanation:\n The rhombus shapes for the three biggest distinct rhombus sums are depicted above.\n- Blue: 4 + 2 + 6 + 8 = 20\n- Red: 9 (area 0 rhombus in the bottom right corner)\n- Green: 8 (area 0 rhombus in the bottom middle)\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[7,7,7]]\n\nOutput:\n [7]\n\nExplanation:\n All three possible rhombus sums are the same, so return [7].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 50\n\n\n1 <= grid[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Math",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1877,
        "slug": "minimize-maximum-pair-sum-in-array",
        "url": "https://leetcode.com/problems/minimize-maximum-pair-sum-in-array/",
        "titulo": "Minimize Maximum Pair Sum in Array",
        "enunciado": "The \npair sum\n of a pair \n(a,b)\n is equal to \na + b\n. The \nmaximum pair sum\n is the largest \npair sum\n in a list of pairs.\n\n\n\n\nFor example, if we have pairs \n(1,5)\n, \n(2,3)\n, and \n(4,4)\n, the \nmaximum pair sum\n would be \nmax(1+5, 2+3, 4+4) = max(6, 5, 8) = 8\n.\n\n\n\n\nGiven an array \nnums\n of \neven\n length \nn\n, pair up the elements of \nnums\n into \nn / 2\n pairs such that:\n\n\n\n\nEach element of \nnums\n is in \nexactly one\n pair, and\n\n\nThe \nmaximum pair sum \nis \nminimized\n.\n\n\n\n\nReturn \nthe minimized \nmaximum pair sum\n after optimally pairing up the elements\n.\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n nums = [3,5,2,3]\r\n\nOutput:\n 7\r\n\nExplanation:\n The elements can be paired up into pairs (3,3) and (5,2).\r\nThe maximum pair sum is max(3+3, 5+2) = max(6, 7) = 7.\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n nums = [3,5,4,2,4,6]\r\n\nOutput:\n 8\r\n\nExplanation:\n The elements can be paired up into pairs (3,5), (4,4), and (6,2).\r\nThe maximum pair sum is max(3+5, 4+4, 6+2) = max(8, 8, 8) = 8.\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n2 <= n <= 10\n5\n\n\nn\n is \neven\n.\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1856,
        "slug": "maximum-subarray-min-product",
        "url": "https://leetcode.com/problems/maximum-subarray-min-product/",
        "titulo": "Maximum Subarray Min-Product",
        "enunciado": "The \nmin-product\n of an array is equal to the \nminimum value\n in the array \nmultiplied by\n the array's \nsum\n.\n\n\n\n\nFor example, the array \n[3,2,5]\n (minimum value is \n2\n) has a min-product of \n2 * (3+2+5) = 2 * 10 = 20\n.\n\n\n\n\nGiven an array of integers \nnums\n, return \nthe \nmaximum min-product\n of any \nnon-empty subarray\n of \nnums\n. Since the answer may be large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nNote that the min-product should be maximized \nbefore\n performing the modulo operation. Testcases are generated such that the maximum min-product \nwithout\n modulo will fit in a \n64-bit signed integer\n.\n\n\nA \nsubarray\n is a \ncontiguous\n part of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,\n2,3,2\n]\n\nOutput:\n 14\n\nExplanation:\n The maximum min-product is achieved with the subarray [2,3,2] (minimum value is 2).\n2 * (2+3+2) = 2 * 7 = 14.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,\n3,3\n,1,2]\n\nOutput:\n 18\n\nExplanation:\n The maximum min-product is achieved with the subarray [3,3] (minimum value is 3).\n3 * (3+3) = 3 * 6 = 18.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,1,\n5,6,4\n,2]\n\nOutput:\n 60\n\nExplanation:\n The maximum min-product is achieved with the subarray [5,6,4] (minimum value is 4).\n4 * (5+6+4) = 4 * 15 = 60.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n7",
        "temas": [
            "Array",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1855,
        "slug": "maximum-distance-between-a-pair-of-values",
        "url": "https://leetcode.com/problems/maximum-distance-between-a-pair-of-values/",
        "titulo": "Maximum Distance Between a Pair of Values",
        "enunciado": "You are given two \nnon-increasing 0-indexed \ninteger arrays \nnums1\n​​​​​​ and \nnums2\n​​​​​​.\n\n\nA pair of indices \n(i, j)\n, where \n0 <= i < nums1.length\n and \n0 <= j < nums2.length\n, is \nvalid\n if both \ni <= j\n and \nnums1[i] <= nums2[j]\n. The \ndistance\n of the pair is \nj - i\n​​​​.\n\n\nReturn \nthe \nmaximum distance\n of any \nvalid\n pair \n(i, j)\n. If there are no valid pairs, return \n0\n.\n\n\nAn array \narr\n is \nnon-increasing\n if \narr[i-1] >= arr[i]\n for every \n1 <= i < arr.length\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [55,30,5,4,2], nums2 = [100,20,10,10,5]\n\nOutput:\n 2\n\nExplanation:\n The valid pairs are (0,0), (2,2), (2,3), (2,4), (3,3), (3,4), and (4,4).\nThe maximum distance is 2 with pair (2,4).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [2,2,2], nums2 = [10,10,1]\n\nOutput:\n 1\n\nExplanation:\n The valid pairs are (0,0), (0,1), and (1,1).\nThe maximum distance is 1 with pair (0,1).\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [30,29,19,5], nums2 = [25,25,25,25,25]\n\nOutput:\n 2\n\nExplanation:\n The valid pairs are (2,2), (2,3), (2,4), (3,3), and (3,4).\nThe maximum distance is 2 with pair (2,4).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 10\n5\n\n\n1 <= nums1[i], nums2[j] <= 10\n5\n\n\nBoth \nnums1\n and \nnums2\n are \nnon-increasing\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1850,
        "slug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
        "url": "https://leetcode.com/problems/minimum-adjacent-swaps-to-reach-the-kth-smallest-number/",
        "titulo": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
        "enunciado": "You are given a string \nnum\n, representing a large integer, and an integer \nk\n.\n\n\nWe call some integer \nwonderful\n if it is a \npermutation\n of the digits in \nnum\n and is \ngreater in value\n than \nnum\n. There can be many wonderful integers. However, we only care about the \nsmallest-valued\n ones.\n\n\n\n\nFor example, when \nnum = \"5489355142\"\n:\n\n\t\n\n\nThe 1\nst\n smallest wonderful integer is \n\"5489355214\"\n.\n\n\nThe 2\nnd\n smallest wonderful integer is \n\"5489355241\"\n.\n\n\nThe 3\nrd\n smallest wonderful integer is \n\"5489355412\"\n.\n\n\nThe 4\nth\n smallest wonderful integer is \n\"5489355421\"\n.\n\n\n\n\n\n\n\n\nReturn \nthe \nminimum number of adjacent digit swaps\n that needs to be applied to \nnum\n to reach the \nk\nth\n smallest wonderful\n integer\n.\n\n\nThe tests are generated in such a way that \nk\nth\n smallest wonderful integer exists.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"5489355142\", k = 4\n\nOutput:\n 2\n\nExplanation:\n The 4\nth\n smallest wonderful number is \"5489355421\". To get this number:\n- Swap index 7 with index 8: \"5489355\n14\n2\" -> \"5489355\n41\n2\"\n- Swap index 8 with index 9: \"54893554\n12\n\" -> \"54893554\n21\n\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"11112\", k = 4\n\nOutput:\n 4\n\nExplanation:\n The 4\nth\n smallest wonderful number is \"21111\". To get this number:\n- Swap index 3 with index 4: \"111\n12\n\" -> \"111\n21\n\"\n- Swap index 2 with index 3: \"11\n12\n1\" -> \"11\n21\n1\"\n- Swap index 1 with index 2: \"1\n12\n11\" -> \"1\n21\n11\"\n- Swap index 0 with index 1: \"\n12\n111\" -> \"\n21\n111\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = \"00123\", k = 1\n\nOutput:\n 1\n\nExplanation:\n The 1\nst\n smallest wonderful number is \"00132\". To get this number:\n- Swap index 3 with index 4: \"001\n23\n\" -> \"001\n32\n\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= num.length <= 1000\n\n\n1 <= k <= 1000\n\n\nnum\n only consists of digits.",
        "temas": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 1849,
        "slug": "splitting-a-string-into-descending-consecutive-values",
        "url": "https://leetcode.com/problems/splitting-a-string-into-descending-consecutive-values/",
        "titulo": "Splitting a String Into Descending Consecutive Values",
        "enunciado": "You are given a string \ns\n that consists of only digits.\n\n\nCheck if we can split \ns\n into \ntwo or more non-empty substrings\n such that the \nnumerical values\n of the substrings are in \ndescending order\n and the \ndifference\n between numerical values of every two \nadjacent\n \nsubstrings\n is equal to \n1\n.\n\n\n\n\nFor example, the string \ns = \"0090089\"\n can be split into \n[\"0090\", \"089\"]\n with numerical values \n[90,89]\n. The values are in descending order and adjacent values differ by \n1\n, so this way is valid.\n\n\nAnother example, the string \ns = \"001\"\n can be split into \n[\"0\", \"01\"]\n, \n[\"00\", \"1\"]\n, or \n[\"0\", \"0\", \"1\"]\n. However all the ways are invalid because they have numerical values \n[0,1]\n, \n[0,1]\n, and \n[0,0,1]\n respectively, all of which are not in descending order.\n\n\n\n\nReturn \ntrue\n \nif it is possible to split\n \ns\n​​​​​​ \nas described above\n, or \nfalse\n otherwise.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"1234\"\n\nOutput:\n false\n\nExplanation:\n There is no valid way to split s.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"050043\"\n\nOutput:\n true\n\nExplanation:\n s can be split into [\"05\", \"004\", \"3\"] with numerical values [5,4,3].\nThe values are in descending order with adjacent values differing by 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"9080701\"\n\nOutput:\n false\n\nExplanation:\n There is no valid way to split s.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 20\n\n\ns\n only consists of digits.",
        "temas": [
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1861,
        "slug": "rotating-the-box",
        "url": "https://leetcode.com/problems/rotating-the-box/",
        "titulo": "Rotating the Box",
        "enunciado": "You are given an \nm x n\n matrix of characters \nboxGrid\n representing a side-view of a box. Each cell of the box is one of the following:\n\n\n\n\nA stone \n'#'\n\n\nA stationary obstacle \n'*'\n\n\nEmpty \n'.'\n\n\n\n\nThe box is rotated \n90 degrees clockwise\n, causing some of the stones to fall due to gravity. Each stone falls down until it lands on an obstacle, another stone, or the bottom of the box. Gravity \ndoes not\n affect the obstacles' positions, and the inertia from the box's rotation \ndoes not \naffect the stones' horizontal positions.\n\n\nIt is \nguaranteed\n that each stone in \nboxGrid\n rests on an obstacle, another stone, or the bottom of the box.\n\n\nReturn \nan \nn x m\n matrix representing the box after the rotation described above\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n boxGrid = [[\"#\",\".\",\"#\"]]\n\nOutput:\n [[\".\"],\n         [\"#\"],\n         [\"#\"]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n boxGrid = [[\"#\",\".\",\"*\",\".\"],\n              [\"#\",\"#\",\"*\",\".\"]]\n\nOutput:\n [[\"#\",\".\"],\n         [\"#\",\"#\"],\n         [\"*\",\"*\"],\n         [\".\",\".\"]]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n boxGrid = [[\"#\",\"#\",\"*\",\".\",\"*\",\".\"],\n              [\"#\",\"#\",\"#\",\"*\",\".\",\".\"],\n              [\"#\",\"#\",\"#\",\".\",\"#\",\".\"]]\n\nOutput:\n [[\".\",\"#\",\"#\"],\n         [\".\",\"#\",\"#\"],\n         [\"#\",\"#\",\"*\"],\n         [\"#\",\"*\",\".\"],\n         [\"#\",\".\",\"*\"],\n         [\"#\",\".\",\".\"]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == boxGrid.length\n\n\nn == boxGrid[i].length\n\n\n1 <= m, n <= 500\n\n\nboxGrid[i][j]\n is either \n'#'\n, \n'*'\n, or \n'.'\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1860,
        "slug": "incremental-memory-leak",
        "url": "https://leetcode.com/problems/incremental-memory-leak/",
        "titulo": "Incremental Memory Leak",
        "enunciado": "You are given two integers \nmemory1\n and \nmemory2\n representing the available memory in bits on two memory sticks. There is currently a faulty program running that consumes an increasing amount of memory every second.\n\n\nAt the \ni\nth\n second (starting from 1), \ni\n bits of memory are allocated to the stick with \nmore available memory\n (or from the first memory stick if both have the same available memory). If neither stick has at least \ni\n bits of available memory, the program \ncrashes\n.\n\n\nReturn \nan array containing \n[crashTime, memory1\ncrash\n, memory2\ncrash\n]\n, where \ncrashTime\n is the time (in seconds) when the program crashed and \nmemory1\ncrash\n and \nmemory2\ncrash\n are the available bits of memory in the first and second sticks respectively\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n memory1 = 2, memory2 = 2\n\nOutput:\n [3,1,0]\n\nExplanation:\n The memory is allocated as follows:\n- At the 1\nst\n second, 1 bit of memory is allocated to stick 1. The first stick now has 1 bit of available memory.\n- At the 2\nnd\n second, 2 bits of memory are allocated to stick 2. The second stick now has 0 bits of available memory.\n- At the 3\nrd\n second, the program crashes. The sticks have 1 and 0 bits available respectively.\n\n\n\nExample 2:\n\n\n\n\nInput:\n memory1 = 8, memory2 = 11\n\nOutput:\n [6,0,4]\n\nExplanation:\n The memory is allocated as follows:\n- At the 1\nst\n second, 1 bit of memory is allocated to stick 2. The second stick now has 10 bit of available memory.\n- At the 2\nnd\n second, 2 bits of memory are allocated to stick 2. The second stick now has 8 bits of available memory.\n- At the 3\nrd\n second, 3 bits of memory are allocated to stick 1. The first stick now has 5 bits of available memory.\n- At the 4\nth\n second, 4 bits of memory are allocated to stick 2. The second stick now has 4 bits of available memory.\n- At the 5\nth\n second, 5 bits of memory are allocated to stick 1. The first stick now has 0 bits of available memory.\n- At the 6\nth\n second, the program crashes. The sticks have 0 and 4 bits available respectively.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= memory1, memory2 <= 2\n31\n - 1",
        "temas": [
            "Math",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1839,
        "slug": "longest-substring-of-all-vowels-in-order",
        "url": "https://leetcode.com/problems/longest-substring-of-all-vowels-in-order/",
        "titulo": "Longest Substring Of All Vowels in Order",
        "enunciado": "A string is considered \nbeautiful\n if it satisfies the following conditions:\n\n\n\n\nEach of the 5 English vowels (\n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, \n'u'\n) must appear \nat least once\n in it.\n\n\nThe letters must be sorted in \nalphabetical order\n (i.e. all \n'a'\ns before \n'e'\ns, all \n'e'\ns before \n'i'\ns, etc.).\n\n\n\n\nFor example, strings \n\"aeiou\"\n and \n\"aaaaaaeiiiioou\"\n are considered \nbeautiful\n, but \n\"uaeio\"\n, \n\"aeoiu\"\n, and \n\"aaaeeeooo\"\n are \nnot beautiful\n.\n\n\nGiven a string \nword\n consisting of English vowels, return \nthe \nlength of the longest beautiful substring\n of \nword\n. If no such substring exists, return \n0\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word = \"aeiaaio\naaaaeiiiiouuu\nooaauuaeiu\"\n\nOutput:\n 13\n\nExplanation:\n The longest beautiful substring in word is \"aaaaeiiiiouuu\" of length 13.\n\n\nExample 2:\n\n\n\n\nInput:\n word = \"aeeeiiiioooauuu\naeiou\n\"\n\nOutput:\n 5\n\nExplanation:\n The longest beautiful substring in word is \"aeiou\" of length 5.\n\n\n\nExample 3:\n\n\n\n\nInput:\n word = \"a\"\n\nOutput:\n 0\n\nExplanation:\n There is no beautiful substring, so return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 5 * 10\n5\n\n\nword\n consists of characters \n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n.",
        "temas": [
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1838,
        "slug": "frequency-of-the-most-frequent-element",
        "url": "https://leetcode.com/problems/frequency-of-the-most-frequent-element/",
        "titulo": "Frequency of the Most Frequent Element",
        "enunciado": "The \nfrequency\n of an element is the number of times it occurs in an array.\n\n\nYou are given an integer array \nnums\n and an integer \nk\n. In one operation, you can choose an index of \nnums\n and increment the element at that index by \n1\n.\n\n\nReturn \nthe \nmaximum possible frequency\n of an element after performing \nat most\n \nk\n operations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,4], k = 5\n\nOutput:\n 3\n\nExplanation:\n Increment the first element three times and the second element two times to make nums = [4,4,4].\n4 has a frequency of 3.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,4,8,13], k = 5\n\nOutput:\n 2\n\nExplanation:\n There are multiple optimal solutions:\n- Increment the first element three times to make nums = [4,4,8,13]. 4 has a frequency of 2.\n- Increment the second element four times to make nums = [1,8,8,13]. 8 has a frequency of 2.\n- Increment the third element five times to make nums = [1,4,13,13]. 13 has a frequency of 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,9,6], k = 2\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n5\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Array",
            "Binary Search",
            "Greedy",
            "Sliding Window",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1834,
        "slug": "single-threaded-cpu",
        "url": "https://leetcode.com/problems/single-threaded-cpu/",
        "titulo": "Single-Threaded CPU",
        "enunciado": "You are given \nn\n​​​​​​ tasks labeled from \n0\n to \nn - 1\n represented by a 2D integer array \ntasks\n, where \ntasks[i] = [enqueueTime\ni\n, processingTime\ni\n]\n means that the \ni\n​​​​​​th\n​​​​ task will be available to process at \nenqueueTime\ni\n and will take \nprocessingTime\ni\n \nto finish processing.\n\n\nYou have a single-threaded CPU that can process \nat most one\n task at a time and will act in the following way:\n\n\n\n\nIf the CPU is idle and there are no available tasks to process, the CPU remains idle.\n\n\nIf the CPU is idle and there are available tasks, the CPU will choose the one with the \nshortest processing time\n. If multiple tasks have the same shortest processing time, it will choose the task with the smallest index.\n\n\nOnce a task is started, the CPU will \nprocess the entire task\n without stopping.\n\n\nThe CPU can finish a task then start a new one instantly.\n\n\n\n\nReturn \nthe order in which the CPU will process the tasks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tasks = [[1,2],[2,4],[3,2],[4,1]]\n\nOutput:\n [0,2,3,1]\n\nExplanation: \nThe events go as follows: \n- At time = 1, task 0 is available to process. Available tasks = {0}.\n- Also at time = 1, the idle CPU starts processing task 0. Available tasks = {}.\n- At time = 2, task 1 is available to process. Available tasks = {1}.\n- At time = 3, task 2 is available to process. Available tasks = {1, 2}.\n- Also at time = 3, the CPU finishes task 0 and starts processing task 2 as it is the shortest. Available tasks = {1}.\n- At time = 4, task 3 is available to process. Available tasks = {1, 3}.\n- At time = 5, the CPU finishes task 2 and starts processing task 3 as it is the shortest. Available tasks = {1}.\n- At time = 6, the CPU finishes task 3 and starts processing task 1. Available tasks = {}.\n- At time = 10, the CPU finishes task 1 and becomes idle.\n\n\n\nExample 2:\n\n\n\n\nInput:\n tasks = [[7,10],[7,12],[7,5],[7,4],[7,2]]\n\nOutput:\n [4,3,2,0,1]\n\nExplanation\n: \nThe events go as follows:\n- At time = 7, all the tasks become available. Available tasks = {0,1,2,3,4}.\n- Also at time = 7, the idle CPU starts processing task 4. Available tasks = {0,1,2,3}.\n- At time = 9, the CPU finishes task 4 and starts processing task 3. Available tasks = {0,1,2}.\n- At time = 13, the CPU finishes task 3 and starts processing task 2. Available tasks = {0,1}.\n- At time = 18, the CPU finishes task 2 and starts processing task 0. Available tasks = {1}.\n- At time = 28, the CPU finishes task 0 and starts processing task 1. Available tasks = {}.\n- At time = 40, the CPU finishes task 1 and becomes idle.\n\n\n\n \n\n\nConstraints:\n\n\n\n\ntasks.length == n\n\n\n1 <= n <= 10\n5\n\n\n1 <= enqueueTime\ni\n, processingTime\ni\n <= 10\n9",
        "temas": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1833,
        "slug": "maximum-ice-cream-bars",
        "url": "https://leetcode.com/problems/maximum-ice-cream-bars/",
        "titulo": "Maximum Ice Cream Bars",
        "enunciado": "It is a sweltering summer day, and a boy wants to buy some ice cream bars.\n\n\nAt the store, there are \nn\n ice cream bars. You are given an array \ncosts\n of length \nn\n, where \ncosts[i]\n is the price of the \ni\nth\n ice cream bar in coins. The boy initially has \ncoins\n coins to spend, and he wants to buy as many ice cream bars as possible. \n\n\nNote:\n The boy can buy the ice cream bars in any order.\n\n\nReturn \nthe \nmaximum\n number of ice cream bars the boy can buy with \ncoins\n coins.\n\n\nYou must solve the problem by counting sort.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n costs = [1,3,2,4,1], coins = 7\n\nOutput:\n 4\n\nExplanation: \nThe boy can buy ice cream bars at indices 0,1,2,4 for a total price of 1 + 3 + 2 + 1 = 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n costs = [10,6,8,7,7,8], coins = 5\n\nOutput:\n 0\n\nExplanation: \nThe boy cannot afford any of the ice cream bars.\n\n\n\nExample 3:\n\n\n\n\nInput:\n costs = [1,6,3,1,2,5], coins = 20\n\nOutput:\n 6\n\nExplanation: \nThe boy can buy all the ice cream bars for a total price of 1 + 6 + 3 + 1 + 2 + 5 = 18.\n\n\n\n \n\n\nConstraints:\n\n\n\n\ncosts.length == n\n\n\n1 <= n <= 10\n5\n\n\n1 <= costs[i] <= 10\n5\n\n\n1 <= coins <= 10\n8",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1846,
        "slug": "maximum-element-after-decreasing-and-rearranging",
        "url": "https://leetcode.com/problems/maximum-element-after-decreasing-and-rearranging/",
        "titulo": "Maximum Element After Decreasing and Rearranging",
        "enunciado": "You are given an array of positive integers \narr\n. Perform some operations (possibly none) on \narr\n so that it satisfies these conditions:\n\n\n\n\nThe value of the \nfirst\n element in \narr\n must be \n1\n.\n\n\nThe absolute difference between any 2 adjacent elements must be \nless than or equal to \n1\n. In other words, \nabs(arr[i] - arr[i - 1]) <= 1\n for each \ni\n where \n1 <= i < arr.length\n (\n0-indexed\n). \nabs(x)\n is the absolute value of \nx\n.\n\n\n\n\nThere are 2 types of operations that you can perform any number of times:\n\n\n\n\nDecrease\n the value of any element of \narr\n to a \nsmaller positive integer\n.\n\n\nRearrange\n the elements of \narr\n to be in any order.\n\n\n\n\nReturn \nthe \nmaximum\n possible value of an element in \narr\n after performing the operations to satisfy the conditions\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,2,1,2,1]\n\nOutput:\n 2\n\nExplanation:\n \nWe can satisfy the conditions by rearranging \narr\n so it becomes \n[1,2,2,2,1]\n.\nThe largest element in \narr\n is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [100,1,1000]\n\nOutput:\n 3\n\nExplanation:\n \nOne possible way to satisfy the conditions is by doing the following:\n1. Rearrange \narr\n so it becomes \n[1,100,1000]\n.\n2. Decrease the value of the second element to 2.\n3. Decrease the value of the third element to 3.\nNow \narr = [1,2,3]\n, which\n \nsatisfies the conditions.\nThe largest element in \narr is 3.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,2,3,4,5]\n\nOutput:\n 5\n\nExplanation:\n The array already satisfies the conditions, and the largest element is 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n1 <= arr[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1845,
        "slug": "seat-reservation-manager",
        "url": "https://leetcode.com/problems/seat-reservation-manager/",
        "titulo": "Seat Reservation Manager",
        "enunciado": "Design a system that manages the reservation state of \nn\n seats that are numbered from \n1\n to \nn\n.\n\n\nImplement the \nSeatManager\n class:\n\n\n\n\nSeatManager(int n)\n Initializes a \nSeatManager\n object that will manage \nn\n seats numbered from \n1\n to \nn\n. All seats are initially available.\n\n\nint reserve()\n Fetches the \nsmallest-numbered\n unreserved seat, reserves it, and returns its number.\n\n\nvoid unreserve(int seatNumber)\n Unreserves the seat with the given \nseatNumber\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"SeatManager\", \"reserve\", \"reserve\", \"unreserve\", \"reserve\", \"reserve\", \"reserve\", \"reserve\", \"unreserve\"]\n[[5], [], [], [2], [], [], [], [], [5]]\n\nOutput\n\n[null, 1, 2, null, 2, 3, 4, 5, null]\n\n\nExplanation\n\nSeatManager seatManager = new SeatManager(5); // Initializes a SeatManager with 5 seats.\nseatManager.reserve();    // All seats are available, so return the lowest numbered seat, which is 1.\nseatManager.reserve();    // The available seats are [2,3,4,5], so return the lowest of them, which is 2.\nseatManager.unreserve(2); // Unreserve seat 2, so now the available seats are [2,3,4,5].\nseatManager.reserve();    // The available seats are [2,3,4,5], so return the lowest of them, which is 2.\nseatManager.reserve();    // The available seats are [3,4,5], so return the lowest of them, which is 3.\nseatManager.reserve();    // The available seats are [4,5], so return the lowest of them, which is 4.\nseatManager.reserve();    // The only available seat is seat 5, so return 5.\nseatManager.unreserve(5); // Unreserve seat 5, so now the available seats are [5].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= seatNumber <= n\n\n\nFor each call to \nreserve\n, it is guaranteed that there will be at least one unreserved seat.\n\n\nFor each call to \nunreserve\n, it is guaranteed that \nseatNumber\n will be reserved.\n\n\nAt most \n10\n5\n calls \nin total\n will be made to \nreserve\n and \nunreserve\n.",
        "temas": [
            "Design",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Design",
        "has_image": false
    },
    {
        "id": 1824,
        "slug": "minimum-sideway-jumps",
        "url": "https://leetcode.com/problems/minimum-sideway-jumps/",
        "titulo": "Minimum Sideway Jumps",
        "enunciado": "There is a \n3 lane road\n of length \nn\n that consists of \nn + 1\n \npoints\n labeled from \n0\n to \nn\n. A frog \nstarts\n at point \n0\n in the \nsecond \nlane\n \nand wants to jump to point \nn\n. However, there could be obstacles along the way.\n\n\nYou are given an array \nobstacles\n of length \nn + 1\n where each \nobstacles[i]\n (\nranging from 0 to 3\n) describes an obstacle on the lane \nobstacles[i]\n at point \ni\n. If \nobstacles[i] == 0\n, there are no obstacles at point \ni\n. There will be \nat most one\n obstacle in the 3 lanes at each point.\n\n\n\n\nFor example, if \nobstacles[2] == 1\n, then there is an obstacle on lane 1 at point 2.\n\n\n\n\nThe frog can only travel from point \ni\n to point \ni + 1\n on the same lane if there is not an obstacle on the lane at point \ni + 1\n. To avoid obstacles, the frog can also perform a \nside jump\n to jump to \nanother\n lane (even if they are not adjacent) at the \nsame\n point if there is no obstacle on the new lane.\n\n\n\n\nFor example, the frog can jump from lane 3 at point 3 to lane 1 at point 3.\n\n\n\n\nReturn\n the \nminimum number of side jumps\n the frog needs to reach \nany lane\n at point n starting from lane \n2\n at point 0.\n\n\nNote:\n There will be no obstacles on points \n0\n and \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n obstacles = [0,1,2,3,0]\n\nOutput:\n 2 \n\nExplanation:\n The optimal solution is shown by the arrows above. There are 2 side jumps (red arrows).\nNote that the frog can jump over obstacles only when making side jumps (as shown at point 2).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n obstacles = [0,1,1,3,3,0]\n\nOutput:\n 0\n\nExplanation:\n There are no obstacles on lane 2. No side jumps are required.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n obstacles = [0,2,1,0,3,0]\n\nOutput:\n 2\n\nExplanation:\n The optimal solution is shown by the arrows above. There are 2 side jumps.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nobstacles.length == n + 1\n\n\n1 <= n <= 5 * 10\n5\n\n\n0 <= obstacles[i] <= 3\n\n\nobstacles[0] == obstacles[n] == 0",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1823,
        "slug": "find-the-winner-of-the-circular-game",
        "url": "https://leetcode.com/problems/find-the-winner-of-the-circular-game/",
        "titulo": "Find the Winner of the Circular Game",
        "enunciado": "There are \nn\n friends that are playing a game. The friends are sitting in a circle and are numbered from \n1\n to \nn\n in \nclockwise order\n. More formally, moving clockwise from the \ni\nth\n friend brings you to the \n(i+1)\nth\n friend for \n1 <= i < n\n, and moving clockwise from the \nn\nth\n friend brings you to the \n1\nst\n friend.\n\n\nThe rules of the game are as follows:\n\n\n\n\nStart\n at the \n1\nst\n friend.\n\n\nCount the next \nk\n friends in the clockwise direction \nincluding\n the friend you started at. The counting wraps around the circle and may count some friends more than once.\n\n\nThe last friend you counted leaves the circle and loses the game.\n\n\nIf there is still more than one friend in the circle, go back to step \n2\n \nstarting\n from the friend \nimmediately clockwise\n of the friend who just lost and repeat.\n\n\nElse, the last friend in the circle wins the game.\n\n\n\n\nGiven the number of friends, \nn\n, and an integer \nk\n, return \nthe winner of the game\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 5, k = 2\n\nOutput:\n 3\n\nExplanation:\n Here are the steps of the game:\n1) Start at friend 1.\n2) Count 2 friends clockwise, which are friends 1 and 2.\n3) Friend 2 leaves the circle. Next start is friend 3.\n4) Count 2 friends clockwise, which are friends 3 and 4.\n5) Friend 4 leaves the circle. Next start is friend 5.\n6) Count 2 friends clockwise, which are friends 5 and 1.\n7) Friend 1 leaves the circle. Next start is friend 3.\n8) Count 2 friends clockwise, which are friends 3 and 5.\n9) Friend 5 leaves the circle. Only friend 3 is left, so they are the winner.\n\n\nExample 2:\n\n\n\n\nInput:\n n = 6, k = 5\n\nOutput:\n 1\n\nExplanation:\n The friends leave in this order: 5, 4, 6, 2, 3. The winner is friend 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= n <= 500\n\n\n\n\n \n\n\nFollow up:\n\n\nCould you solve this problem in linear time with constant space?",
        "temas": [
            "Array",
            "Math",
            "Recursion",
            "Queue",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1818,
        "slug": "minimum-absolute-sum-difference",
        "url": "https://leetcode.com/problems/minimum-absolute-sum-difference/",
        "titulo": "Minimum Absolute Sum Difference",
        "enunciado": "You are given two positive integer arrays \nnums1\n and \nnums2\n, both of length \nn\n.\n\n\nThe \nabsolute sum difference\n of arrays \nnums1\n and \nnums2\n is defined as the \nsum\n of \n|nums1[i] - nums2[i]|\n for each \n0 <= i < n\n (\n0-indexed\n).\n\n\nYou can replace \nat most one\n element of \nnums1\n with \nany\n other element in \nnums1\n to \nminimize\n the absolute sum difference.\n\n\nReturn the \nminimum absolute sum difference \nafter\n replacing at most one\n \nelement in the array \nnums1\n.\n Since the answer may be large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n|x|\n is defined as:\n\n\n\n\nx\n if \nx >= 0\n, or\n\n\n-x\n if \nx < 0\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,7,5], nums2 = [2,3,5]\n\nOutput:\n 3\n\nExplanation: \nThere are two possible optimal solutions:\n- Replace the second element with the first: [1,\n7\n,5] => [1,\n1\n,5], or\n- Replace the second element with the third: [1,\n7\n,5] => [1,\n5\n,5].\nBoth will yield an absolute sum difference of \n|1-2| + (|1-3| or |5-3|) + |5-5| = \n3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [2,4,6,8,10], nums2 = [2,4,6,8,10]\n\nOutput:\n 0\n\nExplanation: \nnums1 is equal to nums2 so no replacement is needed. This will result in an \nabsolute sum difference of 0.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [1,10,4,4,2,7], nums2 = [9,3,5,1,7,4]\n\nOutput:\n 20\n\nExplanation: \nReplace the first element with the second: [\n1\n,10,4,4,2,7] => [\n10\n,10,4,4,2,7].\nThis yields an absolute sum difference of \n|10-9| + |10-3| + |4-5| + |4-1| + |2-7| + |7-4| = 20\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length\n\n\nn == nums2.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= nums1[i], nums2[i] <= 10\n5",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1817,
        "slug": "finding-the-users-active-minutes",
        "url": "https://leetcode.com/problems/finding-the-users-active-minutes/",
        "titulo": "Finding the Users Active Minutes",
        "enunciado": "You are given the logs for users' actions on LeetCode, and an integer \nk\n. The logs are represented by a 2D integer array \nlogs\n where each \nlogs[i] = [ID\ni\n, time\ni\n]\n indicates that the user with \nID\ni\n performed an action at the minute \ntime\ni\n.\n\n\nMultiple users\n can perform actions simultaneously, and a single user can perform \nmultiple actions\n in the same minute.\n\n\nThe \nuser active minutes (UAM)\n for a given user is defined as the \nnumber of unique minutes\n in which the user performed an action on LeetCode. A minute can only be counted once, even if multiple actions occur during it.\n\n\nYou are to calculate a \n1-indexed\n array \nanswer\n of size \nk\n such that, for each \nj\n (\n1 <= j <= k\n), \nanswer[j]\n is the \nnumber of users\n whose \nUAM\n equals \nj\n.\n\n\nReturn \nthe array \nanswer\n as described above\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n logs = [[0,5],[1,2],[0,2],[0,5],[1,3]], k = 5\n\nOutput:\n [0,2,0,0,0]\n\nExplanation:\n\nThe user with ID=0 performed actions at minutes 5, 2, and 5 again. Hence, they have a UAM of 2 (minute 5 is only counted once).\nThe user with ID=1 performed actions at minutes 2 and 3. Hence, they have a UAM of 2.\nSince both users have a UAM of 2, answer[2] is 2, and the remaining answer[j] values are 0.\n\n\n\nExample 2:\n\n\n\n\nInput:\n logs = [[1,1],[2,2],[2,3]], k = 4\n\nOutput:\n [1,1,0,0]\n\nExplanation:\n\nThe user with ID=1 performed a single action at minute 1. Hence, they have a UAM of 1.\nThe user with ID=2 performed actions at minutes 2 and 3. Hence, they have a UAM of 2.\nThere is one user with a UAM of 1 and one with a UAM of 2.\nHence, answer[1] = 1, answer[2] = 1, and the remaining values are 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= logs.length <= 10\n4\n\n\n0 <= ID\ni\n <= 10\n9\n\n\n1 <= time\ni\n <= 10\n5\n\n\nk\n is in the range \n[The maximum \nUAM\n for a user, 10\n5\n]\n.",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1829,
        "slug": "maximum-xor-for-each-query",
        "url": "https://leetcode.com/problems/maximum-xor-for-each-query/",
        "titulo": "Maximum XOR for Each Query",
        "enunciado": "You are given a \nsorted\n array \nnums\n of \nn\n non-negative integers and an integer \nmaximumBit\n. You want to perform the following query \nn\n \ntimes\n:\n\n\n\n\nFind a non-negative integer \nk < 2\nmaximumBit\n such that \nnums[0] XOR nums[1] XOR ... XOR nums[nums.length-1] XOR k\n is \nmaximized\n. \nk\n is the answer to the \ni\nth\n query.\n\n\nRemove the \nlast \nelement from the current array \nnums\n.\n\n\n\n\nReturn \nan array\n \nanswer\n, where \nanswer[i]\n is the answer to the \ni\nth\n query\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,1,1,3], maximumBit = 2\n\nOutput:\n [0,3,2,3]\n\nExplanation\n: The queries are answered as follows:\n1\nst\n query: nums = [0,1,1,3], k = 0 since 0 XOR 1 XOR 1 XOR 3 XOR 0 = 3.\n2\nnd\n query: nums = [0,1,1], k = 3 since 0 XOR 1 XOR 1 XOR 3 = 3.\n3\nrd\n query: nums = [0,1], k = 2 since 0 XOR 1 XOR 2 = 3.\n4\nth\n query: nums = [0], k = 3 since 0 XOR 3 = 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,3,4,7], maximumBit = 3\n\nOutput:\n [5,2,6,5]\n\nExplanation\n: The queries are answered as follows:\n1\nst\n query: nums = [2,3,4,7], k = 5 since 2 XOR 3 XOR 4 XOR 7 XOR 5 = 7.\n2\nnd\n query: nums = [2,3,4], k = 2 since 2 XOR 3 XOR 4 XOR 2 = 7.\n3\nrd\n query: nums = [2,3], k = 6 since 2 XOR 3 XOR 6 = 7.\n4\nth\n query: nums = [2], k = 5 since 2 XOR 5 = 7.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [0,1,2,2,5,7], maximumBit = 3\n\nOutput:\n [4,3,6,4,6,7]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nnums.length == n\n\n\n1 <= n <= 10\n5\n\n\n1 <= maximumBit <= 20\n\n\n0 <= nums[i] < 2\nmaximumBit\n\n\nnums\n​​​ is sorted in \nascending\n order.",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1828,
        "slug": "queries-on-number-of-points-inside-a-circle",
        "url": "https://leetcode.com/problems/queries-on-number-of-points-inside-a-circle/",
        "titulo": "Queries on Number of Points Inside a Circle",
        "enunciado": "You are given an array \npoints\n where \npoints[i] = [x\ni\n, y\ni\n]\n is the coordinates of the \ni\nth\n point on a 2D plane. Multiple points can have the \nsame\n coordinates.\n\n\nYou are also given an array \nqueries\n where \nqueries[j] = [x\nj\n, y\nj\n, r\nj\n]\n describes a circle centered at \n(x\nj\n, y\nj\n)\n with a radius of \nr\nj\n.\n\n\nFor each query \nqueries[j]\n, compute the number of points \ninside\n the \nj\nth\n circle. Points \non the border\n of the circle are considered \ninside\n.\n\n\nReturn \nan array \nanswer\n, where \nanswer[j]\n is the answer to the \nj\nth\n query\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n points = [[1,3],[3,3],[5,3],[2,2]], queries = [[2,3,1],[4,3,1],[1,1,2]]\n\nOutput:\n [3,2,2]\n\nExplanation: \nThe points and circles are shown above.\nqueries[0] is the green circle, queries[1] is the red circle, and queries[2] is the blue circle.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n points = [[1,1],[2,2],[3,3],[4,4],[5,5]], queries = [[1,2,2],[2,2,2],[4,3,2],[4,3,3]]\n\nOutput:\n [2,3,2,4]\n\nExplanation: \nThe points and circles are shown above.\nqueries[0] is green, queries[1] is red, queries[2] is blue, and queries[3] is purple.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 500\n\n\npoints[i].length == 2\n\n\n0 <= x\n​​​​​​i\n, y\n​​​​​​i\n <= 500\n\n\n1 <= queries.length <= 500\n\n\nqueries[j].length == 3\n\n\n0 <= x\nj\n, y\nj\n <= 500\n\n\n1 <= r\nj\n <= 500\n\n\nAll coordinates are integers.\n\n\n\n\n \n\n\nFollow up:\n Could you find the answer for each query in better complexity than \nO(n)\n?",
        "temas": [
            "Array",
            "Math",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1806,
        "slug": "minimum-number-of-operations-to-reinitialize-a-permutation",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-reinitialize-a-permutation/",
        "titulo": "Minimum Number of Operations to Reinitialize a Permutation",
        "enunciado": "You are given an \neven\n integer \nn\n​​​​​​. You initially have a permutation \nperm\n of size \nn\n​​ where \nperm[i] == i\n​ \n(0-indexed)\n​​​​.\n\n\nIn one operation, you will create a new array \narr\n, and for each \ni\n:\n\n\n\n\nIf \ni % 2 == 0\n, then \narr[i] = perm[i / 2]\n.\n\n\nIf \ni % 2 == 1\n, then \narr[i] = perm[n / 2 + (i - 1) / 2]\n.\n\n\n\n\nYou will then assign \narr\n​​​​ to \nperm\n.\n\n\nReturn \nthe minimum \nnon-zero\n number of operations you need to perform on \nperm\n to return the permutation to its initial value.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 1\n\nExplanation:\n perm = [0,1] initially.\nAfter the 1\nst\n operation, perm = [0,1]\nSo it takes only 1 operation.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n 2\n\nExplanation:\n perm = [0,1,2,3] initially.\nAfter the 1\nst\n operation, perm = [0,2,1,3]\nAfter the 2\nnd\n operation, perm = [0,1,2,3]\nSo it takes only 2 operations.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 6\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 1000\n\n\nn\n​​​​​​ is even.",
        "temas": [
            "Array",
            "Math",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1807,
        "slug": "evaluate-the-bracket-pairs-of-a-string",
        "url": "https://leetcode.com/problems/evaluate-the-bracket-pairs-of-a-string/",
        "titulo": "Evaluate the Bracket Pairs of a String",
        "enunciado": "You are given a string \ns\n that contains some bracket pairs, with each pair containing a \nnon-empty\n key.\n\n\n\n\nFor example, in the string \n\"(name)is(age)yearsold\"\n, there are \ntwo\n bracket pairs that contain the keys \n\"name\"\n and \n\"age\"\n.\n\n\n\n\nYou know the values of a wide range of keys. This is represented by a 2D string array \nknowledge\n where each \nknowledge[i] = [key\ni\n, value\ni\n]\n indicates that key \nkey\ni\n has a value of \nvalue\ni\n.\n\n\nYou are tasked to evaluate \nall\n of the bracket pairs. When you evaluate a bracket pair that contains some key \nkey\ni\n, you will:\n\n\n\n\nReplace \nkey\ni\n and the bracket pair with the key's corresponding \nvalue\ni\n.\n\n\nIf you do not know the value of the key, you will replace \nkey\ni\n and the bracket pair with a question mark \n\"?\"\n (without the quotation marks).\n\n\n\n\nEach key will appear at most once in your \nknowledge\n. There will not be any nested brackets in \ns\n.\n\n\nReturn \nthe resulting string after evaluating \nall\n of the bracket pairs.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"(name)is(age)yearsold\", knowledge = [[\"name\",\"bob\"],[\"age\",\"two\"]]\n\nOutput:\n \"bobistwoyearsold\"\n\nExplanation:\n\nThe key \"name\" has a value of \"bob\", so replace \"(name)\" with \"bob\".\nThe key \"age\" has a value of \"two\", so replace \"(age)\" with \"two\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"hi(name)\", knowledge = [[\"a\",\"b\"]]\n\nOutput:\n \"hi?\"\n\nExplanation:\n As you do not know the value of the key \"name\", replace \"(name)\" with \"?\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"(a)(a)(a)aaa\", knowledge = [[\"a\",\"yes\"]]\n\nOutput:\n \"yesyesyesaaa\"\n\nExplanation:\n The same key can appear multiple times.\nThe key \"a\" has a value of \"yes\", so replace all occurrences of \"(a)\" with \"yes\".\nNotice that the \"a\"s not in a bracket pair are not evaluated.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\n0 <= knowledge.length <= 10\n5\n\n\nknowledge[i].length == 2\n\n\n1 <= key\ni\n.length, value\ni\n.length <= 10\n\n\ns\n consists of lowercase English letters and round brackets \n'('\n and \n')'\n.\n\n\nEvery open bracket \n'('\n in \ns\n will have a corresponding close bracket \n')'\n.\n\n\nThe key in each bracket pair of \ns\n will be non-empty.\n\n\nThere will not be any nested bracket pairs in \ns\n.\n\n\nkey\ni\n and \nvalue\ni\n consist of lowercase English letters.\n\n\nEach \nkey\ni\n in \nknowledge\n is unique.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1798,
        "slug": "maximum-number-of-consecutive-values-you-can-make",
        "url": "https://leetcode.com/problems/maximum-number-of-consecutive-values-you-can-make/",
        "titulo": "Maximum Number of Consecutive Values You Can Make",
        "enunciado": "You are given an integer array \ncoins\n of length \nn\n which represents the \nn\n coins that you own. The value of the \ni\nth\n coin is \ncoins[i]\n. You can \nmake\n some value \nx\n if you can choose some of your \nn\n coins such that their values sum up to \nx\n.\n\n\nReturn the \nmaximum number of consecutive integer values that you \ncan\n \nmake\n with your coins \nstarting\n from and \nincluding\n \n0\n.\n\n\nNote that you may have multiple coins of the same value.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n coins = [1,3]\n\nOutput:\n 2\n\nExplanation: \nYou can make the following values:\n- 0: take []\n- 1: take [1]\nYou can make 2 consecutive integer values starting from 0.\n\n\nExample 2:\n\n\n\n\nInput:\n coins = [1,1,1,4]\n\nOutput:\n 8\n\nExplanation: \nYou can make the following values:\n- 0: take []\n- 1: take [1]\n- 2: take [1,1]\n- 3: take [1,1,1]\n- 4: take [4]\n- 5: take [4,1]\n- 6: take [4,1,1]\n- 7: take [4,1,1,1]\nYou can make 8 consecutive integer values starting from 0.\n\n\nExample 3:\n\n\n\n\nInput:\n coins = [1,4,10,3,1]\n\nOutput:\n 20\n\n\n \n\n\nConstraints:\n\n\n\n\ncoins.length == n\n\n\n1 <= n <= 4 * 10\n4\n\n\n1 <= coins[i] <= 4 * 10\n4",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1802,
        "slug": "maximum-value-at-a-given-index-in-a-bounded-array",
        "url": "https://leetcode.com/problems/maximum-value-at-a-given-index-in-a-bounded-array/",
        "titulo": "Maximum Value at a Given Index in a Bounded Array",
        "enunciado": "You are given three positive integers: \nn\n, \nindex\n, and \nmaxSum\n. You want to construct an array \nnums\n (\n0-indexed\n)\n \nthat satisfies the following conditions:\n\n\n\n\nnums.length == n\n\n\nnums[i]\n is a \npositive\n integer where \n0 <= i < n\n.\n\n\nabs(nums[i] - nums[i+1]) <= 1\n where \n0 <= i < n-1\n.\n\n\nThe sum of all the elements of \nnums\n does not exceed \nmaxSum\n.\n\n\nnums[index]\n is \nmaximized\n.\n\n\n\n\nReturn \nnums[index]\n of the constructed array\n.\n\n\nNote that \nabs(x)\n equals \nx\n if \nx >= 0\n, and \n-x\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 4, index = 2,  maxSum = 6\n\nOutput:\n 2\n\nExplanation:\n nums = [1,2,\n2\n,1] is one array that satisfies all the conditions.\nThere are no arrays that satisfy all the conditions and have nums[2] == 3, so 2 is the maximum nums[2].\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 6, index = 1,  maxSum = 10\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= maxSum <= 10\n9\n\n\n0 <= index < n",
        "temas": [
            "Math",
            "Binary Search",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1801,
        "slug": "number-of-orders-in-the-backlog",
        "url": "https://leetcode.com/problems/number-of-orders-in-the-backlog/",
        "titulo": "Number of Orders in the Backlog",
        "enunciado": "You are given a 2D integer array \norders\n, where each \norders[i] = [price\ni\n, amount\ni\n, orderType\ni\n]\n denotes that \namount\ni\n \norders have been placed of type \norderType\ni\n at the price \nprice\ni\n. The \norderType\ni\n is:\n\n\n\n\n0\n if it is a batch of \nbuy\n orders, or\n\n\n1\n if it is a batch of \nsell\n orders.\n\n\n\n\nNote that \norders[i]\n represents a batch of \namount\ni\n independent orders with the same price and order type. All orders represented by \norders[i]\n will be placed before all orders represented by \norders[i+1]\n for all valid \ni\n.\n\n\nThere is a \nbacklog\n that consists of orders that have not been executed. The backlog is initially empty. When an order is placed, the following happens:\n\n\n\n\nIf the order is a \nbuy\n order, you look at the \nsell\n order with the \nsmallest\n price in the backlog. If that \nsell\n order's price is \nsmaller than or equal to\n the current \nbuy\n order's price, they will match and be executed, and that \nsell\n order will be removed from the backlog. Else, the \nbuy\n order is added to the backlog.\n\n\nVice versa, if the order is a \nsell\n order, you look at the \nbuy\n order with the \nlargest\n price in the backlog. If that \nbuy\n order's price is \nlarger than or equal to\n the current \nsell\n order's price, they will match and be executed, and that \nbuy\n order will be removed from the backlog. Else, the \nsell\n order is added to the backlog.\n\n\n\n\nReturn \nthe total \namount\n of orders in the backlog after placing all the orders from the input\n. Since this number can be large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\r\n\nInput:\n orders = [[10,5,0],[15,2,1],[25,1,1],[30,4,0]]\r\n\nOutput:\n 6\r\n\nExplanation:\n Here is what happens with the orders:\r\n- 5 orders of type buy with price 10 are placed. There are no sell orders, so the 5 orders are added to the backlog.\r\n- 2 orders of type sell with price 15 are placed. There are no buy orders with prices larger than or equal to 15, so the 2 orders are added to the backlog.\r\n- 1 order of type sell with price 25 is placed. There are no buy orders with prices larger than or equal to 25 in the backlog, so this order is added to the backlog.\r\n- 4 orders of type buy with price 30 are placed. The first 2 orders are matched with the 2 sell orders of the least price, which is 15 and these 2 sell orders are removed from the backlog. The 3\nrd\n order is matched with the sell order of the least price, which is 25 and this sell order is removed from the backlog. Then, there are no more sell orders in the backlog, so the 4\nth\n order is added to the backlog.\r\nFinally, the backlog has 5 buy orders with price 10, and 1 buy order with price 30. So the total number of orders in the backlog is 6.\r\n\n\n\nExample 2:\n\n\n\n\n\r\n\nInput:\n orders = [[7,1000000000,1],[15,3,0],[5,999999995,0],[5,1,1]]\r\n\nOutput:\n 999999984\r\n\nExplanation:\n Here is what happens with the orders:\r\n- 10\n9\n orders of type sell with price 7 are placed. There are no buy orders, so the 10\n9\n orders are added to the backlog.\r\n- 3 orders of type buy with price 15 are placed. They are matched with the 3 sell orders with the least price which is 7, and those 3 sell orders are removed from the backlog.\r\n- 999999995 orders of type buy with price 5 are placed. The least price of a sell order is 7, so the 999999995 orders are added to the backlog.\r\n- 1 order of type sell with price 5 is placed. It is matched with the buy order of the highest price, which is 5, and that buy order is removed from the backlog.\r\nFinally, the backlog has (1000000000-3) sell orders with price 7, and (999999995-1) buy orders with price 5. So the total number of orders = 1999999991, which is equal to 999999984 % (10\n9\n + 7).\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= orders.length <= 10\n5\n\n\norders[i].length == 3\n\n\n1 <= price\ni\n, amount\ni\n <= 10\n9\n\n\norderType\ni\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Heap (Priority Queue)",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1814,
        "slug": "count-nice-pairs-in-an-array",
        "url": "https://leetcode.com/problems/count-nice-pairs-in-an-array/",
        "titulo": "Count Nice Pairs in an Array",
        "enunciado": "You are given an array \nnums\n that consists of non-negative integers. Let us define \nrev(x)\n as the reverse of the non-negative integer \nx\n. For example, \nrev(123) = 321\n, and \nrev(120) = 21\n. A pair of indices \n(i, j)\n is \nnice\n if it satisfies all of the following conditions:\n\n\n\n\n0 <= i < j < nums.length\n\n\nnums[i] + rev(nums[j]) == nums[j] + rev(nums[i])\n\n\n\n\nReturn \nthe number of nice pairs of indices\n. Since that number can be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [42,11,1,97]\n\nOutput:\n 2\n\nExplanation:\n The two pairs are:\n - (0,3) : 42 + rev(97) = 42 + 79 = 121, 97 + rev(42) = 97 + 24 = 121.\n - (1,2) : 11 + rev(1) = 11 + 1 = 12, 1 + rev(11) = 1 + 11 = 12.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [13,10,35,24,76]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1813,
        "slug": "sentence-similarity-iii",
        "url": "https://leetcode.com/problems/sentence-similarity-iii/",
        "titulo": "Sentence Similarity III",
        "enunciado": "You are given two strings \nsentence1\n and \nsentence2\n, each representing a \nsentence\n composed of words. A sentence is a list of \nwords\n that are separated by a \nsingle\n space with no leading or trailing spaces. Each word consists of only uppercase and lowercase English characters.\n\n\nTwo sentences \ns1\n and \ns2\n are considered \nsimilar\n if it is possible to insert an arbitrary sentence (\npossibly empty\n) inside one of these sentences such that the two sentences become equal. \nNote\n that the inserted sentence must be separated from existing words by spaces.\n\n\nFor example,\n\n\n\n\ns1 = \"Hello Jane\"\n and \ns2 = \"Hello my name is Jane\"\n can be made equal by inserting \n\"my name is\"\n between \n\"Hello\"\n \nand \n\"Jane\"\n in s1.\n\n\ns1 = \"Frog cool\"\n \nand\n \ns2 = \"Frogs are cool\"\n \nare \nnot\n similar, since although there is a sentence \n\"s are\"\n inserted into \ns1\n, it is not separated from \n\"Frog\"\n by a space.\n\n\n\n\nGiven two sentences \nsentence1\n and \nsentence2\n, return \ntrue\n if \nsentence1\n and \nsentence2\n are \nsimilar\n. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nsentence1 = \"My name is Haley\", sentence2 = \"My Haley\"\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\nsentence2\n can be turned to \nsentence1\n by inserting \"name is\" between \"My\" and \"Haley\".\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nsentence1 = \"of\", sentence2 = \"A lot of words\"\n\n\nOutput:\n \nfalse\n\n\nExplanation:\n\n\nNo single sentence can be inserted inside one of the sentences to make it equal to the other.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nsentence1 = \"Eating right now\", sentence2 = \"Eating\"\n\n\nOutput:\n \ntrue\n\n\nExplanation:\n\n\nsentence2\n can be turned to \nsentence1\n by inserting \"right now\" at the end of the sentence.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= sentence1.length, sentence2.length <= 100\n\n\nsentence1\n and \nsentence2\n consist of lowercase and uppercase English letters and spaces.\n\n\nThe words in \nsentence1\n and \nsentence2\n are separated by a single space.",
        "temas": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1792,
        "slug": "maximum-average-pass-ratio",
        "url": "https://leetcode.com/problems/maximum-average-pass-ratio/",
        "titulo": "Maximum Average Pass Ratio",
        "enunciado": "There is a school that has classes of students and each class will be having a final exam. You are given a 2D integer array \nclasses\n, where \nclasses[i] = [pass\ni\n, total\ni\n]\n. You know beforehand that in the \ni\nth\n class, there are \ntotal\ni\n total students, but only \npass\ni\n number of students will pass the exam.\n\n\nYou are also given an integer \nextraStudents\n. There are another \nextraStudents\n brilliant students that are \nguaranteed\n to pass the exam of any class they are assigned to. You want to assign each of the \nextraStudents\n students to a class in a way that \nmaximizes\n the \naverage\n pass ratio across \nall\n the classes.\n\n\nThe \npass ratio\n of a class is equal to the number of students of the class that will pass the exam divided by the total number of students of the class. The \naverage pass ratio\n is the sum of pass ratios of all the classes divided by the number of the classes.\n\n\nReturn \nthe \nmaximum\n possible average pass ratio after assigning the \nextraStudents\n students. \nAnswers within \n10\n-5\n of the actual answer will be accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n classes = [[1,2],[3,5],[2,2]], \nextraStudents\n = 2\n\nOutput:\n 0.78333\n\nExplanation:\n You can assign the two extra students to the first class. The average pass ratio will be equal to (3/4 + 3/5 + 2/2) / 3 = 0.78333.\n\n\n\nExample 2:\n\n\n\n\nInput:\n classes = [[2,4],[3,9],[4,5],[2,10]], \nextraStudents\n = 4\n\nOutput:\n 0.53485\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= classes.length <= 10\n5\n\n\nclasses[i].length == 2\n\n\n1 <= pass\ni\n <= total\ni\n <= 10\n5\n\n\n1 <= extraStudents <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1786,
        "slug": "number-of-restricted-paths-from-first-to-last-node",
        "url": "https://leetcode.com/problems/number-of-restricted-paths-from-first-to-last-node/",
        "titulo": "Number of Restricted Paths From First to Last Node",
        "enunciado": "There is an undirected weighted connected graph. You are given a positive integer \nn\n which denotes that the graph has \nn\n nodes labeled from \n1\n to \nn\n, and an array \nedges\n where each \nedges[i] = [u\ni\n, v\ni\n, weight\ni\n]\n denotes that there is an edge between nodes \nu\ni\n and \nv\ni\n with weight equal to \nweight\ni\n.\n\n\nA path from node \nstart\n to node \nend\n is a sequence of nodes \n[z\n0\n, z\n1\n,\n \nz\n2\n, ..., z\nk\n]\n such that \nz\n0 \n= start\n and \nz\nk\n = end\n and there is an edge between \nz\ni\n and \nz\ni+1\n where \n0 <= i <= k-1\n.\n\n\nThe distance of a path is the sum of the weights on the edges of the path. Let \ndistanceToLastNode(x)\n denote the shortest distance of a path between node \nn\n and node \nx\n. A \nrestricted path\n is a path that also satisfies that \ndistanceToLastNode(z\ni\n) > distanceToLastNode(z\ni+1\n)\n where \n0 <= i <= k-1\n.\n\n\nReturn \nthe number of restricted paths from node\n \n1\n \nto node\n \nn\n. Since that number may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 5, edges = [[1,2,3],[1,3,3],[2,3,1],[1,4,2],[5,2,2],[3,5,1],[5,4,10]]\n\nOutput:\n 3\n\nExplanation:\n Each circle contains the node number in black and its \ndistanceToLastNode value in blue. \nThe three restricted paths are:\n1) 1 --> 2 --> 5\n2) 1 --> 2 --> 3 --> 5\n3) 1 --> 3 --> 5\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[1,3,1],[4,1,2],[7,3,4],[2,5,3],[5,6,1],[6,7,2],[7,5,3],[2,6,4]]\n\nOutput:\n 1\n\nExplanation:\n Each circle contains the node number in black and its \ndistanceToLastNode value in blue. \nThe only restricted path is 1 --> 3 --> 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2 * 10\n4\n\n\nn - 1 <= edges.length <= 4 * 10\n4\n\n\nedges[i].length == 3\n\n\n1 <= u\ni\n, v\ni\n <= n\n\n\nu\ni \n!= v\ni\n\n\n1 <= weight\ni\n <= 10\n5\n\n\nThere is at most one edge between any two nodes.\n\n\nThere is at least one path between any two nodes.",
        "temas": [
            "Dynamic Programming",
            "Graph",
            "Topological Sort",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 1785,
        "slug": "minimum-elements-to-add-to-form-a-given-sum",
        "url": "https://leetcode.com/problems/minimum-elements-to-add-to-form-a-given-sum/",
        "titulo": "Minimum Elements to Add to Form a Given Sum",
        "enunciado": "You are given an integer array \nnums\n and two integers \nlimit\n and \ngoal\n. The array \nnums\n has an interesting property that \nabs(nums[i]) <= limit\n.\n\n\nReturn \nthe minimum number of elements you need to add to make the sum of the array equal to \ngoal\n. The array must maintain its property that \nabs(nums[i]) <= limit\n.\n\n\nNote that \nabs(x)\n equals \nx\n if \nx >= 0\n, and \n-x\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,-1,1], limit = 3, goal = -4\n\nOutput:\n 2\n\nExplanation:\n You can add -2 and -3, then the sum of the array will be 1 - 1 + 1 - 2 - 3 = -4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,-10,9,1], limit = 100, goal = 0\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= limit <= 10\n6\n\n\n-limit <= nums[i] <= limit\n\n\n-10\n9\n <= goal <= 10\n9",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1797,
        "slug": "design-authentication-manager",
        "url": "https://leetcode.com/problems/design-authentication-manager/",
        "titulo": "Design Authentication Manager",
        "enunciado": "There is an authentication system that works with authentication tokens. For each session, the user will receive a new authentication token that will expire \ntimeToLive\n seconds after the \ncurrentTime\n. If the token is renewed, the expiry time will be \nextended\n to expire \ntimeToLive\n seconds after the (potentially different) \ncurrentTime\n.\n\n\nImplement the \nAuthenticationManager\n class:\n\n\n\n\nAuthenticationManager(int timeToLive)\n constructs the \nAuthenticationManager\n and sets the \ntimeToLive\n.\n\n\ngenerate(string tokenId, int currentTime)\n generates a new token with the given \ntokenId\n at the given \ncurrentTime\n in seconds.\n\n\nrenew(string tokenId, int currentTime)\n renews the \nunexpired\n token with the given \ntokenId\n at the given \ncurrentTime\n in seconds. If there are no unexpired tokens with the given \ntokenId\n, the request is ignored, and nothing happens.\n\n\ncountUnexpiredTokens(int currentTime)\n returns the number of \nunexpired\n tokens at the given currentTime.\n\n\n\n\nNote that if a token expires at time \nt\n, and another action happens on time \nt\n (\nrenew\n or \ncountUnexpiredTokens\n), the expiration takes place \nbefore\n the other actions.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"AuthenticationManager\", \"\nrenew\n\", \"generate\", \"\ncountUnexpiredTokens\n\", \"generate\", \"\nrenew\n\", \"\nrenew\n\", \"\ncountUnexpiredTokens\n\"]\n[[5], [\"aaa\", 1], [\"aaa\", 2], [6], [\"bbb\", 7], [\"aaa\", 8], [\"bbb\", 10], [15]]\n\nOutput\n\n[null, null, null, 1, null, null, null, 0]\n\n\nExplanation\n\nAuthenticationManager authenticationManager = new AuthenticationManager(5); // Constructs the AuthenticationManager with \ntimeToLive\n = 5 seconds.\nauthenticationManager.\nrenew\n(\"aaa\", 1); // No token exists with tokenId \"aaa\" at time 1, so nothing happens.\nauthenticationManager.generate(\"aaa\", 2); // Generates a new token with tokenId \"aaa\" at time 2.\nauthenticationManager.\ncountUnexpiredTokens\n(6); // The token with tokenId \"aaa\" is the only unexpired one at time 6, so return 1.\nauthenticationManager.generate(\"bbb\", 7); // Generates a new token with tokenId \"bbb\" at time 7.\nauthenticationManager.\nrenew\n(\"aaa\", 8); // The token with tokenId \"aaa\" expired at time 7, and 8 >= 7, so at time 8 the \nrenew\n request is ignored, and nothing happens.\nauthenticationManager.\nrenew\n(\"bbb\", 10); // The token with tokenId \"bbb\" is unexpired at time 10, so the \nrenew\n request is fulfilled and now the token will expire at time 15.\nauthenticationManager.\ncountUnexpiredTokens\n(15); // The token with tokenId \"bbb\" expires at time 15, and the token with tokenId \"aaa\" expired at time 7, so currently no token is unexpired, so return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= timeToLive <= 10\n8\n\n\n1 <= currentTime <= 10\n8\n\n\n1 <= tokenId.length <= 5\n\n\ntokenId\n consists only of lowercase letters.\n\n\nAll calls to \ngenerate\n will contain unique values of \ntokenId\n.\n\n\nThe values of \ncurrentTime\n across all the function calls will be \nstrictly increasing\n.\n\n\nAt most \n2000\n calls will be made to all functions combined.",
        "temas": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 1775,
        "slug": "equal-sum-arrays-with-minimum-number-of-operations",
        "url": "https://leetcode.com/problems/equal-sum-arrays-with-minimum-number-of-operations/",
        "titulo": "Equal Sum Arrays With Minimum Number of Operations",
        "enunciado": "You are given two arrays of integers \nnums1\n and \nnums2\n, possibly of different lengths. The values in the arrays are between \n1\n and \n6\n, inclusive.\n\n\nIn one operation, you can change any integer's value in \nany \nof the arrays to \nany\n value between \n1\n and \n6\n, inclusive.\n\n\nReturn \nthe minimum number of operations required to make the sum of values in \nnums1\n equal to the sum of values in \nnums2\n.\n Return \n-1\n​​​​​ if it is not possible to make the sum of the two arrays equal.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,2,3,4,5,6], nums2 = [1,1,2,2,2,2]\n\nOutput:\n 3\n\nExplanation:\n You can make the sums of nums1 and nums2 equal with 3 operations. All indices are 0-indexed.\n- Change nums2[0] to 6. nums1 = [1,2,3,4,5,6], nums2 = [\n6\n,1,2,2,2,2].\n- Change nums1[5] to 1. nums1 = [1,2,3,4,5,\n1\n], nums2 = [6,1,2,2,2,2].\n- Change nums1[2] to 2. nums1 = [1,2,\n2\n,4,5,1], nums2 = [6,1,2,2,2,2].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,1,1,1,1,1,1], nums2 = [6]\n\nOutput:\n -1\n\nExplanation:\n There is no way to decrease the sum of nums1 or to increase the sum of nums2 to make them equal.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [6,6], nums2 = [1]\n\nOutput:\n 3\n\nExplanation:\n You can make the sums of nums1 and nums2 equal with 3 operations. All indices are 0-indexed. \n- Change nums1[0] to 2. nums1 = [\n2\n,6], nums2 = [1].\n- Change nums1[1] to 2. nums1 = [2,\n2\n], nums2 = [1].\n- Change nums2[0] to 4. nums1 = [2,2], nums2 = [\n4\n].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 10\n5\n\n\n1 <= nums1[i], nums2[i] <= 6",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1774,
        "slug": "closest-dessert-cost",
        "url": "https://leetcode.com/problems/closest-dessert-cost/",
        "titulo": "Closest Dessert Cost",
        "enunciado": "You would like to make dessert and are preparing to buy the ingredients. You have \nn\n ice cream base flavors and \nm\n types of toppings to choose from. You must follow these rules when making your dessert:\n\n\n\n\nThere must be \nexactly one\n ice cream base.\n\n\nYou can add \none or more\n types of topping or have no toppings at all.\n\n\nThere are \nat most two\n of \neach type\n of topping.\n\n\n\n\nYou are given three inputs:\n\n\n\n\nbaseCosts\n, an integer array of length \nn\n, where each \nbaseCosts[i]\n represents the price of the \ni\nth\n ice cream base flavor.\n\n\ntoppingCosts\n, an integer array of length \nm\n, where each \ntoppingCosts[i]\n is the price of \none\n of the \ni\nth\n topping.\n\n\ntarget\n, an integer representing your target price for dessert.\n\n\n\n\nYou want to make a dessert with a total cost as close to \ntarget\n as possible.\n\n\nReturn \nthe closest possible cost of the dessert to \ntarget\n. If there are multiple, return \nthe \nlower\n one.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n baseCosts = [1,7], toppingCosts = [3,4], target = 10\n\nOutput:\n 10\n\nExplanation:\n Consider the following combination (all 0-indexed):\n- Choose base 1: cost 7\n- Take 1 of topping 0: cost 1 x 3 = 3\n- Take 0 of topping 1: cost 0 x 4 = 0\nTotal: 7 + 3 + 0 = 10.\n\n\n\nExample 2:\n\n\n\n\nInput:\n baseCosts = [2,3], toppingCosts = [4,5,100], target = 18\n\nOutput:\n 17\n\nExplanation:\n Consider the following combination (all 0-indexed):\n- Choose base 1: cost 3\n- Take 1 of topping 0: cost 1 x 4 = 4\n- Take 2 of topping 1: cost 2 x 5 = 10\n- Take 0 of topping 2: cost 0 x 100 = 0\nTotal: 3 + 4 + 10 + 0 = 17. You cannot make a dessert with a total cost of 18.\n\n\n\nExample 3:\n\n\n\n\nInput:\n baseCosts = [3,10], toppingCosts = [2,5], target = 9\n\nOutput:\n 8\n\nExplanation:\n It is possible to make desserts with cost 8 and 10. Return 8 as it is the lower cost.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == baseCosts.length\n\n\nm == toppingCosts.length\n\n\n1 <= n, m <= 10\n\n\n1 <= baseCosts[i], toppingCosts[i] <= 10\n4\n\n\n1 <= target <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1769,
        "slug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
        "url": "https://leetcode.com/problems/minimum-number-of-operations-to-move-all-balls-to-each-box/",
        "titulo": "Minimum Number of Operations to Move All Balls to Each Box",
        "enunciado": "You have \nn\n boxes. You are given a binary string \nboxes\n of length \nn\n, where \nboxes[i]\n is \n'0'\n if the \ni\nth\n box is \nempty\n, and \n'1'\n if it contains \none\n ball.\n\n\nIn one operation, you can move \none\n ball from a box to an adjacent box. Box \ni\n is adjacent to box \nj\n if \nabs(i - j) == 1\n. Note that after doing so, there may be more than one ball in some boxes.\n\n\nReturn an array \nanswer\n of size \nn\n, where \nanswer[i]\n is the \nminimum\n number of operations needed to move all the balls to the \ni\nth\n box.\n\n\nEach \nanswer[i]\n is calculated considering the \ninitial\n state of the boxes.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n boxes = \"110\"\n\nOutput:\n [1,1,3]\n\nExplanation:\n The answer for each box is as follows:\n1) First box: you will have to move one ball from the second box to the first box in one operation.\n2) Second box: you will have to move one ball from the first box to the second box in one operation.\n3) Third box: you will have to move one ball from the first box to the third box in two operations, and move one ball from the second box to the third box in one operation.\n\n\n\nExample 2:\n\n\n\n\nInput:\n boxes = \"001011\"\n\nOutput:\n [11,8,5,4,3,4]\n\n\n \n\n\nConstraints:\n\n\n\n\nn == boxes.length\n\n\n1 <= n <= 2000\n\n\nboxes[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1781,
        "slug": "sum-of-beauty-of-all-substrings",
        "url": "https://leetcode.com/problems/sum-of-beauty-of-all-substrings/",
        "titulo": "Sum of Beauty of All Substrings",
        "enunciado": "The \nbeauty\n of a string is the difference in frequencies between the most frequent and least frequent characters.\n\n\n\n\nFor example, the beauty of \n\"abaacc\"\n is \n3 - 1 = 2\n.\n\n\n\n\nGiven a string \ns\n, return \nthe sum of \nbeauty\n of all of its substrings.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aabcb\"\n\nOutput:\n 5\n\nExplanation: \nThe substrings with non-zero beauty are [\"aab\",\"aabc\",\"aabcb\",\"abcb\",\"bcb\"], each with beauty equal to 1.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aabcbaa\"\n\nOutput:\n 17\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <=\n \n500\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1780,
        "slug": "check-if-number-is-a-sum-of-powers-of-three",
        "url": "https://leetcode.com/problems/check-if-number-is-a-sum-of-powers-of-three/",
        "titulo": "Check if Number is a Sum of Powers of Three",
        "enunciado": "Given an integer \nn\n, return \ntrue\n \nif it is possible to represent \nn\n as the sum of distinct powers of three.\n Otherwise, return \nfalse\n.\n\n\nAn integer \ny\n is a power of three if there exists an integer \nx\n such that \ny == 3\nx\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 12\n\nOutput:\n true\n\nExplanation:\n 12 = 3\n1\n + 3\n2\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 91\n\nOutput:\n true\n\nExplanation:\n 91 = 3\n0\n + 3\n2\n + 3\n4\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 21\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n7",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1760,
        "slug": "minimum-limit-of-balls-in-a-bag",
        "url": "https://leetcode.com/problems/minimum-limit-of-balls-in-a-bag/",
        "titulo": "Minimum Limit of Balls in a Bag",
        "enunciado": "You are given an integer array \nnums\n where the \ni\nth\n bag contains \nnums[i]\n balls. You are also given an integer \nmaxOperations\n.\n\n\nYou can perform the following operation at most \nmaxOperations\n times:\n\n\n\n\nTake any bag of balls and divide it into two new bags with a \npositive \nnumber of balls.\n\n\t\n\n\nFor example, a bag of \n5\n balls can become two new bags of \n1\n and \n4\n balls, or two new bags of \n2\n and \n3\n balls.\n\n\n\n\n\n\n\n\nYour penalty is the \nmaximum\n number of balls in a bag. You want to \nminimize\n your penalty after the operations.\n\n\nReturn \nthe minimum possible penalty after performing the operations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [9], maxOperations = 2\n\nOutput:\n 3\n\nExplanation:\n \n- Divide the bag with 9 balls into two bags of sizes 6 and 3. [\n9\n] -> [6,3].\n- Divide the bag with 6 balls into two bags of sizes 3 and 3. [\n6\n,3] -> [3,3,3].\nThe bag with the most number of balls has 3 balls, so your penalty is 3 and you should return 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,4,8,2], maxOperations = 4\n\nOutput:\n 2\n\nExplanation:\n\n- Divide the bag with 8 balls into two bags of sizes 4 and 4. [2,4,\n8\n,2] -> [2,4,4,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,\n4\n,4,4,2] -> [2,2,2,4,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,\n4\n,4,2] -> [2,2,2,2,2,4,2].\n- Divide the bag with 4 balls into two bags of sizes 2 and 2. [2,2,2,2,2,\n4\n,2] -> [2,2,2,2,2,2,2,2].\nThe bag with the most number of balls has 2 balls, so your penalty is 2, and you should return 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= maxOperations, nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1759,
        "slug": "count-number-of-homogenous-substrings",
        "url": "https://leetcode.com/problems/count-number-of-homogenous-substrings/",
        "titulo": "Count Number of Homogenous Substrings",
        "enunciado": "Given a string \ns\n, return \nthe number of \nhomogenous\n substrings of \ns\n.\n Since the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nA string is \nhomogenous\n if all the characters of the string are the same.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abbcccaa\"\n\nOutput:\n 13\n\nExplanation:\n The homogenous substrings are listed as below:\n\"a\"   appears 3 times.\n\"aa\"  appears 1 time.\n\"b\"   appears 2 times.\n\"bb\"  appears 1 time.\n\"c\"   appears 3 times.\n\"cc\"  appears 2 times.\n\"ccc\" appears 1 time.\n3 + 1 + 2 + 1 + 3 + 2 + 1 = 13.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"xy\"\n\nOutput:\n 2\n\nExplanation:\n The homogenous substrings are \"x\" and \"y\".\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"zzzzz\"\n\nOutput:\n 15\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase letters.",
        "temas": [
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1754,
        "slug": "largest-merge-of-two-strings",
        "url": "https://leetcode.com/problems/largest-merge-of-two-strings/",
        "titulo": "Largest Merge Of Two Strings",
        "enunciado": "You are given two strings \nword1\n and \nword2\n. You want to construct a string \nmerge\n in the following way: while either \nword1\n or \nword2\n are non-empty, choose \none\n of the following options:\n\n\n\n\nIf \nword1\n is non-empty, append the \nfirst\n character in \nword1\n to \nmerge\n and delete it from \nword1\n.\n\n\t\n\n\nFor example, if \nword1 = \"abc\" \nand \nmerge = \"dv\"\n, then after choosing this operation, \nword1 = \"bc\"\n and \nmerge = \"dva\"\n.\n\n\n\n\n\n\nIf \nword2\n is non-empty, append the \nfirst\n character in \nword2\n to \nmerge\n and delete it from \nword2\n.\n\t\n\n\nFor example, if \nword2 = \"abc\" \nand \nmerge = \"\"\n, then after choosing this operation, \nword2 = \"bc\"\n and \nmerge = \"a\"\n.\n\n\n\n\n\n\n\n\nReturn \nthe lexicographically \nlargest\n \nmerge\n you can construct\n.\n\n\nA string \na\n is lexicographically larger than a string \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, \na\n has a character strictly larger than the corresponding character in \nb\n. For example, \n\"abcd\"\n is lexicographically larger than \n\"abcc\"\n because the first position they differ is at the fourth character, and \nd\n is greater than \nc\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word1 = \"cabaa\", word2 = \"bcaaa\"\n\nOutput:\n \"cbcabaaaaa\"\n\nExplanation:\n One way to get the lexicographically largest merge is:\n- Take from word1: merge = \"c\", word1 = \"abaa\", word2 = \"bcaaa\"\n- Take from word2: merge = \"cb\", word1 = \"abaa\", word2 = \"caaa\"\n- Take from word2: merge = \"cbc\", word1 = \"abaa\", word2 = \"aaa\"\n- Take from word1: merge = \"cbca\", word1 = \"baa\", word2 = \"aaa\"\n- Take from word1: merge = \"cbcab\", word1 = \"aa\", word2 = \"aaa\"\n- Append the remaining 5 a's from word1 and word2 at the end of merge.\n\n\n\nExample 2:\n\n\n\n\nInput:\n word1 = \"abcabc\", word2 = \"abdcaba\"\n\nOutput:\n \"abdcabcabcaba\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word1.length, word2.length <= 3000\n\n\nword1\n and \nword2\n consist only of lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 1753,
        "slug": "maximum-score-from-removing-stones",
        "url": "https://leetcode.com/problems/maximum-score-from-removing-stones/",
        "titulo": "Maximum Score From Removing Stones",
        "enunciado": "You are playing a solitaire game with \nthree piles\n of stones of sizes \na\n​​​​​​, \nb\n,​​​​​​ and \nc\n​​​​​​ respectively. Each turn you choose two \ndifferent non-empty \npiles, take one stone from each, and add \n1\n point to your score. The game stops when there are \nfewer than two non-empty\n piles (meaning there are no more available moves).\n\n\nGiven three integers \na\n​​​​​, \nb\n,​​​​​ and \nc\n​​​​​, return \nthe\n \nmaximum\n \nscore\n you can get.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = 2, b = 4, c = 6\n\nOutput:\n 6\n\nExplanation:\n The starting state is (2, 4, 6). One optimal set of moves is:\n- Take from 1st and 3rd piles, state is now (1, 4, 5)\n- Take from 1st and 3rd piles, state is now (0, 4, 4)\n- Take from 2nd and 3rd piles, state is now (0, 3, 3)\n- Take from 2nd and 3rd piles, state is now (0, 2, 2)\n- Take from 2nd and 3rd piles, state is now (0, 1, 1)\n- Take from 2nd and 3rd piles, state is now (0, 0, 0)\nThere are fewer than two non-empty piles, so the game ends. Total: 6 points.\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = 4, b = 4, c = 6\n\nOutput:\n 7\n\nExplanation:\n The starting state is (4, 4, 6). One optimal set of moves is:\n- Take from 1st and 2nd piles, state is now (3, 3, 6)\n- Take from 1st and 3rd piles, state is now (2, 3, 5)\n- Take from 1st and 3rd piles, state is now (1, 3, 4)\n- Take from 1st and 3rd piles, state is now (0, 3, 3)\n- Take from 2nd and 3rd piles, state is now (0, 2, 2)\n- Take from 2nd and 3rd piles, state is now (0, 1, 1)\n- Take from 2nd and 3rd piles, state is now (0, 0, 0)\nThere are fewer than two non-empty piles, so the game ends. Total: 7 points.\n\n\n\nExample 3:\n\n\n\n\nInput:\n a = 1, b = 8, c = 8\n\nOutput:\n 8\n\nExplanation:\n One optimal set of moves is to take from the 2nd and 3rd piles for 8 turns until they are empty.\nAfter that, there are fewer than two non-empty piles, so the game ends.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a, b, c <= 10\n5",
        "temas": [
            "Math",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1765,
        "slug": "map-of-highest-peak",
        "url": "https://leetcode.com/problems/map-of-highest-peak/",
        "titulo": "Map of Highest Peak",
        "enunciado": "You are given an integer matrix \nisWater\n of size \nm x n\n that represents a map of \nland\n and \nwater\n cells.\n\n\n\n\nIf \nisWater[i][j] == 0\n, cell \n(i, j)\n is a \nland\n cell.\n\n\nIf \nisWater[i][j] == 1\n, cell \n(i, j)\n is a \nwater\n cell.\n\n\n\n\nYou must assign each cell a height in a way that follows these rules:\n\n\n\n\nThe height of each cell must be non-negative.\n\n\nIf the cell is a \nwater\n cell, its height must be \n0\n.\n\n\nAny two adjacent cells must have an absolute height difference of \nat most\n \n1\n. A cell is adjacent to another cell if the former is directly north, east, south, or west of the latter (i.e., their sides are touching).\n\n\n\n\nFind an assignment of heights such that the maximum height in the matrix is \nmaximized\n.\n\n\nReturn \nan integer matrix \nheight\n of size \nm x n\n where \nheight[i][j]\n is cell \n(i, j)\n's height. If there are multiple solutions, return \nany\n of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n isWater = [[0,1],[0,0]]\n\nOutput:\n [[1,0],[2,1]]\n\nExplanation:\n The image shows the assigned heights of each cell.\nThe blue cell is the water cell, and the green cells are the land cells.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n isWater = [[0,0,1],[1,0,0],[0,0,0]]\n\nOutput:\n [[1,1,0],[0,1,1],[1,2,2]]\n\nExplanation:\n A height of 2 is the maximum possible height of any assignment.\nAny height assignment that has a maximum height of 2 while still meeting the rules will also be accepted.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == isWater.length\n\n\nn == isWater[i].length\n\n\n1 <= m, n <= 1000\n\n\nisWater[i][j]\n is \n0\n or \n1\n.\n\n\nThere is at least \none\n water cell.\n\n\n\n\n \n\n\nNote:\n This question is the same as 542: \nhttps://leetcode.com/problems/01-matrix/",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1764,
        "slug": "form-array-by-concatenating-subarrays-of-another-array",
        "url": "https://leetcode.com/problems/form-array-by-concatenating-subarrays-of-another-array/",
        "titulo": "Form Array by Concatenating Subarrays of Another Array",
        "enunciado": "You are given a 2D integer array \ngroups\n of length \nn\n. You are also given an integer array \nnums\n.\n\n\nYou are asked if you can choose \nn\n \ndisjoint \nsubarrays from the array \nnums\n such that the \ni\nth\n subarray is equal to \ngroups[i]\n (\n0-indexed\n), and if \ni > 0\n, the \n(i-1)\nth\n subarray appears \nbefore\n the \ni\nth\n subarray in \nnums\n (i.e. the subarrays must be in the same order as \ngroups\n).\n\n\nReturn \ntrue\n \nif you can do this task, and\n \nfalse\n \notherwise\n.\n\n\nNote that the subarrays are \ndisjoint\n if and only if there is no index \nk\n such that \nnums[k]\n belongs to more than one subarray. A subarray is a contiguous sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n groups = [[1,-1,-1],[3,-2,0]], nums = [1,-1,0,1,-1,-1,3,-2,0]\n\nOutput:\n true\n\nExplanation:\n You can choose the 0\nth\n subarray as [1,-1,0,\n1,-1,-1\n,3,-2,0] and the 1\nst\n one as [1,-1,0,1,-1,-1,\n3,-2,0\n].\nThese subarrays are disjoint as they share no common nums[k] element.\n\n\n\nExample 2:\n\n\n\n\nInput:\n groups = [[10,-2],[1,2,3,4]], nums = [1,2,3,4,10,-2]\n\nOutput:\n false\n\nExplanation: \nNote that choosing the subarrays [\n1,2,3,4\n,10,-2] and [1,2,3,4,\n10,-2\n] is incorrect because they are not in the same order as in groups.\n[10,-2] must come before [1,2,3,4].\n\n\n\nExample 3:\n\n\n\n\nInput:\n groups = [[1,2,3],[3,4]], nums = [7,7,1,2,3,4,7,7]\n\nOutput:\n false\n\nExplanation: \nNote that choosing the subarrays [7,7,\n1,2,3\n,4,7,7] and [7,7,1,2,\n3,4\n,7,7] is invalid because they are not disjoint.\nThey share a common elements nums[4] (0-indexed).\n\n\n\n \n\n\nConstraints:\n\n\n\n\ngroups.length == n\n\n\n1 <= n <= 10\n3\n\n\n1 <= groups[i].length, sum(groups[i].length) <= 10\n3\n\n\n1 <= nums.length <= 10\n3\n\n\n-10\n7\n <= groups[i][j], nums[k] <= 10\n7",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "String Matching"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1744,
        "slug": "can-you-eat-your-favorite-candy-on-your-favorite-day",
        "url": "https://leetcode.com/problems/can-you-eat-your-favorite-candy-on-your-favorite-day/",
        "titulo": "Can You Eat Your Favorite Candy on Your Favorite Day?",
        "enunciado": "You are given a \n(0-indexed)\n array of positive integers \ncandiesCount\n where \ncandiesCount[i]\n represents the number of candies of the \ni\nth\n type you have. You are also given a 2D array \nqueries\n where \nqueries[i] = [favoriteType\ni\n, favoriteDay\ni\n, dailyCap\ni\n]\n.\n\n\nYou play a game with the following rules:\n\n\n\n\nYou start eating candies on day \n0\n.\n\n\nYou \ncannot\n eat \nany\n candy of type \ni\n unless you have eaten \nall\n candies of type \ni - 1\n.\n\n\nYou must eat \nat least\n \none\n candy per day until you have eaten all the candies.\n\n\n\n\nConstruct a boolean array \nanswer\n such that \nanswer.length == queries.length\n and \nanswer[i]\n is \ntrue\n if you can eat a candy of type \nfavoriteType\ni\n on day \nfavoriteDay\ni\n without eating \nmore than\n \ndailyCap\ni\n candies on \nany\n day, and \nfalse\n otherwise. Note that you can eat different types of candy on the same day, provided that you follow rule 2.\n\n\nReturn \nthe constructed array \nanswer\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n candiesCount = [7,4,5,3,8], queries = [[0,2,2],[4,2,4],[2,13,1000000000]]\n\nOutput:\n [true,false,true]\n\nExplanation:\n\n1- If you eat 2 candies (type 0) on day 0 and 2 candies (type 0) on day 1, you will eat a candy of type 0 on day 2.\n2- You can eat at most 4 candies each day.\n   If you eat 4 candies every day, you will eat 4 candies (type 0) on day 0 and 4 candies (type 0 and type 1) on day 1.\n   On day 2, you can only eat 4 candies (type 1 and type 2), so you cannot eat a candy of type 4 on day 2.\n3- If you eat 1 candy each day, you will eat a candy of type 2 on day 13.\n\n\n\nExample 2:\n\n\n\n\nInput:\n candiesCount = [5,2,6,4,1], queries = [[3,1,2],[4,10,3],[3,10,100],[4,100,30],[1,3,1]]\n\nOutput:\n [false,true,true,false,false]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= candiesCount.length <= 10\n5\n\n\n1 <= candiesCount[i] <= 10\n5\n\n\n1 <= queries.length <= 10\n5\n\n\nqueries[i].length == 3\n\n\n0 <= favoriteType\ni\n < candiesCount.length\n\n\n0 <= favoriteDay\ni\n <= 10\n9\n\n\n1 <= dailyCap\ni\n <= 10\n9",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1743,
        "slug": "restore-the-array-from-adjacent-pairs",
        "url": "https://leetcode.com/problems/restore-the-array-from-adjacent-pairs/",
        "titulo": "Restore the Array From Adjacent Pairs",
        "enunciado": "There is an integer array \nnums\n that consists of \nn\n \nunique \nelements, but you have forgotten it. However, you do remember every pair of adjacent elements in \nnums\n.\n\n\nYou are given a 2D integer array \nadjacentPairs\n of size \nn - 1\n where each \nadjacentPairs[i] = [u\ni\n, v\ni\n]\n indicates that the elements \nu\ni\n and \nv\ni\n are adjacent in \nnums\n.\n\n\nIt is guaranteed that every adjacent pair of elements \nnums[i]\n and \nnums[i+1]\n will exist in \nadjacentPairs\n, either as \n[nums[i], nums[i+1]]\n or \n[nums[i+1], nums[i]]\n. The pairs can appear \nin any order\n.\n\n\nReturn \nthe original array \nnums\n. If there are multiple solutions, return \nany of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n adjacentPairs = [[2,1],[3,4],[3,2]]\n\nOutput:\n [1,2,3,4]\n\nExplanation:\n This array has all its adjacent pairs in adjacentPairs.\nNotice that adjacentPairs[i] may not be in left-to-right order.\n\n\n\nExample 2:\n\n\n\n\nInput:\n adjacentPairs = [[4,-2],[1,4],[-3,1]]\n\nOutput:\n [-2,4,1,-3]\n\nExplanation:\n There can be negative numbers.\nAnother solution is [-3,1,4,-2], which would also be accepted.\n\n\n\nExample 3:\n\n\n\n\nInput:\n adjacentPairs = [[100000,-100000]]\n\nOutput:\n [100000,-100000]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nnums.length == n\n\n\nadjacentPairs.length == n - 1\n\n\nadjacentPairs[i].length == 2\n\n\n2 <= n <= 10\n5\n\n\n-10\n5\n <= nums[i], u\ni\n, v\ni\n <= 10\n5\n\n\nThere exists some \nnums\n that has \nadjacentPairs\n as its pairs.",
        "temas": [
            "Array",
            "Hash Table",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1738,
        "slug": "find-kth-largest-xor-coordinate-value",
        "url": "https://leetcode.com/problems/find-kth-largest-xor-coordinate-value/",
        "titulo": "Find Kth Largest XOR Coordinate Value",
        "enunciado": "You are given a 2D \nmatrix\n of size \nm x n\n, consisting of non-negative integers. You are also given an integer \nk\n.\n\n\nThe \nvalue\n of coordinate \n(a, b)\n of the matrix is the XOR of all \nmatrix[i][j]\n where \n0 <= i <= a < m\n and \n0 <= j <= b < n\n \n(0-indexed)\n.\n\n\nFind the \nk\nth\n largest value \n(1-indexed)\n of all the coordinates of \nmatrix\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n matrix = [[5,2],[1,6]], k = 1\n\nOutput:\n 7\n\nExplanation:\n The value of coordinate (0,1) is 5 XOR 2 = 7, which is the largest value.\n\n\n\nExample 2:\n\n\n\n\nInput:\n matrix = [[5,2],[1,6]], k = 2\n\nOutput:\n 5\n\nExplanation:\n The value of coordinate (0,0) is 5 = 5, which is the 2nd largest value.\n\n\n\nExample 3:\n\n\n\n\nInput:\n matrix = [[5,2],[1,6]], k = 3\n\nOutput:\n 4\n\nExplanation:\n The value of coordinate (1,0) is 5 XOR 1 = 4, which is the 3rd largest value.\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 1000\n\n\n0 <= matrix[i][j] <= 10\n6\n\n\n1 <= k <= m * n",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Bit Manipulation",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix",
            "Prefix Sum",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1737,
        "slug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
        "url": "https://leetcode.com/problems/change-minimum-characters-to-satisfy-one-of-three-conditions/",
        "titulo": "Change Minimum Characters to Satisfy One of Three Conditions",
        "enunciado": "You are given two strings \na\n and \nb\n that consist of lowercase letters. In one operation, you can change any character in \na\n or \nb\n to \nany lowercase letter\n.\n\n\nYour goal is to satisfy \none\n of the following three conditions:\n\n\n\n\nEvery\n letter in \na\n is \nstrictly less\n than \nevery\n letter in \nb\n in the alphabet.\n\n\nEvery\n letter in \nb\n is \nstrictly less\n than \nevery\n letter in \na\n in the alphabet.\n\n\nBoth\n \na\n and \nb\n consist of \nonly one\n distinct letter.\n\n\n\n\nReturn \nthe \nminimum\n number of operations needed to achieve your goal.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = \"aba\", b = \"caa\"\n\nOutput:\n 2\n\nExplanation:\n Consider the best way to make each condition true:\n1) Change b to \"ccc\" in 2 operations, then every letter in a is less than every letter in b.\n2) Change a to \"bbb\" and b to \"aaa\" in 3 operations, then every letter in b is less than every letter in a.\n3) Change a to \"aaa\" and b to \"aaa\" in 2 operations, then a and b consist of one distinct letter.\nThe best way was done in 2 operations (either condition 1 or condition 3).\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = \"dabadd\", b = \"cda\"\n\nOutput:\n 3\n\nExplanation:\n The best way is to make condition 1 true by changing b to \"eee\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a.length, b.length <= 10\n5\n\n\na\n and \nb\n consist only of lowercase letters.",
        "temas": [
            "Hash Table",
            "String",
            "Counting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1750,
        "slug": "minimum-length-of-string-after-deleting-similar-ends",
        "url": "https://leetcode.com/problems/minimum-length-of-string-after-deleting-similar-ends/",
        "titulo": "Minimum Length of String After Deleting Similar Ends",
        "enunciado": "Given a string \ns\n consisting only of characters \n'a'\n, \n'b'\n, and \n'c'\n. You are asked to apply the following algorithm on the string any number of times:\n\n\n\n\nPick a \nnon-empty\n prefix from the string \ns\n where all the characters in the prefix are equal.\n\n\nPick a \nnon-empty\n suffix from the string \ns\n where all the characters in this suffix are equal.\n\n\nThe prefix and the suffix should not intersect at any index.\n\n\nThe characters from the prefix and suffix must be the same.\n\n\nDelete both the prefix and the suffix.\n\n\n\n\nReturn \nthe \nminimum length\n of \ns\n \nafter performing the above operation any number of times (possibly zero times)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"ca\"\n\nOutput:\n 2\n\nExplanation: \nYou can't remove any characters, so the string stays as is.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cabaabac\"\n\nOutput:\n 0\n\nExplanation:\n An optimal sequence of operations is:\n- Take prefix = \"c\" and suffix = \"c\" and remove them, s = \"abaaba\".\n- Take prefix = \"a\" and suffix = \"a\" and remove them, s = \"baab\".\n- Take prefix = \"b\" and suffix = \"b\" and remove them, s = \"aa\".\n- Take prefix = \"a\" and suffix = \"a\" and remove them, s = \"\".\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"aabccabba\"\n\nOutput:\n 3\n\nExplanation:\n An optimal sequence of operations is:\n- Take prefix = \"aa\" and suffix = \"a\" and remove them, s = \"bccabb\".\n- Take prefix = \"b\" and suffix = \"bb\" and remove them, s = \"cca\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n only consists of characters \n'a'\n, \n'b'\n, and \n'c'\n.",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 1749,
        "slug": "maximum-absolute-sum-of-any-subarray",
        "url": "https://leetcode.com/problems/maximum-absolute-sum-of-any-subarray/",
        "titulo": "Maximum Absolute Sum of Any Subarray",
        "enunciado": "You are given an integer array \nnums\n. The \nabsolute sum\n of a subarray \n[nums\nl\n, nums\nl+1\n, ..., nums\nr-1\n, nums\nr\n]\n is \nabs(nums\nl\n + nums\nl+1\n + ... + nums\nr-1\n + nums\nr\n)\n.\n\n\nReturn \nthe \nmaximum\n absolute sum of any \n(possibly empty)\n subarray of \nnums\n.\n\n\nNote that \nabs(x)\n is defined as follows:\n\n\n\n\nIf \nx\n is a negative integer, then \nabs(x) = -x\n.\n\n\nIf \nx\n is a non-negative integer, then \nabs(x) = x\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,-3,2,3,-4]\n\nOutput:\n 5\n\nExplanation:\n The subarray [2,3] has absolute sum = abs(2+3) = abs(5) = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,-5,1,-4,3,-2]\n\nOutput:\n 8\n\nExplanation:\n The subarray [-5,1,-4] has absolute sum = abs(-5+1-4) = abs(-8) = 8.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n4\n <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1727,
        "slug": "largest-submatrix-with-rearrangements",
        "url": "https://leetcode.com/problems/largest-submatrix-with-rearrangements/",
        "titulo": "Largest Submatrix With Rearrangements",
        "enunciado": "You are given a binary matrix \nmatrix\n of size \nm x n\n, and you are allowed to rearrange the \ncolumns\n of the \nmatrix\n in any order.\n\n\nReturn \nthe area of the largest submatrix within \nmatrix\n where \nevery\n element of the submatrix is \n1\n after reordering the columns optimally.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[0,0,1],[1,1,1],[1,0,1]]\n\nOutput:\n 4\n\nExplanation:\n You can rearrange the columns as shown above.\nThe largest submatrix of 1s, in bold, has an area of 4.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[1,0,1,0,1]]\n\nOutput:\n 3\n\nExplanation:\n You can rearrange the columns as shown above.\nThe largest submatrix of 1s, in bold, has an area of 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n matrix = [[1,1,0],[1,0,1]]\n\nOutput:\n 2\n\nExplanation:\n Notice that you must rearrange entire columns, and there is no way to make a submatrix of 1s larger than an area of 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m * n <= 10\n5\n\n\nmatrix[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1722,
        "slug": "minimize-hamming-distance-after-swap-operations",
        "url": "https://leetcode.com/problems/minimize-hamming-distance-after-swap-operations/",
        "titulo": "Minimize Hamming Distance After Swap Operations",
        "enunciado": "You are given two integer arrays, \nsource\n and \ntarget\n, both of length \nn\n. You are also given an array \nallowedSwaps\n where each \nallowedSwaps[i] = [a\ni\n, b\ni\n]\n indicates that you are allowed to swap the elements at index \na\ni\n and index \nb\ni\n \n(0-indexed)\n of array \nsource\n. Note that you can swap elements at a specific pair of indices \nmultiple\n times and in \nany\n order.\n\n\nThe \nHamming distance\n of two arrays of the same length, \nsource\n and \ntarget\n, is the number of positions where the elements are different. Formally, it is the number of indices \ni\n for \n0 <= i <= n-1\n where \nsource[i] != target[i]\n \n(0-indexed)\n.\n\n\nReturn \nthe \nminimum Hamming distance\n of \nsource\n and \ntarget\n after performing \nany\n amount of swap operations on array \nsource\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n source = [1,2,3,4], target = [2,1,4,5], allowedSwaps = [[0,1],[2,3]]\n\nOutput:\n 1\n\nExplanation:\n source can be transformed the following way:\n- Swap indices 0 and 1: source = [\n2\n,\n1\n,3,4]\n- Swap indices 2 and 3: source = [2,1,\n4\n,\n3\n]\nThe Hamming distance of source and target is 1 as they differ in 1 position: index 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n source = [1,2,3,4], target = [1,3,2,4], allowedSwaps = []\n\nOutput:\n 2\n\nExplanation:\n There are no allowed swaps.\nThe Hamming distance of source and target is 2 as they differ in 2 positions: index 1 and index 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n source = [5,1,2,4,3], target = [1,5,4,2,3], allowedSwaps = [[0,4],[4,2],[1,3],[1,4]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == source.length == target.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= source[i], target[i] <= 10\n5\n\n\n0 <= allowedSwaps.length <= 10\n5\n\n\nallowedSwaps[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= n - 1\n\n\na\ni\n != b\ni",
        "temas": [
            "Array",
            "Depth-First Search",
            "Union Find"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1734,
        "slug": "decode-xored-permutation",
        "url": "https://leetcode.com/problems/decode-xored-permutation/",
        "titulo": "Decode XORed Permutation",
        "enunciado": "There is an integer array \nperm\n that is a permutation of the first \nn\n positive integers, where \nn\n is always \nodd\n.\n\n\nIt was encoded into another integer array \nencoded\n of length \nn - 1\n, such that \nencoded[i] = perm[i] XOR perm[i + 1]\n. For example, if \nperm = [1,3,2]\n, then \nencoded = [2,1]\n.\n\n\nGiven the \nencoded\n array, return \nthe original array\n \nperm\n. It is guaranteed that the answer exists and is unique.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n encoded = [3,1]\n\nOutput:\n [1,2,3]\n\nExplanation:\n If perm = [1,2,3], then encoded = [1 XOR 2,2 XOR 3] = [3,1]\n\n\n\nExample 2:\n\n\n\n\nInput:\n encoded = [6,5,4,6]\n\nOutput:\n [2,4,1,5,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= n < 10\n5\n\n\nn\n is odd.\n\n\nencoded.length == n - 1",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1733,
        "slug": "minimum-number-of-people-to-teach",
        "url": "https://leetcode.com/problems/minimum-number-of-people-to-teach/",
        "titulo": "Minimum Number of People to Teach",
        "enunciado": "On a social network consisting of \nm\n users and some friendships between users, two users can communicate with each other if they know a common language.\n\n\nYou are given an integer \nn\n, an array \nlanguages\n, and an array \nfriendships\n where:\n\n\n\n\nThere are \nn\n languages numbered \n1\n through \nn\n,\n\n\nlanguages[i]\n is the set of languages the \ni\n​​​​​​th\n​​​​ user knows, and\n\n\nfriendships[i] = [u\n​​​​​​i\n​​​, v\n​​​​​​i\n]\n denotes a friendship between the users \nu\n​​​​​\n​​​​​​i\n​​​​​ and \nv\ni\n.\n\n\n\n\nYou can choose \none\n language and teach it to some users so that all friends can communicate with each other. Return \nthe\n \nminimum\n \nnumber of users you need to teach.\n\nNote that friendships are not transitive, meaning if \nx\n is a friend of \ny\n and \ny\n is a friend of \nz\n, this doesn't guarantee that \nx\n is a friend of \nz\n.\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2, languages = [[1],[2],[1,2]], friendships = [[1,2],[1,3],[2,3]]\n\nOutput:\n 1\n\nExplanation:\n You can either teach user 1 the second language or user 2 the first language.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, languages = [[2],[1,3],[1,2],[3]], friendships = [[1,4],[1,2],[3,4],[2,3]]\n\nOutput:\n 2\n\nExplanation:\n Teach the third language to users 1 and 3, yielding two users to teach.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 500\n\n\nlanguages.length == m\n\n\n1 <= m <= 500\n\n\n1 <= languages[i].length <= n\n\n\n1 <= languages[i][j] <= n\n\n\n1 <= u\n​​​​​​i\n < v\n​​​​​​i\n <= languages.length\n\n\n1 <= friendships.length <= 500\n\n\nAll tuples \n(u\n​​​​​i, \nv\n​​​​​​i\n)\n are unique\n\n\nlanguages[i]\n contains only unique values",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1712,
        "slug": "ways-to-split-array-into-three-subarrays",
        "url": "https://leetcode.com/problems/ways-to-split-array-into-three-subarrays/",
        "titulo": "Ways to Split Array Into Three Subarrays",
        "enunciado": "A split of an integer array is \ngood\n if:\n\n\n\n\nThe array is split into three \nnon-empty\n contiguous subarrays - named \nleft\n, \nmid\n, \nright\n respectively from left to right.\n\n\nThe sum of the elements in \nleft\n is less than or equal to the sum of the elements in \nmid\n, and the sum of the elements in \nmid\n is less than or equal to the sum of the elements in \nright\n.\n\n\n\n\nGiven \nnums\n, an array of \nnon-negative\n integers, return \nthe number of \ngood\n ways to split\n \nnums\n. As the number may be too large, return it \nmodulo\n \n10\n9 \n+ 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,1]\n\nOutput:\n 1\n\nExplanation:\n The only good way to split nums is [1] [1] [1].\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,2,2,5,0]\n\nOutput:\n 3\n\nExplanation:\n There are three good ways of splitting nums:\n[1] [2] [2,2,5,0]\n[1] [2,2] [2,5,0]\n[1,2] [2,2] [5,0]\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,2,1]\n\nOutput:\n 0\n\nExplanation:\n There is no good way to split nums.\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1711,
        "slug": "count-good-meals",
        "url": "https://leetcode.com/problems/count-good-meals/",
        "titulo": "Count Good Meals",
        "enunciado": "A \ngood meal\n is a meal that contains \nexactly two different food items\n with a sum of deliciousness equal to a power of two.\n\n\nYou can pick \nany\n two different foods to make a good meal.\n\n\nGiven an array of integers \ndeliciousness\n where \ndeliciousness[i]\n is the deliciousness of the \ni\n​​​​​​th\n​​​​\n​​​​ item of food, return \nthe number of different \ngood meals\n you can make from this list modulo\n \n10\n9\n + 7\n.\n\n\nNote that items with different indices are considered different even if they have the same deliciousness value.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n deliciousness = [1,3,5,7,9]\n\nOutput:\n 4\n\nExplanation: \nThe good meals are (1,3), (1,7), (3,5) and, (7,9).\nTheir respective sums are 4, 8, 8, and 16, all of which are powers of 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n deliciousness = [1,1,1,3,3,3,7]\n\nOutput:\n 15\n\nExplanation: \nThe good meals are (1,1) with 3 ways, (1,3) with 9 ways, and (1,7) with 3 ways.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= deliciousness.length <= 10\n5\n\n\n0 <= deliciousness[i] <= 2\n20",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1705,
        "slug": "maximum-number-of-eaten-apples",
        "url": "https://leetcode.com/problems/maximum-number-of-eaten-apples/",
        "titulo": "Maximum Number of Eaten Apples",
        "enunciado": "There is a special kind of apple tree that grows apples every day for \nn\n days. On the \ni\nth\n day, the tree grows \napples[i]\n apples that will rot after \ndays[i]\n days, that is on day \ni + days[i]\n the apples will be rotten and cannot be eaten. On some days, the apple tree does not grow any apples, which are denoted by \napples[i] == 0\n and \ndays[i] == 0\n.\n\n\nYou decided to eat \nat most\n one apple a day (to keep the doctors away). Note that you can keep eating after the first \nn\n days.\n\n\nGiven two integer arrays \ndays\n and \napples\n of length \nn\n, return \nthe maximum number of apples you can eat.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n apples = [1,2,3,5,2], days = [3,2,1,4,2]\n\nOutput:\n 7\n\nExplanation:\n You can eat 7 apples:\n- On the first day, you eat an apple that grew on the first day.\n- On the second day, you eat an apple that grew on the second day.\n- On the third day, you eat an apple that grew on the second day. After this day, the apples that grew on the third day rot.\n- On the fourth to the seventh days, you eat apples that grew on the fourth day.\n\n\n\nExample 2:\n\n\n\n\nInput:\n apples = [3,0,0,0,0,2], days = [3,0,0,0,0,2]\n\nOutput:\n 5\n\nExplanation:\n You can eat 5 apples:\n- On the first to the third day you eat apples that grew on the first day.\n- Do nothing on the fouth and fifth days.\n- On the sixth and seventh days you eat apples that grew on the sixth day.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == apples.length == days.length\n\n\n1 <= n <= 2 * 10\n4\n\n\n0 <= apples[i], days[i] <= 2 * 10\n4\n\n\ndays[i] = 0\n if and only if \napples[i] = 0\n.",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1718,
        "slug": "construct-the-lexicographically-largest-valid-sequence",
        "url": "https://leetcode.com/problems/construct-the-lexicographically-largest-valid-sequence/",
        "titulo": "Construct the Lexicographically Largest Valid Sequence",
        "enunciado": "Given an integer \nn\n, find a sequence with elements in the range \n[1, n]\n that satisfies all of the following:\n\n\n\n\nThe integer \n1\n occurs once in the sequence.\n\n\nEach integer between \n2\n and \nn\n occurs twice in the sequence.\n\n\nFor every integer \ni\n between \n2\n and \nn\n, the \ndistance\n between the two occurrences of \ni\n is exactly \ni\n.\n\n\n\n\nThe \ndistance\n between two numbers on the sequence, \na[i]\n and \na[j]\n, is the absolute difference of their indices, \n|j - i|\n.\n\n\nReturn \nthe \nlexicographically largest\n sequence\n. It is guaranteed that under the given constraints, there is always a solution. \n\n\nA sequence \na\n is lexicographically larger than a sequence \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, sequence \na\n has a number greater than the corresponding number in \nb\n. For example, \n[0,1,9,0]\n is lexicographically larger than \n[0,1,5,6]\n because the first position they differ is at the third number, and \n9\n is greater than \n5\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n [3,1,2,3,2]\n\nExplanation:\n [2,3,2,1,3] is also a valid sequence, but [3,1,2,3,2] is the lexicographically largest valid sequence.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 5\n\nOutput:\n [5,3,1,4,3,5,2,4,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 20",
        "temas": [
            "Array",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1717,
        "slug": "maximum-score-from-removing-substrings",
        "url": "https://leetcode.com/problems/maximum-score-from-removing-substrings/",
        "titulo": "Maximum Score From Removing Substrings",
        "enunciado": "You are given a string \ns\n and two integers \nx\n and \ny\n. You can perform two types of operations any number of times.\n\n\n\n\nRemove substring \n\"ab\"\n and gain \nx\n points.\n\n\t\n\n\nFor example, when removing \n\"ab\"\n from \n\"c\nab\nxbae\"\n it becomes \n\"cxbae\"\n.\n\n\n\n\n\n\nRemove substring \n\"ba\"\n and gain \ny\n points.\n\t\n\n\nFor example, when removing \n\"ba\"\n from \n\"cabx\nba\ne\"\n it becomes \n\"cabxe\"\n.\n\n\n\n\n\n\n\n\nReturn \nthe maximum points you can gain after applying the above operations on\n \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"cdbcbbaaabab\", x = 4, y = 5\n\nOutput:\n 19\n\nExplanation:\n\n- Remove the \"ba\" underlined in \"cdbcbbaaa\nba\nb\". Now, s = \"cdbcbbaaab\" and 5 points are added to the score.\n- Remove the \"ab\" underlined in \"cdbcbbaa\nab\n\". Now, s = \"cdbcbbaa\" and 4 points are added to the score.\n- Remove the \"ba\" underlined in \"cdbcb\nba\na\". Now, s = \"cdbcba\" and 5 points are added to the score.\n- Remove the \"ba\" underlined in \"cdbc\nba\n\". Now, s = \"cdbc\" and 5 points are added to the score.\nTotal score = 5 + 4 + 5 + 5 = 19.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aabbaaxybbaabb\", x = 5, y = 4\n\nOutput:\n 20\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\n1 <= x, y <= 10\n4\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "String",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1696,
        "slug": "jump-game-vi",
        "url": "https://leetcode.com/problems/jump-game-vi/",
        "titulo": "Jump Game VI",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n and an integer \nk\n.\n\n\nYou are initially standing at index \n0\n. In one move, you can jump at most \nk\n steps forward without going outside the boundaries of the array. That is, you can jump from index \ni\n to any index in the range \n[i + 1, min(n - 1, i + k)]\n \ninclusive\n.\n\n\nYou want to reach the last index of the array (index \nn - 1\n). Your \nscore\n is the \nsum\n of all \nnums[j]\n for each index \nj\n you visited in the array.\n\n\nReturn \nthe \nmaximum score\n you can get\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [\n1\n,\n-1\n,-2,\n4\n,-7,\n3\n], k = 2\n\nOutput:\n 7\n\nExplanation:\n You can choose your jumps forming the subsequence [1,-1,4,3] (underlined above). The sum is 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [\n10\n,-5,-2,\n4\n,0,\n3\n], k = 3\n\nOutput:\n 17\n\nExplanation:\n You can choose your jumps forming the subsequence [10,4,3] (underlined above). The sum is 17.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,-5,-20,4,-1,3,-6,-3], k = 2\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length, k <= 10\n5\n\n\n-10\n4\n <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Queue",
            "Heap (Priority Queue)",
            "Monotonic Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1695,
        "slug": "maximum-erasure-value",
        "url": "https://leetcode.com/problems/maximum-erasure-value/",
        "titulo": "Maximum Erasure Value",
        "enunciado": "You are given an array of positive integers \nnums\n and want to erase a subarray containing \nunique elements\n. The \nscore\n you get by erasing the subarray is equal to the \nsum\n of its elements.\n\n\nReturn \nthe \nmaximum score\n you can get by erasing \nexactly one\n subarray.\n\n\nAn array \nb\n is called to be a \nsubarray\n of \na\n if it forms a contiguous subsequence of \na\n, that is, if it is equal to \na[l],a[l+1],...,a[r]\n for some \n(l,r)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,2,4,5,6]\n\nOutput:\n 17\n\nExplanation:\n The optimal subarray here is [2,4,5,6].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,2,1,2,5,2,1,2,5]\n\nOutput:\n 8\n\nExplanation:\n The optimal subarray here is [5,2,1] or [1,2,5].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1690,
        "slug": "stone-game-vii",
        "url": "https://leetcode.com/problems/stone-game-vii/",
        "titulo": "Stone Game VII",
        "enunciado": "Alice and Bob take turns playing a game, with \nAlice starting first\n.\n\n\nThere are \nn\n stones arranged in a row. On each player's turn, they can \nremove\n either the leftmost stone or the rightmost stone from the row and receive points equal to the \nsum\n of the remaining stones' values in the row. The winner is the one with the higher score when there are no stones left to remove.\n\n\nBob found that he will always lose this game (poor Bob, he always loses), so he decided to \nminimize the score's difference\n. Alice's goal is to \nmaximize the difference\n in the score.\n\n\nGiven an array of integers \nstones\n where \nstones[i]\n represents the value of the \ni\nth\n stone \nfrom the left\n, return \nthe \ndifference\n in Alice and Bob's score if they both play \noptimally\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n stones = [5,3,1,4,2]\n\nOutput:\n 6\n\nExplanation:\n \n- Alice removes 2 and gets 5 + 3 + 1 + 4 = 13 points. Alice = 13, Bob = 0, stones = [5,3,1,4].\n- Bob removes 5 and gets 3 + 1 + 4 = 8 points. Alice = 13, Bob = 8, stones = [3,1,4].\n- Alice removes 3 and gets 1 + 4 = 5 points. Alice = 18, Bob = 8, stones = [1,4].\n- Bob removes 1 and gets 4 points. Alice = 18, Bob = 12, stones = [4].\n- Alice removes 4 and gets 0 points. Alice = 18, Bob = 12, stones = [].\nThe score difference is 18 - 12 = 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n stones = [7,90,5,1,100,10,10,2]\n\nOutput:\n 122\n\n\n \n\n\nConstraints:\n\n\n\n\nn == stones.length\n\n\n2 <= n <= 1000\n\n\n1 <= stones[i] <= 1000",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1689,
        "slug": "partitioning-into-minimum-number-of-deci-binary-numbers",
        "url": "https://leetcode.com/problems/partitioning-into-minimum-number-of-deci-binary-numbers/",
        "titulo": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
        "enunciado": "A decimal number is called \ndeci-binary\n if each of its digits is either \n0\n or \n1\n without any leading zeros. For example, \n101\n and \n1100\n are \ndeci-binary\n, while \n112\n and \n3001\n are not.\n\n\nGiven a string \nn\n that represents a positive decimal integer, return \nthe \nminimum\n number of positive \ndeci-binary\n numbers needed so that they sum up to \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = \"32\"\n\nOutput:\n 3\n\nExplanation:\n 10 + 11 + 11 = 32\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = \"82734\"\n\nOutput:\n 8\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = \"27346209830709182346\"\n\nOutput:\n 9\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n.length <= 10\n5\n\n\nn\n consists of only digits.\n\n\nn\n does not contain any leading zeros and represents a positive integer.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1702,
        "slug": "maximum-binary-string-after-change",
        "url": "https://leetcode.com/problems/maximum-binary-string-after-change/",
        "titulo": "Maximum Binary String After Change",
        "enunciado": "You are given a binary string \nbinary\n consisting of only \n0\n's or \n1\n's. You can apply each of the following operations any number of times:\n\n\n\n\nOperation 1: If the number contains the substring \n\"00\"\n, you can replace it with \n\"10\"\n.\n\n\t\n\n\nFor example, \n\"\n00\n010\" -> \"\n10\n010\n\"\n\n\n\n\n\n\nOperation 2: If the number contains the substring \n\"10\"\n, you can replace it with \n\"01\"\n.\n\t\n\n\nFor example, \n\"000\n10\n\" -> \"000\n01\n\"\n\n\n\n\n\n\n\n\nReturn the \nmaximum binary string\n you can obtain after any number of operations. Binary string \nx\n is greater than binary string \ny\n if \nx\n's decimal representation is greater than \ny\n's decimal representation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n binary = \"000110\"\n\nOutput:\n \"111011\"\n\nExplanation:\n A valid transformation sequence can be:\n\"0001\n10\n\" -> \"0001\n01\n\" \n\"\n00\n0101\" -> \"\n10\n0101\" \n\"1\n00\n101\" -> \"1\n10\n101\" \n\"110\n10\n1\" -> \"110\n01\n1\" \n\"11\n00\n11\" -> \"11\n10\n11\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n binary = \"01\"\n\nOutput:\n \"01\"\n\nExplanation:\n \"01\" cannot be transformed any further.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= binary.length <= 10\n5\n\n\nbinary\n consist of \n'0'\n and \n'1'\n.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1701,
        "slug": "average-waiting-time",
        "url": "https://leetcode.com/problems/average-waiting-time/",
        "titulo": "Average Waiting Time",
        "enunciado": "There is a restaurant with a single chef. You are given an array \ncustomers\n, where \ncustomers[i] = [arrival\ni\n, time\ni\n]:\n\n\n\n\narrival\ni\n is the arrival time of the \ni\nth\n customer. The arrival times are sorted in \nnon-decreasing\n order.\n\n\ntime\ni\n is the time needed to prepare the order of the \ni\nth\n customer.\n\n\n\n\nWhen a customer arrives, he gives the chef his order, and the chef starts preparing it once he is idle. The customer waits till the chef finishes preparing his order. The chef does not prepare food for more than one customer at a time. The chef prepares food for customers \nin the order they were given in the input\n.\n\n\nReturn \nthe \naverage\n waiting time of all customers\n. Solutions within \n10\n-5\n from the actual answer are considered accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n customers = [[1,2],[2,5],[4,3]]\n\nOutput:\n 5.00000\n\nExplanation:\n\n1) The first customer arrives at time 1, the chef takes his order and starts preparing it immediately at time 1, and finishes at time 3, so the waiting time of the first customer is 3 - 1 = 2.\n2) The second customer arrives at time 2, the chef takes his order and starts preparing it at time 3, and finishes at time 8, so the waiting time of the second customer is 8 - 2 = 6.\n3) The third customer arrives at time 4, the chef takes his order and starts preparing it at time 8, and finishes at time 11, so the waiting time of the third customer is 11 - 4 = 7.\nSo the average waiting time = (2 + 6 + 7) / 3 = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n customers = [[5,2],[5,4],[10,3],[20,1]]\n\nOutput:\n 3.25000\n\nExplanation:\n\n1) The first customer arrives at time 5, the chef takes his order and starts preparing it immediately at time 5, and finishes at time 7, so the waiting time of the first customer is 7 - 5 = 2.\n2) The second customer arrives at time 5, the chef takes his order and starts preparing it at time 7, and finishes at time 11, so the waiting time of the second customer is 11 - 5 = 6.\n3) The third customer arrives at time 10, the chef takes his order and starts preparing it at time 11, and finishes at time 14, so the waiting time of the third customer is 14 - 10 = 4.\n4) The fourth customer arrives at time 20, the chef takes his order and starts preparing it immediately at time 20, and finishes at time 21, so the waiting time of the fourth customer is 21 - 20 = 1.\nSo the average waiting time = (2 + 6 + 4 + 1) / 4 = 3.25.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= customers.length <= 10\n5\n\n\n1 <= arrival\ni\n, time\ni\n <= 10\n4\n\n\narrival\ni \n<= arrival\ni+1",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1680,
        "slug": "concatenation-of-consecutive-binary-numbers",
        "url": "https://leetcode.com/problems/concatenation-of-consecutive-binary-numbers/",
        "titulo": "Concatenation of Consecutive Binary Numbers",
        "enunciado": "Given an integer \nn\n, return \nthe \ndecimal value\n of the binary string formed by concatenating the binary representations of \n1\n to \nn\n in order, \nmodulo \n10\n9 \n+ 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\nExplanation: \n\"1\" in binary corresponds to the decimal value 1. \n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 27\n\nExplanation: \nIn binary, 1, 2, and 3 corresponds to \"1\", \"10\", and \"11\".\nAfter concatenating them, we have \"11011\", which corresponds to the decimal value 27.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 12\n\nOutput:\n 505379714\n\nExplanation\n: The concatenation results in \"1101110010111011110001001101010111100\".\nThe decimal value of that is 118505380540.\nAfter modulo 10\n9\n + 7, the result is 505379714.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5",
        "temas": [
            "Math",
            "Bit Manipulation",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1679,
        "slug": "max-number-of-k-sum-pairs",
        "url": "https://leetcode.com/problems/max-number-of-k-sum-pairs/",
        "titulo": "Max Number of K-Sum Pairs",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n.\n\n\nIn one operation, you can pick two numbers from the array whose sum equals \nk\n and remove them from the array.\n\n\nReturn \nthe maximum number of operations you can perform on the array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4], k = 5\n\nOutput:\n 2\n\nExplanation:\n Starting with nums = [1,2,3,4]:\n- Remove numbers 1 and 4, then nums = [2,3]\n- Remove numbers 2 and 3, then nums = []\nThere are no more pairs that sum up to 5, hence a total of 2 operations.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,1,3,4,3], k = 6\n\nOutput:\n 1\n\nExplanation:\n Starting with nums = [3,1,3,4,3]:\n- Remove the first two 3's, then nums = [1,4,3]\nThere are no more pairs that sum up to 6, hence a total of 1 operation.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1674,
        "slug": "minimum-moves-to-make-array-complementary",
        "url": "https://leetcode.com/problems/minimum-moves-to-make-array-complementary/",
        "titulo": "Minimum Moves to Make Array Complementary",
        "enunciado": "You are given an integer array \nnums\n of \neven\n length \nn\n and an integer \nlimit\n. In one move, you can replace any integer from \nnums\n with another integer between \n1\n and \nlimit\n, inclusive.\n\n\nThe array \nnums\n is \ncomplementary\n if for all indices \ni\n (\n0-indexed\n), \nnums[i] + nums[n - 1 - i]\n equals the same number. For example, the array \n[1,2,3,4]\n is complementary because for all indices \ni\n, \nnums[i] + nums[n - 1 - i] = 5\n.\n\n\nReturn the \nminimum\n number of moves required to make \nnums\n \ncomplementary\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,4,3], limit = 4\n\nOutput:\n 1\n\nExplanation:\n In 1 move, you can change nums to [1,2,\n2\n,3] (underlined elements are changed).\nnums[0] + nums[3] = 1 + 3 = 4.\nnums[1] + nums[2] = 2 + 2 = 4.\nnums[2] + nums[1] = 2 + 2 = 4.\nnums[3] + nums[0] = 3 + 1 = 4.\nTherefore, nums[i] + nums[n-1-i] = 4 for every i, so nums is complementary.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,2,1], limit = 2\n\nOutput:\n 2\n\nExplanation:\n In 2 moves, you can change nums to [\n2\n,2,2,\n2\n]. You cannot change any number to 3 since 3 > limit.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,1,2], limit = 2\n\nOutput:\n 0\n\nExplanation:\n nums is already complementary.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n2 <= n <= 10\n5\n\n\n1 <= nums[i] <= limit <= 10\n5\n\n\nn\n is even.",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1673,
        "slug": "find-the-most-competitive-subsequence",
        "url": "https://leetcode.com/problems/find-the-most-competitive-subsequence/",
        "titulo": "Find the Most Competitive Subsequence",
        "enunciado": "Given an integer array \nnums\n and a positive integer \nk\n, return \nthe most\n competitive\n subsequence of \nnums\n \nof size \nk\n.\n\n\nAn array's subsequence is a resulting sequence obtained by erasing some (possibly zero) elements from the array.\n\n\nWe define that a subsequence \na\n is more \ncompetitive\n than a subsequence \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, subsequence \na\n has a number \nless\n than the corresponding number in \nb\n. For example, \n[1,3,4]\n is more competitive than \n[1,3,5]\n because the first position they differ is at the final number, and \n4\n is less than \n5\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,5,2,6], k = 2\n\nOutput:\n [2,6]\n\nExplanation:\n Among the set of every possible subsequence: {[3,5], [3,2], [3,6], [5,2], [5,6], [2,6]}, [2,6] is the most competitive.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,4,3,3,5,4,9,6], k = 4\n\nOutput:\n [2,3,3,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n1 <= k <= nums.length",
        "temas": [
            "Array",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1686,
        "slug": "stone-game-vi",
        "url": "https://leetcode.com/problems/stone-game-vi/",
        "titulo": "Stone Game VI",
        "enunciado": "Alice and Bob take turns playing a game, with Alice starting first.\n\n\nThere are \nn\n stones in a pile. On each player's turn, they can \nremove\n a stone from the pile and receive points based on the stone's value. Alice and Bob may \nvalue the stones differently\n.\n\n\nYou are given two integer arrays of length \nn\n, \naliceValues\n and \nbobValues\n. Each \naliceValues[i]\n and \nbobValues[i]\n represents how Alice and Bob, respectively, value the \ni\nth\n stone.\n\n\nThe winner is the person with the most points after all the stones are chosen. If both players have the same amount of points, the game results in a draw. Both players will play \noptimally\n. Both players know the other's values.\n\n\nDetermine the result of the game, and:\n\n\n\n\nIf Alice wins, return \n1\n.\n\n\nIf Bob wins, return \n-1\n.\n\n\nIf the game results in a draw, return \n0\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n aliceValues = [1,3], bobValues = [2,1]\n\nOutput:\n 1\n\nExplanation:\n\nIf Alice takes stone 1 (0-indexed) first, Alice will receive 3 points.\nBob can only choose stone 0, and will only receive 2 points.\nAlice wins.\n\n\n\nExample 2:\n\n\n\n\nInput:\n aliceValues = [1,2], bobValues = [3,1]\n\nOutput:\n 0\n\nExplanation:\n\nIf Alice takes stone 0, and Bob takes stone 1, they will both have 1 point.\nDraw.\n\n\n\nExample 3:\n\n\n\n\nInput:\n aliceValues = [2,4,3], bobValues = [1,6,7]\n\nOutput:\n -1\n\nExplanation:\n\nRegardless of how Alice plays, Bob will be able to have more points than Alice.\nFor example, if Alice takes stone 1, Bob can take stone 2, and Alice takes stone 0, Alice will have 6 points to Bob's 7.\nBob wins.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == aliceValues.length == bobValues.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= aliceValues[i], bobValues[i] <= 100",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1685,
        "slug": "sum-of-absolute-differences-in-a-sorted-array",
        "url": "https://leetcode.com/problems/sum-of-absolute-differences-in-a-sorted-array/",
        "titulo": "Sum of Absolute Differences in a Sorted Array",
        "enunciado": "You are given an integer array \nnums\n sorted in \nnon-decreasing\n order.\n\n\nBuild and return \nan integer array \nresult\n with the same length as \nnums\n such that \nresult[i]\n is equal to the \nsummation of absolute differences\n between \nnums[i]\n and all the other elements in the array.\n\n\nIn other words, \nresult[i]\n is equal to \nsum(|nums[i]-nums[j]|)\n where \n0 <= j < nums.length\n and \nj != i\n (\n0-indexed\n).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,5]\n\nOutput:\n [4,3,5]\n\nExplanation:\n Assuming the arrays are 0-indexed, then\nresult[0] = |2-2| + |2-3| + |2-5| = 0 + 1 + 3 = 4,\nresult[1] = |3-2| + |3-3| + |3-5| = 1 + 0 + 2 = 3,\nresult[2] = |5-2| + |5-3| + |5-5| = 3 + 2 + 0 = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,4,6,8,10]\n\nOutput:\n [24,15,13,15,21]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= nums[i + 1] <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1664,
        "slug": "ways-to-make-a-fair-array",
        "url": "https://leetcode.com/problems/ways-to-make-a-fair-array/",
        "titulo": "Ways to Make a Fair Array",
        "enunciado": "You are given an integer array \nnums\n. You can choose \nexactly one\n index (\n0-indexed\n) and remove the element. Notice that the index of the elements may change after the removal.\n\n\nFor example, if \nnums = [6,1,7,4,1]\n:\n\n\n\n\nChoosing to remove index \n1\n results in \nnums = [6,7,4,1]\n.\n\n\nChoosing to remove index \n2\n results in \nnums = [6,1,4,1]\n.\n\n\nChoosing to remove index \n4\n results in \nnums = [6,1,7,4]\n.\n\n\n\n\nAn array is \nfair\n if the sum of the odd-indexed values equals the sum of the even-indexed values.\n\n\nReturn the \nnumber\n of indices that you could choose such that after the removal, \nnums\n \nis \nfair\n. \n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,1,6,4]\n\nOutput:\n 1\n\nExplanation:\n\nRemove index 0: [1,6,4] -> Even sum: 1 + 4 = 5. Odd sum: 6. Not fair.\nRemove index 1: [2,6,4] -> Even sum: 2 + 4 = 6. Odd sum: 6. Fair.\nRemove index 2: [2,1,4] -> Even sum: 2 + 4 = 6. Odd sum: 1. Not fair.\nRemove index 3: [2,1,6] -> Even sum: 2 + 6 = 8. Odd sum: 1. Not fair.\nThere is 1 index that you can remove to make nums fair.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1]\n\nOutput:\n 3\n\nExplanation:\n You can remove any index and the remaining array is fair.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 0\n\nExplanation:\n You cannot make a fair array after removing any index.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1663,
        "slug": "smallest-string-with-a-given-numeric-value",
        "url": "https://leetcode.com/problems/smallest-string-with-a-given-numeric-value/",
        "titulo": "Smallest String With A Given Numeric Value",
        "enunciado": "The \nnumeric value\n of a \nlowercase character\n is defined as its position \n(1-indexed)\n in the alphabet, so the numeric value of \na\n is \n1\n, the numeric value of \nb\n is \n2\n, the numeric value of \nc\n is \n3\n, and so on.\n\n\nThe \nnumeric value\n of a \nstring\n consisting of lowercase characters is defined as the sum of its characters' numeric values. For example, the numeric value of the string \n\"abe\"\n is equal to \n1 + 2 + 5 = 8\n.\n\n\nYou are given two integers \nn\n and \nk\n. Return \nthe \nlexicographically smallest string\n with \nlength\n equal to \nn\n and \nnumeric value\n equal to \nk\n.\n\n\nNote that a string \nx\n is lexicographically smaller than string \ny\n if \nx\n comes before \ny\n in dictionary order, that is, either \nx\n is a prefix of \ny\n, or if \ni\n is the first position such that \nx[i] != y[i]\n, then \nx[i]\n comes before \ny[i]\n in alphabetic order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, k = 27\n\nOutput:\n \"aay\"\n\nExplanation:\n The numeric value of the string is 1 + 1 + 25 = 27, and it is the smallest string with such a value and length equal to 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 5, k = 73\n\nOutput:\n \"aaszz\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\nn <= k <= 26 * n",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1657,
        "slug": "determine-if-two-strings-are-close",
        "url": "https://leetcode.com/problems/determine-if-two-strings-are-close/",
        "titulo": "Determine if Two Strings Are Close",
        "enunciado": "Two strings are considered \nclose\n if you can attain one from the other using the following operations:\n\n\n\n\nOperation 1: Swap any two \nexisting\n characters.\n\n\t\n\n\nFor example, \na\nb\ncd\ne\n -> a\ne\ncd\nb\n\n\n\n\n\n\nOperation 2: Transform \nevery\n occurrence of one \nexisting\n character into another \nexisting\n character, and do the same with the other character.\n\t\n\n\nFor example, \naa\nc\nabb\n -> \nbb\nc\nbaa\n (all \na\n's turn into \nb\n's, and all \nb\n's turn into \na\n's)\n\n\n\n\n\n\n\n\nYou can use the operations on either string as many times as necessary.\n\n\nGiven two strings, \nword1\n and \nword2\n, return \ntrue\n if \nword1\n and \nword2\n are \nclose\n, and \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word1 = \"abc\", word2 = \"bca\"\n\nOutput:\n true\n\nExplanation:\n You can attain word2 from word1 in 2 operations.\nApply Operation 1: \"a\nbc\n\" -> \"a\ncb\n\"\nApply Operation 1: \"\na\nc\nb\n\" -> \"\nb\nc\na\n\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n word1 = \"a\", word2 = \"aa\"\n\nOutput:\n false\n\nExplanation: \nIt is impossible to attain word2 from word1, or vice versa, in any number of operations.\n\n\n\nExample 3:\n\n\n\n\nInput:\n word1 = \"cabbba\", word2 = \"abbccc\"\n\nOutput:\n true\n\nExplanation:\n You can attain word2 from word1 in 3 operations.\nApply Operation 1: \"ca\nb\nbb\na\n\" -> \"ca\na\nbb\nb\n\"\nApply Operation 2: \"\nc\naa\nbbb\n\" -> \"\nb\naa\nccc\n\"\nApply Operation 2: \"\nbaa\nccc\" -> \"\nabb\nccc\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word1.length, word2.length <= 10\n5\n\n\nword1\n and \nword2\n contain only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1658,
        "slug": "minimum-operations-to-reduce-x-to-zero",
        "url": "https://leetcode.com/problems/minimum-operations-to-reduce-x-to-zero/",
        "titulo": "Minimum Operations to Reduce X to Zero",
        "enunciado": "You are given an integer array \nnums\n and an integer \nx\n. In one operation, you can either remove the leftmost or the rightmost element from the array \nnums\n and subtract its value from \nx\n. Note that this \nmodifies\n the array for future operations.\n\n\nReturn \nthe \nminimum number\n of operations to reduce \nx\n \nto \nexactly\n \n0\n \nif it is possible\n, otherwise, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,4,2,3], x = 5\n\nOutput:\n 2\n\nExplanation:\n The optimal solution is to remove the last two elements to reduce x to zero.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,6,7,8,9], x = 4\n\nOutput:\n -1\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,2,20,1,1,3], x = 10\n\nOutput:\n 5\n\nExplanation:\n The optimal solution is to remove the last three elements and the first two elements (5 operations in total) to reduce x to zero.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n4\n\n\n1 <= x <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1648,
        "slug": "sell-diminishing-valued-colored-balls",
        "url": "https://leetcode.com/problems/sell-diminishing-valued-colored-balls/",
        "titulo": "Sell Diminishing-Valued Colored Balls",
        "enunciado": "You have an \ninventory\n of different colored balls, and there is a customer that wants \norders\n balls of \nany\n color.\n\n\nThe customer weirdly values the colored balls. Each colored ball's value is the number of balls \nof that color \nyou currently have in your \ninventory\n. For example, if you own \n6\n yellow balls, the customer would pay \n6\n for the first yellow ball. After the transaction, there are only \n5\n yellow balls left, so the next yellow ball is then valued at \n5\n (i.e., the value of the balls decreases as you sell more to the customer).\n\n\nYou are given an integer array, \ninventory\n, where \ninventory[i]\n represents the number of balls of the \ni\nth\n color that you initially own. You are also given an integer \norders\n, which represents the total number of balls that the customer wants. You can sell the balls \nin any order\n.\n\n\nReturn \nthe \nmaximum\n total value that you can attain after selling \norders\n colored balls\n. As the answer may be too large, return it \nmodulo \n10\n9 \n+ 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n inventory = [2,5], orders = 4\n\nOutput:\n 14\n\nExplanation:\n Sell the 1st color 1 time (2) and the 2nd color 3 times (5 + 4 + 3).\nThe maximum total value is 2 + 5 + 4 + 3 = 14.\n\n\n\nExample 2:\n\n\n\n\nInput:\n inventory = [3,5], orders = 6\n\nOutput:\n 19\n\nExplanation: \nSell the 1st color 2 times (3 + 2) and the 2nd color 4 times (5 + 4 + 3 + 2).\nThe maximum total value is 3 + 2 + 5 + 4 + 3 + 2 = 19.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= inventory.length <= 10\n5\n\n\n1 <= inventory[i] <= 10\n9\n\n\n1 <= orders <= min(sum(inventory[i]), 10\n9\n)",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1647,
        "slug": "minimum-deletions-to-make-character-frequencies-unique",
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-character-frequencies-unique/",
        "titulo": "Minimum Deletions to Make Character Frequencies Unique",
        "enunciado": "A string \ns\n is called \ngood\n if there are no two different characters in \ns\n that have the same \nfrequency\n.\n\n\nGiven a string \ns\n, return\n the \nminimum\n number of characters you need to delete to make \ns\n \ngood\n.\n\n\nThe \nfrequency\n of a character in a string is the number of times it appears in the string. For example, in the string \n\"aab\"\n, the \nfrequency\n of \n'a'\n is \n2\n, while the \nfrequency\n of \n'b'\n is \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aab\"\n\nOutput:\n 0\n\nExplanation:\n \ns\n is already good.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aaabbbcc\"\n\nOutput:\n 2\n\nExplanation:\n You can delete two 'b's resulting in the good string \"aaabcc\".\nAnother way it to delete one 'b' and one 'c' resulting in the good string \"aaabbc\".\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"ceabaacb\"\n\nOutput:\n 2\n\nExplanation:\n You can delete both 'c's resulting in the good string \"eabaab\".\nNote that we only care about characters that are still in the string at the end (i.e. frequency of 0 is ignored).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n contains only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1670,
        "slug": "design-front-middle-back-queue",
        "url": "https://leetcode.com/problems/design-front-middle-back-queue/",
        "titulo": "Design Front Middle Back Queue",
        "enunciado": "Design a queue that supports \npush\n and \npop\n operations in the front, middle, and back.\n\n\nImplement the \nFrontMiddleBack\n class:\n\n\n\n\nFrontMiddleBack()\n Initializes the queue.\n\n\nvoid pushFront(int val)\n Adds \nval\n to the \nfront\n of the queue.\n\n\nvoid pushMiddle(int val)\n Adds \nval\n to the \nmiddle\n of the queue.\n\n\nvoid pushBack(int val)\n Adds \nval\n to the \nback\n of the queue.\n\n\nint popFront()\n Removes the \nfront\n element of the queue and returns it. If the queue is empty, return \n-1\n.\n\n\nint popMiddle()\n Removes the \nmiddle\n element of the queue and returns it. If the queue is empty, return \n-1\n.\n\n\nint popBack()\n Removes the \nback\n element of the queue and returns it. If the queue is empty, return \n-1\n.\n\n\n\n\nNotice\n that when there are \ntwo\n middle position choices, the operation is performed on the \nfrontmost\n middle position choice. For example:\n\n\n\n\nPushing \n6\n into the middle of \n[1, 2, 3, 4, 5]\n results in \n[1, 2, \n6\n, 3, 4, 5]\n.\n\n\nPopping the middle from \n[1, 2, \n3\n, 4, 5, 6]\n returns \n3\n and results in \n[1, 2, 4, 5, 6]\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n\n[\"FrontMiddleBackQueue\", \"pushFront\", \"pushBack\", \"pushMiddle\", \"pushMiddle\", \"popFront\", \"popMiddle\", \"popMiddle\", \"popBack\", \"popFront\"]\n[[], [1], [2], [3], [4], [], [], [], [], []]\n\nOutput:\n\n[null, null, null, null, null, 1, 3, 4, 2, -1]\n\n\nExplanation:\n\nFrontMiddleBackQueue q = new FrontMiddleBackQueue();\nq.pushFront(1);   // [\n1\n]\nq.pushBack(2);    // [1, \n2\n]\nq.pushMiddle(3);  // [1, \n3\n, 2]\nq.pushMiddle(4);  // [1, \n4\n, 3, 2]\nq.popFront();     // return 1 -> [4, 3, 2]\nq.popMiddle();    // return 3 -> [4, 2]\nq.popMiddle();    // return 4 -> [2]\nq.popBack();      // return 2 -> []\nq.popFront();     // return -1 -> [] (The queue is empty)\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= val <= 10\n9\n\n\nAt most \n1000\n calls will be made to \npushFront\n, \npushMiddle\n, \npushBack\n, \npopFront\n, \npopMiddle\n, and \npopBack\n.",
        "temas": [
            "Array",
            "Linked List",
            "Design",
            "Queue",
            "Data Stream"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1669,
        "slug": "merge-in-between-linked-lists",
        "url": "https://leetcode.com/problems/merge-in-between-linked-lists/",
        "titulo": "Merge In Between Linked Lists",
        "enunciado": "You are given two linked lists: \nlist1\n and \nlist2\n of sizes \nn\n and \nm\n respectively.\n\n\nRemove \nlist1\n's nodes from the \na\nth\n node to the \nb\nth\n node, and put \nlist2\n in their place.\n\n\nThe blue edges and nodes in the following figure indicate the result:\n\n\n\n\nBuild the result list and return its head.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n list1 = [10,1,13,6,9,5], a = 3, b = 4, list2 = [1000000,1000001,1000002]\n\nOutput:\n [10,1,13,1000000,1000001,1000002,5]\n\nExplanation:\n We remove the nodes 3 and 4 and put the entire list2 in their place. The blue edges and nodes in the above figure indicate the result.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n list1 = [0,1,2,3,4,5,6], a = 2, b = 5, list2 = [1000000,1000001,1000002,1000003,1000004]\n\nOutput:\n [0,1,1000000,1000001,1000002,1000003,1000004,6]\n\nExplanation:\n The blue edges and nodes in the above figure indicate the result.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= list1.length <= 10\n4\n\n\n1 <= a <= b < list1.length - 1\n\n\n1 <= list2.length <= 10\n4",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 1642,
        "slug": "furthest-building-you-can-reach",
        "url": "https://leetcode.com/problems/furthest-building-you-can-reach/",
        "titulo": "Furthest Building You Can Reach",
        "enunciado": "You are given an integer array \nheights\n representing the heights of buildings, some \nbricks\n, and some \nladders\n.\n\n\nYou start your journey from building \n0\n and move to the next building by possibly using bricks or ladders.\n\n\nWhile moving from building \ni\n to building \ni+1\n (\n0-indexed\n),\n\n\n\n\nIf the current building's height is \ngreater than or equal\n to the next building's height, you do \nnot\n need a ladder or bricks.\n\n\nIf the current building's height is \nless than\n the next building's height, you can either use \none ladder\n or \n(h[i+1] - h[i])\n \nbricks\n.\n\n\n\n\nReturn the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n heights = [4,2,7,6,9,14,12], bricks = 5, ladders = 1\n\nOutput:\n 4\n\nExplanation:\n Starting at building 0, you can follow these steps:\n- Go to building 1 without using ladders nor bricks since 4 >= 2.\n- Go to building 2 using 5 bricks. You must use either bricks or ladders because 2 < 7.\n- Go to building 3 without using ladders nor bricks since 7 >= 6.\n- Go to building 4 using your only ladder. You must use either bricks or ladders because 6 < 9.\nIt is impossible to go beyond building 4 because you do not have any more bricks or ladders.\n\n\n\nExample 2:\n\n\n\n\nInput:\n heights = [4,12,2,7,3,18,20,3,19], bricks = 10, ladders = 2\n\nOutput:\n 7\n\n\n\nExample 3:\n\n\n\n\nInput:\n heights = [14,3,19,3], bricks = 17, ladders = 0\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= heights.length <= 10\n5\n\n\n1 <= heights[i] <= 10\n6\n\n\n0 <= bricks <= 10\n9\n\n\n0 <= ladders <= heights.length",
        "temas": [
            "Array",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1641,
        "slug": "count-sorted-vowel-strings",
        "url": "https://leetcode.com/problems/count-sorted-vowel-strings/",
        "titulo": "Count Sorted Vowel Strings",
        "enunciado": "Given an integer \nn\n, return \nthe number of strings of length \nn\n that consist only of vowels (\na\n, \ne\n, \ni\n, \no\n, \nu\n) and are \nlexicographically sorted\n.\n\n\nA string \ns\n is \nlexicographically sorted\n if for all valid \ni\n, \ns[i]\n is the same as or comes before \ns[i+1]\n in the alphabet.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 5\n\nExplanation:\n The 5 sorted strings that consist of vowels only are \n[\"a\",\"e\",\"i\",\"o\",\"u\"].\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 15\n\nExplanation:\n The 15 sorted strings that consist of vowels only are\n[\"aa\",\"ae\",\"ai\",\"ao\",\"au\",\"ee\",\"ei\",\"eo\",\"eu\",\"ii\",\"io\",\"iu\",\"oo\",\"ou\",\"uu\"].\nNote that \"ea\" is not a valid string since 'e' comes after 'a' in the alphabet.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 33\n\nOutput:\n 66045\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 50",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1654,
        "slug": "minimum-jumps-to-reach-home",
        "url": "https://leetcode.com/problems/minimum-jumps-to-reach-home/",
        "titulo": "Minimum Jumps to Reach Home",
        "enunciado": "A certain bug's home is on the x-axis at position \nx\n. Help them get there from position \n0\n.\n\n\nThe bug jumps according to the following rules:\n\n\n\n\nIt can jump exactly \na\n positions \nforward\n (to the right).\n\n\nIt can jump exactly \nb\n positions \nbackward\n (to the left).\n\n\nIt cannot jump backward twice in a row.\n\n\nIt cannot jump to any \nforbidden\n positions.\n\n\n\n\nThe bug may jump forward \nbeyond\n its home, but it \ncannot jump\n to positions numbered with \nnegative\n integers.\n\n\nGiven an array of integers \nforbidden\n, where \nforbidden[i]\n means that the bug cannot jump to the position \nforbidden[i]\n, and integers \na\n, \nb\n, and \nx\n, return \nthe minimum number of jumps needed for the bug to reach its home\n. If there is no possible sequence of jumps that lands the bug on position \nx\n, return \n-1.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n forbidden = [14,4,18,1,15], a = 3, b = 15, x = 9\n\nOutput:\n 3\n\nExplanation:\n 3 jumps forward (0 -> 3 -> 6 -> 9) will get the bug home.\n\n\n\nExample 2:\n\n\n\n\nInput:\n forbidden = [8,3,16,6,12,20], a = 15, b = 13, x = 11\n\nOutput:\n -1\n\n\n\nExample 3:\n\n\n\n\nInput:\n forbidden = [1,6,2,14,5,17,4], a = 16, b = 9, x = 7\n\nOutput:\n 2\n\nExplanation:\n One jump forward (0 -> 16) then one jump backward (16 -> 7) will get the bug home.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= forbidden.length <= 1000\n\n\n1 <= a, b, forbidden[i] <= 2000\n\n\n0 <= x <= 2000\n\n\nAll the elements in \nforbidden\n are distinct.\n\n\nPosition \nx\n is not forbidden.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1653,
        "slug": "minimum-deletions-to-make-string-balanced",
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-string-balanced/",
        "titulo": "Minimum Deletions to Make String Balanced",
        "enunciado": "You are given a string \ns\n consisting only of characters \n'a'\n and \n'b'\n​​​​.\n\n\nYou can delete any number of characters in \ns\n to make \ns\n \nbalanced\n. \ns\n is \nbalanced\n if there is no pair of indices \n(i,j)\n such that \ni < j\n and \ns[i] = 'b'\n and \ns[j]= 'a'\n.\n\n\nReturn \nthe \nminimum\n number of deletions needed to make \ns\n \nbalanced\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aababbab\"\n\nOutput:\n 2\n\nExplanation:\n You can either:\nDelete the characters at 0-indexed positions 2 and 6 (\"aa\nb\nabb\na\nb\" -> \"aaabbb\"), or\nDelete the characters at 0-indexed positions 3 and 6 (\"aab\na\nbb\na\nb\" -> \"aabbbb\").\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"bbaaaaabb\"\n\nOutput:\n 2\n\nExplanation:\n The only solution is to delete the first two characters.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is \n'a'\n or \n'b'\n​​.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1631,
        "slug": "path-with-minimum-effort",
        "url": "https://leetcode.com/problems/path-with-minimum-effort/",
        "titulo": "Path With Minimum Effort",
        "enunciado": "You are a hiker preparing for an upcoming hike. You are given \nheights\n, a 2D array of size \nrows x columns\n, where \nheights[row][col]\n represents the height of cell \n(row, col)\n. You are situated in the top-left cell, \n(0, 0)\n, and you hope to travel to the bottom-right cell, \n(rows-1, columns-1)\n (i.e., \n0-indexed\n). You can move \nup\n, \ndown\n, \nleft\n, or \nright\n, and you wish to find a route that requires the minimum \neffort\n.\n\n\nA route's \neffort\n is the \nmaximum absolute difference\n \nin heights between two consecutive cells of the route.\n\n\nReturn \nthe minimum \neffort\n required to travel from the top-left cell to the bottom-right cell.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n heights = [[1,2,2],[3,8,2],[5,3,5]]\n\nOutput:\n 2\n\nExplanation:\n The route of [1,3,5,3,5] has a maximum absolute difference of 2 in consecutive cells.\nThis is better than the route of [1,2,2,2,5], where the maximum absolute difference is 3.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n heights = [[1,2,3],[3,8,4],[5,3,5]]\n\nOutput:\n 1\n\nExplanation:\n The route of [1,2,3,4,5] has a maximum absolute difference of 1 in consecutive cells, which is better than route [1,3,5,3,5].\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n heights = [[1,2,1,1,1],[1,2,1,2,1],[1,2,1,2,1],[1,2,1,2,1],[1,1,1,2,1]]\n\nOutput:\n 0\n\nExplanation:\n This route does not require any effort.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nrows == heights.length\n\n\ncolumns == heights[i].length\n\n\n1 <= rows, columns <= 100\n\n\n1 <= heights[i][j] <= 10\n6",
        "temas": [
            "Array",
            "Binary Search",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1630,
        "slug": "arithmetic-subarrays",
        "url": "https://leetcode.com/problems/arithmetic-subarrays/",
        "titulo": "Arithmetic Subarrays",
        "enunciado": "A sequence of numbers is called \narithmetic\n if it consists of at least two elements, and the difference between every two consecutive elements is the same. More formally, a sequence \ns\n is arithmetic if and only if \ns[i+1] - s[i] == s[1] - s[0] \nfor all valid \ni\n.\n\n\nFor example, these are \narithmetic\n sequences:\n\n\n\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9\n\n\nThe following sequence is not \narithmetic\n:\n\n\n\n1, 1, 2, 5, 7\n\n\nYou are given an array of \nn\n integers, \nnums\n, and two arrays of \nm\n integers each, \nl\n and \nr\n, representing the \nm\n range queries, where the \ni\nth\n query is the range \n[l[i], r[i]]\n. All the arrays are \n0-indexed\n.\n\n\nReturn \na list of \nboolean\n \nelements\n \nanswer\n, where\n \nanswer[i]\n \nis\n \ntrue\n \nif the subarray\n \nnums[l[i]], nums[l[i]+1], ... , nums[r[i]]\n can be \nrearranged\n to form an \narithmetic\n sequence, and\n \nfalse\n \notherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = \n[4,6,5,9,3,7]\n, l = \n[0,0,2]\n, r = \n[2,3,5]\n\n\nOutput:\n \n[true,false,true]\n\n\nExplanation:\n\nIn the 0\nth\n query, the subarray is [4,6,5]. This can be rearranged as [6,5,4], which is an arithmetic sequence.\nIn the 1\nst\n query, the subarray is [4,6,5,9]. This cannot be rearranged as an arithmetic sequence.\nIn the 2\nnd\n query, the subarray is \n[5,9,3,7]. This\n can be rearranged as \n[3,5,7,9]\n, which is an arithmetic sequence.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-12,-9,-3,-12,-6,15,20,-25,-20,-15,-10], l = [0,1,6,4,8,7], r = [4,4,9,7,9,10]\n\nOutput:\n [false,true,false,false,true,true]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\nm == l.length\n\n\nm == r.length\n\n\n2 <= n <= 500\n\n\n1 <= m <= 500\n\n\n0 <= l[i] < r[i] < n\n\n\n-10\n5\n <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1626,
        "slug": "best-team-with-no-conflicts",
        "url": "https://leetcode.com/problems/best-team-with-no-conflicts/",
        "titulo": "Best Team With No Conflicts",
        "enunciado": "You are the manager of a basketball team. For the upcoming tournament, you want to choose the team with the highest overall score. The score of the team is the \nsum\n of scores of all the players in the team.\n\n\nHowever, the basketball team is not allowed to have \nconflicts\n. A \nconflict\n exists if a younger player has a \nstrictly higher\n score than an older player. A conflict does \nnot\n occur between players of the same age.\n\n\nGiven two lists, \nscores\n and \nages\n, where each \nscores[i]\n and \nages[i]\n represents the score and age of the \ni\nth\n player, respectively, return \nthe highest overall score of all possible basketball teams\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n scores = [1,3,5,10,15], ages = [1,2,3,4,5]\n\nOutput:\n 34\n\nExplanation:\n You can choose all the players.\n\n\n\nExample 2:\n\n\n\n\nInput:\n scores = [4,5,6,5], ages = [2,1,2,1]\n\nOutput:\n 16\n\nExplanation:\n It is best to choose the last 3 players. Notice that you are allowed to choose multiple people of the same age.\n\n\n\nExample 3:\n\n\n\n\nInput:\n scores = [1,2,3,5], ages = [8,9,10,1]\n\nOutput:\n 6\n\nExplanation:\n It is best to choose the first 3 players. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= scores.length, ages.length <= 1000\n\n\nscores.length == ages.length\n\n\n1 <= scores[i] <= 10\n6\n\n\n1 <= ages[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1625,
        "slug": "lexicographically-smallest-string-after-applying-operations",
        "url": "https://leetcode.com/problems/lexicographically-smallest-string-after-applying-operations/",
        "titulo": "Lexicographically Smallest String After Applying Operations",
        "enunciado": "You are given a string \ns\n of \neven length\n consisting of digits from \n0\n to \n9\n, and two integers \na\n and \nb\n.\n\n\nYou can apply either of the following two operations any number of times and in any order on \ns\n:\n\n\n\n\nAdd \na\n to all odd indices of \ns\n \n(0-indexed)\n. Digits post \n9\n are cycled back to \n0\n. For example, if \ns = \"3456\"\n and \na = 5\n, \ns\n becomes \n\"3951\"\n.\n\n\nRotate \ns\n to the right by \nb\n positions. For example, if \ns = \"3456\"\n and \nb = 1\n, \ns\n becomes \n\"6345\"\n.\n\n\n\n\nReturn \nthe \nlexicographically smallest\n string you can obtain by applying the above operations any number of times on\n \ns\n.\n\n\nA string \na\n is lexicographically smaller than a string \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, string \na\n has a letter that appears earlier in the alphabet than the corresponding letter in \nb\n. For example, \n\"0158\"\n is lexicographically smaller than \n\"0190\"\n because the first position they differ is at the third letter, and \n'5'\n comes before \n'9'\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"5525\", a = 9, b = 2\n\nOutput:\n \"2050\"\n\nExplanation:\n We can apply the following operations:\nStart:  \"5525\"\nRotate: \"2555\"\nAdd:    \"2454\"\nAdd:    \"2353\"\nRotate: \"5323\"\nAdd:    \"5222\"\nAdd:    \"5121\"\nRotate: \"2151\"\nAdd:    \"2050\"​​​​​\nThere is no way to obtain a string that is lexicographically smaller than \"2050\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"74\", a = 5, b = 1\n\nOutput:\n \"24\"\n\nExplanation:\n We can apply the following operations:\nStart:  \"74\"\nRotate: \"47\"\n​​​​​​​Add:    \"42\"\n​​​​​​​Rotate: \"24\"​​​​​​​​​​​​\nThere is no way to obtain a string that is lexicographically smaller than \"24\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"0011\", a = 4, b = 2\n\nOutput:\n \"0011\"\n\nExplanation:\n There are no sequence of operations that will give us a lexicographically smaller string than \"0011\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= s.length <= 100\n\n\ns.length\n is even.\n\n\ns\n consists of digits from \n0\n to \n9\n only.\n\n\n1 <= a <= 9\n\n\n1 <= b <= s.length - 1",
        "temas": [
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1638,
        "slug": "count-substrings-that-differ-by-one-character",
        "url": "https://leetcode.com/problems/count-substrings-that-differ-by-one-character/",
        "titulo": "Count Substrings That Differ by One Character",
        "enunciado": "Given two strings \ns\n and \nt\n, find the number of ways you can choose a non-empty substring of \ns\n and replace a \nsingle character\n by a different character such that the resulting substring is a substring of \nt\n. In other words, find the number of substrings in \ns\n that differ from some substring in \nt\n by \nexactly\n one character.\n\n\nFor example, the underlined substrings in \n\"\ncompute\nr\"\n and \n\"\ncomputa\ntion\"\n only differ by the \n'e'\n/\n'a'\n, so this is a valid way.\n\n\nReturn \nthe number of substrings that satisfy the condition above.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aba\", t = \"baba\"\n\nOutput:\n 6\n\nExplanation:\n The following are the pairs of substrings from s and t that differ by exactly 1 character:\n(\"\na\nba\", \"\nb\naba\")\n(\"\na\nba\", \"ba\nb\na\")\n(\"ab\na\n\", \"\nb\naba\")\n(\"ab\na\n\", \"ba\nb\na\")\n(\"a\nb\na\", \"b\na\nba\")\n(\"a\nb\na\", \"bab\na\n\")\nThe underlined portions are the substrings that are chosen from s and t.\n\n\n​​\nExample 2:\n\n\n\n\nInput:\n s = \"ab\", t = \"bb\"\n\nOutput:\n 3\n\nExplanation:\n The following are the pairs of substrings from s and t that differ by 1 character:\n(\"\na\nb\", \"\nb\nb\")\n(\"\na\nb\", \"b\nb\n\")\n(\"\nab\n\", \"\nbb\n\")\n​​​​The underlined portions are the substrings that are chosen from s and t.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, t.length <= 100\n\n\ns\n and \nt\n consist of lowercase English letters only.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1616,
        "slug": "split-two-strings-to-make-palindrome",
        "url": "https://leetcode.com/problems/split-two-strings-to-make-palindrome/",
        "titulo": "Split Two Strings to Make Palindrome",
        "enunciado": "You are given two strings \na\n and \nb\n of the same length. Choose an index and split both strings \nat the same index\n, splitting \na\n into two strings: \na\nprefix\n and \na\nsuffix\n where \na = a\nprefix\n + a\nsuffix\n, and splitting \nb\n into two strings: \nb\nprefix\n and \nb\nsuffix\n where \nb = b\nprefix\n + b\nsuffix\n. Check if \na\nprefix\n + b\nsuffix\n or \nb\nprefix\n + a\nsuffix\n forms a palindrome.\n\n\nWhen you split a string \ns\n into \ns\nprefix\n and \ns\nsuffix\n, either \ns\nsuffix\n or \ns\nprefix\n is allowed to be empty. For example, if \ns = \"abc\"\n, then \n\"\" + \"abc\"\n, \n\"a\" + \"bc\"\n, \n\"ab\" + \"c\"\n , and \n\"abc\" + \"\"\n are valid splits.\n\n\nReturn \ntrue\n if it is possible to form\n a palindrome string, otherwise return \nfalse\n.\n\n\nNotice\n that \nx + y\n denotes the concatenation of strings \nx\n and \ny\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = \"x\", b = \"y\"\n\nOutput:\n true\n\nExplaination:\n If either a or b are palindromes the answer is true since you can split in the following way:\na\nprefix\n = \"\", a\nsuffix\n = \"x\"\nb\nprefix\n = \"\", b\nsuffix\n = \"y\"\nThen, a\nprefix\n + b\nsuffix\n = \"\" + \"y\" = \"y\", which is a palindrome.\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = \"xbdef\", b = \"xecab\"\n\nOutput:\n false\n\n\n\nExample 3:\n\n\n\n\nInput:\n a = \"ulacfd\", b = \"jizalu\"\n\nOutput:\n true\n\nExplaination:\n Split them at index 3:\na\nprefix\n = \"ula\", a\nsuffix\n = \"cfd\"\nb\nprefix\n = \"jiz\", b\nsuffix\n = \"alu\"\nThen, a\nprefix\n + b\nsuffix\n = \"ula\" + \"alu\" = \"ulaalu\", which is a palindrome.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a.length, b.length <= 10\n5\n\n\na.length == b.length\n\n\na\n and \nb\n consist of lowercase English letters",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 1615,
        "slug": "maximal-network-rank",
        "url": "https://leetcode.com/problems/maximal-network-rank/",
        "titulo": "Maximal Network Rank",
        "enunciado": "There is an infrastructure of \nn\n cities with some number of \nroads\n connecting these cities. Each \nroads[i] = [a\ni\n, b\ni\n]\n indicates that there is a bidirectional road between cities \na\ni\n and \nb\ni\n.\n\n\nThe \nnetwork rank\n \nof \ntwo different cities\n is defined as the total number of \ndirectly\n connected roads to \neither\n city. If a road is directly connected to both cities, it is only counted \nonce\n.\n\n\nThe \nmaximal network rank \nof the infrastructure is the \nmaximum network rank\n of all pairs of different cities.\n\n\nGiven the integer \nn\n and the array \nroads\n, return \nthe \nmaximal network rank\n of the entire infrastructure\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, roads = [[0,1],[0,3],[1,2],[1,3]]\n\nOutput:\n 4\n\nExplanation:\n The network rank of cities 0 and 1 is 4 as there are 4 roads that are connected to either 0 or 1. The road between 0 and 1 is only counted once.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, roads = [[0,1],[0,3],[1,2],[1,3],[2,3],[2,4]]\n\nOutput:\n 5\n\nExplanation:\n There are 5 roads that are connected to cities 1 or 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 8, roads = [[0,1],[1,2],[2,3],[2,4],[5,6],[5,7]]\n\nOutput:\n 5\n\nExplanation:\n The network rank of 2 and 5 is 5. Notice that all the cities do not have to be connected.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 100\n\n\n0 <= roads.length <= n * (n - 1) / 2\n\n\nroads[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= n-1\n\n\na\ni\n != b\ni\n\n\nEach pair of cities has \nat most one\n road connecting them.",
        "temas": [
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Graph",
        "has_image": true
    },
    {
        "id": 1609,
        "slug": "even-odd-tree",
        "url": "https://leetcode.com/problems/even-odd-tree/",
        "titulo": "Even Odd Tree",
        "enunciado": "A binary tree is named \nEven-Odd\n if it meets the following conditions:\n\n\n\n\nThe root of the binary tree is at level index \n0\n, its children are at level index \n1\n, their children are at level index \n2\n, etc.\n\n\nFor every \neven-indexed\n level, all nodes at the level have \nodd\n integer values in \nstrictly increasing\n order (from left to right).\n\n\nFor every \nodd-indexed\n level, all nodes at the level have \neven\n integer values in \nstrictly decreasing\n order (from left to right).\n\n\n\n\nGiven the \nroot\n of a binary tree, \nreturn \ntrue\n if the binary tree is \nEven-Odd\n, otherwise return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,10,4,3,null,7,9,12,8,6,null,null,2]\n\nOutput:\n true\n\nExplanation:\n The node values on each level are:\nLevel 0: [1]\nLevel 1: [10,4]\nLevel 2: [3,7,9]\nLevel 3: [12,8,6,2]\nSince levels 0 and 2 are all odd and increasing and levels 1 and 3 are all even and decreasing, the tree is Even-Odd.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [5,4,2,3,3,7]\n\nOutput:\n false\n\nExplanation:\n The node values on each level are:\nLevel 0: [5]\nLevel 1: [4,2]\nLevel 2: [3,3,7]\nNode values in level 2 must be in strictly increasing order, so the tree is not Even-Odd.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [5,9,1,3,5,7]\n\nOutput:\n false\n\nExplanation:\n Node values in the level 1 should be even integers.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 10\n6",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1620,
        "slug": "coordinate-with-maximum-network-quality",
        "url": "https://leetcode.com/problems/coordinate-with-maximum-network-quality/",
        "titulo": "Coordinate With Maximum Network Quality",
        "enunciado": "You are given an array of network towers \ntowers\n, where \ntowers[i] = [x\ni\n, y\ni\n, q\ni\n]\n denotes the \ni\nth\n network tower with location \n(x\ni\n, y\ni\n)\n and quality factor \nq\ni\n. All the coordinates are \nintegral coordinates\n on the X-Y plane, and the distance between the two coordinates is the \nEuclidean distance\n.\n\n\nYou are also given an integer \nradius\n where a tower is \nreachable\n if the distance is \nless than or equal to\n \nradius\n. Outside that distance, the signal becomes garbled, and the tower is \nnot reachable\n.\n\n\nThe signal quality of the \ni\nth\n tower at a coordinate \n(x, y)\n is calculated with the formula \n⌊q\ni\n / (1 + d)⌋\n, where \nd\n is the distance between the tower and the coordinate. The \nnetwork quality\n at a coordinate is the sum of the signal qualities from all the \nreachable\n towers.\n\n\nReturn \nthe array \n[c\nx\n, c\ny\n]\n representing the \nintegral\n coordinate \n(c\nx\n, c\ny\n)\n where the \nnetwork quality\n is maximum. If there are multiple coordinates with the same \nnetwork quality\n, return the lexicographically minimum \nnon-negative\n coordinate.\n\n\nNote:\n\n\n\n\nA coordinate \n(x1, y1)\n is lexicographically smaller than \n(x2, y2)\n if either:\n\n\t\n\n\nx1 < x2\n, or\n\n\nx1 == x2\n and \ny1 < y2\n.\n\n\n\n\n\n\n⌊val⌋\n is the greatest integer less than or equal to \nval\n (the floor function).\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n towers = [[1,2,5],[2,1,7],[3,1,9]], radius = 2\n\nOutput:\n [2,1]\n\nExplanation:\n At coordinate (2, 1) the total quality is 13.\n- Quality of 7 from (2, 1) results in ⌊7 / (1 + sqrt(0)⌋ = ⌊7⌋ = 7\n- Quality of 5 from (1, 2) results in ⌊5 / (1 + sqrt(2)⌋ = ⌊2.07⌋ = 2\n- Quality of 9 from (3, 1) results in ⌊9 / (1 + sqrt(1)⌋ = ⌊4.5⌋ = 4\nNo other coordinate has a higher network quality.\n\n\nExample 2:\n\n\n\n\nInput:\n towers = [[23,11,21]], radius = 9\n\nOutput:\n [23,11]\n\nExplanation:\n Since there is only one tower, the network quality is highest right at the tower's location.\n\n\n\nExample 3:\n\n\n\n\nInput:\n towers = [[1,2,13],[2,1,7],[0,1,9]], radius = 2\n\nOutput:\n [1,2]\n\nExplanation:\n Coordinate (1, 2) has the highest network quality.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= towers.length <= 50\n\n\ntowers[i].length == 3\n\n\n0 <= x\ni\n, y\ni\n, q\ni\n <= 50\n\n\n1 <= radius <= 50",
        "temas": [
            "Array",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1621,
        "slug": "number-of-sets-of-k-non-overlapping-line-segments",
        "url": "https://leetcode.com/problems/number-of-sets-of-k-non-overlapping-line-segments/",
        "titulo": "Number of Sets of K Non-Overlapping Line Segments",
        "enunciado": "Given \nn\n points on a 1-D plane, where the \ni\nth\n point (from \n0\n to \nn-1\n) is at \nx = i\n, find the number of ways we can draw \nexactly\n \nk\n \nnon-overlapping\n line segments such that each segment covers two or more points. The endpoints of each segment must have \nintegral coordinates\n. The \nk\n line segments \ndo not\n have to cover all \nn\n points, and they are \nallowed\n to share endpoints.\n\n\nReturn \nthe number of ways we can draw \nk\n non-overlapping line segments\n.\n Since this number can be huge, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, k = 2\n\nOutput:\n 5\n\nExplanation:\n The two line segments are shown in red and blue.\nThe image above shows the 5 different ways {(0,2),(2,3)}, {(0,1),(1,3)}, {(0,1),(2,3)}, {(1,2),(2,3)}, {(0,1),(1,2)}.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, k = 1\n\nOutput:\n 3\n\nExplanation:\n The 3 ways are {(0,1)}, {(0,2)}, {(1,2)}.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 30, k = 7\n\nOutput:\n 796297179\n\nExplanation:\n The total number of possible ways to draw 7 line segments is 3796297200. Taking this number modulo 10\n9\n + 7 gives us 796297179.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 1000\n\n\n1 <= k <= n-1",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 1600,
        "slug": "throne-inheritance",
        "url": "https://leetcode.com/problems/throne-inheritance/",
        "titulo": "Throne Inheritance",
        "enunciado": "A kingdom consists of a king, his children, his grandchildren, and so on. Every once in a while, someone in the family dies or a child is born.\n\n\nThe kingdom has a well-defined order of inheritance that consists of the king as the first member. Let's define the recursive function \nSuccessor(x, curOrder)\n, which given a person \nx\n and the inheritance order so far, returns who should be the next person after \nx\n in the order of inheritance.\n\n\n\nSuccessor(x, curOrder):\n    if x has no children or all of x's children are in curOrder:\n        if x is the king return null\n        else return Successor(x's parent, curOrder)\n    else return x's oldest child who's not in curOrder\n\n\n\nFor example, assume we have a kingdom that consists of the king, his children Alice and Bob (Alice is older than Bob), and finally Alice's son Jack.\n\n\n\n\nIn the beginning, \ncurOrder\n will be \n[\"king\"]\n.\n\n\nCalling \nSuccessor(king, curOrder)\n will return Alice, so we append to \ncurOrder\n to get \n[\"king\", \"Alice\"]\n.\n\n\nCalling \nSuccessor(Alice, curOrder)\n will return Jack, so we append to \ncurOrder\n to get \n[\"king\", \"Alice\", \"Jack\"]\n.\n\n\nCalling \nSuccessor(Jack, curOrder)\n will return Bob, so we append to \ncurOrder\n to get \n[\"king\", \"Alice\", \"Jack\", \"Bob\"]\n.\n\n\nCalling \nSuccessor(Bob, curOrder)\n will return \nnull\n. Thus the order of inheritance will be \n[\"king\", \"Alice\", \"Jack\", \"Bob\"]\n.\n\n\n\n\nUsing the above function, we can always obtain a unique order of inheritance.\n\n\nImplement the \nThroneInheritance\n class:\n\n\n\n\nThroneInheritance(string kingName)\n Initializes an object of the \nThroneInheritance\n class. The name of the king is given as part of the constructor.\n\n\nvoid birth(string parentName, string childName)\n Indicates that \nparentName\n gave birth to \nchildName\n.\n\n\nvoid death(string name)\n Indicates the death of \nname\n. The death of the person doesn't affect the \nSuccessor\n function nor the current inheritance order. You can treat it as just marking the person as dead.\n\n\nstring[] getInheritanceOrder()\n Returns a list representing the current order of inheritance \nexcluding\n dead people.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"ThroneInheritance\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"birth\", \"getInheritanceOrder\", \"death\", \"getInheritanceOrder\"]\n[[\"king\"], [\"king\", \"andy\"], [\"king\", \"bob\"], [\"king\", \"catherine\"], [\"andy\", \"matthew\"], [\"bob\", \"alex\"], [\"bob\", \"asha\"], [null], [\"bob\"], [null]]\n\nOutput\n\n[null, null, null, null, null, null, null, [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"], null, [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]]\n\n\nExplanation\n\nThroneInheritance t= new ThroneInheritance(\"king\"); // order: \nking\n\nt.birth(\"king\", \"andy\"); // order: king > \nandy\n\nt.birth(\"king\", \"bob\"); // order: king > andy > \nbob\n\nt.birth(\"king\", \"catherine\"); // order: king > andy > bob > \ncatherine\n\nt.birth(\"andy\", \"matthew\"); // order: king > andy > \nmatthew\n > bob > catherine\nt.birth(\"bob\", \"alex\"); // order: king > andy > matthew > bob > \nalex\n > catherine\nt.birth(\"bob\", \"asha\"); // order: king > andy > matthew > bob > alex > \nasha\n > catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"bob\", \"alex\", \"asha\", \"catherine\"]\nt.death(\"bob\"); // order: king > andy > matthew > \nbob\n > alex > asha > catherine\nt.getInheritanceOrder(); // return [\"king\", \"andy\", \"matthew\", \"alex\", \"asha\", \"catherine\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= kingName.length, parentName.length, childName.length, name.length <= 15\n\n\nkingName\n, \nparentName\n, \nchildName\n, and \nname\n consist of lowercase English letters only.\n\n\nAll arguments \nchildName\n and \nkingName\n are \ndistinct\n.\n\n\nAll \nname\n arguments of \ndeath\n will be passed to either the constructor or as \nchildName\n to \nbirth\n first.\n\n\nFor each call to \nbirth(parentName, childName)\n, it is guaranteed that \nparentName\n is alive.\n\n\nAt most \n10\n5\n calls will be made to \nbirth\n and \ndeath\n.\n\n\nAt most \n10\n calls will be made to \ngetInheritanceOrder\n.",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1599,
        "slug": "maximum-profit-of-operating-a-centennial-wheel",
        "url": "https://leetcode.com/problems/maximum-profit-of-operating-a-centennial-wheel/",
        "titulo": "Maximum Profit of Operating a Centennial Wheel",
        "enunciado": "You are the operator of a Centennial Wheel that has \nfour gondolas\n, and each gondola has room for \nup\n \nto\n \nfour people\n. You have the ability to rotate the gondolas \ncounterclockwise\n, which costs you \nrunningCost\n dollars.\n\n\nYou are given an array \ncustomers\n of length \nn\n where \ncustomers[i]\n is the number of new customers arriving just before the \ni\nth\n rotation (0-indexed). This means you \nmust rotate the wheel \ni\n times before the \ncustomers[i]\n customers arrive\n. \nYou cannot make customers wait if there is room in the gondola\n. Each customer pays \nboardingCost\n dollars when they board on the gondola closest to the ground and will exit once that gondola reaches the ground again.\n\n\nYou can stop the wheel at any time, including \nbefore\n \nserving\n \nall\n \ncustomers\n. If you decide to stop serving customers, \nall subsequent rotations are free\n in order to get all the customers down safely. Note that if there are currently more than four customers waiting at the wheel, only four will board the gondola, and the rest will wait \nfor the next rotation\n.\n\n\nReturn\n the minimum number of rotations you need to perform to maximize your profit.\n If there is \nno scenario\n where the profit is positive, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n customers = [8,3], boardingCost = 5, runningCost = 6\n\nOutput:\n 3\n\nExplanation:\n The numbers written on the gondolas are the number of people currently there.\n1. 8 customers arrive, 4 board and 4 wait for the next gondola, the wheel rotates. Current profit is 4 * $5 - 1 * $6 = $14.\n2. 3 customers arrive, the 4 waiting board the wheel and the other 3 wait, the wheel rotates. Current profit is 8 * $5 - 2 * $6 = $28.\n3. The final 3 customers board the gondola, the wheel rotates. Current profit is 11 * $5 - 3 * $6 = $37.\nThe highest profit was $37 after rotating the wheel 3 times.\n\n\n\nExample 2:\n\n\n\n\nInput:\n customers = [10,9,6], boardingCost = 6, runningCost = 4\n\nOutput:\n 7\n\nExplanation:\n\n1. 10 customers arrive, 4 board and 6 wait for the next gondola, the wheel rotates. Current profit is 4 * $6 - 1 * $4 = $20.\n2. 9 customers arrive, 4 board and 11 wait (2 originally waiting, 9 newly waiting), the wheel rotates. Current profit is 8 * $6 - 2 * $4 = $40.\n3. The final 6 customers arrive, 4 board and 13 wait, the wheel rotates. Current profit is 12 * $6 - 3 * $4 = $60.\n4. 4 board and 9 wait, the wheel rotates. Current profit is 16 * $6 - 4 * $4 = $80.\n5. 4 board and 5 wait, the wheel rotates. Current profit is 20 * $6 - 5 * $4 = $100.\n6. 4 board and 1 waits, the wheel rotates. Current profit is 24 * $6 - 6 * $4 = $120.\n7. 1 boards, the wheel rotates. Current profit is 25 * $6 - 7 * $4 = $122.\nThe highest profit was $122 after rotating the wheel 7 times.\n\n\n\nExample 3:\n\n\n\n\nInput:\n customers = [3,4,0,5,1], boardingCost = 1, runningCost = 92\n\nOutput:\n -1\n\nExplanation:\n\n1. 3 customers arrive, 3 board and 0 wait, the wheel rotates. Current profit is 3 * $1 - 1 * $92 = -$89.\n2. 4 customers arrive, 4 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 2 * $92 = -$177.\n3. 0 customers arrive, 0 board and 0 wait, the wheel rotates. Current profit is 7 * $1 - 3 * $92 = -$269.\n4. 5 customers arrive, 4 board and 1 waits, the wheel rotates. Current profit is 11 * $1 - 4 * $92 = -$357.\n5. 1 customer arrives, 2 board and 0 wait, the wheel rotates. Current profit is 13 * $1 - 5 * $92 = -$447.\nThe profit was never positive, so return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == customers.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= customers[i] <= 50\n\n\n1 <= boardingCost, runningCost <= 100",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1594,
        "slug": "maximum-non-negative-product-in-a-matrix",
        "url": "https://leetcode.com/problems/maximum-non-negative-product-in-a-matrix/",
        "titulo": "Maximum Non Negative Product in a Matrix",
        "enunciado": "You are given a \nm x n\n matrix \ngrid\n. Initially, you are located at the top-left corner \n(0, 0)\n, and in each step, you can only \nmove right or down\n in the matrix.\n\n\nAmong all possible paths starting from the top-left corner \n(0, 0)\n and ending in the bottom-right corner \n(m - 1, n - 1)\n, find the path with the \nmaximum non-negative product\n. The product of a path is the product of all integers in the grid cells visited along the path.\n\n\nReturn the \nmaximum non-negative product \nmodulo\n \n10\n9\n + 7\n. \nIf the maximum product is \nnegative\n, return \n-1\n.\n\n\nNotice that the modulo is performed after getting the maximum product.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[-1,-2,-3],[-2,-3,-3],[-3,-3,-2]]\n\nOutput:\n -1\n\nExplanation:\n It is not possible to get non-negative product in the path from (0, 0) to (2, 2), so return -1.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,-2,1],[1,-2,1],[3,-4,1]]\n\nOutput:\n 8\n\nExplanation:\n Maximum non-negative product is shown (1 * 1 * -2 * -4 * 1 = 8).\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[1,3],[0,-4]]\n\nOutput:\n 0\n\nExplanation:\n Maximum non-negative product is shown (1 * 0 * -4 = 0).\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 15\n\n\n-4 <= grid[i][j] <= 4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1593,
        "slug": "split-a-string-into-the-max-number-of-unique-substrings",
        "url": "https://leetcode.com/problems/split-a-string-into-the-max-number-of-unique-substrings/",
        "titulo": "Split a String Into the Max Number of Unique Substrings",
        "enunciado": "Given a string \ns\n,\n return \nthe maximum number of unique substrings that the given string can be split into\n.\n\n\nYou can split string \ns\n into any list of \nnon-empty substrings\n, where the concatenation of the substrings forms the original string. However, you must split the substrings such that all of them are \nunique\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"ababccc\"\n\nOutput:\n 5\n\nExplanation\n: One way to split maximally is ['a', 'b', 'ab', 'c', 'cc']. Splitting like ['a', 'b', 'a', 'b', 'c', 'cc'] is not valid as you have 'a' and 'b' multiple times.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aba\"\n\nOutput:\n 2\n\nExplanation\n: One way to split maximally is ['a', 'ba'].\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"aa\"\n\nOutput:\n 1\n\nExplanation\n: It is impossible to split the string any further.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n\n\n1 <= s.length <= 16\n\n\n\n\n\n\ns\n contains only lower case English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1605,
        "slug": "find-valid-matrix-given-row-and-column-sums",
        "url": "https://leetcode.com/problems/find-valid-matrix-given-row-and-column-sums/",
        "titulo": "Find Valid Matrix Given Row and Column Sums",
        "enunciado": "You are given two arrays \nrowSum\n and \ncolSum\n of non-negative integers where \nrowSum[i]\n is the sum of the elements in the \ni\nth\n row and \ncolSum[j]\n is the sum of the elements of the \nj\nth\n column of a 2D matrix. In other words, you do not know the elements of the matrix, but you do know the sums of each row and column.\n\n\nFind any matrix of \nnon-negative\n integers of size \nrowSum.length x colSum.length\n that satisfies the \nrowSum\n and \ncolSum\n requirements.\n\n\nReturn \na 2D array representing \nany\n matrix that fulfills the requirements\n. It's guaranteed that \nat least one \nmatrix that fulfills the requirements exists.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rowSum = [3,8], colSum = [4,7]\n\nOutput:\n [[3,0],\n         [1,7]]\n\nExplanation:\n \n0\nth\n row: 3 + 0 = 3 == rowSum[0]\n1\nst\n row: 1 + 7 = 8 == rowSum[1]\n0\nth\n column: 3 + 1 = 4 == colSum[0]\n1\nst\n column: 0 + 7 = 7 == colSum[1]\nThe row and column sums match, and all matrix elements are non-negative.\nAnother possible matrix is: [[1,2],\n                             [3,5]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n rowSum = [5,7,10], colSum = [8,6,8]\n\nOutput:\n [[0,5,0],\n         [6,1,0],\n         [2,0,8]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rowSum.length, colSum.length <= 500\n\n\n0 <= rowSum[i], colSum[i] <= 10\n8\n\n\nsum(rowSum) == sum(colSum)",
        "temas": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1604,
        "slug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
        "url": "https://leetcode.com/problems/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period/",
        "titulo": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
        "enunciado": "LeetCode company workers use key-cards to unlock office doors. Each time a worker uses their key-card, the security system saves the worker's name and the time when it was used. The system emits an \nalert\n if any worker uses the key-card \nthree or more times\n in a one-hour period.\n\n\nYou are given a list of strings \nkeyName\n and \nkeyTime\n where \n[keyName[i], keyTime[i]]\n corresponds to a person's name and the time when their key-card was used \nin a\n \nsingle day\n.\n\n\nAccess times are given in the \n24-hour time format \"HH:MM\"\n, such as \n\"23:51\"\n and \n\"09:49\"\n.\n\n\nReturn a \nlist of unique worker names who received an alert for frequent keycard use\n. Sort the names in \nascending order alphabetically\n.\n\n\nNotice that \n\"10:00\"\n - \n\"11:00\"\n is considered to be within a one-hour period, while \n\"22:51\"\n - \n\"23:52\"\n is not considered to be within a one-hour period.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n keyName = [\"daniel\",\"daniel\",\"daniel\",\"luis\",\"luis\",\"luis\",\"luis\"], keyTime = [\"10:00\",\"10:40\",\"11:00\",\"09:00\",\"11:00\",\"13:00\",\"15:00\"]\n\nOutput:\n [\"daniel\"]\n\nExplanation:\n \"daniel\" used the keycard 3 times in a one-hour period (\"10:00\",\"10:40\", \"11:00\").\n\n\n\nExample 2:\n\n\n\n\nInput:\n keyName = [\"alice\",\"alice\",\"alice\",\"bob\",\"bob\",\"bob\",\"bob\"], keyTime = [\"12:01\",\"12:00\",\"18:00\",\"21:00\",\"21:20\",\"21:30\",\"23:00\"]\n\nOutput:\n [\"bob\"]\n\nExplanation:\n \"bob\" used the keycard 3 times in a one-hour period (\"21:00\",\"21:20\", \"21:30\").\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= keyName.length, keyTime.length <= 10\n5\n\n\nkeyName.length == keyTime.length\n\n\nkeyTime[i]\n is in the format \n\"HH:MM\"\n.\n\n\n[keyName[i], keyTime[i]]\n is \nunique\n.\n\n\n1 <= keyName[i].length <= 10\n\n\nkeyName[i] contains only lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1584,
        "slug": "min-cost-to-connect-all-points",
        "url": "https://leetcode.com/problems/min-cost-to-connect-all-points/",
        "titulo": "Min Cost to Connect All Points",
        "enunciado": "You are given an array \npoints\n representing integer coordinates of some points on a 2D-plane, where \npoints[i] = [x\ni\n, y\ni\n]\n.\n\n\nThe cost of connecting two points \n[x\ni\n, y\ni\n]\n and \n[x\nj\n, y\nj\n]\n is the \nmanhattan distance\n between them: \n|x\ni\n - x\nj\n| + |y\ni\n - y\nj\n|\n, where \n|val|\n denotes the absolute value of \nval\n.\n\n\nReturn \nthe minimum cost to make all points connected.\n All points are connected if there is \nexactly one\n simple path between any two points.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n points = [[0,0],[2,2],[3,10],[5,2],[7,0]]\n\nOutput:\n 20\n\nExplanation:\n \n\n\nWe can connect the points as shown above to get the minimum cost of 20.\nNotice that there is a unique path between every pair of points.\n\n\n\nExample 2:\n\n\n\n\nInput:\n points = [[3,12],[-2,5],[-4,1]]\n\nOutput:\n 18\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 1000\n\n\n-10\n6\n <= x\ni\n, y\ni\n <= 10\n6\n\n\nAll pairs \n(x\ni\n, y\ni\n)\n are distinct.",
        "temas": [
            "Array",
            "Union Find",
            "Graph",
            "Minimum Spanning Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1583,
        "slug": "count-unhappy-friends",
        "url": "https://leetcode.com/problems/count-unhappy-friends/",
        "titulo": "Count Unhappy Friends",
        "enunciado": "You are given a list of \npreferences\n for \nn\n friends, where \nn\n is always \neven\n.\n\n\nFor each person \ni\n, \npreferences[i]\n contains a list of friends \nsorted\n in the \norder of preference\n. In other words, a friend earlier in the list is more preferred than a friend later in the list. Friends in each list are denoted by integers from \n0\n to \nn-1\n.\n\n\nAll the friends are divided into pairs. The pairings are given in a list \npairs\n, where \npairs[i] = [x\ni\n, y\ni\n]\n denotes \nx\ni\n is paired with \ny\ni\n and \ny\ni\n is paired with \nx\ni\n.\n\n\nHowever, this pairing may cause some of the friends to be unhappy. A friend \nx\n is unhappy if \nx\n is paired with \ny\n and there exists a friend \nu\n who is paired with \nv\n but:\n\n\n\n\nx\n prefers \nu\n over \ny\n, and\n\n\nu\n prefers \nx\n over \nv\n.\n\n\n\n\nReturn \nthe number of unhappy friends\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 4, preferences = [[1, 2, 3], [3, 2, 0], [3, 1, 0], [1, 2, 0]], pairs = [[0, 1], [2, 3]]\n\nOutput:\n 2\n\nExplanation:\n\nFriend 1 is unhappy because:\n- 1 is paired with 0 but prefers 3 over 0, and\n- 3 prefers 1 over 2.\nFriend 3 is unhappy because:\n- 3 is paired with 2 but prefers 1 over 2, and\n- 1 prefers 3 over 0.\nFriends 0 and 2 are happy.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, preferences = [[1], [0]], pairs = [[1, 0]]\n\nOutput:\n 0\n\nExplanation:\n Both friends 0 and 1 are happy.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4, preferences = [[1, 3, 2], [2, 3, 0], [1, 3, 0], [0, 2, 1]], pairs = [[1, 3], [0, 2]]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 500\n\n\nn\n is even.\n\n\npreferences.length == n\n\n\npreferences[i].length == n - 1\n\n\n0 <= preferences[i][j] <= n - 1\n\n\npreferences[i]\n does not contain \ni\n.\n\n\nAll values in \npreferences[i]\n are unique.\n\n\npairs.length == n/2\n\n\npairs[i].length == 2\n\n\nx\ni\n != y\ni\n\n\n0 <= x\ni\n, y\ni\n <= n - 1\n\n\nEach person is contained in \nexactly one\n pair.",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1578,
        "slug": "minimum-time-to-make-rope-colorful",
        "url": "https://leetcode.com/problems/minimum-time-to-make-rope-colorful/",
        "titulo": "Minimum Time to Make Rope Colorful",
        "enunciado": "Alice has \nn\n balloons arranged on a rope. You are given a \n0-indexed\n string \ncolors\n where \ncolors[i]\n is the color of the \ni\nth\n balloon.\n\n\nAlice wants the rope to be \ncolorful\n. She does not want \ntwo consecutive balloons\n to be of the same color, so she asks Bob for help. Bob can remove some balloons from the rope to make it \ncolorful\n. You are given a \n0-indexed\n integer array \nneededTime\n where \nneededTime[i]\n is the time (in seconds) that Bob needs to remove the \ni\nth\n balloon from the rope.\n\n\nReturn \nthe \nminimum time\n Bob needs to make the rope \ncolorful\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n colors = \"abaac\", neededTime = [1,2,3,4,5]\n\nOutput:\n 3\n\nExplanation:\n In the above image, 'a' is blue, 'b' is red, and 'c' is green.\nBob can remove the blue balloon at index 2. This takes 3 seconds.\nThere are no longer two consecutive balloons of the same color. Total time = 3.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n colors = \"abc\", neededTime = [1,2,3]\n\nOutput:\n 0\n\nExplanation:\n The rope is already colorful. Bob does not need to remove any balloons from the rope.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n colors = \"aabaa\", neededTime = [1,2,3,4,1]\n\nOutput:\n 2\n\nExplanation:\n Bob will remove the balloons at indices 0 and 4. Each balloons takes 1 second to remove.\nThere are no longer two consecutive balloons of the same color. Total time = 1 + 1 = 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == colors.length == neededTime.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= neededTime[i] <= 10\n4\n\n\ncolors\n contains only lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1577,
        "slug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
        "url": "https://leetcode.com/problems/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers/",
        "titulo": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
        "enunciado": "Given two arrays of integers \nnums1\n and \nnums2\n, return the number of triplets formed (type 1 and type 2) under the following rules:\n\n\n\n\nType 1: Triplet (i, j, k) if \nnums1[i]\n2\n == nums2[j] * nums2[k]\n where \n0 <= i < nums1.length\n and \n0 <= j < k < nums2.length\n.\n\n\nType 2: Triplet (i, j, k) if \nnums2[i]\n2\n == nums1[j] * nums1[k]\n where \n0 <= i < nums2.length\n and \n0 <= j < k < nums1.length\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [7,4], nums2 = [5,2,8,9]\n\nOutput:\n 1\n\nExplanation:\n Type 1: (1, 1, 2), nums1[1]\n2\n = nums2[1] * nums2[2]. (4\n2\n = 2 * 8). \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,1], nums2 = [1,1,1]\n\nOutput:\n 9\n\nExplanation:\n All Triplets are valid, because 1\n2\n = 1 * 1.\nType 1: (0,0,1), (0,0,2), (0,1,2), (1,0,1), (1,0,2), (1,1,2).  nums1[i]\n2\n = nums2[j] * nums2[k].\nType 2: (0,0,1), (1,0,1), (2,0,1). nums2[i]\n2\n = nums1[j] * nums1[k].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [7,7,8,3], nums2 = [1,2,9,7]\n\nOutput:\n 2\n\nExplanation:\n There are 2 valid triplets.\nType 1: (3,0,2).  nums1[3]\n2\n = nums2[0] * nums2[2].\nType 2: (3,0,1).  nums2[3]\n2\n = nums1[0] * nums1[1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 1000\n\n\n1 <= nums1[i], nums2[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1589,
        "slug": "maximum-sum-obtained-of-any-permutation",
        "url": "https://leetcode.com/problems/maximum-sum-obtained-of-any-permutation/",
        "titulo": "Maximum Sum Obtained of Any Permutation",
        "enunciado": "We have an array of integers, \nnums\n, and an array of \nrequests\n where \nrequests[i] = [start\ni\n, end\ni\n]\n. The \ni\nth\n request asks for the sum of \nnums[start\ni\n] + nums[start\ni\n + 1] + ... + nums[end\ni\n - 1] + nums[end\ni\n]\n. Both \nstart\ni\n and \nend\ni\n are \n0-indexed\n.\n\n\nReturn \nthe maximum total sum of all requests \namong all permutations\n of\n \nnums\n.\n\n\nSince the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5], requests = [[1,3],[0,1]]\n\nOutput:\n 19\n\nExplanation:\n One permutation of nums is [2,1,3,4,5] with the following result: \nrequests[0] -> nums[1] + nums[2] + nums[3] = 1 + 3 + 4 = 8\nrequests[1] -> nums[0] + nums[1] = 2 + 1 = 3\nTotal sum: 8 + 3 = 11.\nA permutation with a higher total sum is [3,5,4,2,1] with the following result:\nrequests[0] -> nums[1] + nums[2] + nums[3] = 5 + 4 + 2 = 11\nrequests[1] -> nums[0] + nums[1] = 3 + 5  = 8\nTotal sum: 11 + 8 = 19, which is the best that you can do.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,6], requests = [[0,1]]\n\nOutput:\n 11\n\nExplanation:\n A permutation with the max total sum is [6,5,4,3,2,1] with request sums [11].\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,10], requests = [[0,2],[1,3],[1,1]]\n\nOutput:\n 47\n\nExplanation:\n A permutation with the max total sum is [4,10,5,3,2,1] with request sums [19,18,10].\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= nums[i] <= 10\n5\n\n\n1 <= requests.length <= 10\n5\n\n\nrequests[i].length == 2\n\n\n0 <= start\ni\n <= end\ni\n < n",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1590,
        "slug": "make-sum-divisible-by-p",
        "url": "https://leetcode.com/problems/make-sum-divisible-by-p/",
        "titulo": "Make Sum Divisible by P",
        "enunciado": "Given an array of positive integers \nnums\n, remove the \nsmallest\n subarray (possibly \nempty\n) such that the \nsum\n of the remaining elements is divisible by \np\n. It is \nnot\n allowed to remove the whole array.\n\n\nReturn \nthe length of the smallest subarray that you need to remove, or \n-1\n if it's impossible\n.\n\n\nA \nsubarray\n is defined as a contiguous block of elements in the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,1,4,2], p = 6\n\nOutput:\n 1\n\nExplanation:\n The sum of the elements in nums is 10, which is not divisible by 6. We can remove the subarray [4], and the sum of the remaining elements is 6, which is divisible by 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [6,3,5,2], p = 9\n\nOutput:\n 2\n\nExplanation:\n We cannot remove a single element to get a sum divisible by 9. The best way is to remove the subarray [5,2], leaving us with [6,3] with sum 9.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3], p = 3\n\nOutput:\n 0\n\nExplanation:\n Here the sum is 6. which is already divisible by 3. Thus we do not need to remove anything.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n1 <= p <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1567,
        "slug": "maximum-length-of-subarray-with-positive-product",
        "url": "https://leetcode.com/problems/maximum-length-of-subarray-with-positive-product/",
        "titulo": "Maximum Length of Subarray With Positive Product",
        "enunciado": "Given an array of integers \nnums\n, find the maximum length of a subarray where the product of all its elements is positive.\n\n\nA subarray of an array is a consecutive sequence of zero or more values taken out of that array.\n\n\nReturn \nthe maximum length of a subarray with positive product\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,-2,-3,4]\n\nOutput:\n 4\n\nExplanation:\n The array nums already has a positive product of 24.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,-2,-3,-4]\n\nOutput:\n 3\n\nExplanation:\n The longest subarray with positive product is [1,-2,-3] which has a product of 6.\nNotice that we cannot include 0 in the subarray since that'll make the product 0 which is not positive.\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [-1,-2,-3,0,1]\n\nOutput:\n 2\n\nExplanation:\n The longest subarray with positive product is [-1,-2] or [-2,-3].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1562,
        "slug": "find-latest-group-of-size-m",
        "url": "https://leetcode.com/problems/find-latest-group-of-size-m/",
        "titulo": "Find Latest Group of Size M",
        "enunciado": "Given an array \narr\n that represents a permutation of numbers from \n1\n to \nn\n.\n\n\nYou have a binary string of size \nn\n that initially has all its bits set to zero. At each step \ni\n (assuming both the binary string and \narr\n are 1-indexed) from \n1\n to \nn\n, the bit at position \narr[i]\n is set to \n1\n.\n\n\nYou are also given an integer \nm\n. Find the latest step at which there exists a group of ones of length \nm\n. A group of ones is a contiguous substring of \n1\n's such that it cannot be extended in either direction.\n\n\nReturn \nthe latest step at which there exists a group of ones of length \nexactly\n \nm\n. \nIf no such group exists, return\n \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,5,1,2,4], m = 1\n\nOutput:\n 4\n\nExplanation:\n \nStep 1: \"00\n1\n00\", groups: [\"1\"]\nStep 2: \"0010\n1\n\", groups: [\"1\", \"1\"]\nStep 3: \"\n1\n0101\", groups: [\"1\", \"1\", \"1\"]\nStep 4: \"1\n1\n101\", groups: [\"111\", \"1\"]\nStep 5: \"111\n1\n1\", groups: [\"11111\"]\nThe latest step at which there exists a group of size 1 is step 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [3,1,5,4,2], m = 2\n\nOutput:\n -1\n\nExplanation:\n \nStep 1: \"00\n1\n00\", groups: [\"1\"]\nStep 2: \"\n1\n0100\", groups: [\"1\", \"1\"]\nStep 3: \"1010\n1\n\", groups: [\"1\", \"1\", \"1\"]\nStep 4: \"101\n1\n1\", groups: [\"1\", \"111\"]\nStep 5: \"1\n1\n111\", groups: [\"11111\"]\nNo group of size 2 exists during any step.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == arr.length\n\n\n1 <= m <= n <= 10\n5\n\n\n1 <= arr[i] <= n\n\n\nAll integers in \narr\n are \ndistinct\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1561,
        "slug": "maximum-number-of-coins-you-can-get",
        "url": "https://leetcode.com/problems/maximum-number-of-coins-you-can-get/",
        "titulo": "Maximum Number of Coins You Can Get",
        "enunciado": "There are \n3n\n piles of coins of varying size, you and your friends will take piles of coins as follows:\n\n\n\n\nIn each step, you will choose \nany \n3\n piles of coins (not necessarily consecutive).\n\n\nOf your choice, Alice will pick the pile with the maximum number of coins.\n\n\nYou will pick the next pile with the maximum number of coins.\n\n\nYour friend Bob will pick the last pile.\n\n\nRepeat until there are no more piles of coins.\n\n\n\n\nGiven an array of integers \npiles\n where \npiles[i]\n is the number of coins in the \ni\nth\n pile.\n\n\nReturn the maximum number of coins that you can have.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n piles = [2,4,1,2,7,8]\n\nOutput:\n 9\n\nExplanation: \nChoose the triplet (2, 7, 8), Alice Pick the pile with 8 coins, you the pile with \n7\n coins and Bob the last one.\nChoose the triplet (1, 2, 4), Alice Pick the pile with 4 coins, you the pile with \n2\n coins and Bob the last one.\nThe maximum number of coins which you can have are: 7 + 2 = 9.\nOn the other hand if we choose this arrangement (1, \n2\n, 8), (2, \n4\n, 7) you only get 2 + 4 = 6 coins which is not optimal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n piles = [2,4,5]\n\nOutput:\n 4\n\n\n\nExample 3:\n\n\n\n\nInput:\n piles = [9,8,7,6,5,1,2,3,4]\n\nOutput:\n 18\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= piles.length <= 10\n5\n\n\npiles.length % 3 == 0\n\n\n1 <= piles[i] <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Sorting",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1574,
        "slug": "shortest-subarray-to-be-removed-to-make-array-sorted",
        "url": "https://leetcode.com/problems/shortest-subarray-to-be-removed-to-make-array-sorted/",
        "titulo": "Shortest Subarray to be Removed to Make Array Sorted",
        "enunciado": "Given an integer array \narr\n, remove a subarray (can be empty) from \narr\n such that the remaining elements in \narr\n are \nnon-decreasing\n.\n\n\nReturn \nthe length of the shortest subarray to remove\n.\n\n\nA \nsubarray\n is a contiguous subsequence of the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,10,4,2,3,5]\n\nOutput:\n 3\n\nExplanation:\n The shortest subarray we can remove is [10,4,2] of length 3. The remaining elements after that will be [1,2,3,3,5] which are sorted.\nAnother correct solution is to remove the subarray [3,10,4].\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [5,4,3,2,1]\n\nOutput:\n 4\n\nExplanation:\n Since the array is strictly decreasing, we can only keep a single element. Therefore we need to remove a subarray of length 4, either [5,4,3,2] or [4,3,2,1].\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,2,3]\n\nOutput:\n 0\n\nExplanation:\n The array is already non-decreasing. We do not need to remove any elements.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n0 <= arr[i] <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1573,
        "slug": "number-of-ways-to-split-a-string",
        "url": "https://leetcode.com/problems/number-of-ways-to-split-a-string/",
        "titulo": "Number of Ways to Split a String",
        "enunciado": "Given a binary string \ns\n, you can split \ns\n into 3 \nnon-empty\n strings \ns1\n, \ns2\n, and \ns3\n where \ns1 + s2 + s3 = s\n.\n\n\nReturn the number of ways \ns\n can be split such that the number of ones is the same in \ns1\n, \ns2\n, and \ns3\n. Since the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"10101\"\n\nOutput:\n 4\n\nExplanation:\n There are four ways to split s in 3 parts where each part contain the same number of letters '1'.\n\"1|010|1\"\n\"1|01|01\"\n\"10|10|1\"\n\"10|1|01\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"1001\"\n\nOutput:\n 0\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"0000\"\n\nOutput:\n 3\n\nExplanation:\n There are three ways to split s in 3 parts.\n\"0|0|00\"\n\"0|00|0\"\n\"00|0|0\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1552,
        "slug": "magnetic-force-between-two-balls",
        "url": "https://leetcode.com/problems/magnetic-force-between-two-balls/",
        "titulo": "Magnetic Force Between Two Balls",
        "enunciado": "In the universe Earth C-137, Rick discovered a special form of magnetic force between two balls if they are put in his new invented basket. Rick has \nn\n empty baskets, the \ni\nth\n basket is at \nposition[i]\n, Morty has \nm\n balls and needs to distribute the balls into the baskets such that the \nminimum magnetic force\n between any two balls is \nmaximum\n.\n\n\nRick stated that magnetic force between two different balls at positions \nx\n and \ny\n is \n|x - y|\n.\n\n\nGiven the integer array \nposition\n and the integer \nm\n. Return \nthe required force\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n position = [1,2,3,4,7], m = 3\n\nOutput:\n 3\n\nExplanation:\n Distributing the 3 balls into baskets 1, 4 and 7 will make the magnetic force between ball pairs [3, 3, 6]. The minimum magnetic force is 3. We cannot achieve a larger minimum magnetic force than 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n position = [5,4,3,2,1,1000000000], m = 2\n\nOutput:\n 999999999\n\nExplanation:\n We can use baskets 1 and 1000000000.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == position.length\n\n\n2 <= n <= 10\n5\n\n\n1 <= position[i] <= 10\n9\n\n\nAll integers in \nposition\n are \ndistinct\n.\n\n\n2 <= m <= position.length",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1551,
        "slug": "minimum-operations-to-make-array-equal",
        "url": "https://leetcode.com/problems/minimum-operations-to-make-array-equal/",
        "titulo": "Minimum Operations to Make Array Equal",
        "enunciado": "You have an array \narr\n of length \nn\n where \narr[i] = (2 * i) + 1\n for all valid values of \ni\n (i.e., \n0 <= i < n\n).\n\n\nIn one operation, you can select two indices \nx\n and \ny\n where \n0 <= x, y < n\n and subtract \n1\n from \narr[x]\n and add \n1\n to \narr[y]\n (i.e., perform \narr[x] -=1 \nand \narr[y] += 1\n). The goal is to make all the elements of the array \nequal\n. It is \nguaranteed\n that all the elements of the array can be made equal using some operations.\n\n\nGiven an integer \nn\n, the length of the array, return \nthe minimum number of operations\n needed to make all the elements of arr equal.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 2\n\nExplanation:\n arr = [1, 3, 5]\nFirst operation choose x = 2 and y = 0, this leads arr to be [2, 3, 4]\nIn the second operation choose x = 2 and y = 0 again, thus arr = [3, 3, 3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 6\n\nOutput:\n 9\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1545,
        "slug": "find-kth-bit-in-nth-binary-string",
        "url": "https://leetcode.com/problems/find-kth-bit-in-nth-binary-string/",
        "titulo": "Find Kth Bit in Nth Binary String",
        "enunciado": "Given two positive integers \nn\n and \nk\n, the binary string \nS\nn\n is formed as follows:\n\n\n\n\nS\n1\n = \"0\"\n\n\nS\ni\n = S\ni - 1\n + \"1\" + reverse(invert(S\ni - 1\n))\n for \ni > 1\n\n\n\n\nWhere \n+\n denotes the concatenation operation, \nreverse(x)\n returns the reversed string \nx\n, and \ninvert(x)\n inverts all the bits in \nx\n (\n0\n changes to \n1\n and \n1\n changes to \n0\n).\n\n\nFor example, the first four strings in the above sequence are:\n\n\n\n\nS\n1 \n= \"0\"\n\n\nS\n2 \n= \"0\n1\n1\"\n\n\nS\n3 \n= \"011\n1\n001\"\n\n\nS\n4\n = \"0111001\n1\n0110001\"\n\n\n\n\nReturn \nthe\n \nk\nth\n \nbit\n \nin\n \nS\nn\n. It is guaranteed that \nk\n is valid for the given \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, k = 1\n\nOutput:\n \"0\"\n\nExplanation:\n S\n3\n is \"\n0\n111001\".\nThe 1\nst\n bit is \"0\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4, k = 11\n\nOutput:\n \"1\"\n\nExplanation:\n S\n4\n is \"0111001101\n1\n0001\".\nThe 11\nth\n bit is \"1\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 20\n\n\n1 <= k <= 2\nn\n - 1",
        "temas": [
            "String",
            "Recursion",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1559,
        "slug": "detect-cycles-in-2d-grid",
        "url": "https://leetcode.com/problems/detect-cycles-in-2d-grid/",
        "titulo": "Detect Cycles in 2D Grid",
        "enunciado": "Given a 2D array of characters \ngrid\n of size \nm x n\n, you need to find if there exists any cycle consisting of the \nsame value\n in \ngrid\n.\n\n\nA cycle is a path of \nlength 4 or more\n in the grid that starts and ends at the same cell. From a given cell, you can move to one of the cells adjacent to it - in one of the four directions (up, down, left, or right), if it has the \nsame value\n of the current cell.\n\n\nAlso, you cannot move to the cell that you visited in your last move. For example, the cycle \n(1, 1) -> (1, 2) -> (1, 1)\n is invalid because from \n(1, 2)\n we visited \n(1, 1)\n which was the last visited cell.\n\n\nReturn \ntrue\n if any cycle of the same value exists in \ngrid\n, otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[\"a\",\"a\",\"a\",\"a\"],[\"a\",\"b\",\"b\",\"a\"],[\"a\",\"b\",\"b\",\"a\"],[\"a\",\"a\",\"a\",\"a\"]]\n\nOutput:\n true\n\nExplanation: \nThere are two valid cycles shown in different colors in the image below:\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[\"c\",\"c\",\"c\",\"a\"],[\"c\",\"d\",\"c\",\"c\"],[\"c\",\"c\",\"e\",\"c\"],[\"f\",\"c\",\"c\",\"c\"]]\n\nOutput:\n true\n\nExplanation: \nThere is only one valid cycle highlighted in the image below:\n\n\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[\"a\",\"b\",\"b\"],[\"b\",\"z\",\"b\"],[\"b\",\"b\",\"a\"]]\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 500\n\n\ngrid\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1558,
        "slug": "minimum-numbers-of-function-calls-to-make-target-array",
        "url": "https://leetcode.com/problems/minimum-numbers-of-function-calls-to-make-target-array/",
        "titulo": "Minimum Numbers of Function Calls to Make Target Array",
        "enunciado": "You are given an integer array \nnums\n. You have an integer array \narr\n of the same length with all values set to \n0\n initially. You also have the following \nmodify\n function:\n\n\n\n\nYou want to use the modify function to convert \narr\n to \nnums\n using the minimum number of calls.\n\n\nReturn \nthe minimum number of function calls to make \nnums\n from \narr\n.\n\n\nThe test cases are generated so that the answer fits in a \n32-bit\n signed integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,5]\n\nOutput:\n 5\n\nExplanation:\n Increment by 1 (second element): [0, 0] to get [0, 1] (1 operation).\nDouble all the elements: [0, 1] -> [0, 2] -> [0, 4] (2 operations).\nIncrement by 1 (both elements)  [0, 4] -> [1, 4] -> \n[1, 5]\n (2 operations).\nTotal of operations: 1 + 2 + 2 = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,2]\n\nOutput:\n 3\n\nExplanation:\n Increment by 1 (both elements) [0, 0] -> [0, 1] -> [1, 1] (2 operations).\nDouble all the elements: [1, 1] -> \n[2, 2]\n (1 operation).\nTotal of operations: 2 + 1 = 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [4,2,5]\n\nOutput:\n 6\n\nExplanation:\n (initial)[0,0,0] -> [1,0,0] -> [1,0,1] -> [2,0,2] -> [2,1,2] -> [4,2,4] -> \n[4,2,5]\n(nums).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1557,
        "slug": "minimum-number-of-vertices-to-reach-all-nodes",
        "url": "https://leetcode.com/problems/minimum-number-of-vertices-to-reach-all-nodes/",
        "titulo": "Minimum Number of Vertices to Reach All Nodes",
        "enunciado": "Given a\n directed acyclic graph\n, with \nn\n vertices numbered from \n0\n to \nn-1\n, and an array \nedges\n where \nedges[i] = [from\ni\n, to\ni\n]\n represents a directed edge from node \nfrom\ni\n to node \nto\ni\n.\n\n\nFind \nthe smallest set of vertices from which all nodes in the graph are reachable\n. It's guaranteed that a unique solution exists.\n\n\nNotice that you can return the vertices in any order.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 6, edges = [[0,1],[0,2],[2,5],[3,4],[4,2]]\n\nOutput:\n [0,3]\n\nExplanation: \nIt's not possible to reach all the nodes from a single vertex. From 0 we can reach [0,1,2,5]. From 3 we can reach [3,4,2,5]. So we output [0,3].\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, edges = [[0,1],[2,1],[3,1],[1,4],[2,4]]\n\nOutput:\n [0,2,3]\n\nExplanation: \nNotice that vertices 0, 3 and 2 are not reachable from any other node, so we must include them. Also any of these vertices can reach nodes 1 and 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10^5\n\n\n1 <= edges.length <= min(10^5, n * (n - 1) / 2)\n\n\nedges[i].length == 2\n\n\n0 <= from\ni,\n to\ni\n < n\n\n\nAll pairs \n(from\ni\n, to\ni\n)\n are distinct.",
        "temas": [
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Graph",
        "has_image": true
    },
    {
        "id": 1536,
        "slug": "minimum-swaps-to-arrange-a-binary-grid",
        "url": "https://leetcode.com/problems/minimum-swaps-to-arrange-a-binary-grid/",
        "titulo": "Minimum Swaps to Arrange a Binary Grid",
        "enunciado": "Given an \nn x n\n binary \ngrid\n, in one step you can choose two \nadjacent rows\n of the grid and swap them.\n\n\nA grid is said to be \nvalid\n if all the cells above the main diagonal are \nzeros\n.\n\n\nReturn \nthe minimum number of steps\n needed to make the grid valid, or \n-1\n if the grid cannot be valid.\n\n\nThe main diagonal of a grid is the diagonal that starts at cell \n(1, 1)\n and ends at cell \n(n, n)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,0,1],[1,1,0],[1,0,0]]\n\nOutput:\n 3\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,1,1,0],[0,1,1,0],[0,1,1,0],[0,1,1,0]]\n\nOutput:\n -1\n\nExplanation:\n All rows are similar, swaps have no effect on the grid.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[1,0,0],[1,1,0],[1,1,1]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length\n \n== grid[i].length\n\n\n1 <= n <= 200\n\n\ngrid[i][j]\n is either \n0\n or \n1",
        "temas": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1535,
        "slug": "find-the-winner-of-an-array-game",
        "url": "https://leetcode.com/problems/find-the-winner-of-an-array-game/",
        "titulo": "Find the Winner of an Array Game",
        "enunciado": "Given an integer array \narr\n of \ndistinct\n integers and an integer \nk\n.\n\n\nA game will be played between the first two elements of the array (i.e. \narr[0]\n and \narr[1]\n). In each round of the game, we compare \narr[0]\n with \narr[1]\n, the larger integer wins and remains at position \n0\n, and the smaller integer moves to the end of the array. The game ends when an integer wins \nk\n consecutive rounds.\n\n\nReturn \nthe integer which will win the game\n.\n\n\nIt is \nguaranteed\n that there will be a winner of the game.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,1,3,5,4,6,7], k = 2\n\nOutput:\n 5\n\nExplanation:\n Let's see the rounds of the game:\nRound |       arr       | winner | win_count\n  1   | [2,1,3,5,4,6,7] | 2      | 1\n  2   | [2,3,5,4,6,7,1] | 3      | 1\n  3   | [3,5,4,6,7,1,2] | 5      | 1\n  4   | [5,4,6,7,1,2,3] | 5      | 2\nSo we can see that 4 rounds will be played and 5 is the winner because it wins 2 consecutive games.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [3,2,1], k = 10\n\nOutput:\n 3\n\nExplanation:\n 3 will win the first 10 rounds consecutively.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= arr.length <= 10\n5\n\n\n1 <= arr[i] <= 10\n6\n\n\narr\n contains \ndistinct\n integers.\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1530,
        "slug": "number-of-good-leaf-nodes-pairs",
        "url": "https://leetcode.com/problems/number-of-good-leaf-nodes-pairs/",
        "titulo": "Number of Good Leaf Nodes Pairs",
        "enunciado": "You are given the \nroot\n of a binary tree and an integer \ndistance\n. A pair of two different \nleaf\n nodes of a binary tree is said to be good if the length of \nthe shortest path\n between them is less than or equal to \ndistance\n.\n\n\nReturn \nthe number of good leaf node pairs\n in the tree.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,null,4], distance = 3\n\nOutput:\n 1\n\nExplanation:\n The leaf nodes of the tree are 3 and 4 and the length of the shortest path between them is 3. This is the only good pair.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6,7], distance = 3\n\nOutput:\n 2\n\nExplanation:\n The good pairs are [4,5] and [6,7] with shortest path = 2. The pair [4,6] is not good because the length of ther shortest path between them is 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [7,1,4,6,null,5,3,null,null,null,null,null,2], distance = 3\n\nOutput:\n 1\n\nExplanation:\n The only good pair is [2,5].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the \ntree\n is in the range \n[1, 2\n10\n].\n\n\n1 <= Node.val <= 100\n\n\n1 <= distance <= 10",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1529,
        "slug": "minimum-suffix-flips",
        "url": "https://leetcode.com/problems/minimum-suffix-flips/",
        "titulo": "Minimum Suffix Flips",
        "enunciado": "You are given a \n0-indexed\n binary string \ntarget\n of length \nn\n. You have another binary string \ns\n of length \nn\n that is initially set to all zeros. You want to make \ns\n equal to \ntarget\n.\n\n\nIn one operation, you can pick an index \ni\n where \n0 <= i < n\n and flip all bits in the \ninclusive\n range \n[i, n - 1]\n. Flip means changing \n'0'\n to \n'1'\n and \n'1'\n to \n'0'\n.\n\n\nReturn \nthe minimum number of operations needed to make \ns\n equal to \ntarget\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n target = \"10111\"\n\nOutput:\n 3\n\nExplanation:\n Initially, s = \"00000\".\nChoose index i = 2: \"00\n000\n\" -> \"00\n111\n\"\nChoose index i = 0: \"\n00111\n\" -> \"\n11000\n\"\nChoose index i = 1: \"1\n1000\n\" -> \"1\n0111\n\"\nWe need at least 3 flip operations to form target.\n\n\n\nExample 2:\n\n\n\n\nInput:\n target = \"101\"\n\nOutput:\n 3\n\nExplanation:\n Initially, s = \"000\".\nChoose index i = 0: \"\n000\n\" -> \"\n111\n\"\nChoose index i = 1: \"1\n11\n\" -> \"1\n00\n\"\nChoose index i = 2: \"10\n0\n\" -> \"10\n1\n\"\nWe need at least 3 flip operations to form target.\n\n\n\nExample 3:\n\n\n\n\nInput:\n target = \"00000\"\n\nOutput:\n 0\n\nExplanation:\n We do not need any operations since the initial s already equals target.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == target.length\n\n\n1 <= n <= 10\n5\n\n\ntarget[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1546,
        "slug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
        "url": "https://leetcode.com/problems/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target/",
        "titulo": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
        "enunciado": "Given an array \nnums\n and an integer \ntarget\n, return \nthe maximum number of \nnon-empty\n \nnon-overlapping\n subarrays such that the sum of values in each subarray is equal to\n \ntarget\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,1,1,1], target = 2\n\nOutput:\n 2\n\nExplanation:\n There are 2 non-overlapping subarrays [\n1,1\n,1,\n1,1\n] with sum equals to target(2).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-1,3,5,1,4,2,-9], target = 6\n\nOutput:\n 2\n\nExplanation:\n There are 3 subarrays with sum equal to 6.\n([5,1], [4,2], [3,5,1,4,2,-9]) but only the first 2 are non-overlapping.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\n0 <= target <= 10\n6",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1541,
        "slug": "minimum-insertions-to-balance-a-parentheses-string",
        "url": "https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string/",
        "titulo": "Minimum Insertions to Balance a Parentheses String",
        "enunciado": "Given a parentheses string \ns\n containing only the characters \n'('\n and \n')'\n. A parentheses string is \nbalanced\n if:\n\n\n\n\nAny left parenthesis \n'('\n must have a corresponding two consecutive right parenthesis \n'))'\n.\n\n\nLeft parenthesis \n'('\n must go before the corresponding two consecutive right parenthesis \n'))'\n.\n\n\n\n\nIn other words, we treat \n'('\n as an opening parenthesis and \n'))'\n as a closing parenthesis.\n\n\n\n\nFor example, \n\"())\"\n, \n\"())(())))\"\n and \n\"(())())))\"\n are balanced, \n\")()\"\n, \n\"()))\"\n and \n\"(()))\"\n are not balanced.\n\n\n\n\nYou can insert the characters \n'('\n and \n')'\n at any position of the string to balance it if needed.\n\n\nReturn \nthe minimum number of insertions\n needed to make \ns\n balanced.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"(()))\"\n\nOutput:\n 1\n\nExplanation:\n The second '(' has two matching '))', but the first '(' has only ')' matching. We need to add one more ')' at the end of the string to be \"(())))\" which is balanced.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"())\"\n\nOutput:\n 0\n\nExplanation:\n The string is already balanced.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"))())(\"\n\nOutput:\n 3\n\nExplanation:\n Add '(' to match the first '))', Add '))' to match the last '('.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of \n'('\n and \n')'\n only.",
        "temas": [
            "String",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1540,
        "slug": "can-convert-string-in-k-moves",
        "url": "https://leetcode.com/problems/can-convert-string-in-k-moves/",
        "titulo": "Can Convert String in K Moves",
        "enunciado": "Given two strings \ns\n and \nt\n, your goal is to convert \ns\n into \nt\n in \nk\n \nmoves or less.\n\n\nDuring the \ni\nth\n (\n1 <= i <= k\n) \nmove you can:\n\n\n\n\nChoose any index \nj\n (1-indexed) from \ns\n, such that \n1 <= j <= s.length\n and \nj\n has not been chosen in any previous move, and shift the character at that index \ni\n times.\n\n\nDo nothing.\n\n\n\n\nShifting a character means replacing it by the next letter in the alphabet (wrapping around so that \n'z'\n becomes \n'a'\n). Shifting a character by \ni\n means applying the shift operations \ni\n times.\n\n\nRemember that any index \nj\n can be picked at most once.\n\n\nReturn \ntrue\n if it's possible to convert \ns\n into \nt\n in no more than \nk\n moves, otherwise return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"input\", t = \"ouput\", k = 9\n\nOutput:\n true\n\nExplanation: \nIn the 6th move, we shift 'i' 6 times to get 'o'. And in the 7th move we shift 'n' to get 'u'.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abc\", t = \"bcd\", k = 10\n\nOutput:\n false\n\nExplanation: \nWe need to shift each character in s one time to convert it into t. We can shift 'a' to 'b' during the 1st move. However, there is no way to shift the other characters in the remaining moves to obtain t from s.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"aab\", t = \"bbb\", k = 27\n\nOutput:\n true\n\nExplanation: \nIn the 1st move, we shift the first 'a' 1 time to get 'b'. In the 27th move, we shift the second 'a' 27 times to get 'b'.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, t.length <= 10^5\n\n\n0 <= k <= 10^9\n\n\ns\n, \nt\n contain only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1519,
        "slug": "number-of-nodes-in-the-sub-tree-with-the-same-label",
        "url": "https://leetcode.com/problems/number-of-nodes-in-the-sub-tree-with-the-same-label/",
        "titulo": "Number of Nodes in the Sub-Tree With the Same Label",
        "enunciado": "You are given a tree (i.e. a connected, undirected graph that has no cycles) consisting of \nn\n nodes numbered from \n0\n to \nn - 1\n and exactly \nn - 1\n \nedges\n. The \nroot\n of the tree is the node \n0\n, and each node of the tree has \na label\n which is a lower-case character given in the string \nlabels\n (i.e. The node with the number \ni\n has the label \nlabels[i]\n).\n\n\nThe \nedges\n array is given on the form \nedges[i] = [a\ni\n, b\ni\n]\n, which means there is an edge between nodes \na\ni\n and \nb\ni\n in the tree.\n\n\nReturn \nan array of size \nn\n where \nans[i]\n is the number of nodes in the subtree of the \ni\nth\n node which have the same label as node \ni\n.\n\n\nA subtree of a tree \nT\n is the tree consisting of a node in \nT\n and all of its descendant nodes.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], labels = \"abaedcd\"\n\nOutput:\n [2,1,1,1,1,1,1]\n\nExplanation:\n Node 0 has label 'a' and its sub-tree has node 2 with label 'a' as well, thus the answer is 2. Notice that any node is part of its sub-tree.\nNode 1 has a label 'b'. The sub-tree of node 1 contains nodes 1,4 and 5, as nodes 4 and 5 have different labels than node 1, the answer is just 1 (the node itself).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 4, edges = [[0,1],[1,2],[0,3]], labels = \"bbbb\"\n\nOutput:\n [4,2,1,1]\n\nExplanation:\n The sub-tree of node 2 contains only node 2, so the answer is 1.\nThe sub-tree of node 3 contains only node 3, so the answer is 1.\nThe sub-tree of node 1 contains nodes 1 and 2, both have label 'b', thus the answer is 2.\nThe sub-tree of node 0 contains nodes 0, 1, 2 and 3, all with label 'b', thus the answer is 4.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 5, edges = [[0,1],[0,2],[1,3],[0,4]], labels = \"aabab\"\n\nOutput:\n [3,2,1,1,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\nedges.length == n - 1\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nlabels.length == n\n\n\nlabels\n is consisting of only of lowercase English letters.",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 1513,
        "slug": "number-of-substrings-with-only-1s",
        "url": "https://leetcode.com/problems/number-of-substrings-with-only-1s/",
        "titulo": "Number of Substrings With Only 1s",
        "enunciado": "Given a binary string \ns\n, return \nthe number of substrings with all characters\n \n1\n's\n. Since the answer may be too large, return it modulo \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"0110111\"\n\nOutput:\n 9\n\nExplanation:\n There are 9 substring in total with only 1's characters.\n\"1\" -> 5 times.\n\"11\" -> 3 times.\n\"111\" -> 1 time.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"101\"\n\nOutput:\n 2\n\nExplanation:\n Substring \"1\" is shown 2 times in s.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"111111\"\n\nOutput:\n 21\n\nExplanation:\n Each substring contains only 1's characters.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1525,
        "slug": "number-of-good-ways-to-split-a-string",
        "url": "https://leetcode.com/problems/number-of-good-ways-to-split-a-string/",
        "titulo": "Number of Good Ways to Split a String",
        "enunciado": "You are given a string \ns\n.\n\n\nA split is called \ngood\n if you can split \ns\n into two non-empty strings \ns\nleft\n and \ns\nright\n where their concatenation is equal to \ns\n (i.e., \ns\nleft\n + s\nright\n = s\n) and the number of distinct letters in \ns\nleft\n and \ns\nright\n is the same.\n\n\nReturn \nthe number of \ngood splits\n you can make in \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aacaba\"\n\nOutput:\n 2\n\nExplanation:\n There are 5 ways to split \n\"aacaba\"\n and 2 of them are good. \n(\"a\", \"acaba\") Left string and right string contains 1 and 3 different letters respectively.\n(\"aa\", \"caba\") Left string and right string contains 1 and 3 different letters respectively.\n(\"aac\", \"aba\") Left string and right string contains 2 and 2 different letters respectively (good split).\n(\"aaca\", \"ba\") Left string and right string contains 2 and 2 different letters respectively (good split).\n(\"aacab\", \"a\") Left string and right string contains 3 and 1 different letters respectively.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcd\"\n\nOutput:\n 1\n\nExplanation:\n Split the string as follows (\"ab\", \"cd\").\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1524,
        "slug": "number-of-sub-arrays-with-odd-sum",
        "url": "https://leetcode.com/problems/number-of-sub-arrays-with-odd-sum/",
        "titulo": "Number of Sub-arrays With Odd Sum",
        "enunciado": "Given an array of integers \narr\n, return \nthe number of subarrays with an \nodd\n sum\n.\n\n\nSince the answer can be very large, return it modulo \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,3,5]\n\nOutput:\n 4\n\nExplanation:\n All subarrays are [[1],[1,3],[1,3,5],[3],[3,5],[5]]\nAll sub-arrays sum are [1,4,9,3,8,5].\nOdd sums are [1,9,3,5] so the answer is 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [2,4,6]\n\nOutput:\n 0\n\nExplanation:\n All subarrays are [[2],[2,4],[2,4,6],[4],[4,6],[6]]\nAll sub-arrays sum are [2,6,12,4,10,6].\nAll sub-arrays have even sum and the answer is 0.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,2,3,4,5,6,7]\n\nOutput:\n 16\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n1 <= arr[i] <= 100",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1504,
        "slug": "count-submatrices-with-all-ones",
        "url": "https://leetcode.com/problems/count-submatrices-with-all-ones/",
        "titulo": "Count Submatrices With All Ones",
        "enunciado": "Given an \nm x n\n binary matrix \nmat\n, \nreturn the number of \nsubmatrices\n that have all ones\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[1,0,1],[1,1,0],[1,1,0]]\n\nOutput:\n 13\n\nExplanation:\n \nThere are 6 rectangles of side 1x1.\nThere are 2 rectangles of side 1x2.\nThere are 3 rectangles of side 2x1.\nThere is 1 rectangle of side 2x2. \nThere is 1 rectangle of side 3x1.\nTotal number of rectangles = 6 + 2 + 3 + 1 + 1 = 13.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n mat = [[0,1,1,0],[0,1,1,1],[1,1,1,0]]\n\nOutput:\n 24\n\nExplanation:\n \nThere are 8 rectangles of side 1x1.\nThere are 5 rectangles of side 1x2.\nThere are 2 rectangles of side 1x3. \nThere are 4 rectangles of side 2x1.\nThere are 2 rectangles of side 2x2. \nThere are 2 rectangles of side 3x1. \nThere is 1 rectangle of side 3x2. \nTotal number of rectangles = 8 + 5 + 2 + 4 + 2 + 2 + 1 = 24.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 150\n\n\nmat[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Matrix",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1503,
        "slug": "last-moment-before-all-ants-fall-out-of-a-plank",
        "url": "https://leetcode.com/problems/last-moment-before-all-ants-fall-out-of-a-plank/",
        "titulo": "Last Moment Before All Ants Fall Out of a Plank",
        "enunciado": "We have a wooden plank of the length \nn\n \nunits\n. Some ants are walking on the plank, each ant moves with a speed of \n1 unit per second\n. Some of the ants move to the \nleft\n, the other move to the \nright\n.\n\n\nWhen two ants moving in two \ndifferent\n directions meet at some point, they change their directions and continue moving again. Assume changing directions does not take any additional time.\n\n\nWhen an ant reaches \none end\n of the plank at a time \nt\n, it falls out of the plank immediately.\n\n\nGiven an integer \nn\n and two integer arrays \nleft\n and \nright\n, the positions of the ants moving to the left and the right, return \nthe moment when the last ant(s) fall out of the plank\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, left = [4,3], right = [0,1]\n\nOutput:\n 4\n\nExplanation:\n In the image above:\n-The ant at index 0 is named A and going to the right.\n-The ant at index 1 is named B and going to the right.\n-The ant at index 3 is named C and going to the left.\n-The ant at index 4 is named D and going to the left.\nThe last moment when an ant was on the plank is t = 4 seconds. After that, it falls immediately out of the plank. (i.e., We can say that at t = 4.0000000001, there are no ants on the plank).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 7, left = [], right = [0,1,2,3,4,5,6,7]\n\nOutput:\n 7\n\nExplanation:\n All ants are going to the right, the ant at index 0 needs 7 seconds to fall.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 7, left = [0,1,2,3,4,5,6,7], right = []\n\nOutput:\n 7\n\nExplanation:\n All ants are going to the left, the ant at index 7 needs 7 seconds to fall.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4\n\n\n0 <= left.length <= n + 1\n\n\n0 <= left[i] <= n\n\n\n0 <= right.length <= n + 1\n\n\n0 <= right[i] <= n\n\n\n1 <= left.length + right.length <= n + 1\n\n\nAll values of \nleft\n and \nright\n are unique, and each value can appear \nonly in one\n of the two arrays.",
        "temas": [
            "Array",
            "Brainteaser",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1498,
        "slug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
        "url": "https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/",
        "titulo": "Number of Subsequences That Satisfy the Given Sum Condition",
        "enunciado": "You are given an array of integers \nnums\n and an integer \ntarget\n.\n\n\nReturn \nthe number of \nnon-empty\n subsequences of \nnums\n such that the sum of the minimum and maximum element on it is less or equal to \ntarget\n. Since the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,5,6,7], target = 9\n\nOutput:\n 4\n\nExplanation:\n There are 4 subsequences that satisfy the condition.\n[3] -> Min value + max value <= target (3 + 3 <= 9)\n[3,5] -> (3 + 5 <= 9)\n[3,5,6] -> (3 + 6 <= 9)\n[3,6] -> (3 + 6 <= 9)\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,3,6,8], target = 10\n\nOutput:\n 6\n\nExplanation:\n There are 6 subsequences that satisfy the condition. (nums can have repeated numbers).\n[3] , [3] , [3,3], [3,6] , [3,6] , [3,3,6]\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,3,3,4,6,7], target = 12\n\nOutput:\n 61\n\nExplanation:\n There are 63 non-empty subsequences, two of them do not satisfy the condition ([6,7], [7]).\nNumber of valid subsequences (63 - 2 = 61).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n6\n\n\n1 <= target <= 10\n6",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1497,
        "slug": "check-if-array-pairs-are-divisible-by-k",
        "url": "https://leetcode.com/problems/check-if-array-pairs-are-divisible-by-k/",
        "titulo": "Check If Array Pairs Are Divisible by k",
        "enunciado": "Given an array of integers \narr\n of even length \nn\n and an integer \nk\n.\n\n\nWe want to divide the array into exactly \nn / 2\n pairs such that the sum of each pair is divisible by \nk\n.\n\n\nReturn \ntrue\n If you can find a way to do that or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,4,5,10,6,7,8,9], k = 5\n\nOutput:\n true\n\nExplanation:\n Pairs are (1,9),(2,8),(3,7),(4,6) and (5,10).\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,2,3,4,5,6], k = 7\n\nOutput:\n true\n\nExplanation:\n Pairs are (1,6),(2,5) and(3,4).\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,2,3,4,5,6], k = 10\n\nOutput:\n false\n\nExplanation:\n You can try all possible pairs to see that there is no way to divide arr into 3 pairs each with sum divisible by 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\narr.length == n\n\n\n1 <= n <= 10\n5\n\n\nn\n is even.\n\n\n-10\n9\n <= arr[i] <= 10\n9\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1509,
        "slug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
        "url": "https://leetcode.com/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/",
        "titulo": "Minimum Difference Between Largest and Smallest Value in Three Moves",
        "enunciado": "You are given an integer array \nnums\n.\n\n\nIn one move, you can choose one element of \nnums\n and change it to \nany value\n.\n\n\nReturn \nthe minimum difference between the largest and smallest value of \nnums\n \nafter performing at most three moves\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,3,2,4]\n\nOutput:\n 0\n\nExplanation:\n We can make at most 3 moves.\nIn the first move, change 2 to 3. nums becomes [5,3,3,4].\nIn the second move, change 4 to 3. nums becomes [5,3,3,3].\nIn the third move, change 5 to 3. nums becomes [3,3,3,3].\nAfter performing 3 moves, the difference between the minimum and maximum is 3 - 3 = 0.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,5,0,10,14]\n\nOutput:\n 1\n\nExplanation:\n We can make at most 3 moves.\nIn the first move, change 5 to 0. nums becomes [1,0,0,10,14].\nIn the second move, change 10 to 0. nums becomes [1,0,0,0,14].\nIn the third move, change 14 to 1. nums becomes [1,0,0,0,1].\nAfter performing 3 moves, the difference between the minimum and maximum is 1 - 0 = 1.\nIt can be shown that there is no way to make the difference 0 in 3 moves.\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,100,20]\n\nOutput:\n 0\n\nExplanation:\n We can make at most 3 moves.\nIn the first move, change 100 to 7. nums becomes [3,7,20].\nIn the second move, change 20 to 7. nums becomes [3,7,7].\nIn the third move, change 3 to 7. nums becomes [7,7,7].\nAfter performing 3 moves, the difference between the minimum and maximum is 7 - 7 = 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1508,
        "slug": "range-sum-of-sorted-subarray-sums",
        "url": "https://leetcode.com/problems/range-sum-of-sorted-subarray-sums/",
        "titulo": "Range Sum of Sorted Subarray Sums",
        "enunciado": "You are given the array \nnums\n consisting of \nn\n positive integers. You computed the sum of all non-empty continuous subarrays from the array and then sorted them in non-decreasing order, creating a new array of \nn * (n + 1) / 2\n numbers.\n\n\nReturn the sum of the numbers from index \nleft\n to index \nright\n (\nindexed from 1\n)\n, inclusive, in the new array. \nSince the answer can be a huge number return it modulo \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4], n = 4, left = 1, right = 5\n\nOutput:\n 13 \n\nExplanation:\n All subarray sums are 1, 3, 6, 10, 2, 5, 9, 3, 7, 4. After sorting them in non-decreasing order we have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 1 to ri = 5 is 1 + 2 + 3 + 3 + 4 = 13. \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4], n = 4, left = 3, right = 4\n\nOutput:\n 6\n\nExplanation:\n The given array is the same as example 1. We have the new array [1, 2, 3, 3, 4, 5, 6, 7, 9, 10]. The sum of the numbers from index le = 3 to ri = 4 is 3 + 3 = 6.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4], n = 4, left = 1, right = 10\n\nOutput:\n 50\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 100\n\n\n1 <= left <= right <= n * (n + 1) / 2",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1488,
        "slug": "avoid-flood-in-the-city",
        "url": "https://leetcode.com/problems/avoid-flood-in-the-city/",
        "titulo": "Avoid Flood in The City",
        "enunciado": "Your country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the \nnth\n lake, the \nnth\n lake becomes full of water. If it rains over a lake that is \nfull of water\n, there will be a \nflood\n. Your goal is to avoid floods in any lake.\n\n\nGiven an integer array \nrains\n where:\n\n\n\n\nrains[i] > 0\n means there will be rains over the \nrains[i]\n lake.\n\n\nrains[i] == 0\n means there are no rains this day and you can choose \none lake\n this day and \ndry it\n.\n\n\n\n\nReturn \nan array \nans\n where:\n\n\n\n\nans.length == rains.length\n\n\nans[i] == -1\n if \nrains[i] > 0\n.\n\n\nans[i]\n is the lake you choose to dry in the \nith\n day if \nrains[i] == 0\n.\n\n\n\n\nIf there are multiple valid answers return \nany\n of them. If it is impossible to avoid flood return \nan empty array\n.\n\n\nNotice that if you chose to dry a full lake, it becomes empty, but if you chose to dry an empty lake, nothing changes.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rains = [1,2,3,4]\n\nOutput:\n [-1,-1,-1,-1]\n\nExplanation:\n After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day full lakes are [1,2,3]\nAfter the fourth day full lakes are [1,2,3,4]\nThere's no day to dry any lake and there is no flood in any lake.\n\n\n\nExample 2:\n\n\n\n\nInput:\n rains = [1,2,0,0,2,1]\n\nOutput:\n [-1,-1,2,1,-1,-1]\n\nExplanation:\n After the first day full lakes are [1]\nAfter the second day full lakes are [1,2]\nAfter the third day, we dry lake 2. Full lakes are [1]\nAfter the fourth day, we dry lake 1. There is no full lakes.\nAfter the fifth day, full lakes are [2].\nAfter the sixth day, full lakes are [1,2].\nIt is easy that this scenario is flood-free. [-1,-1,1,2,-1,-1] is another acceptable scenario.\n\n\n\nExample 3:\n\n\n\n\nInput:\n rains = [1,2,0,1,2]\n\nOutput:\n []\n\nExplanation:\n After the second day, full lakes are  [1,2]. We have to dry one lake in the third day.\nAfter that, it will rain over lakes [1,2]. It's easy to prove that no matter which lake you choose to dry in the 3rd day, the other one will flood.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rains.length <= 10\n5\n\n\n0 <= rains[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1487,
        "slug": "making-file-names-unique",
        "url": "https://leetcode.com/problems/making-file-names-unique/",
        "titulo": "Making File Names Unique",
        "enunciado": "Given an array of strings \nnames\n of size \nn\n. You will create \nn\n folders in your file system \nsuch that\n, at the \ni\nth\n minute, you will create a folder with the name \nnames[i]\n.\n\n\nSince two files \ncannot\n have the same name, if you enter a folder name that was previously used, the system will have a suffix addition to its name in the form of \n(k)\n, where, \nk\n is the \nsmallest positive integer\n such that the obtained name remains unique.\n\n\nReturn \nan array of strings of length \nn\n where \nans[i]\n is the actual name the system will assign to the \ni\nth\n folder when you create it.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n names = [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\n\nOutput:\n [\"pes\",\"fifa\",\"gta\",\"pes(2019)\"]\n\nExplanation:\n Let's see how the file system creates folder names:\n\"pes\" --> not assigned before, remains \"pes\"\n\"fifa\" --> not assigned before, remains \"fifa\"\n\"gta\" --> not assigned before, remains \"gta\"\n\"pes(2019)\" --> not assigned before, remains \"pes(2019)\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n names = [\"gta\",\"gta(1)\",\"gta\",\"avalon\"]\n\nOutput:\n [\"gta\",\"gta(1)\",\"gta(2)\",\"avalon\"]\n\nExplanation:\n Let's see how the file system creates folder names:\n\"gta\" --> not assigned before, remains \"gta\"\n\"gta(1)\" --> not assigned before, remains \"gta(1)\"\n\"gta\" --> the name is reserved, system adds (k), since \"gta(1)\" is also reserved, systems put k = 2. it becomes \"gta(2)\"\n\"avalon\" --> not assigned before, remains \"avalon\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n names = [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece\"]\n\nOutput:\n [\"onepiece\",\"onepiece(1)\",\"onepiece(2)\",\"onepiece(3)\",\"onepiece(4)\"]\n\nExplanation:\n When the last folder is created, the smallest positive valid k is 4, and it becomes \"onepiece(4)\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= names.length <= 5 * 10\n4\n\n\n1 <= names[i].length <= 20\n\n\nnames[i]\n consists of lowercase English letters, digits, and/or round brackets.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1482,
        "slug": "minimum-number-of-days-to-make-m-bouquets",
        "url": "https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/",
        "titulo": "Minimum Number of Days to Make m Bouquets",
        "enunciado": "You are given an integer array \nbloomDay\n, an integer \nm\n and an integer \nk\n.\n\n\nYou want to make \nm\n bouquets. To make a bouquet, you need to use \nk\n \nadjacent flowers\n from the garden.\n\n\nThe garden consists of \nn\n flowers, the \ni\nth\n flower will bloom in the \nbloomDay[i]\n and then can be used in \nexactly one\n bouquet.\n\n\nReturn \nthe minimum number of days you need to wait to be able to make \nm\n bouquets from the garden\n. If it is impossible to make m bouquets return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n bloomDay = [1,10,3,10,2], m = 3, k = 1\n\nOutput:\n 3\n\nExplanation:\n Let us see what happened in the first three days. x means flower bloomed and _ means flower did not bloom in the garden.\nWe need 3 bouquets each should contain 1 flower.\nAfter day 1: [x, _, _, _, _]   // we can only make one bouquet.\nAfter day 2: [x, _, _, _, x]   // we can only make two bouquets.\nAfter day 3: [x, _, x, _, x]   // we can make 3 bouquets. The answer is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n bloomDay = [1,10,3,10,2], m = 3, k = 2\n\nOutput:\n -1\n\nExplanation:\n We need 3 bouquets each has 2 flowers, that means we need 6 flowers. We only have 5 flowers so it is impossible to get the needed bouquets and we return -1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n bloomDay = [7,7,7,7,12,7,7], m = 2, k = 3\n\nOutput:\n 12\n\nExplanation:\n We need 2 bouquets each should have 3 flowers.\nHere is the garden after the 7 and 12 days:\nAfter day 7: [x, x, x, x, _, x, x]\nWe can make one bouquet of the first three flowers that bloomed. We cannot make another bouquet from the last three flowers that bloomed because they are not adjacent.\nAfter day 12: [x, x, x, x, x, x, x]\nIt is obvious that we can make two bouquets in different ways.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nbloomDay.length == n\n\n\n1 <= n <= 10\n5\n\n\n1 <= bloomDay[i] <= 10\n9\n\n\n1 <= m <= 10\n6\n\n\n1 <= k <= n",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1481,
        "slug": "least-number-of-unique-integers-after-k-removals",
        "url": "https://leetcode.com/problems/least-number-of-unique-integers-after-k-removals/",
        "titulo": "Least Number of Unique Integers after K Removals",
        "enunciado": "Given an array of integers \narr\n and an integer \nk\n. Find the \nleast number of unique integers\n after removing \nexactly\n \nk\n elements\n.\n\n\n\n\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput: \narr = [5,5,4], k = 1\r\n\nOutput: \n1\r\n\nExplanation\n: Remove the single 4, only 5 is left.\r\n\n\n\nExample 2:\n\n\n\r\n\nInput: \narr = [4,3,1,1,3,3,2], k = 3\r\n\nOutput: \n2\r\n\nExplanation\n: Remove 4, 2 and either one of the two 1s or three 3s. 1 and 3 will be left.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10^5\n\n\n1 <= arr[i] <= 10^9\n\n\n0 <= k <= arr.length",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1493,
        "slug": "longest-subarray-of-1s-after-deleting-one-element",
        "url": "https://leetcode.com/problems/longest-subarray-of-1s-after-deleting-one-element/",
        "titulo": "Longest Subarray of 1's After Deleting One Element",
        "enunciado": "Given a binary array \nnums\n, you should delete one element from it.\n\n\nReturn \nthe size of the longest non-empty subarray containing only \n1\n's in the resulting array\n. Return \n0\n if there is no such subarray.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,0,1]\n\nOutput:\n 3\n\nExplanation:\n After deleting the number in position 2, [1,1,1] contains 3 numbers with value of 1's.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,1,1,0,1,1,0,1]\n\nOutput:\n 5\n\nExplanation:\n After deleting the number in position 4, [0,1,1,1,1,1,0,1] longest subarray with value of 1's is [1,1,1,1,1].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1,1]\n\nOutput:\n 2\n\nExplanation:\n You must delete one element.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\nnums[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1492,
        "slug": "the-kth-factor-of-n",
        "url": "https://leetcode.com/problems/the-kth-factor-of-n/",
        "titulo": "The kth Factor of n",
        "enunciado": "You are given two positive integers \nn\n and \nk\n. A factor of an integer \nn\n is defined as an integer \ni\n where \nn % i == 0\n.\n\n\nConsider a list of all factors of \nn\n sorted in \nascending order\n, return \nthe \nk\nth\n factor\n in this list or return \n-1\n if \nn\n has less than \nk\n factors.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 12, k = 3\n\nOutput:\n 3\n\nExplanation:\n Factors list is [1, 2, 3, 4, 6, 12], the 3\nrd\n factor is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 7, k = 2\n\nOutput:\n 7\n\nExplanation:\n Factors list is [1, 7], the 2\nnd\n factor is 7.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4, k = 4\n\nOutput:\n -1\n\nExplanation:\n Factors list is [1, 2, 4], there is only 3 factors. We should return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= n <= 1000\n\n\n\n\n \n\n\nFollow up:\n\n\nCould you solve this problem in less than O(n) complexity?",
        "temas": [
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1472,
        "slug": "design-browser-history",
        "url": "https://leetcode.com/problems/design-browser-history/",
        "titulo": "Design Browser History",
        "enunciado": "You have a \nbrowser\n of one tab where you start on the \nhomepage\n and you can visit another \nurl\n, get back in the history number of \nsteps\n or move forward in the history number of \nsteps\n.\n\n\nImplement the \nBrowserHistory\n class:\n\n\n\n\nBrowserHistory(string homepage)\n Initializes the object with the \nhomepage\n of the browser.\n\n\nvoid visit(string url)\n Visits \nurl\n from the current page. It clears up all the forward history.\n\n\nstring back(int steps)\n Move \nsteps\n back in history. If you can only return \nx\n steps in the history and \nsteps > x\n, you will return only \nx\n steps. Return the current \nurl\n after moving back in history \nat most\n \nsteps\n.\n\n\nstring forward(int steps)\n Move \nsteps\n forward in history. If you can only forward \nx\n steps in the history and \nsteps > x\n, you will forward only \nx\n steps. Return the current \nurl\n after forwarding in history \nat most\n \nsteps\n.\n\n\n\n\n \n\n\nExample:\n\n\n\n\nInput:\n\n[\"BrowserHistory\",\"visit\",\"visit\",\"visit\",\"back\",\"back\",\"forward\",\"visit\",\"forward\",\"back\",\"back\"]\n[[\"leetcode.com\"],[\"google.com\"],[\"facebook.com\"],[\"youtube.com\"],[1],[1],[1],[\"linkedin.com\"],[2],[2],[7]]\n\nOutput:\n\n[null,null,null,null,\"facebook.com\",\"google.com\",\"facebook.com\",null,\"linkedin.com\",\"google.com\",\"leetcode.com\"]\n\n\nExplanation:\n\nBrowserHistory browserHistory = new BrowserHistory(\"leetcode.com\");\nbrowserHistory.visit(\"google.com\");       // You are in \"leetcode.com\". Visit \"google.com\"\nbrowserHistory.visit(\"facebook.com\");     // You are in \"google.com\". Visit \"facebook.com\"\nbrowserHistory.visit(\"youtube.com\");      // You are in \"facebook.com\". Visit \"youtube.com\"\nbrowserHistory.back(1);                   // You are in \"youtube.com\", move back to \"facebook.com\" return \"facebook.com\"\nbrowserHistory.back(1);                   // You are in \"facebook.com\", move back to \"google.com\" return \"google.com\"\nbrowserHistory.forward(1);                // You are in \"google.com\", move forward to \"facebook.com\" return \"facebook.com\"\nbrowserHistory.visit(\"linkedin.com\");     // You are in \"facebook.com\". Visit \"linkedin.com\"\nbrowserHistory.forward(2);                // You are in \"linkedin.com\", you cannot move forward any steps.\nbrowserHistory.back(2);                   // You are in \"linkedin.com\", move back two steps to \"facebook.com\" then to \"google.com\". return \"google.com\"\nbrowserHistory.back(7);                   // You are in \"google.com\", you can move back only one step to \"leetcode.com\". return \"leetcode.com\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= homepage.length <= 20\n\n\n1 <= url.length <= 20\n\n\n1 <= steps <= 100\n\n\nhomepage\n and \nurl\n consist of  '.' or lower case English letters.\n\n\nAt most \n5000\n calls will be made to \nvisit\n, \nback\n, and \nforward\n.",
        "temas": [
            "Array",
            "Linked List",
            "Stack",
            "Design",
            "Doubly-Linked List",
            "Data Stream"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1471,
        "slug": "the-k-strongest-values-in-an-array",
        "url": "https://leetcode.com/problems/the-k-strongest-values-in-an-array/",
        "titulo": "The k Strongest Values in an Array",
        "enunciado": "Given an array of integers \narr\n and an integer \nk\n.\n\n\nA value \narr[i]\n is said to be stronger than a value \narr[j]\n if \n|arr[i] - m| > |arr[j] - m|\n where \nm\n is the \ncentre\n of the array.\n\nIf \n|arr[i] - m| == |arr[j] - m|\n, then \narr[i]\n is said to be stronger than \narr[j]\n if \narr[i] > arr[j]\n.\n\n\nReturn \na list of the strongest \nk\n values in the array. return the answer \nin any arbitrary order\n.\n\n\nThe \ncentre\n is the middle value in an ordered integer list. More formally, if the length of the list is n, the centre is the element in position \n((n - 1) / 2)\n in the sorted list \n(0-indexed)\n.\n\n\n\n\nFor \narr = [6, -3, 7, 2, 11]\n, \nn = 5\n and the centre is obtained by sorting the array \narr = [-3, 2, 6, 7, 11]\n and the centre is \narr[m]\n where \nm = ((5 - 1) / 2) = 2\n. The centre is \n6\n.\n\n\nFor \narr = [-7, 22, 17, 3]\n, \nn = 4\n and the centre is obtained by sorting the array \narr = [-7, 3, 17, 22]\n and the centre is \narr[m]\n where \nm = ((4 - 1) / 2) = 1\n. The centre is \n3\n.\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n \n\n\n\n\n \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,4,5], k = 2\n\nOutput:\n [5,1]\n\nExplanation:\n Centre is 3, the elements of the array sorted by the strongest are [5,1,4,2,3]. The strongest 2 elements are [5, 1]. [1, 5] is also \naccepted\n answer.\nPlease note that although |5 - 3| == |1 - 3| but 5 is stronger than 1 because 5 > 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,1,3,5,5], k = 2\n\nOutput:\n [5,5]\n\nExplanation:\n Centre is 3, the elements of the array sorted by the strongest are [5,5,1,1,3]. The strongest 2 elements are [5, 5].\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [6,7,11,7,6,8], k = 5\n\nOutput:\n [11,8,6,6,7]\n\nExplanation:\n Centre is 7, the elements of the array sorted by the strongest are [11,8,6,6,7,7].\nAny permutation of [11,8,6,6,7] is \naccepted\n.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n-10\n5\n <= arr[i] <= 10\n5\n\n\n1 <= k <= arr.length",
        "temas": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1466,
        "slug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
        "url": "https://leetcode.com/problems/reorder-routes-to-make-all-paths-lead-to-the-city-zero/",
        "titulo": "Reorder Routes to Make All Paths Lead to the City Zero",
        "enunciado": "There are \nn\n cities numbered from \n0\n to \nn - 1\n and \nn - 1\n roads such that there is only one way to travel between two different cities (this network form a tree). Last year, The ministry of transport decided to orient the roads in one direction because they are too narrow.\n\n\nRoads are represented by \nconnections\n where \nconnections[i] = [a\ni\n, b\ni\n]\n represents a road from city \na\ni\n to city \nb\ni\n.\n\n\nThis year, there will be a big event in the capital (city \n0\n), and many people want to travel to this city.\n\n\nYour task consists of reorienting some roads such that each city can visit the city \n0\n. Return the \nminimum\n number of edges changed.\n\n\nIt's \nguaranteed\n that each city can reach city \n0\n after reorder.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 6, connections = [[0,1],[1,3],[2,3],[4,0],[4,5]]\n\nOutput:\n 3\n\nExplanation: \nChange the direction of edges show in red such that each node can reach the node 0 (capital).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, connections = [[1,0],[1,2],[3,2],[3,4]]\n\nOutput:\n 2\n\nExplanation: \nChange the direction of edges show in red such that each node can reach the node 0 (capital).\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 3, connections = [[1,0],[2,0]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 5 * 10\n4\n\n\nconnections.length == n - 1\n\n\nconnections[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= n - 1\n\n\na\ni\n != b\ni",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 1465,
        "slug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
        "url": "https://leetcode.com/problems/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts/",
        "titulo": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
        "enunciado": "You are given a rectangular cake of size \nh x w\n and two arrays of integers \nhorizontalCuts\n and \nverticalCuts\n where:\n\n\n\n\nhorizontalCuts[i]\n is the distance from the top of the rectangular cake to the \ni\nth\n horizontal cut and similarly, and\n\n\nverticalCuts[j]\n is the distance from the left of the rectangular cake to the \nj\nth\n vertical cut.\n\n\n\n\nReturn \nthe maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays\n \nhorizontalCuts\n \nand\n \nverticalCuts\n. Since the answer can be a large number, return this \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n h = 5, w = 4, horizontalCuts = [1,2,4], verticalCuts = [1,3]\n\nOutput:\n 4 \n\nExplanation:\n The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green piece of cake has the maximum area.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n h = 5, w = 4, horizontalCuts = [3,1], verticalCuts = [1]\n\nOutput:\n 6\n\nExplanation:\n The figure above represents the given rectangular cake. Red lines are the horizontal and vertical cuts. After you cut the cake, the green and yellow pieces of cake have the maximum area.\n\n\n\nExample 3:\n\n\n\n\nInput:\n h = 5, w = 4, horizontalCuts = [3], verticalCuts = [3]\n\nOutput:\n 9\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= h, w <= 10\n9\n\n\n1 <= horizontalCuts.length <= min(h - 1, 10\n5\n)\n\n\n1 <= verticalCuts.length <= min(w - 1, 10\n5\n)\n\n\n1 <= horizontalCuts[i] < h\n\n\n1 <= verticalCuts[i] < w\n\n\nAll the elements in \nhorizontalCuts\n are distinct.\n\n\nAll the elements in \nverticalCuts\n are distinct.",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1477,
        "slug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
        "url": "https://leetcode.com/problems/find-two-non-overlapping-sub-arrays-each-with-target-sum/",
        "titulo": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
        "enunciado": "You are given an array of integers \narr\n and an integer \ntarget\n.\n\n\nYou have to find \ntwo non-overlapping sub-arrays\n of \narr\n each with a sum equal \ntarget\n. There can be multiple answers so you have to find an answer where the sum of the lengths of the two sub-arrays is \nminimum\n.\n\n\nReturn \nthe minimum sum of the lengths\n of the two required sub-arrays, or return \n-1\n if you cannot find such two sub-arrays.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,2,2,4,3], target = 3\n\nOutput:\n 2\n\nExplanation:\n Only two sub-arrays have sum = 3 ([3] and [3]). The sum of their lengths is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [7,3,4,7], target = 7\n\nOutput:\n 2\n\nExplanation:\n Although we have three non-overlapping sub-arrays of sum = 7 ([7], [3,4] and [7]), but we will choose the first and third sub-arrays as the sum of their lengths is 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [4,3,2,6,2,3,4], target = 6\n\nOutput:\n -1\n\nExplanation:\n We have only one sub-array of sum = 6.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n1 <= arr[i] <= 1000\n\n\n1 <= target <= 10\n8",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1476,
        "slug": "subrectangle-queries",
        "url": "https://leetcode.com/problems/subrectangle-queries/",
        "titulo": "Subrectangle Queries",
        "enunciado": "Implement the class \nSubrectangleQueries\n which receives a \nrows x cols\n rectangle as a matrix of integers in the constructor and supports two methods:\n\n\n1.\n updateSubrectangle(int row1, int col1, int row2, int col2, int newValue)\n\n\n\n\nUpdates all values with \nnewValue\n in the subrectangle whose upper left coordinate is \n(row1,col1)\n and bottom right coordinate is \n(row2,col2)\n.\n\n\n\n\n2.\n getValue(int row, int col)\n\n\n\n\nReturns the current value of the coordinate \n(row,col)\n from the rectangle.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"SubrectangleQueries\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\"]\n[[[[1,2,1],[4,3,4],[3,2,1],[1,1,1]]],[0,2],[0,0,3,2,5],[0,2],[3,1],[3,0,3,2,10],[3,1],[0,2]]\n\nOutput\n\n[null,1,null,5,5,null,10,5]\n\nExplanation\n\nSubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,2,1],[4,3,4],[3,2,1],[1,1,1]]);  \n// The initial rectangle (4x3) looks like:\n// 1 2 1\n// 4 3 4\n// 3 2 1\n// 1 1 1\nsubrectangleQueries.getValue(0, 2); // return 1\nsubrectangleQueries.updateSubrectangle(0, 0, 3, 2, 5);\n// After this update the rectangle looks like:\n// 5 5 5\n// 5 5 5\n// 5 5 5\n// 5 5 5 \nsubrectangleQueries.getValue(0, 2); // return 5\nsubrectangleQueries.getValue(3, 1); // return 5\nsubrectangleQueries.updateSubrectangle(3, 0, 3, 2, 10);\n// After this update the rectangle looks like:\n// 5   5   5\n// 5   5   5\n// 5   5   5\n// 10  10  10 \nsubrectangleQueries.getValue(3, 1); // return 10\nsubrectangleQueries.getValue(0, 2); // return 5\n\n\n\nExample 2:\n\n\n\n\nInput\n\n[\"SubrectangleQueries\",\"getValue\",\"updateSubrectangle\",\"getValue\",\"getValue\",\"updateSubrectangle\",\"getValue\"]\n[[[[1,1,1],[2,2,2],[3,3,3]]],[0,0],[0,0,2,2,100],[0,0],[2,2],[1,1,2,2,20],[2,2]]\n\nOutput\n\n[null,1,null,100,100,null,20]\n\nExplanation\n\nSubrectangleQueries subrectangleQueries = new SubrectangleQueries([[1,1,1],[2,2,2],[3,3,3]]);\nsubrectangleQueries.getValue(0, 0); // return 1\nsubrectangleQueries.updateSubrectangle(0, 0, 2, 2, 100);\nsubrectangleQueries.getValue(0, 0); // return 100\nsubrectangleQueries.getValue(2, 2); // return 100\nsubrectangleQueries.updateSubrectangle(1, 1, 2, 2, 20);\nsubrectangleQueries.getValue(2, 2); // return 20\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThere will be at most \n500\n operations considering both methods: \nupdateSubrectangle\n and \ngetValue\n.\n\n\n1 <= rows, cols <= 100\n\n\nrows == rectangle.length\n\n\ncols == rectangle[i].length\n\n\n0 <= row1 <= row2 < rows\n\n\n0 <= col1 <= col2 < cols\n\n\n1 <= newValue, rectangle[i][j] <= 10^9\n\n\n0 <= row < rows\n\n\n0 <= col < cols",
        "temas": [
            "Array",
            "Design",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1457,
        "slug": "pseudo-palindromic-paths-in-a-binary-tree",
        "url": "https://leetcode.com/problems/pseudo-palindromic-paths-in-a-binary-tree/",
        "titulo": "Pseudo-Palindromic Paths in a Binary Tree",
        "enunciado": "Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be \npseudo-palindromic\n if at least one permutation of the node values in the path is a palindrome.\n\n\nReturn the number of \npseudo-palindromic\n paths going from the root node to leaf nodes.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [2,3,1,3,1,null,1]\n\nOutput:\n 2 \n\nExplanation:\n The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the red path [2,3,3], the green path [2,1,1], and the path [2,3,1]. Among these paths only red path and green path are pseudo-palindromic paths since the red path [2,3,3] can be rearranged in [3,2,3] (palindrome) and the green path [2,1,1] can be rearranged in [1,2,1] (palindrome).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [2,1,1,1,3,null,null,null,null,null,1]\n\nOutput:\n 1 \n\nExplanation:\n The figure above represents the given binary tree. There are three paths going from the root node to leaf nodes: the green path [2,1,1], the path [2,1,3,1], and the path [2,1]. Among these paths only the green path is pseudo-palindromic since [2,1,1] can be rearranged in [1,2,1] (palindrome).\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [9]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n5\n]\n.\n\n\n1 <= Node.val <= 9",
        "temas": [
            "Bit Manipulation",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Bit Manipulation",
        "has_image": true
    },
    {
        "id": 1456,
        "slug": "maximum-number-of-vowels-in-a-substring-of-given-length",
        "url": "https://leetcode.com/problems/maximum-number-of-vowels-in-a-substring-of-given-length/",
        "titulo": "Maximum Number of Vowels in a Substring of Given Length",
        "enunciado": "Given a string \ns\n and an integer \nk\n, return \nthe maximum number of vowel letters in any substring of \ns\n with length \nk\n.\n\n\nVowel letters\n in English are \n'a'\n, \n'e'\n, \n'i'\n, \n'o'\n, and \n'u'\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abciiidef\", k = 3\n\nOutput:\n 3\n\nExplanation:\n The substring \"iii\" contains 3 vowel letters.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aeiou\", k = 2\n\nOutput:\n 2\n\nExplanation:\n Any substring of length 2 contains 2 vowels.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"leetcode\", k = 3\n\nOutput:\n 2\n\nExplanation:\n \"lee\", \"eet\" and \"ode\" contain 2 vowels.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters.\n\n\n1 <= k <= s.length",
        "temas": [
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1452,
        "slug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
        "url": "https://leetcode.com/problems/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list/",
        "titulo": "People Whose List of Favorite Companies Is Not a Subset of Another List",
        "enunciado": "Given the array \nfavoriteCompanies\n where \nfavoriteCompanies[i]\n is the list of favorites companies for the \nith\n person (\nindexed from 0\n).\n\n\nReturn the indices of people whose list of favorite companies is not a \nsubset\n of any other list of favorites companies\n. You must return the indices in increasing order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"google\",\"microsoft\"],[\"google\",\"facebook\"],[\"google\"],[\"amazon\"]]\n\nOutput:\n [0,1,4] \n\nExplanation:\n \nPerson with index=2 has favoriteCompanies[2]=[\"google\",\"facebook\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] corresponding to the person with index 0. \nPerson with index=3 has favoriteCompanies[3]=[\"google\"] which is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"] and favoriteCompanies[1]=[\"google\",\"microsoft\"]. \nOther lists of favorite companies are not a subset of another list, therefore, the answer is [0,1,4].\n\n\n\nExample 2:\n\n\n\n\nInput:\n favoriteCompanies = [[\"leetcode\",\"google\",\"facebook\"],[\"leetcode\",\"amazon\"],[\"facebook\",\"google\"]]\n\nOutput:\n [0,1] \n\nExplanation:\n In this case favoriteCompanies[2]=[\"facebook\",\"google\"] is a subset of favoriteCompanies[0]=[\"leetcode\",\"google\",\"facebook\"], therefore, the answer is [0,1].\n\n\n\nExample 3:\n\n\n\n\nInput:\n favoriteCompanies = [[\"leetcode\"],[\"google\"],[\"facebook\"],[\"amazon\"]]\n\nOutput:\n [0,1,2,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= favoriteCompanies.length <= 100\n\n\n1 <= favoriteCompanies[i].length <= 500\n\n\n1 <= favoriteCompanies[i][j].length <= 20\n\n\nAll strings in \nfavoriteCompanies[i]\n are \ndistinct\n.\n\n\nAll lists of favorite companies are \ndistinct\n, that is, If we sort alphabetically each list then \nfavoriteCompanies[i] != favoriteCompanies[j].\n\n\nAll strings consist of lowercase English letters only.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1451,
        "slug": "rearrange-words-in-a-sentence",
        "url": "https://leetcode.com/problems/rearrange-words-in-a-sentence/",
        "titulo": "Rearrange Words in a Sentence",
        "enunciado": "Given a sentence \ntext\n (A \nsentence\n is a string of space-separated words) in the following format:\n\n\n\n\nFirst letter is in upper case.\n\n\nEach word in \ntext\n are separated by a single space.\n\n\n\n\nYour task is to rearrange the words in text such that all words are rearranged in an increasing order of their lengths. If two words have the same length, arrange them in their original order.\n\n\nReturn the new text following the format shown above.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n text = \"Leetcode is cool\"\n\nOutput:\n \"Is cool leetcode\"\n\nExplanation: \nThere are 3 words, \"Leetcode\" of length 8, \"is\" of length 2 and \"cool\" of length 4.\nOutput is ordered by length and the new first word starts with capital letter.\n\n\n\nExample 2:\n\n\n\n\nInput:\n text = \"Keep calm and code on\"\n\nOutput:\n \"On and keep calm code\"\n\nExplanation: \nOutput is ordered as follows:\n\"On\" 2 letters.\n\"and\" 3 letters.\n\"keep\" 4 letters in case of tie order by position in original text.\n\"calm\" 4 letters.\n\"code\" 4 letters.\n\n\n\nExample 3:\n\n\n\n\nInput:\n text = \"To be or not to be\"\n\nOutput:\n \"To be or to be not\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\ntext\n begins with a capital letter and then contains lowercase letters and single space between words.\n\n\n1 <= text.length <= 10^5",
        "temas": [
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1462,
        "slug": "course-schedule-iv",
        "url": "https://leetcode.com/problems/course-schedule-iv/",
        "titulo": "Course Schedule IV",
        "enunciado": "There are a total of \nnumCourses\n courses you have to take, labeled from \n0\n to \nnumCourses - 1\n. You are given an array \nprerequisites\n where \nprerequisites[i] = [a\ni\n, b\ni\n]\n indicates that you \nmust\n take course \na\ni\n first if you want to take course \nb\ni\n.\n\n\n\n\nFor example, the pair \n[0, 1]\n indicates that you have to take course \n0\n before you can take course \n1\n.\n\n\n\n\nPrerequisites can also be \nindirect\n. If course \na\n is a prerequisite of course \nb\n, and course \nb\n is a prerequisite of course \nc\n, then course \na\n is a prerequisite of course \nc\n.\n\n\nYou are also given an array \nqueries\n where \nqueries[j] = [u\nj\n, v\nj\n]\n. For the \nj\nth\n query, you should answer whether course \nu\nj\n is a prerequisite of course \nv\nj\n or not.\n\n\nReturn \na boolean array \nanswer\n, where \nanswer[j]\n is the answer to the \nj\nth\n query.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n numCourses = 2, prerequisites = [[1,0]], queries = [[0,1],[1,0]]\n\nOutput:\n [false,true]\n\nExplanation:\n The pair [1, 0] indicates that you have to take course 1 before you can take course 0.\nCourse 0 is not a prerequisite of course 1, but the opposite is true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n numCourses = 2, prerequisites = [], queries = [[1,0],[0,1]]\n\nOutput:\n [false,false]\n\nExplanation:\n There are no prerequisites, and each course is independent.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n numCourses = 3, prerequisites = [[1,2],[1,0],[2,0]], queries = [[1,0],[1,2]]\n\nOutput:\n [true,true]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= numCourses <= 100\n\n\n0 <= prerequisites.length <= (numCourses * (numCourses - 1) / 2)\n\n\nprerequisites[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n <= numCourses - 1\n\n\na\ni\n != b\ni\n\n\nAll the pairs \n[a\ni\n, b\ni\n]\n are \nunique\n.\n\n\nThe prerequisites graph has no cycles.\n\n\n1 <= queries.length <= 10\n4\n\n\n0 <= u\ni\n, v\ni\n <= numCourses - 1\n\n\nu\ni\n != v\ni",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 1461,
        "slug": "check-if-a-string-contains-all-binary-codes-of-size-k",
        "url": "https://leetcode.com/problems/check-if-a-string-contains-all-binary-codes-of-size-k/",
        "titulo": "Check If a String Contains All Binary Codes of Size K",
        "enunciado": "Given a binary string \ns\n and an integer \nk\n, return \ntrue\n \nif every binary code of length\n \nk\n \nis a substring of\n \ns\n. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"00110110\", k = 2\n\nOutput:\n true\n\nExplanation:\n The binary codes of length 2 are \"00\", \"01\", \"10\" and \"11\". They can be all found as substrings at indices 0, 1, 3 and 2 respectively.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"0110\", k = 1\n\nOutput:\n true\n\nExplanation:\n The binary codes of length 1 are \"0\" and \"1\", it is clear that both exist as a substring. \n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"0110\", k = 2\n\nOutput:\n false\n\nExplanation:\n The binary code \"00\" is of length 2 and does not exist in the array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 * 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.\n\n\n1 <= k <= 20",
        "temas": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Rolling Hash",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1443,
        "slug": "minimum-time-to-collect-all-apples-in-a-tree",
        "url": "https://leetcode.com/problems/minimum-time-to-collect-all-apples-in-a-tree/",
        "titulo": "Minimum Time to Collect All Apples in a Tree",
        "enunciado": "Given an undirected tree consisting of \nn\n vertices numbered from \n0\n to \nn-1\n, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. \nReturn the minimum time in seconds you have to spend to collect all apples in the tree, starting at \nvertex 0\n and coming back to this vertex.\n\n\nThe edges of the undirected tree are given in the array \nedges\n, where \nedges[i] = [a\ni\n, b\ni\n]\n means that exists an edge connecting the vertices \na\ni\n and \nb\ni\n. Additionally, there is a boolean array \nhasApple\n, where \nhasApple[i] = true\n means that vertex \ni\n has an apple; otherwise, it does not have any apple.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,true,true,false]\n\nOutput:\n 8 \n\nExplanation:\n The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.  \n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,true,false,false,true,false]\n\nOutput:\n 6\n\nExplanation:\n The figure above represents the given tree where red vertices have an apple. One optimal path to collect all apples is shown by the green arrows.  \n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 7, edges = [[0,1],[0,2],[1,4],[1,5],[2,3],[2,6]], hasApple = [false,false,false,false,false,false,false]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\nedges.length == n - 1\n\n\nedges[i].length == 2\n\n\n0 <= a\ni\n < b\ni\n <= n - 1\n\n\nhasApple.length == n",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 1442,
        "slug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
        "url": "https://leetcode.com/problems/count-triplets-that-can-form-two-arrays-of-equal-xor/",
        "titulo": "Count Triplets That Can Form Two Arrays of Equal XOR",
        "enunciado": "Given an array of integers \narr\n.\n\n\nWe want to select three indices \ni\n, \nj\n and \nk\n where \n(0 <= i < j <= k < arr.length)\n.\n\n\nLet's define \na\n and \nb\n as follows:\n\n\n\n\na = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]\n\n\nb = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]\n\n\n\n\nNote that \n^\n denotes the \nbitwise-xor\n operation.\n\n\nReturn \nthe number of triplets\n (\ni\n, \nj\n and \nk\n) Where \na == b\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,3,1,6,7]\n\nOutput:\n 4\n\nExplanation:\n The triplets are (0,1,2), (0,2,2), (2,3,4) and (2,4,4)\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,1,1,1,1]\n\nOutput:\n 10\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 300\n\n\n1 <= arr[i] <= 10\n8",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1441,
        "slug": "build-an-array-with-stack-operations",
        "url": "https://leetcode.com/problems/build-an-array-with-stack-operations/",
        "titulo": "Build an Array With Stack Operations",
        "enunciado": "You are given an integer array \ntarget\n and an integer \nn\n.\n\n\nYou have an empty stack with the two following operations:\n\n\n\n\n\"Push\"\n: pushes an integer to the top of the stack.\n\n\n\"Pop\"\n: removes the integer on the top of the stack.\n\n\n\n\nYou also have a stream of the integers in the range \n[1, n]\n.\n\n\nUse the two stack operations to make the numbers in the stack (from the bottom to the top) equal to \ntarget\n. You should follow the following rules:\n\n\n\n\nIf the stream of the integers is not empty, pick the next integer from the stream and push it to the top of the stack.\n\n\nIf the stack is not empty, pop the integer at the top of the stack.\n\n\nIf, at any moment, the elements in the stack (from the bottom to the top) are equal to \ntarget\n, do not read new integers from the stream and do not do more operations on the stack.\n\n\n\n\nReturn \nthe stack operations needed to build \ntarget\n following the mentioned rules. If there are multiple valid answers, return \nany of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n target = [1,3], n = 3\n\nOutput:\n [\"Push\",\"Push\",\"Pop\",\"Push\"]\n\nExplanation:\n Initially the stack s is empty. The last element is the top of the stack.\nRead 1 from the stream and push it to the stack. s = [1].\nRead 2 from the stream and push it to the stack. s = [1,2].\nPop the integer on the top of the stack. s = [1].\nRead 3 from the stream and push it to the stack. s = [1,3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n target = [1,2,3], n = 3\n\nOutput:\n [\"Push\",\"Push\",\"Push\"]\n\nExplanation:\n Initially the stack s is empty. The last element is the top of the stack.\nRead 1 from the stream and push it to the stack. s = [1].\nRead 2 from the stream and push it to the stack. s = [1,2].\nRead 3 from the stream and push it to the stack. s = [1,2,3].\n\n\n\nExample 3:\n\n\n\n\nInput:\n target = [1,2], n = 4\n\nOutput:\n [\"Push\",\"Push\"]\n\nExplanation:\n Initially the stack s is empty. The last element is the top of the stack.\nRead 1 from the stream and push it to the stack. s = [1].\nRead 2 from the stream and push it to the stack. s = [1,2].\nSince the stack (from the bottom to the top) is equal to target, we stop the stack operations.\nThe answers that read integer 3 from the stream are not accepted.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= target.length <= 100\n\n\n1 <= n <= 100\n\n\n1 <= target[i] <= n\n\n\ntarget\n is strictly increasing.",
        "temas": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1438,
        "slug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
        "url": "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/",
        "titulo": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
        "enunciado": "Given an array of integers \nnums\n and an integer \nlimit\n, return the size of the longest \nnon-empty\n subarray such that the absolute difference between any two elements of this subarray is less than or equal to \nlimit\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [8,2,4,7], limit = 4\n\nOutput:\n 2 \n\nExplanation:\n All subarrays are: \n[8] with maximum absolute diff |8-8| = 0 <= 4.\n[8,2] with maximum absolute diff |8-2| = 6 > 4. \n[8,2,4] with maximum absolute diff |8-2| = 6 > 4.\n[8,2,4,7] with maximum absolute diff |8-2| = 6 > 4.\n[2] with maximum absolute diff |2-2| = 0 <= 4.\n[2,4] with maximum absolute diff |2-4| = 2 <= 4.\n[2,4,7] with maximum absolute diff |2-7| = 5 > 4.\n[4] with maximum absolute diff |4-4| = 0 <= 4.\n[4,7] with maximum absolute diff |4-7| = 3 <= 4.\n[7] with maximum absolute diff |7-7| = 0 <= 4. \nTherefore, the size of the longest subarray is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [10,1,2,4,7,2], limit = 5\n\nOutput:\n 4 \n\nExplanation:\n The subarray [2,4,7,2] is the longest since the maximum absolute diff is |2-7| = 5 <= 5.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [4,2,2,2,4,4,2,2], limit = 0\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n0 <= limit <= 10\n9",
        "temas": [
            "Array",
            "Queue",
            "Sliding Window",
            "Heap (Priority Queue)",
            "Ordered Set",
            "Monotonic Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1448,
        "slug": "count-good-nodes-in-binary-tree",
        "url": "https://leetcode.com/problems/count-good-nodes-in-binary-tree/",
        "titulo": "Count Good Nodes in Binary Tree",
        "enunciado": "Given a binary tree \nroot\n, a node \nX\n in the tree is named \ngood\n if in the path from root to \nX\n there are no nodes with a value \ngreater than\n X.\n\n\nReturn the number of \ngood\n nodes in the binary tree.\n\n\n \n\n\nExample 1:\n\n\n\n\n\r\n\nInput:\n root = [3,1,4,3,null,1,5]\r\n\nOutput:\n 4\r\n\nExplanation:\n Nodes in blue are \ngood\n.\r\nRoot Node (3) is always a good node.\r\nNode 4 -> (3,4) is the maximum value in the path starting from the root.\r\nNode 5 -> (3,4,5) is the maximum value in the path\r\nNode 3 -> (3,1,3) is the maximum value in the path.\n\n\nExample 2:\n\n\n\n\n\r\n\nInput:\n root = [3,3,null,4,2]\r\n\nOutput:\n 3\r\n\nExplanation:\n Node 2 -> (3, 3, 2) is not good, because \"3\" is higher than it.\n\n\nExample 3:\n\n\n\r\n\nInput:\n root = [1]\r\n\nOutput:\n 1\r\n\nExplanation:\n Root is considered as \ngood\n.\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the binary tree is in the range \n[1, 10^5]\n.\n\n\nEach node's value is between \n[-10^4, 10^4]\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1447,
        "slug": "simplified-fractions",
        "url": "https://leetcode.com/problems/simplified-fractions/",
        "titulo": "Simplified Fractions",
        "enunciado": "Given an integer \nn\n, return \na list of all \nsimplified\n fractions between \n0\n and \n1\n (exclusive) such that the denominator is less-than-or-equal-to \nn\n. You can return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n [\"1/2\"]\n\nExplanation:\n \"1/2\" is the only unique fraction with a denominator less-than-or-equal-to 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n [\"1/2\",\"1/3\",\"2/3\"]\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n [\"1/2\",\"1/3\",\"1/4\",\"2/3\",\"3/4\"]\n\nExplanation:\n \"2/4\" is not a simplified fraction because it can be simplified to \"1/2\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 100",
        "temas": [
            "Math",
            "String",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1424,
        "slug": "diagonal-traverse-ii",
        "url": "https://leetcode.com/problems/diagonal-traverse-ii/",
        "titulo": "Diagonal Traverse II",
        "enunciado": "Given a 2D integer array \nnums\n, return \nall elements of \nnums\n in diagonal order as shown in the below images\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n nums = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput:\n [1,4,2,7,5,3,8,6,9]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n nums = [[1,2,3,4,5],[6,7],[8],[9,10,11],[12,13,14,15,16]]\n\nOutput:\n [1,6,2,8,7,3,9,4,12,10,5,13,11,14,15,16]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i].length <= 10\n5\n\n\n1 <= sum(nums[i].length) <= 10\n5\n\n\n1 <= nums[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1423,
        "slug": "maximum-points-you-can-obtain-from-cards",
        "url": "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards/",
        "titulo": "Maximum Points You Can Obtain from Cards",
        "enunciado": "There are several cards \narranged in a row\n, and each card has an associated number of points. The points are given in the integer array \ncardPoints\n.\n\n\nIn one step, you can take one card from the beginning or from the end of the row. You have to take exactly \nk\n cards.\n\n\nYour score is the sum of the points of the cards you have taken.\n\n\nGiven the integer array \ncardPoints\n and the integer \nk\n, return the \nmaximum score\n you can obtain.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n cardPoints = [1,2,3,4,5,6,1], k = 3\n\nOutput:\n 12\n\nExplanation:\n After the first step, your score will always be 1. However, choosing the rightmost card first will maximize your total score. The optimal strategy is to take the three cards on the right, giving a final score of 1 + 6 + 5 = 12.\n\n\n\nExample 2:\n\n\n\n\nInput:\n cardPoints = [2,2,2], k = 2\n\nOutput:\n 4\n\nExplanation:\n Regardless of which two cards you take, your score will always be 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n cardPoints = [9,7,7,9,7,7,9], k = 7\n\nOutput:\n 55\n\nExplanation:\n You have to take all the cards. Your score is the sum of points of all cards.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= cardPoints.length <= 10\n5\n\n\n1 <= cardPoints[i] <= 10\n4\n\n\n1 <= k <= cardPoints.length",
        "temas": [
            "Array",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1419,
        "slug": "minimum-number-of-frogs-croaking",
        "url": "https://leetcode.com/problems/minimum-number-of-frogs-croaking/",
        "titulo": "Minimum Number of Frogs Croaking",
        "enunciado": "You are given the string \ncroakOfFrogs\n, which represents a combination of the string \n\"croak\"\n from different frogs, that is, multiple frogs can croak at the same time, so multiple \n\"croak\"\n are mixed.\n\n\nReturn the minimum number of \ndifferent\n frogs to finish all the croaks in the given string.\n\n\nA valid \n\"croak\"\n means a frog is printing five letters \n'c'\n, \n'r'\n, \n'o'\n, \n'a'\n, and \n'k'\n \nsequentially\n. The frogs have to print all five letters to finish a croak. If the given string is not a combination of a valid \n\"croak\"\n return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n croakOfFrogs = \"croakcroak\"\n\nOutput:\n 1 \n\nExplanation:\n One frog yelling \"croak\n\"\n twice.\n\n\n\nExample 2:\n\n\n\n\nInput:\n croakOfFrogs = \"crcoakroak\"\n\nOutput:\n 2 \n\nExplanation:\n The minimum number of frogs is two. \nThe first frog could yell \"\ncr\nc\noak\nroak\".\nThe second frog could yell later \"cr\nc\noak\nroak\n\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n croakOfFrogs = \"croakcrook\"\n\nOutput:\n -1\n\nExplanation:\n The given string is an invalid combination of \"croak\n\"\n from different frogs.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= croakOfFrogs.length <= 10\n5\n\n\ncroakOfFrogs\n is either \n'c'\n, \n'r'\n, \n'o'\n, \n'a'\n, or \n'k'\n.",
        "temas": [
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1418,
        "slug": "display-table-of-food-orders-in-a-restaurant",
        "url": "https://leetcode.com/problems/display-table-of-food-orders-in-a-restaurant/",
        "titulo": "Display Table of Food Orders in a Restaurant",
        "enunciado": "Given the array \norders\n, which represents the orders that customers have done in a restaurant. More specifically \norders[i]=[customerName\ni\n,tableNumber\ni\n,foodItem\ni\n]\n where \ncustomerName\ni\n is the name of the customer, \ntableNumber\ni\n is the table customer sit at, and \nfoodItem\ni\n is the item customer orders.\n\n\nReturn the restaurant's “\ndisplay table\n”\n. The “\ndisplay table\n” is a table whose row entries denote how many of each food item each table ordered. The first column is the table number and the remaining columns correspond to each food item in alphabetical order. The first row should be a header whose first column is “Table”, followed by the names of the food items. Note that the customer names are not part of the table. Additionally, the rows should be sorted in numerically increasing order.\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n orders = [[\"David\",\"3\",\"Ceviche\"],[\"Corina\",\"10\",\"Beef Burrito\"],[\"David\",\"3\",\"Fried Chicken\"],[\"Carla\",\"5\",\"Water\"],[\"Carla\",\"5\",\"Ceviche\"],[\"Rous\",\"3\",\"Ceviche\"]]\r\n\nOutput:\n [[\"Table\",\"Beef Burrito\",\"Ceviche\",\"Fried Chicken\",\"Water\"],[\"3\",\"0\",\"2\",\"1\",\"0\"],[\"5\",\"0\",\"1\",\"0\",\"1\"],[\"10\",\"1\",\"0\",\"0\",\"0\"]] \r\n\nExplanation:\r\n\nThe displaying table looks like:\r\n\nTable,Beef Burrito,Ceviche,Fried Chicken,Water\n\r\n3    ,0           ,2      ,1            ,0\r\n5    ,0           ,1      ,0            ,1\r\n10   ,1           ,0      ,0            ,0\r\nFor the table 3: David orders \"Ceviche\" and \"Fried Chicken\", and Rous orders \"Ceviche\".\r\nFor the table 5: Carla orders \"Water\" and \"Ceviche\".\r\nFor the table 10: Corina orders \"Beef Burrito\". \r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n orders = [[\"James\",\"12\",\"Fried Chicken\"],[\"Ratesh\",\"12\",\"Fried Chicken\"],[\"Amadeus\",\"12\",\"Fried Chicken\"],[\"Adam\",\"1\",\"Canadian Waffles\"],[\"Brianna\",\"1\",\"Canadian Waffles\"]]\r\n\nOutput:\n [[\"Table\",\"Canadian Waffles\",\"Fried Chicken\"],[\"1\",\"2\",\"0\"],[\"12\",\"0\",\"3\"]] \r\n\nExplanation:\n \r\nFor the table 1: Adam and Brianna order \"Canadian Waffles\".\r\nFor the table 12: James, Ratesh and Amadeus order \"Fried Chicken\".\r\n\n\n\nExample 3:\n\n\n\r\n\nInput:\n orders = [[\"Laura\",\"2\",\"Bean Burrito\"],[\"Jhon\",\"2\",\"Beef Burrito\"],[\"Melissa\",\"2\",\"Soda\"]]\r\n\nOutput:\n [[\"Table\",\"Bean Burrito\",\"Beef Burrito\",\"Soda\"],[\"2\",\"1\",\"1\",\"1\"]]\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= orders.length <= 5 * 10^4\n\n\norders[i].length == 3\n\n\n1 <= customerName\ni\n.length, foodItem\ni\n.length <= 20\n\n\ncustomerName\ni\n and \nfoodItem\ni\n consist of lowercase and uppercase English letters and the space character.\n\n\ntableNumber\ni\n \nis a valid integer between \n1\n and \n500\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1433,
        "slug": "check-if-a-string-can-break-another-string",
        "url": "https://leetcode.com/problems/check-if-a-string-can-break-another-string/",
        "titulo": "Check If a String Can Break Another String",
        "enunciado": "Given two strings: \ns1\n and \ns2\n with the same size, check if some permutation of string \ns1\n can break some permutation of string \ns2\n or vice-versa. In other words \ns2\n can break \ns1\n or vice-versa.\n\n\nA string \nx\n can break string \ny\n (both of size \nn\n) if \nx[i] >= y[i]\n (in alphabetical order) for all \ni\n between \n0\n and \nn-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"abc\", s2 = \"xya\"\n\nOutput:\n true\n\nExplanation:\n \"ayx\" is a permutation of s2=\"xya\" which can break to string \"abc\" which is a permutation of s1=\"abc\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"abe\", s2 = \"acd\"\n\nOutput:\n false \n\nExplanation:\n All permutations for s1=\"abe\" are: \"abe\", \"aeb\", \"bae\", \"bea\", \"eab\" and \"eba\" and all permutation for s2=\"acd\" are: \"acd\", \"adc\", \"cad\", \"cda\", \"dac\" and \"dca\". However, there is not any permutation from s1 which can break some permutation from s2 and vice-versa.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s1 = \"leetcodee\", s2 = \"interview\"\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\ns1.length == n\n\n\ns2.length == n\n\n\n1 <= n <= 10^5\n\n\nAll strings consist of lowercase English letters.",
        "temas": [
            "String",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1432,
        "slug": "max-difference-you-can-get-from-changing-an-integer",
        "url": "https://leetcode.com/problems/max-difference-you-can-get-from-changing-an-integer/",
        "titulo": "Max Difference You Can Get From Changing an Integer",
        "enunciado": "You are given an integer \nnum\n. You will apply the following steps to \nnums\n \ntwo\n times \nindependently\n:\n\n\n\n\nPick a digit \nx (0 <= x <= 9)\n.\n\n\nPick another digit \ny (0 <= y <= 9)\n. Note \ny\n can be equal to \nx\n.\n\n\nReplace all the occurrences of \nx\n in the decimal representation of \nnum\n by \ny\n.\n\n\n\n\nLet \na\n and \nb\n be the two results from applying the operation to \nnum\n \nindependently\n.\n\n\nReturn \nthe max difference\n between \na\n and \nb\n.\n\n\nNote that the new integer (either \na\n or \nb\n) \nmust not\n have any leading zeros, and it \nmust not\n be 0.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 555\n\nOutput:\n 888\n\nExplanation:\n The first time pick x = 5 and y = 9 and store the new integer in a.\nThe second time pick x = 5 and y = 1 and store the new integer in b.\nWe have now a = 999 and b = 111 and max difference = 888\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = 9\n\nOutput:\n 8\n\nExplanation:\n The first time pick x = 9 and y = 9 and store the new integer in a.\nThe second time pick x = 9 and y = 1 and store the new integer in b.\nWe have now a = 9 and b = 1 and max difference = 8\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num <= 10\n8",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1410,
        "slug": "html-entity-parser",
        "url": "https://leetcode.com/problems/html-entity-parser/",
        "titulo": "HTML Entity Parser",
        "enunciado": "HTML entity parser\n is the parser that takes HTML code as input and replace all the entities of the special characters by the characters itself.\n\n\nThe special characters and their entities for HTML are:\n\n\n\n\nQuotation Mark:\n the entity is \n&quot;\n and symbol character is \n\"\n.\n\n\nSingle Quote Mark:\n the entity is \n&apos;\n and symbol character is \n'\n.\n\n\nAmpersand:\n the entity is \n&amp;\n and symbol character is \n&\n.\n\n\nGreater Than Sign:\n the entity is \n&gt;\n and symbol character is \n>\n.\n\n\nLess Than Sign:\n the entity is \n&lt;\n and symbol character is \n<\n.\n\n\nSlash:\n the entity is \n&frasl;\n and symbol character is \n/\n.\n\n\n\n\nGiven the input \ntext\n string to the HTML parser, you have to implement the entity parser.\n\n\nReturn \nthe text after replacing the entities by the special characters\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n text = \"&amp; is an HTML entity but &ambassador; is not.\"\n\nOutput:\n \"& is an HTML entity but &ambassador; is not.\"\n\nExplanation:\n The parser will replace the &amp; entity by &\n\n\n\nExample 2:\n\n\n\n\nInput:\n text = \"and I quote: &quot;...&quot;\"\n\nOutput:\n \"and I quote: \\\"...\\\"\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= text.length <= 10\n5\n\n\nThe string may contain any possible characters out of all the 256 ASCII characters.",
        "temas": [
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1409,
        "slug": "queries-on-a-permutation-with-key",
        "url": "https://leetcode.com/problems/queries-on-a-permutation-with-key/",
        "titulo": "Queries on a Permutation With Key",
        "enunciado": "Given the array \nqueries\n of positive integers between \n1\n and \nm\n, you have to process all \nqueries[i]\n (from \ni=0\n to \ni=queries.length-1\n) according to the following rules:\n\n\n\n\nIn the beginning, you have the permutation \nP=[1,2,3,...,m]\n.\n\n\nFor the current \ni\n, find the position of \nqueries[i]\n in the permutation \nP\n (\nindexing from 0\n) and then move this at the beginning of the permutation \nP\n. Notice that the position of \nqueries[i]\n in \nP\n is the result for \nqueries[i]\n.\n\n\n\n\nReturn an array containing the result for the given \nqueries\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n queries = [3,1,2,1], m = 5\n\nOutput:\n [2,1,2,1] \n\nExplanation:\n The queries are processed as follow: \nFor i=0: queries[i]=3, P=[1,2,3,4,5], position of 3 in P is \n2\n, then we move 3 to the beginning of P resulting in P=[3,1,2,4,5]. \nFor i=1: queries[i]=1, P=[3,1,2,4,5], position of 1 in P is \n1\n, then we move 1 to the beginning of P resulting in P=[1,3,2,4,5]. \nFor i=2: queries[i]=2, P=[1,3,2,4,5], position of 2 in P is \n2\n, then we move 2 to the beginning of P resulting in P=[2,1,3,4,5]. \nFor i=3: queries[i]=1, P=[2,1,3,4,5], position of 1 in P is \n1\n, then we move 1 to the beginning of P resulting in P=[1,2,3,4,5]. \nTherefore, the array containing the result is [2,1,2,1].  \n\n\n\nExample 2:\n\n\n\n\nInput:\n queries = [4,1,2,2], m = 4\n\nOutput:\n [3,1,2,0]\n\n\n\nExample 3:\n\n\n\n\nInput:\n queries = [7,5,5,8,3], m = 8\n\nOutput:\n [6,5,0,7,5]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m <= 10^3\n\n\n1 <= queries.length <= m\n\n\n1 <= queries[i] <= m",
        "temas": [
            "Array",
            "Binary Indexed Tree",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1404,
        "slug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
        "url": "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one/",
        "titulo": "Number of Steps to Reduce a Number in Binary Representation to One",
        "enunciado": "Given the binary representation of an integer as a string \ns\n, return \nthe number of steps to reduce it to \n1\n under the following rules\n:\n\n\n\n\n\n\nIf the current number is even, you have to divide it by \n2\n.\n\n\n\n\n\n\nIf the current number is odd, you have to add \n1\n to it.\n\n\n\n\n\n\nIt is guaranteed that you can always reach one for all test cases.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"1101\"\n\nOutput:\n 6\n\nExplanation:\n \"1101\" corressponds to number 13 in their decimal representation.\nStep 1) 13 is odd, add 1 and obtain 14. \nStep 2) 14 is even, divide by 2 and obtain 7.\nStep 3) 7 is odd, add 1 and obtain 8.\nStep 4) 8 is even, divide by 2 and obtain 4.  \nStep 5) 4 is even, divide by 2 and obtain 2. \nStep 6) 2 is even, divide by 2 and obtain 1.  \n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"10\"\n\nOutput:\n 1\n\nExplanation:\n \"10\" corresponds to number 2 in their decimal representation.\nStep 1) 2 is even, divide by 2 and obtain 1.  \n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"1\"\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 500\n\n\ns\n consists of characters '0' or '1'\n\n\ns[0] == '1'",
        "temas": [
            "String",
            "Bit Manipulation",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1415,
        "slug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
        "url": "https://leetcode.com/problems/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n/",
        "titulo": "The k-th Lexicographical String of All Happy Strings of Length n",
        "enunciado": "A \nhappy string\n is a string that:\n\n\n\n\nconsists only of letters of the set \n['a', 'b', 'c']\n.\n\n\ns[i] != s[i + 1]\n for all values of \ni\n from \n1\n to \ns.length - 1\n (string is 1-indexed).\n\n\n\n\nFor example, strings \n\"abc\", \"ac\", \"b\"\n and \n\"abcbabcbcb\"\n are all happy strings and strings \n\"aa\", \"baa\"\n and \n\"ababbc\"\n are not happy strings.\n\n\nGiven two integers \nn\n and \nk\n, consider a list of all happy strings of length \nn\n sorted in lexicographical order.\n\n\nReturn \nthe kth string\n of this list or return an \nempty string\n if there are less than \nk\n happy strings of length \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1, k = 3\n\nOutput:\n \"c\"\n\nExplanation:\n The list [\"a\", \"b\", \"c\"] contains all happy strings of length 1. The third string is \"c\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1, k = 4\n\nOutput:\n \"\"\n\nExplanation:\n There are only 3 happy strings of length 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 3, k = 9\n\nOutput:\n \"cab\"\n\nExplanation:\n There are 12 different happy string of length 3 [\"aba\", \"abc\", \"aca\", \"acb\", \"bab\", \"bac\", \"bca\", \"bcb\", \"cab\", \"cac\", \"cba\", \"cbc\"]. You will find the 9\nth\n string = \"cab\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n\n\n1 <= k <= 100",
        "temas": [
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1414,
        "slug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
        "url": "https://leetcode.com/problems/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k/",
        "titulo": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
        "enunciado": "Given an integer \nk\n, \nreturn the minimum number of Fibonacci numbers whose sum is equal to \nk\n. The same Fibonacci number can be used multiple times.\n\n\nThe Fibonacci numbers are defined as:\n\n\n\n\nF\n1\n = 1\n\n\nF\n2\n = 1\n\n\nF\nn\n = F\nn-1\n + F\nn-2\n for \nn > 2.\n\n\n\nIt is guaranteed that for the given constraints we can always find such Fibonacci numbers that sum up to \nk\n.\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n k = 7\n\nOutput:\n 2 \n\nExplanation:\n The Fibonacci numbers are: 1, 1, 2, 3, 5, 8, 13, ... \nFor k = 7 we can use 2 + 5 = 7.\n\n\nExample 2:\n\n\n\n\nInput:\n k = 10\n\nOutput:\n 2 \n\nExplanation:\n For k = 10 we can use 2 + 8 = 10.\n\n\n\nExample 3:\n\n\n\n\nInput:\n k = 19\n\nOutput:\n 3 \n\nExplanation:\n For k = 19 we can use 1 + 5 + 13 = 19.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 10\n9",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1396,
        "slug": "design-underground-system",
        "url": "https://leetcode.com/problems/design-underground-system/",
        "titulo": "Design Underground System",
        "enunciado": "An underground railway system is keeping track of customer travel times between different stations. They are using this data to calculate the average time it takes to travel from one station to another.\n\n\nImplement the \nUndergroundSystem\n class:\n\n\n\n\nvoid checkIn(int id, string stationName, int t)\n\n\n\n\nA customer with a card ID equal to \nid\n, checks in at the station \nstationName\n at time \nt\n.\n\n\nA customer can only be checked into one place at a time.\n\n\n\n\n\n\nvoid checkOut(int id, string stationName, int t)\n\n\n\n\nA customer with a card ID equal to \nid\n, checks out from the station \nstationName\n at time \nt\n.\n\n\n\n\n\n\ndouble getAverageTime(string startStation, string endStation)\n\n\n\n\nReturns the average time it takes to travel from \nstartStation\n to \nendStation\n.\n\n\nThe average time is computed from all the previous traveling times from \nstartStation\n to \nendStation\n that happened \ndirectly\n, meaning a check in at \nstartStation\n followed by a check out from \nendStation\n.\n\n\nThe time it takes to travel from \nstartStation\n to \nendStation\n \nmay be different\n from the time it takes to travel from \nendStation\n to \nstartStation\n.\n\n\nThere will be at least one customer that has traveled from \nstartStation\n to \nendStation\n before \ngetAverageTime\n is called.\n\n\n\n\n\n\n\n\nYou may assume all calls to the \ncheckIn\n and \ncheckOut\n methods are consistent. If a customer checks in at time \nt\n1\n then checks out at time \nt\n2\n, then \nt\n1\n < t\n2\n. All events happen in chronological order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"UndergroundSystem\",\"checkIn\",\"checkIn\",\"checkIn\",\"checkOut\",\"checkOut\",\"checkOut\",\"getAverageTime\",\"getAverageTime\",\"checkIn\",\"getAverageTime\",\"checkOut\",\"getAverageTime\"]\n[[],[45,\"Leyton\",3],[32,\"Paradise\",8],[27,\"Leyton\",10],[45,\"Waterloo\",15],[27,\"Waterloo\",20],[32,\"Cambridge\",22],[\"Paradise\",\"Cambridge\"],[\"Leyton\",\"Waterloo\"],[10,\"Leyton\",24],[\"Leyton\",\"Waterloo\"],[10,\"Waterloo\",38],[\"Leyton\",\"Waterloo\"]]\n\n\nOutput\n\n[null,null,null,null,null,null,null,14.00000,11.00000,null,11.00000,null,12.00000]\n\n\nExplanation\n\nUndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(45, \"Leyton\", 3);\nundergroundSystem.checkIn(32, \"Paradise\", 8);\nundergroundSystem.checkIn(27, \"Leyton\", 10);\nundergroundSystem.checkOut(45, \"Waterloo\", 15);  // Customer 45 \"Leyton\" -> \"Waterloo\" in 15-3 = 12\nundergroundSystem.checkOut(27, \"Waterloo\", 20);  // Customer 27 \"Leyton\" -> \"Waterloo\" in 20-10 = 10\nundergroundSystem.checkOut(32, \"Cambridge\", 22); // Customer 32 \"Paradise\" -> \"Cambridge\" in 22-8 = 14\nundergroundSystem.getAverageTime(\"Paradise\", \"Cambridge\"); // return 14.00000. One trip \"Paradise\" -> \"Cambridge\", (14) / 1 = 14\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");    // return 11.00000. Two trips \"Leyton\" -> \"Waterloo\", (10 + 12) / 2 = 11\nundergroundSystem.checkIn(10, \"Leyton\", 24);\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");    // return 11.00000\nundergroundSystem.checkOut(10, \"Waterloo\", 38);  // Customer 10 \"Leyton\" -> \"Waterloo\" in 38-24 = 14\nundergroundSystem.getAverageTime(\"Leyton\", \"Waterloo\");    // return 12.00000. Three trips \"Leyton\" -> \"Waterloo\", (10 + 12 + 14) / 3 = 12\n\n\n\nExample 2:\n\n\n\n\nInput\n\n[\"UndergroundSystem\",\"checkIn\",\"checkOut\",\"getAverageTime\",\"checkIn\",\"checkOut\",\"getAverageTime\",\"checkIn\",\"checkOut\",\"getAverageTime\"]\n[[],[10,\"Leyton\",3],[10,\"Paradise\",8],[\"Leyton\",\"Paradise\"],[5,\"Leyton\",10],[5,\"Paradise\",16],[\"Leyton\",\"Paradise\"],[2,\"Leyton\",21],[2,\"Paradise\",30],[\"Leyton\",\"Paradise\"]]\n\n\nOutput\n\n[null,null,null,5.00000,null,null,5.50000,null,null,6.66667]\n\n\nExplanation\n\nUndergroundSystem undergroundSystem = new UndergroundSystem();\nundergroundSystem.checkIn(10, \"Leyton\", 3);\nundergroundSystem.checkOut(10, \"Paradise\", 8); // Customer 10 \"Leyton\" -> \"Paradise\" in 8-3 = 5\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 5.00000, (5) / 1 = 5\nundergroundSystem.checkIn(5, \"Leyton\", 10);\nundergroundSystem.checkOut(5, \"Paradise\", 16); // Customer 5 \"Leyton\" -> \"Paradise\" in 16-10 = 6\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 5.50000, (5 + 6) / 2 = 5.5\nundergroundSystem.checkIn(2, \"Leyton\", 21);\nundergroundSystem.checkOut(2, \"Paradise\", 30); // Customer 2 \"Leyton\" -> \"Paradise\" in 30-21 = 9\nundergroundSystem.getAverageTime(\"Leyton\", \"Paradise\"); // return 6.66667, (5 + 6 + 9) / 3 = 6.66667\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= id, t <= 10\n6\n\n\n1 <= stationName.length, startStation.length, endStation.length <= 10\n\n\nAll strings consist of uppercase and lowercase English letters and digits.\n\n\nThere will be at most \n2 * 10\n4\n calls \nin total\n to \ncheckIn\n, \ncheckOut\n, and \ngetAverageTime\n.\n\n\nAnswers within \n10\n-5\n of the actual value will be accepted.",
        "temas": [
            "Hash Table",
            "String",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1395,
        "slug": "count-number-of-teams",
        "url": "https://leetcode.com/problems/count-number-of-teams/",
        "titulo": "Count Number of Teams",
        "enunciado": "There are \nn\n soldiers standing in a line. Each soldier is assigned a \nunique\n \nrating\n value.\n\n\nYou have to form a team of 3 soldiers amongst them under the following rules:\n\n\n\n\nChoose 3 soldiers with index (\ni\n, \nj\n, \nk\n) with rating (\nrating[i]\n, \nrating[j]\n, \nrating[k]\n).\n\n\nA team is valid if: (\nrating[i] < rating[j] < rating[k]\n) or (\nrating[i] > rating[j] > rating[k]\n) where (\n0 <= i < j < k < n\n).\n\n\n\n\nReturn the number of teams you can form given the conditions. (soldiers can be part of multiple teams).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rating = [2,5,3,4,1]\n\nOutput:\n 3\n\nExplanation:\n We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1). \n\n\n\nExample 2:\n\n\n\n\nInput:\n rating = [2,1,3]\n\nOutput:\n 0\n\nExplanation:\n We can't form any team given the conditions.\n\n\n\nExample 3:\n\n\n\n\nInput:\n rating = [1,2,3,4]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == rating.length\n\n\n3 <= n <= 1000\n\n\n1 <= rating[i] <= 10\n5\n\n\nAll the integers in \nrating\n are \nunique\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1391,
        "slug": "check-if-there-is-a-valid-path-in-a-grid",
        "url": "https://leetcode.com/problems/check-if-there-is-a-valid-path-in-a-grid/",
        "titulo": "Check if There is a Valid Path in a Grid",
        "enunciado": "You are given an \nm x n\n \ngrid\n. Each cell of \ngrid\n represents a street. The street of \ngrid[i][j]\n can be:\n\n\n\n\n1\n which means a street connecting the left cell and the right cell.\n\n\n2\n which means a street connecting the upper cell and the lower cell.\n\n\n3\n which means a street connecting the left cell and the lower cell.\n\n\n4\n which means a street connecting the right cell and the lower cell.\n\n\n5\n which means a street connecting the left cell and the upper cell.\n\n\n6\n which means a street connecting the right cell and the upper cell.\n\n\n\n\n\n\nYou will initially start at the street of the upper-left cell \n(0, 0)\n. A valid path in the grid is a path that starts from the upper left cell \n(0, 0)\n and ends at the bottom-right cell \n(m - 1, n - 1)\n. \nThe path should only follow the streets\n.\n\n\nNotice\n that you are \nnot allowed\n to change any street.\n\n\nReturn \ntrue\n if there is a valid path in the grid or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[2,4,3],[6,5,2]]\n\nOutput:\n true\n\nExplanation:\n As shown you can start at cell (0, 0) and visit all the cells of the grid to reach (m - 1, n - 1).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,2,1],[1,2,1]]\n\nOutput:\n false\n\nExplanation:\n As shown you the street at cell (0, 0) is not connected with any street of any other cell and you will get stuck at cell (0, 0)\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[1,1,2]]\n\nOutput:\n false\n\nExplanation:\n You will get stuck at cell (0, 1) and you cannot reach cell (0, 2).\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 300\n\n\n1 <= grid[i][j] <= 6",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1400,
        "slug": "construct-k-palindrome-strings",
        "url": "https://leetcode.com/problems/construct-k-palindrome-strings/",
        "titulo": "Construct K Palindrome Strings",
        "enunciado": "Given a string \ns\n and an integer \nk\n, return \ntrue\n if you can use all the characters in \ns\n to construct \nnon-empty\n \nk\n \npalindrome strings\n or \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"annabelle\", k = 2\n\nOutput:\n true\n\nExplanation:\n You can construct two palindromes using all characters in s.\nSome possible constructions \"anna\" + \"elble\", \"anbna\" + \"elle\", \"anellena\" + \"b\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"leetcode\", k = 3\n\nOutput:\n false\n\nExplanation:\n It is impossible to construct 3 palindromes using all the characters of s.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"true\", k = 4\n\nOutput:\n true\n\nExplanation:\n The only possible solution is to put each character in a separate string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters.\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1401,
        "slug": "circle-and-rectangle-overlapping",
        "url": "https://leetcode.com/problems/circle-and-rectangle-overlapping/",
        "titulo": "Circle and Rectangle Overlapping",
        "enunciado": "You are given a circle represented as \n(radius, xCenter, yCenter)\n and an axis-aligned rectangle represented as \n(x1, y1, x2, y2)\n, where \n(x1, y1)\n are the coordinates of the bottom-left corner, and \n(x2, y2)\n are the coordinates of the top-right corner of the rectangle.\n\n\nReturn \ntrue\n if the circle and rectangle are overlapped otherwise return \nfalse\n. In other words, check if there is \nany\n point \n(x\ni\n, y\ni\n)\n that belongs to the circle and the rectangle at the same time.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n radius = 1, xCenter = 0, yCenter = 0, x1 = 1, y1 = -1, x2 = 3, y2 = 1\n\nOutput:\n true\n\nExplanation:\n Circle and rectangle share the point (1,0).\n\n\n\nExample 2:\n\n\n\n\nInput:\n radius = 1, xCenter = 1, yCenter = 1, x1 = 1, y1 = -3, x2 = 2, y2 = -1\n\nOutput:\n false\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n radius = 1, xCenter = 0, yCenter = 0, x1 = -1, y1 = 0, x2 = 0, y2 = 1\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= radius <= 2000\n\n\n-10\n4\n <= xCenter, yCenter <= 10\n4\n\n\n-10\n4\n <= x1 < x2 <= 10\n4\n\n\n-10\n4\n <= y1 < y2 <= 10\n4",
        "temas": [
            "Math",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 1381,
        "slug": "design-a-stack-with-increment-operation",
        "url": "https://leetcode.com/problems/design-a-stack-with-increment-operation/",
        "titulo": "Design a Stack With Increment Operation",
        "enunciado": "Design a stack that supports increment operations on its elements.\n\n\nImplement the \nCustomStack\n class:\n\n\n\n\nCustomStack(int maxSize)\n Initializes the object with \nmaxSize\n which is the maximum number of elements in the stack.\n\n\nvoid push(int x)\n Adds \nx\n to the top of the stack if the stack has not reached the \nmaxSize\n.\n\n\nint pop()\n Pops and returns the top of the stack or \n-1\n if the stack is empty.\n\n\nvoid inc(int k, int val)\n Increments the bottom \nk\n elements of the stack by \nval\n. If there are less than \nk\n elements in the stack, increment all the elements in the stack.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"CustomStack\",\"push\",\"push\",\"pop\",\"push\",\"push\",\"push\",\"increment\",\"increment\",\"pop\",\"pop\",\"pop\",\"pop\"]\n[[3],[1],[2],[],[2],[3],[4],[5,100],[2,100],[],[],[],[]]\n\nOutput\n\n[null,null,null,2,null,null,null,null,null,103,202,201,-1]\n\nExplanation\n\nCustomStack stk = new CustomStack(3); // Stack is Empty []\nstk.push(1);                          // stack becomes [1]\nstk.push(2);                          // stack becomes [1, 2]\nstk.pop();                            // return 2 --> Return top of the stack 2, stack becomes [1]\nstk.push(2);                          // stack becomes [1, 2]\nstk.push(3);                          // stack becomes [1, 2, 3]\nstk.push(4);                          // stack still [1, 2, 3], Do not add another elements as size is 4\nstk.increment(5, 100);                // stack becomes [101, 102, 103]\nstk.increment(2, 100);                // stack becomes [201, 202, 103]\nstk.pop();                            // return 103 --> Return top of the stack 103, stack becomes [201, 202]\nstk.pop();                            // return 202 --> Return top of the stack 202, stack becomes [201]\nstk.pop();                            // return 201 --> Return top of the stack 201, stack becomes []\nstk.pop();                            // return -1 --> Stack is empty return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= maxSize, x, k <= 1000\n\n\n0 <= val <= 100\n\n\nAt most \n1000\n calls will be made to each method of \nincrement\n, \npush\n and \npop\n each separately.",
        "temas": [
            "Array",
            "Stack",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1376,
        "slug": "time-needed-to-inform-all-employees",
        "url": "https://leetcode.com/problems/time-needed-to-inform-all-employees/",
        "titulo": "Time Needed to Inform All Employees",
        "enunciado": "A company has \nn\n employees with a unique ID for each employee from \n0\n to \nn - 1\n. The head of the company is the one with \nheadID\n.\n\n\nEach employee has one direct manager given in the \nmanager\n array where \nmanager[i]\n is the direct manager of the \ni-th\n employee, \nmanager[headID] = -1\n. Also, it is guaranteed that the subordination relationships have a tree structure.\n\n\nThe head of the company wants to inform all the company employees of an urgent piece of news. He will inform his direct subordinates, and they will inform their subordinates, and so on until all employees know about the urgent news.\n\n\nThe \ni-th\n employee needs \ninformTime[i]\n minutes to inform all of his direct subordinates (i.e., After informTime[i] minutes, all his direct subordinates can start spreading the news).\n\n\nReturn \nthe number of minutes\n needed to inform all the employees about the urgent news.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1, headID = 0, manager = [-1], informTime = [0]\n\nOutput:\n 0\n\nExplanation:\n The head of the company is the only employee in the company.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 6, headID = 2, manager = [2,2,-1,2,2,2], informTime = [0,0,1,0,0,0]\n\nOutput:\n 1\n\nExplanation:\n The head of the company with id = 2 is the direct manager of all the employees in the company and needs 1 minute to inform them all.\nThe tree structure of the employees in the company is shown.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n0 <= headID < n\n\n\nmanager.length == n\n\n\n0 <= manager[i] < n\n\n\nmanager[headID] == -1\n\n\ninformTime.length == n\n\n\n0 <= informTime[i] <= 1000\n\n\ninformTime[i] == 0\n if employee \ni\n has no subordinates.\n\n\nIt is \nguaranteed\n that all the employees can be informed.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1375,
        "slug": "number-of-times-binary-string-is-prefix-aligned",
        "url": "https://leetcode.com/problems/number-of-times-binary-string-is-prefix-aligned/",
        "titulo": "Number of Times Binary String Is Prefix-Aligned",
        "enunciado": "You have a \n1-indexed\n binary string of length \nn\n where all the bits are \n0\n initially. We will flip all the bits of this binary string (i.e., change them from \n0\n to \n1\n) one by one. You are given a \n1-indexed\n integer array \nflips\n where \nflips[i]\n indicates that the bit at index \ni\n will be flipped in the \ni\nth\n step.\n\n\nA binary string is \nprefix-aligned\n if, after the \ni\nth\n step, all the bits in the \ninclusive\n range \n[1, i]\n are ones and all the other bits are zeros.\n\n\nReturn \nthe number of times the binary string is \nprefix-aligned\n during the flipping process\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n flips = [3,2,4,1,5]\n\nOutput:\n 2\n\nExplanation:\n The binary string is initially \"00000\".\nAfter applying step 1: The string becomes \"00100\", which is not prefix-aligned.\nAfter applying step 2: The string becomes \"01100\", which is not prefix-aligned.\nAfter applying step 3: The string becomes \"01110\", which is not prefix-aligned.\nAfter applying step 4: The string becomes \"11110\", which is prefix-aligned.\nAfter applying step 5: The string becomes \"11111\", which is prefix-aligned.\nWe can see that the string was prefix-aligned 2 times, so we return 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n flips = [4,1,2,3]\n\nOutput:\n 1\n\nExplanation:\n The binary string is initially \"0000\".\nAfter applying step 1: The string becomes \"0001\", which is not prefix-aligned.\nAfter applying step 2: The string becomes \"1001\", which is not prefix-aligned.\nAfter applying step 3: The string becomes \"1101\", which is not prefix-aligned.\nAfter applying step 4: The string becomes \"1111\", which is prefix-aligned.\nWe can see that the string was prefix-aligned 1 time, so we return 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == flips.length\n\n\n1 <= n <= 5 * 10\n4\n\n\nflips\n is a permutation of the integers in the range \n[1, n]\n.",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1387,
        "slug": "sort-integers-by-the-power-value",
        "url": "https://leetcode.com/problems/sort-integers-by-the-power-value/",
        "titulo": "Sort Integers by The Power Value",
        "enunciado": "The power of an integer \nx\n is defined as the number of steps needed to transform \nx\n into \n1\n using the following steps:\n\n\n\n\nif \nx\n is even then \nx = x / 2\n\n\nif \nx\n is odd then \nx = 3 * x + 1\n\n\n\n\nFor example, the power of \nx = 3\n is \n7\n because \n3\n needs \n7\n steps to become \n1\n (\n3 --> 10 --> 5 --> 16 --> 8 --> 4 --> 2 --> 1\n).\n\n\nGiven three integers \nlo\n, \nhi\n and \nk\n. The task is to sort all integers in the interval \n[lo, hi]\n by the power value in \nascending order\n, if two or more integers have \nthe same\n power value sort them by \nascending order\n.\n\n\nReturn the \nk\nth\n integer in the range \n[lo, hi]\n sorted by the power value.\n\n\nNotice that for any integer \nx\n \n(lo <= x <= hi)\n it is \nguaranteed\n that \nx\n will transform into \n1\n using these steps and that the power of \nx\n is will \nfit\n in a 32-bit signed integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n lo = 12, hi = 15, k = 2\n\nOutput:\n 13\n\nExplanation:\n The power of 12 is 9 (12 --> 6 --> 3 --> 10 --> 5 --> 16 --> 8 --> 4 --> 2 --> 1)\nThe power of 13 is 9\nThe power of 14 is 17\nThe power of 15 is 17\nThe interval sorted by the power value [12,13,14,15]. For k = 2 answer is the second element which is 13.\nNotice that 12 and 13 have the same power value and we sorted them in ascending order. Same for 14 and 15.\n\n\n\nExample 2:\n\n\n\n\nInput:\n lo = 7, hi = 11, k = 4\n\nOutput:\n 7\n\nExplanation:\n The power array corresponding to the interval [7, 8, 9, 10, 11] is [16, 3, 19, 6, 14].\nThe interval sorted by power is [8, 10, 11, 7, 9].\nThe fourth number in the sorted array is 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= lo <= hi <= 1000\n\n\n1 <= k <= hi - lo + 1",
        "temas": [
            "Dynamic Programming",
            "Memoization",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 1386,
        "slug": "cinema-seat-allocation",
        "url": "https://leetcode.com/problems/cinema-seat-allocation/",
        "titulo": "Cinema Seat Allocation",
        "enunciado": "A cinema has \nn\n rows of seats, numbered from 1 to \nn\n and there are ten seats in each row, labelled from 1 to 10 as shown in the figure above.\n\n\nGiven the array \nreservedSeats\n containing the numbers of seats already reserved, for example, \nreservedSeats[i] = [3,8]\n means the seat located in row \n3\n and labelled with \n8\n is already reserved.\n\n\nReturn the maximum number of four-person groups you can assign on the cinema seats.\n A four-person group occupies four adjacent seats \nin one single row\n. Seats across an aisle (such as [3,3] and [3,4]) are not considered to be adjacent, but there is an exceptional case on which an aisle split a four-person group, in that case, the aisle split a four-person group in the middle, which means to have two people on each side.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, reservedSeats = [[1,2],[1,3],[1,8],[2,6],[3,1],[3,10]]\n\nOutput:\n 4\n\nExplanation:\n The figure above shows the optimal allocation for four groups, where seats mark with blue are already reserved and contiguous seats mark with orange are for one group.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, reservedSeats = [[2,1],[1,8],[2,6]]\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4, reservedSeats = [[4,3],[1,4],[4,6],[1,7]]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10^9\n\n\n1 <= reservedSeats.length <= min(10*n, 10^4)\n\n\nreservedSeats[i].length == 2\n\n\n1 <= reservedSeats[i][0] <= n\n\n\n1 <= reservedSeats[i][1] <= 10\n\n\nAll \nreservedSeats[i]\n are distinct.",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1367,
        "slug": "linked-list-in-binary-tree",
        "url": "https://leetcode.com/problems/linked-list-in-binary-tree/",
        "titulo": "Linked List in Binary Tree",
        "enunciado": "Given a binary tree \nroot\n and a linked list with \nhead\n as the first node. \n\n\nReturn True if all the elements in the linked list starting from the \nhead\n correspond to some \ndownward path\n connected in the binary tree otherwise return False.\n\n\nIn this context downward path means a path that starts at some node and goes downwards.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [4,2,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n\nOutput:\n true\n\nExplanation:\n Nodes in blue form a subpath in the binary Tree.  \n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,4,2,6], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n\nOutput:\n true\n\n\n\nExample 3:\n\n\n\n\nInput:\n head = [1,4,2,6,8], root = [1,4,4,null,2,2,null,1,null,6,8,null,null,null,null,1,3]\n\nOutput:\n false\n\nExplanation:\n There is no path in the binary tree that contains all the elements of the linked list from \nhead\n.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree will be in the range \n[1, 2500]\n.\n\n\nThe number of nodes in the list will be in the range \n[1, 100]\n.\n\n\n1 <= Node.val <= 100\n for each node in the linked list and binary tree.",
        "temas": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 1366,
        "slug": "rank-teams-by-votes",
        "url": "https://leetcode.com/problems/rank-teams-by-votes/",
        "titulo": "Rank Teams by Votes",
        "enunciado": "In a special ranking system, each voter gives a rank from highest to lowest to all teams participating in the competition.\n\n\nThe ordering of teams is decided by who received the most position-one votes. If two or more teams tie in the first position, we consider the second position to resolve the conflict, if they tie again, we continue this process until the ties are resolved. If two or more teams are still tied after considering all positions, we rank them alphabetically based on their team letter.\n\n\nYou are given an array of strings \nvotes\n which is the votes of all voters in the ranking systems. Sort all teams according to the ranking system described above.\n\n\nReturn \na string of all teams \nsorted\n by the ranking system\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n votes = [\"ABC\",\"ACB\",\"ABC\",\"ACB\",\"ACB\"]\n\nOutput:\n \"ACB\"\n\nExplanation:\n \nTeam A was ranked first place by 5 voters. No other team was voted as first place, so team A is the first team.\nTeam B was ranked second by 2 voters and ranked third by 3 voters.\nTeam C was ranked second by 3 voters and ranked third by 2 voters.\nAs most of the voters ranked C second, team C is the second team, and team B is the third.\n\n\n\nExample 2:\n\n\n\n\nInput:\n votes = [\"WXYZ\",\"XYZW\"]\n\nOutput:\n \"XWYZ\"\n\nExplanation:\n\nX is the winner due to the tie-breaking rule. X has the same votes as W for the first position, but X has one vote in the second position, while W does not have any votes in the second position. \n\n\n\nExample 3:\n\n\n\n\nInput:\n votes = [\"ZMNAGUEDSJYLBOPHRQICWFXTVK\"]\n\nOutput:\n \"ZMNAGUEDSJYLBOPHRQICWFXTVK\"\n\nExplanation:\n Only one voter, so their votes are used for the ranking.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= votes.length <= 1000\n\n\n1 <= votes[i].length <= 26\n\n\nvotes[i].length == votes[j].length\n for \n0 <= i, j < votes.length\n.\n\n\nvotes[i][j]\n is an English \nuppercase\n letter.\n\n\nAll characters of \nvotes[i]\n are unique.\n\n\nAll the characters that occur in \nvotes[0]\n \nalso occur\n in \nvotes[j]\n where \n1 <= j < votes.length\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1353,
        "slug": "maximum-number-of-events-that-can-be-attended",
        "url": "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended/",
        "titulo": "Maximum Number of Events That Can Be Attended",
        "enunciado": "You are given an array of \nevents\n where \nevents[i] = [startDay\ni\n, endDay\ni\n]\n. Every event \ni\n starts at \nstartDay\ni\n \nand ends at \nendDay\ni\n.\n\n\nYou can attend an event \ni\n at any day \nd\n where \nstartTime\ni\n <= d <= endTime\ni\n. You can only attend one event at any time \nd\n.\n\n\nReturn \nthe maximum number of events you can attend\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n events = [[1,2],[2,3],[3,4]]\n\nOutput:\n 3\n\nExplanation:\n You can attend all the three events.\nOne way to attend them all is as shown.\nAttend the first event on day 1.\nAttend the second event on day 2.\nAttend the third event on day 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n events= [[1,2],[2,3],[3,4],[1,2]]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= events.length <= 10\n5\n\n\nevents[i].length == 2\n\n\n1 <= startDay\ni\n <= endDay\ni\n <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1352,
        "slug": "product-of-the-last-k-numbers",
        "url": "https://leetcode.com/problems/product-of-the-last-k-numbers/",
        "titulo": "Product of the Last K Numbers",
        "enunciado": "Design an algorithm that accepts a stream of integers and retrieves the product of the last \nk\n integers of the stream.\n\n\nImplement the \nProductOfNumbers\n class:\n\n\n\n\nProductOfNumbers()\n Initializes the object with an empty stream.\n\n\nvoid add(int num)\n Appends the integer \nnum\n to the stream.\n\n\nint getProduct(int k)\n Returns the product of the last \nk\n numbers in the current list. You can assume that always the current list has at least \nk\n numbers.\n\n\n\n\nThe test cases are generated so that, at any time, the product of any contiguous sequence of numbers will fit into a single 32-bit integer without overflowing.\n\n\n \n\n\nExample:\n\n\n\n\nInput\n\n[\"ProductOfNumbers\",\"add\",\"add\",\"add\",\"add\",\"add\",\"getProduct\",\"getProduct\",\"getProduct\",\"add\",\"getProduct\"]\n[[],[3],[0],[2],[5],[4],[2],[3],[4],[8],[2]]\n\n\nOutput\n\n[null,null,null,null,null,null,20,40,0,null,32]\n\n\nExplanation\n\nProductOfNumbers productOfNumbers = new ProductOfNumbers();\nproductOfNumbers.add(3);        // [3]\nproductOfNumbers.add(0);        // [3,0]\nproductOfNumbers.add(2);        // [3,0,2]\nproductOfNumbers.add(5);        // [3,0,2,5]\nproductOfNumbers.add(4);        // [3,0,2,5,4]\nproductOfNumbers.getProduct(2); // return 20. The product of the last 2 numbers is 5 * 4 = 20\nproductOfNumbers.getProduct(3); // return 40. The product of the last 3 numbers is 2 * 5 * 4 = 40\nproductOfNumbers.getProduct(4); // return 0. The product of the last 4 numbers is 0 * 2 * 5 * 4 = 0\nproductOfNumbers.add(8);        // [3,0,2,5,4,8]\nproductOfNumbers.getProduct(2); // return 32. The product of the last 2 numbers is 4 * 8 = 32 \n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= num <= 100\n\n\n1 <= k <= 4 * 10\n4\n\n\nAt most \n4 * 10\n4\n calls will be made to \nadd\n and \ngetProduct\n.\n\n\nThe product of the stream at any point in time will fit in a \n32-bit\n integer.\n\n\n\n\n \n\n\nFollow-up: \nCan you implement \nboth\n \nGetProduct\n and \nAdd\n to work in \nO(1)\n time complexity instead of \nO(k)\n time complexity?",
        "temas": [
            "Array",
            "Math",
            "Design",
            "Data Stream",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1372,
        "slug": "longest-zigzag-path-in-a-binary-tree",
        "url": "https://leetcode.com/problems/longest-zigzag-path-in-a-binary-tree/",
        "titulo": "Longest ZigZag Path in a Binary Tree",
        "enunciado": "You are given the \nroot\n of a binary tree.\n\n\nA ZigZag path for a binary tree is defined as follow:\n\n\n\n\nChoose \nany \nnode in the binary tree and a direction (right or left).\n\n\nIf the current direction is right, move to the right child of the current node; otherwise, move to the left child.\n\n\nChange the direction from right to left or from left to right.\n\n\nRepeat the second and third steps until you can't move in the tree.\n\n\n\n\nZigzag length is defined as the number of nodes visited - 1. (A single node has a length of 0).\n\n\nReturn \nthe longest \nZigZag\n path contained in that tree\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,null,1,1,1,null,null,1,1,null,1,null,null,null,1]\n\nOutput:\n 3\n\nExplanation:\n Longest ZigZag path in blue nodes (right -> left -> right).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,1,1,null,1,null,null,1,1,null,1]\n\nOutput:\n 4\n\nExplanation:\n Longest ZigZag path in blue nodes (left -> right -> left -> right).\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 5 * 10\n4\n]\n.\n\n\n1 <= Node.val <= 100",
        "temas": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 1371,
        "slug": "find-the-longest-substring-containing-vowels-in-even-counts",
        "url": "https://leetcode.com/problems/find-the-longest-substring-containing-vowels-in-even-counts/",
        "titulo": "Find the Longest Substring Containing Vowels in Even Counts",
        "enunciado": "Given the string \ns\n, return the size of the longest substring containing each vowel an even number of times. That is, 'a', 'e', 'i', 'o', and 'u' must appear an even number of times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"eleetminicoworoep\"\n\nOutput:\n 13\n\nExplanation: \nThe longest substring is \"leetminicowor\" which contains two each of the vowels: \ne\n, \ni\n and \no\n and zero of the vowels: \na\n and \nu\n.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"leetcodeisgreat\"\n\nOutput:\n 5\n\nExplanation:\n The longest substring is \"leetc\" which contains two e's.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"bcbcbc\"\n\nOutput:\n 6\n\nExplanation:\n In this case, the given string \"bcbcbc\" is the longest because all vowels: \na\n, \ne\n, \ni\n, \no\n and \nu\n appear zero times.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 x 10^5\n\n\ns\n contains only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1348,
        "slug": "tweet-counts-per-frequency",
        "url": "https://leetcode.com/problems/tweet-counts-per-frequency/",
        "titulo": "Tweet Counts Per Frequency",
        "enunciado": "A social media company is trying to monitor activity on their site by analyzing the number of tweets that occur in select periods of time. These periods can be partitioned into smaller \ntime chunks\n based on a certain frequency (every \nminute\n, \nhour\n, or \nday\n).\n\n\nFor example, the period \n[10, 10000]\n (in \nseconds\n) would be partitioned into the following \ntime chunks\n with these frequencies:\n\n\n\n\nEvery \nminute\n (60-second chunks): \n[10,69]\n, \n[70,129]\n, \n[130,189]\n, \n...\n, \n[9970,10000]\n\n\nEvery \nhour\n (3600-second chunks): \n[10,3609]\n, \n[3610,7209]\n, \n[7210,10000]\n\n\nEvery \nday\n (86400-second chunks): \n[10,10000]\n\n\n\n\nNotice that the last chunk may be shorter than the specified frequency's chunk size and will always end with the end time of the period (\n10000\n in the above example).\n\n\nDesign and implement an API to help the company with their analysis.\n\n\nImplement the \nTweetCounts\n class:\n\n\n\n\nTweetCounts()\n Initializes the \nTweetCounts\n object.\n\n\nvoid recordTweet(String tweetName, int time)\n Stores the \ntweetName\n at the recorded \ntime\n (in \nseconds\n).\n\n\nList<Integer> getTweetCountsPerFrequency(String freq, String tweetName, int startTime, int endTime)\n Returns a list of integers representing the number of tweets with \ntweetName\n in each \ntime chunk\n for the given period of time \n[startTime, endTime]\n (in \nseconds\n) and frequency \nfreq\n.\n\t\n\n\nfreq\n is one of \n\"minute\"\n, \n\"hour\"\n, or \n\"day\"\n representing a frequency of every \nminute\n, \nhour\n, or \nday\n respectively.\n\n\n\n\n\n\n\n\n \n\n\nExample:\n\n\n\n\nInput\n\n[\"TweetCounts\",\"recordTweet\",\"recordTweet\",\"recordTweet\",\"getTweetCountsPerFrequency\",\"getTweetCountsPerFrequency\",\"recordTweet\",\"getTweetCountsPerFrequency\"]\n[[],[\"tweet3\",0],[\"tweet3\",60],[\"tweet3\",10],[\"minute\",\"tweet3\",0,59],[\"minute\",\"tweet3\",0,60],[\"tweet3\",120],[\"hour\",\"tweet3\",0,210]]\n\n\nOutput\n\n[null,null,null,null,[2],[2,1],null,[4]]\n\n\nExplanation\n\nTweetCounts tweetCounts = new TweetCounts();\ntweetCounts.recordTweet(\"tweet3\", 0);                              // New tweet \"tweet3\" at time 0\ntweetCounts.recordTweet(\"tweet3\", 60);                             // New tweet \"tweet3\" at time 60\ntweetCounts.recordTweet(\"tweet3\", 10);                             // New tweet \"tweet3\" at time 10\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 59); // return [2]; chunk [0,59] had 2 tweets\ntweetCounts.getTweetCountsPerFrequency(\"minute\", \"tweet3\", 0, 60); // return [2,1]; chunk [0,59] had 2 tweets, chunk [60,60] had 1 tweet\ntweetCounts.recordTweet(\"tweet3\", 120);                            // New tweet \"tweet3\" at time 120\ntweetCounts.getTweetCountsPerFrequency(\"hour\", \"tweet3\", 0, 210);  // return [4]; chunk [0,210] had 4 tweets\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= time, startTime, endTime <= 10\n9\n\n\n0 <= endTime - startTime <= 10\n4\n\n\nThere will be at most \n10\n4\n calls \nin total\n to \nrecordTweet\n and \ngetTweetCountsPerFrequency\n.",
        "temas": [
            "Hash Table",
            "Binary Search",
            "Design",
            "Sorting",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1347,
        "slug": "minimum-number-of-steps-to-make-two-strings-anagram",
        "url": "https://leetcode.com/problems/minimum-number-of-steps-to-make-two-strings-anagram/",
        "titulo": "Minimum Number of Steps to Make Two Strings Anagram",
        "enunciado": "You are given two strings of the same length \ns\n and \nt\n. In one step you can choose \nany character\n of \nt\n and replace it with \nanother character\n.\n\n\nReturn \nthe minimum number of steps\n to make \nt\n an anagram of \ns\n.\n\n\nAn \nAnagram\n of a string is a string that contains the same characters with a different (or the same) ordering.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"bab\", t = \"aba\"\n\nOutput:\n 1\n\nExplanation:\n Replace the first 'a' in t with b, t = \"bba\" which is anagram of s.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"leetcode\", t = \"practice\"\n\nOutput:\n 5\n\nExplanation:\n Replace 'p', 'r', 'a', 'i' and 'c' from t with proper characters to make t anagram of s.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"anagram\", t = \"mangaar\"\n\nOutput:\n 0\n\nExplanation:\n \"anagram\" and \"mangaar\" are anagrams. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 * 10\n4\n\n\ns.length == t.length\n\n\ns\n and \nt\n consist of lowercase English letters only.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1339,
        "slug": "maximum-product-of-splitted-binary-tree",
        "url": "https://leetcode.com/problems/maximum-product-of-splitted-binary-tree/",
        "titulo": "Maximum Product of Splitted Binary Tree",
        "enunciado": "Given the \nroot\n of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized.\n\n\nReturn \nthe maximum product of the sums of the two subtrees\n. Since the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nNote\n that you need to maximize the answer before taking the mod and not after taking it.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6]\n\nOutput:\n 110\n\nExplanation:\n Remove the red edge and get 2 binary trees with sum 11 and 10. Their product is 110 (11*10)\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,null,2,3,4,null,null,5,6]\n\nOutput:\n 90\n\nExplanation:\n Remove the red edge and get 2 binary trees with sum 15 and 6.Their product is 90 (15*6)\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[2, 5 * 10\n4\n]\n.\n\n\n1 <= Node.val <= 10\n4",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1338,
        "slug": "reduce-array-size-to-the-half",
        "url": "https://leetcode.com/problems/reduce-array-size-to-the-half/",
        "titulo": "Reduce Array Size to The Half",
        "enunciado": "You are given an integer array \narr\n. You can choose a set of integers and remove all the occurrences of these integers in the array.\n\n\nReturn \nthe minimum size of the set so that \nat least\n half of the integers of the array are removed\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,3,3,3,5,5,5,2,2,7]\n\nOutput:\n 2\n\nExplanation:\n Choosing {3,7} will make the new array [5,5,5,2,2] which has size 5 (i.e equal to half of the size of the old array).\nPossible sets of size 2 are {3,5},{3,2},{5,2}.\nChoosing set {2,7} is not possible as it will make the new array [3,3,3,3,5,5,5] which has a size greater than half of the size of the old array.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [7,7,7,7,7,7]\n\nOutput:\n 1\n\nExplanation:\n The only possible set you can choose is {7}. This will make the new array empty.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= arr.length <= 10\n5\n\n\narr.length\n is even.\n\n\n1 <= arr[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1358,
        "slug": "number-of-substrings-containing-all-three-characters",
        "url": "https://leetcode.com/problems/number-of-substrings-containing-all-three-characters/",
        "titulo": "Number of Substrings Containing All Three Characters",
        "enunciado": "Given a string \ns\n consisting only of characters \na\n, \nb\n and \nc\n.\n\n\nReturn the number of substrings containing \nat least\n one occurrence of all these characters \na\n, \nb\n and \nc\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abcabc\"\n\nOutput:\n 10\n\nExplanation:\n The substrings containing at least one occurrence of the characters \na\n, \nb\n and \nc are \"\nabc\n\", \"\nabca\n\", \"\nabcab\n\", \"\nabcabc\n\", \"\nbca\n\", \"\nbcab\n\", \"\nbcabc\n\", \"\ncab\n\", \"\ncabc\n\" \nand\n \"\nabc\n\" \n(\nagain\n)\n. \n\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aaacb\"\n\nOutput:\n 3\n\nExplanation:\n The substrings containing at least one occurrence of the characters \na\n, \nb\n and \nc are \"\naaacb\n\", \"\naacb\n\" \nand\n \"\nacb\n\".\n \n\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"abc\"\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= s.length <= 5 x 10^4\n\n\ns\n only consists of \na\n, \nb\n or \nc \ncharacters.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1357,
        "slug": "apply-discount-every-n-orders",
        "url": "https://leetcode.com/problems/apply-discount-every-n-orders/",
        "titulo": "Apply Discount Every n Orders",
        "enunciado": "There is a supermarket that is frequented by many customers. The products sold at the supermarket are represented as two parallel integer arrays \nproducts\n and \nprices\n, where the \ni\nth\n product has an ID of \nproducts[i]\n and a price of \nprices[i]\n.\n\n\nWhen a customer is paying, their bill is represented as two parallel integer arrays \nproduct\n and \namount\n, where the \nj\nth\n product they purchased has an ID of \nproduct[j]\n, and \namount[j]\n is how much of the product they bought. Their subtotal is calculated as the sum of each \namount[j] * (price of the j\nth\n product)\n.\n\n\nThe supermarket decided to have a sale. Every \nn\nth\n customer paying for their groceries will be given a \npercentage discount\n. The discount amount is given by \ndiscount\n, where they will be given \ndiscount\n percent off their subtotal. More formally, if their subtotal is \nbill\n, then they would actually pay \nbill * ((100 - discount) / 100)\n.\n\n\nImplement the \nCashier\n class:\n\n\n\n\nCashier(int n, int discount, int[] products, int[] prices)\n Initializes the object with \nn\n, the \ndiscount\n, and the \nproducts\n and their \nprices\n.\n\n\ndouble getBill(int[] product, int[] amount)\n Returns the final total of the bill with the discount applied (if any). Answers within \n10\n-5\n of the actual value will be accepted.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Cashier\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\",\"getBill\"]\n[[3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]],[[1,2],[1,2]],[[3,7],[10,10]],[[1,2,3,4,5,6,7],[1,1,1,1,1,1,1]],[[4],[10]],[[7,3],[10,10]],[[7,5,3,1,6,4,2],[10,10,10,9,9,9,7]],[[2,3,5],[5,3,2]]]\n\nOutput\n\n[null,500.0,4000.0,800.0,4000.0,4000.0,7350.0,2500.0]\n\nExplanation\n\nCashier cashier = new Cashier(3,50,[1,2,3,4,5,6,7],[100,200,300,400,300,200,100]);\ncashier.getBill([1,2],[1,2]);                        // return 500.0. 1\nst\n customer, no discount.\n                                                     // bill = 1 * 100 + 2 * 200 = 500.\ncashier.getBill([3,7],[10,10]);                      // return 4000.0. 2\nnd\n customer, no discount.\n                                                     // bill = 10 * 300 + 10 * 100 = 4000.\ncashier.getBill([1,2,3,4,5,6,7],[1,1,1,1,1,1,1]);    // return 800.0. 3\nrd\n customer, 50% discount.\n                                                     // Original bill = 1600\n                                                     // Actual bill = 1600 * ((100 - 50) / 100) = 800.\ncashier.getBill([4],[10]);                           // return 4000.0. 4\nth\n customer, no discount.\ncashier.getBill([7,3],[10,10]);                      // return 4000.0. 5\nth\n customer, no discount.\ncashier.getBill([7,5,3,1,6,4,2],[10,10,10,9,9,9,7]); // return 7350.0. 6\nth\n customer, 50% discount.\n                                                     // Original bill = 14700, but with\n                                                     // Actual bill = 14700 * ((100 - 50) / 100) = 7350.\ncashier.getBill([2,3,5],[5,3,2]);                    // return 2500.0.  7\nth\n customer, no discount.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4\n\n\n0 <= discount <= 100\n\n\n1 <= products.length <= 200\n\n\nprices.length == products.length\n\n\n1 <= products[i] <= 200\n\n\n1 <= prices[i] <= 1000\n\n\nThe elements in \nproducts\n are \nunique\n.\n\n\n1 <= product.length <= products.length\n\n\namount.length == product.length\n\n\nproduct[j]\n exists in \nproducts\n.\n\n\n1 <= amount[j] <= 1000\n\n\nThe elements of \nproduct\n are \nunique\n.\n\n\nAt most \n1000\n calls will be made to \ngetBill\n.\n\n\nAnswers within \n10\n-5\n of the actual value will be accepted.",
        "temas": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1334,
        "slug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
        "url": "https://leetcode.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/",
        "titulo": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
        "enunciado": "There are \nn\n cities numbered from \n0\n to \nn-1\n. Given the array \nedges\n where \nedges[i] = [from\ni\n, to\ni\n, weight\ni\n]\n represents a bidirectional and weighted edge between cities \nfrom\ni\n and \nto\ni\n, and given the integer \ndistanceThreshold\n.\n\n\nReturn the city with the smallest number of cities that are reachable through some path and whose distance is \nat most\n \ndistanceThreshold\n, If there are multiple such cities, return the city with the greatest number.\n\n\nNotice that the distance of a path connecting cities \ni\n and \nj\n is equal to the sum of the edges' weights along that path.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, edges = [[0,1,3],[1,2,1],[1,3,4],[2,3,1]], distanceThreshold = 4\n\nOutput:\n 3\n\nExplanation: \nThe figure above describes the graph. \nThe neighboring cities at a distanceThreshold = 4 for each city are:\nCity 0 -> [City 1, City 2] \nCity 1 -> [City 0, City 2, City 3] \nCity 2 -> [City 0, City 1, City 3] \nCity 3 -> [City 1, City 2] \nCities 0 and 3 have 2 neighboring cities at a distanceThreshold = 4, but we have to return city 3 since it has the greatest number.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, edges = [[0,1,2],[0,4,8],[1,2,3],[1,4,2],[2,3,1],[3,4,1]], distanceThreshold = 2\n\nOutput:\n 0\n\nExplanation: \nThe figure above describes the graph. \nThe neighboring cities at a distanceThreshold = 2 for each city are:\nCity 0 -> [City 1] \nCity 1 -> [City 0, City 4] \nCity 2 -> [City 3, City 4] \nCity 3 -> [City 2, City 4]\nCity 4 -> [City 1, City 2, City 3] \nThe city 0 has 1 neighboring city at a distanceThreshold = 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 100\n\n\n1 <= edges.length <= n * (n - 1) / 2\n\n\nedges[i].length == 3\n\n\n0 <= from\ni\n < to\ni\n < n\n\n\n1 <= weight\ni\n, distanceThreshold <= 10^4\n\n\nAll pairs \n(from\ni\n, to\ni\n)\n are distinct.",
        "temas": [
            "Dynamic Programming",
            "Graph",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 1333,
        "slug": "filter-restaurants-by-vegan-friendly-price-and-distance",
        "url": "https://leetcode.com/problems/filter-restaurants-by-vegan-friendly-price-and-distance/",
        "titulo": "Filter Restaurants by Vegan-Friendly, Price and Distance",
        "enunciado": "Given the array \nrestaurants\n where  \nrestaurants[i] = [id\ni\n, rating\ni\n, veganFriendly\ni\n, price\ni\n, distance\ni\n]\n. You have to filter the restaurants using three filters.\n\n\nThe \nveganFriendly\n filter will be either \ntrue\n (meaning you should only include restaurants with \nveganFriendly\ni\n set to true) or \nfalse\n (meaning you can include any restaurant). In addition, you have the filters \nmaxPrice\n and \nmaxDistance\n which are the maximum value for price and distance of restaurants you should consider respectively.\n\n\nReturn the array of restaurant \nIDs\n after filtering, ordered by \nrating\n from highest to lowest. For restaurants with the same rating, order them by \nid\n from highest to lowest. For simplicity \nveganFriendly\ni\n and \nveganFriendly\n take value \n1\n when it is \ntrue\n, and \n0\n when it is \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 1, maxPrice = 50, maxDistance = 10\n\nOutput:\n [3,1,5] \n\nExplanation: \n\nThe restaurants are:\nRestaurant 1 [id=1, rating=4, veganFriendly=1, price=40, distance=10]\nRestaurant 2 [id=2, rating=8, veganFriendly=0, price=50, distance=5]\nRestaurant 3 [id=3, rating=8, veganFriendly=1, price=30, distance=4]\nRestaurant 4 [id=4, rating=10, veganFriendly=0, price=10, distance=3]\nRestaurant 5 [id=5, rating=1, veganFriendly=1, price=15, distance=1] \nAfter filter restaurants with veganFriendly = 1, maxPrice = 50 and maxDistance = 10 we have restaurant 3, restaurant 1 and restaurant 5 (ordered by rating from highest to lowest). \n\n\n\nExample 2:\n\n\n\n\nInput:\n restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 50, maxDistance = 10\n\nOutput:\n [4,3,2,1,5]\n\nExplanation:\n The restaurants are the same as in example 1, but in this case the filter veganFriendly = 0, therefore all restaurants are considered.\n\n\n\nExample 3:\n\n\n\n\nInput:\n restaurants = [[1,4,1,40,10],[2,8,0,50,5],[3,8,1,30,4],[4,10,0,10,3],[5,1,1,15,1]], veganFriendly = 0, maxPrice = 30, maxDistance = 3\n\nOutput:\n [4,5]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= restaurants.length <= 10^4\n\n\nrestaurants[i].length == 5\n\n\n1 <= id\ni\n, rating\ni\n, price\ni\n, distance\ni \n<= 10^5\n\n\n1 <= maxPrice, maxDistance <= 10^5\n\n\nveganFriendly\ni\n and \nveganFriendly\n are 0 or 1.\n\n\nAll \nid\ni\n are distinct.",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1325,
        "slug": "delete-leaves-with-a-given-value",
        "url": "https://leetcode.com/problems/delete-leaves-with-a-given-value/",
        "titulo": "Delete Leaves With a Given Value",
        "enunciado": "Given a binary tree \nroot\n and an integer \ntarget\n, delete all the \nleaf nodes\n with value \ntarget\n.\n\n\nNote that once you delete a leaf node with value \ntarget\n, \nif its parent node becomes a leaf node and has the value \ntarget\n, it should also be deleted (you need to continue doing that until you cannot).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,2,null,2,4], target = 2\n\nOutput:\n [1,null,3,null,4]\n\nExplanation:\n Leaf nodes in green with value (target = 2) are removed (Picture in left). \nAfter removing, new nodes become leaf nodes with value (target = 2) (Picture in center).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,3,3,3,2], target = 3\n\nOutput:\n [1,3,null,null,2]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [1,2,null,2,null,2], target = 2\n\nOutput:\n [1]\n\nExplanation:\n Leaf nodes in green with value (target = 2) are removed at each step.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 3000]\n.\n\n\n1 <= Node.val, target <= 1000",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1324,
        "slug": "print-words-vertically",
        "url": "https://leetcode.com/problems/print-words-vertically/",
        "titulo": "Print Words Vertically",
        "enunciado": "Given a string \ns\n. Return all the words vertically in the same order in which they appear in \ns\n.\n\r\nWords are returned as a list of strings, complete with spaces when is necessary. (Trailing spaces are not allowed).\n\r\nEach word would be put on only one column and that in one column there will be only one word.\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n s = \"HOW ARE YOU\"\r\n\nOutput:\n [\"HAY\",\"ORO\",\"WEU\"]\r\n\nExplanation: \nEach word is printed vertically. \r\n \"HAY\"\r\n \"ORO\"\r\n \"WEU\"\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n s = \"TO BE OR NOT TO BE\"\r\n\nOutput:\n [\"TBONTB\",\"OEROOE\",\"   T\"]\r\n\nExplanation: \nTrailing spaces is not allowed. \r\n\"TBONTB\"\r\n\"OEROOE\"\r\n\"   T\"\r\n\n\n\nExample 3:\n\n\n\r\n\nInput:\n s = \"CONTEST IS COMING\"\r\n\nOutput:\n [\"CIC\",\"OSO\",\"N M\",\"T I\",\"E N\",\"S G\",\"T\"]\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 200\n\n\ns\n contains only upper case English letters.\n\n\nIt's guaranteed that there is only one space between 2 words.",
        "temas": [
            "Array",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1344,
        "slug": "angle-between-hands-of-a-clock",
        "url": "https://leetcode.com/problems/angle-between-hands-of-a-clock/",
        "titulo": "Angle Between Hands of a Clock",
        "enunciado": "Given two numbers, \nhour\n and \nminutes\n, return \nthe smaller angle (in degrees) formed between the \nhour\n and the \nminute\n hand\n.\n\n\nAnswers within \n10\n-5\n of the actual value will be accepted as correct.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n hour = 12, minutes = 30\n\nOutput:\n 165\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n hour = 3, minutes = 30\n\nOutput:\n 75\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n hour = 3, minutes = 15\n\nOutput:\n 7.5\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= hour <= 12\n\n\n0 <= minutes <= 59",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 1343,
        "slug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
        "url": "https://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/",
        "titulo": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
        "enunciado": "Given an array of integers \narr\n and two integers \nk\n and \nthreshold\n, return \nthe number of sub-arrays of size \nk\n and average greater than or equal to \nthreshold\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,2,2,2,5,5,5,8], k = 3, threshold = 4\n\nOutput:\n 3\n\nExplanation:\n Sub-arrays [2,5,5],[5,5,5] and [5,5,8] have averages 4, 5 and 6 respectively. All other sub-arrays of size 3 have averages less than 4 (the threshold).\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [11,13,17,23,29,31,7,5,2,3], k = 3, threshold = 5\n\nOutput:\n 6\n\nExplanation:\n The first 6 sub-arrays of size 3 have averages greater than 5. Note that averages are not integers.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n1 <= arr[i] <= 10\n4\n\n\n1 <= k <= arr.length\n\n\n0 <= threshold <= 10\n4",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1319,
        "slug": "number-of-operations-to-make-network-connected",
        "url": "https://leetcode.com/problems/number-of-operations-to-make-network-connected/",
        "titulo": "Number of Operations to Make Network Connected",
        "enunciado": "There are \nn\n computers numbered from \n0\n to \nn - 1\n connected by ethernet cables \nconnections\n forming a network where \nconnections[i] = [a\ni\n, b\ni\n]\n represents a connection between computers \na\ni\n and \nb\ni\n. Any computer can reach any other computer directly or indirectly through the network.\n\n\nYou are given an initial computer network \nconnections\n. You can extract certain cables between two directly connected computers, and place them between any pair of disconnected computers to make them directly connected.\n\n\nReturn \nthe minimum number of times you need to do this in order to make all the computers connected\n. If it is not possible, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, connections = [[0,1],[0,2],[1,2]]\n\nOutput:\n 1\n\nExplanation:\n Remove cable between computer 1 and 2 and place between computers 1 and 3.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 6, connections = [[0,1],[0,2],[0,3],[1,2],[1,3]]\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 6, connections = [[0,1],[0,2],[0,3],[1,2]]\n\nOutput:\n -1\n\nExplanation:\n There are not enough cables.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= connections.length <= min(n * (n - 1) / 2, 10\n5\n)\n\n\nconnections[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nThere are no repeated connections.\n\n\nNo two computers are connected by more than one cable.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 1318,
        "slug": "minimum-flips-to-make-a-or-b-equal-to-c",
        "url": "https://leetcode.com/problems/minimum-flips-to-make-a-or-b-equal-to-c/",
        "titulo": "Minimum Flips to Make a OR b Equal to c",
        "enunciado": "Given 3 positives numbers \na\n, \nb\n and \nc\n. Return the minimum flips required in some bits of \na\n and \nb\n to make ( \na\n OR \nb\n == \nc\n ). (bitwise OR operation).\n\r\nFlip operation consists of change \nany\n single bit 1 to 0 or change the bit 0 to 1 in their binary representation.\n\n\n \n\n\nExample 1:\n\n\n\n\n\r\n\nInput:\n a = 2, b = 6, c = 5\r\n\nOutput:\n 3\r\n\nExplanation: \nAfter flips a = 1 , b = 4 , c = 5 such that (\na\n OR \nb\n == \nc\n)\n\n\nExample 2:\n\n\n\r\n\nInput:\n a = 4, b = 2, c = 7\r\n\nOutput:\n 1\r\n\n\n\nExample 3:\n\n\n\r\n\nInput:\n a = 1, b = 2, c = 3\r\n\nOutput:\n 0\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a <= 10^9\n\n\n1 <= b <= 10^9\n\n\n1 <= c <= 10^9",
        "temas": [
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Bit Manipulation",
        "has_image": true
    },
    {
        "id": 1311,
        "slug": "get-watched-videos-by-your-friends",
        "url": "https://leetcode.com/problems/get-watched-videos-by-your-friends/",
        "titulo": "Get Watched Videos by Your Friends",
        "enunciado": "There are \nn\n people, each person has a unique \nid\n between \n0\n and \nn-1\n. Given the arrays \nwatchedVideos\n and \nfriends\n, where \nwatchedVideos[i]\n and \nfriends[i]\n contain the list of watched videos and the list of friends respectively for the person with \nid = i\n.\n\n\nLevel \n1\n of videos are all watched videos by your friends, level \n2\n of videos are all watched videos by the friends of your friends and so on. In general, the level \nk\n of videos are all watched videos by people with the shortest path \nexactly\n equal to \nk\n with you. Given your \nid\n and the \nlevel\n of videos, return the list of videos ordered by their frequencies (increasing). For videos with the same frequency order them alphabetically from least to greatest. \n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 1\n\nOutput:\n [\"B\",\"C\"] \n\nExplanation:\n \nYou have id = 0 (green color in the figure) and your friends are (yellow color in the figure):\nPerson with id = 1 -> watchedVideos = [\"C\"] \nPerson with id = 2 -> watchedVideos = [\"B\",\"C\"] \nThe frequencies of watchedVideos by your friends are: \nB -> 1 \nC -> 2\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n watchedVideos = [[\"A\",\"B\"],[\"C\"],[\"B\",\"C\"],[\"D\"]], friends = [[1,2],[0,3],[0,3],[1,2]], id = 0, level = 2\n\nOutput:\n [\"D\"]\n\nExplanation:\n \nYou have id = 0 (green color in the figure) and the only friend of your friends is the person with id = 3 (yellow color in the figure).\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == watchedVideos.length == friends.length\n\n\n2 <= n <= 100\n\n\n1 <= watchedVideos[i].length <= 100\n\n\n1 <= watchedVideos[i][j].length <= 8\n\n\n0 <= friends[i].length < n\n\n\n0 <= friends[i][j] < n\n\n\n0 <= id < n\n\n\n1 <= level < n\n\n\nif \nfriends[i]\n contains \nj\n, then \nfriends[j]\n contains \ni",
        "temas": [
            "Array",
            "Hash Table",
            "Breadth-First Search",
            "Graph",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1310,
        "slug": "xor-queries-of-a-subarray",
        "url": "https://leetcode.com/problems/xor-queries-of-a-subarray/",
        "titulo": "XOR Queries of a Subarray",
        "enunciado": "You are given an array \narr\n of positive integers. You are also given the array \nqueries\n where \nqueries[i] = [left\ni, \nright\ni\n]\n.\n\n\nFor each query \ni\n compute the \nXOR\n of elements from \nleft\ni\n to \nright\ni\n (that is, \narr[left\ni\n] XOR arr[left\ni\n + 1] XOR ... XOR arr[right\ni\n]\n ).\n\n\nReturn an array \nanswer\n where \nanswer[i]\n is the answer to the \ni\nth\n query.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,3,4,8], queries = [[0,1],[1,2],[0,3],[3,3]]\n\nOutput:\n [2,7,14,8] \n\nExplanation:\n \nThe binary representation of the elements in the array are:\n1 = 0001 \n3 = 0011 \n4 = 0100 \n8 = 1000 \nThe XOR values for queries are:\n[0,1] = 1 xor 3 = 2 \n[1,2] = 3 xor 4 = 7 \n[0,3] = 1 xor 3 xor 4 xor 8 = 14 \n[3,3] = 8\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [4,8,2,10], queries = [[2,3],[1,3],[0,0],[0,3]]\n\nOutput:\n [8,0,4,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length, queries.length <= 3 * 10\n4\n\n\n1 <= arr[i] <= 10\n9\n\n\nqueries[i].length == 2\n\n\n0 <= left\ni\n <= right\ni\n < arr.length",
        "temas": [
            "Array",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2192,
        "slug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
        "url": "https://leetcode.com/problems/all-ancestors-of-a-node-in-a-directed-acyclic-graph/",
        "titulo": "All Ancestors of a Node in a Directed Acyclic Graph",
        "enunciado": "You are given a positive integer \nn\n representing the number of nodes of a \nDirected Acyclic Graph\n (DAG). The nodes are numbered from \n0\n to \nn - 1\n (\ninclusive\n).\n\n\nYou are also given a 2D integer array \nedges\n, where \nedges[i] = [from\ni\n, to\ni\n]\n denotes that there is a \nunidirectional\n edge from \nfrom\ni\n to \nto\ni\n in the graph.\n\n\nReturn \na list\n \nanswer\n, where \nanswer[i]\n is the \nlist of ancestors\n of the\n \ni\nth\n \nnode, sorted in \nascending order\n.\n\n\nA node \nu\n is an \nancestor\n of another node \nv\n if \nu\n can reach \nv\n via a set of edges.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 8, edgeList = [[0,3],[0,4],[1,3],[2,4],[2,7],[3,5],[3,6],[3,7],[4,6]]\n\nOutput:\n [[],[],[],[0,1],[0,2],[0,1,3],[0,1,2,3,4],[0,1,2,3]]\n\nExplanation:\n\nThe above diagram represents the input graph.\n- Nodes 0, 1, and 2 do not have any ancestors.\n- Node 3 has two ancestors 0 and 1.\n- Node 4 has two ancestors 0 and 2.\n- Node 5 has three ancestors 0, 1, and 3.\n- Node 6 has five ancestors 0, 1, 2, 3, and 4.\n- Node 7 has four ancestors 0, 1, 2, and 3.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 5, edgeList = [[0,1],[0,2],[0,3],[0,4],[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]\n\nOutput:\n [[],[0],[0,1],[0,1,2],[0,1,2,3]]\n\nExplanation:\n\nThe above diagram represents the input graph.\n- Node 0 does not have any ancestor.\n- Node 1 has one ancestor 0.\n- Node 2 has two ancestors 0 and 1.\n- Node 3 has three ancestors 0, 1, and 2.\n- Node 4 has four ancestors 0, 1, 2, and 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000\n\n\n0 <= edges.length <= min(2000, n * (n - 1) / 2)\n\n\nedges[i].length == 2\n\n\n0 <= from\ni\n, to\ni\n <= n - 1\n\n\nfrom\ni\n != to\ni\n\n\nThere are no duplicate edges.\n\n\nThe graph is \ndirected\n and \nacyclic\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 1306,
        "slug": "jump-game-iii",
        "url": "https://leetcode.com/problems/jump-game-iii/",
        "titulo": "Jump Game III",
        "enunciado": "Given an array of non-negative integers \narr\n, you are initially positioned at \nstart\n index of the array. When you are at index \ni\n, you can jump to \ni + arr[i]\n or \ni - arr[i]\n, check if you can reach \nany\n index with value 0.\n\n\nNotice that you can not jump outside of the array at any time.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [4,2,3,0,3,1,2], start = 5\n\nOutput:\n true\n\nExplanation:\n \nAll possible ways to reach at index 3 with value 0 are: \nindex 5 -> index 4 -> index 1 -> index 3 \nindex 5 -> index 6 -> index 4 -> index 1 -> index 3 \n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [4,2,3,0,3,1,2], start = 0\n\nOutput:\n true \n\nExplanation: \n\nOne possible way to reach at index 3 with value 0 is: \nindex 0 -> index 4 -> index 1 -> index 3\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [3,0,2,1,2], start = 2\n\nOutput:\n false\n\nExplanation: \nThere is no way to reach at index 1 with value 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 5 * 10\n4\n\n\n0 <= arr[i] < arr.length\n\n\n0 <= start < arr.length",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1305,
        "slug": "all-elements-in-two-binary-search-trees",
        "url": "https://leetcode.com/problems/all-elements-in-two-binary-search-trees/",
        "titulo": "All Elements in Two Binary Search Trees",
        "enunciado": "Given two binary search trees \nroot1\n and \nroot2\n, return \na list containing all the integers from both trees sorted in \nascending\n order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root1 = [2,1,4], root2 = [1,0,3]\n\nOutput:\n [0,1,1,2,3,4]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root1 = [1,null,8], root2 = [8,1]\n\nOutput:\n [1,1,8,8]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in each tree is in the range \n[0, 5000]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Sorting",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1297,
        "slug": "maximum-number-of-occurrences-of-a-substring",
        "url": "https://leetcode.com/problems/maximum-number-of-occurrences-of-a-substring/",
        "titulo": "Maximum Number of Occurrences of a Substring",
        "enunciado": "Given a string \ns\n, return the maximum number of occurrences of \nany\n substring under the following rules:\n\n\n\n\nThe number of unique characters in the substring must be less than or equal to \nmaxLetters\n.\n\n\nThe substring size must be between \nminSize\n and \nmaxSize\n inclusive.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aababcaab\", maxLetters = 2, minSize = 3, maxSize = 4\n\nOutput:\n 2\n\nExplanation:\n Substring \"aab\" has 2 occurrences in the original string.\nIt satisfies the conditions, 2 unique letters and size 3 (between minSize and maxSize).\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aaaa\", maxLetters = 1, minSize = 3, maxSize = 3\n\nOutput:\n 2\n\nExplanation:\n Substring \"aaa\" occur 2 times in the string. It can overlap.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\n1 <= maxLetters <= 26\n\n\n1 <= minSize <= maxSize <= min(26, s.length)\n\n\ns\n consists of only lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1296,
        "slug": "divide-array-in-sets-of-k-consecutive-numbers",
        "url": "https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/",
        "titulo": "Divide Array in Sets of K Consecutive Numbers",
        "enunciado": "Given an array of integers \nnums\n and a positive integer \nk\n, check whether it is possible to divide this array into sets of \nk\n consecutive numbers.\n\n\nReturn \ntrue\n \nif it is possible\n.\n \nOtherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,3,4,4,5,6], k = 4\n\nOutput:\n true\n\nExplanation:\n Array can be divided into [1,2,3,4] and [3,4,5,6].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,2,1,2,3,4,3,4,5,9,10,11], k = 3\n\nOutput:\n true\n\nExplanation:\n Array can be divided into [1,2,3] , [2,3,4] , [3,4,5] and [9,10,11].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4], k = 3\n\nOutput:\n false\n\nExplanation:\n Each array should be divided in subarrays of size 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n9\n\n\n\n\n \n\n\nNote:\n This question is the same as 846: \nhttps://leetcode.com/problems/hand-of-straights/",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2305,
        "slug": "fair-distribution-of-cookies",
        "url": "https://leetcode.com/problems/fair-distribution-of-cookies/",
        "titulo": "Fair Distribution of Cookies",
        "enunciado": "You are given an integer array \ncookies\n, where \ncookies[i]\n denotes the number of cookies in the \ni\nth\n bag. You are also given an integer \nk\n that denotes the number of children to distribute \nall\n the bags of cookies to. All the cookies in the same bag must go to the same child and cannot be split up.\n\n\nThe \nunfairness\n of a distribution is defined as the \nmaximum\n \ntotal\n cookies obtained by a single child in the distribution.\n\n\nReturn \nthe \nminimum\n unfairness of all distributions\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n cookies = [8,15,10,20,8], k = 2\n\nOutput:\n 31\n\nExplanation:\n One optimal distribution is [8,15,8] and [10,20]\n- The 1\nst\n child receives [8,15,8] which has a total of 8 + 15 + 8 = 31 cookies.\n- The 2\nnd\n child receives [10,20] which has a total of 10 + 20 = 30 cookies.\nThe unfairness of the distribution is max(31,30) = 31.\nIt can be shown that there is no distribution with an unfairness less than 31.\n\n\n\nExample 2:\n\n\n\n\nInput:\n cookies = [6,1,3,2,2,4,1,2], k = 3\n\nOutput:\n 7\n\nExplanation:\n One optimal distribution is [6,1], [3,2,2], and [4,1,2]\n- The 1\nst\n child receives [6,1] which has a total of 6 + 1 = 7 cookies.\n- The 2\nnd\n child receives [3,2,2] which has a total of 3 + 2 + 2 = 7 cookies.\n- The 3\nrd\n child receives [4,1,2] which has a total of 4 + 1 + 2 = 7 cookies.\nThe unfairness of the distribution is max(7,7,7) = 7.\nIt can be shown that there is no distribution with an unfairness less than 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= cookies.length <= 8\n\n\n1 <= cookies[i] <= 10\n5\n\n\n2 <= k <= cookies.length",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1292,
        "slug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
        "url": "https://leetcode.com/problems/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold/",
        "titulo": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
        "enunciado": "Given a \nm x n\n matrix \nmat\n and an integer \nthreshold\n, return \nthe maximum side-length of a square with a sum less than or equal to \nthreshold\n or return \n0\n if there is no such square\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[1,1,3,2,4,3,2],[1,1,3,2,4,3,2],[1,1,3,2,4,3,2]], threshold = 4\n\nOutput:\n 2\n\nExplanation:\n The maximum side length of square with sum less than 4 is 2 as shown.\n\n\n\nExample 2:\n\n\n\n\nInput:\n mat = [[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2],[2,2,2,2,2]], threshold = 1\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 300\n\n\n0 <= mat[i][j] <= 10\n4\n\n\n0 <= threshold <= 10\n5",
        "temas": [
            "Array",
            "Binary Search",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1283,
        "slug": "find-the-smallest-divisor-given-a-threshold",
        "url": "https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/",
        "titulo": "Find the Smallest Divisor Given a Threshold",
        "enunciado": "Given an array of integers \nnums\n and an integer \nthreshold\n, we will choose a positive integer \ndivisor\n, divide all the array by it, and sum the division's result. Find the \nsmallest\n \ndivisor\n such that the result mentioned above is less than or equal to \nthreshold\n.\n\n\nEach result of the division is rounded to the nearest integer greater than or equal to that element. (For example: \n7/3 = 3\n and \n10/2 = 5\n).\n\n\nThe test cases are generated so that there will be an answer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,5,9], threshold = 6\n\nOutput:\n 5\n\nExplanation:\n We can get a sum to 17 (1+2+5+9) if the divisor is 1. \nIf the divisor is 4 we can get a sum of 7 (1+1+2+3) and if the divisor is 5 the sum will be 5 (1+1+1+2). \n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [44,22,33,11,1], threshold = 5\n\nOutput:\n 44\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5 * 10\n4\n\n\n1 <= nums[i] <= 10\n6\n\n\nnums.length <= threshold <= 10\n6",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1282,
        "slug": "group-the-people-given-the-group-size-they-belong-to",
        "url": "https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/",
        "titulo": "Group the People Given the Group Size They Belong To",
        "enunciado": "There are \nn\n people that are split into some unknown number of groups. Each person is labeled with a \nunique ID\n from \n0\n to \nn - 1\n.\n\n\nYou are given an integer array \ngroupSizes\n, where \ngroupSizes[i]\n is the size of the group that person \ni\n is in. For example, if \ngroupSizes[1] = 3\n, then person \n1\n must be in a group of size \n3\n.\n\n\nReturn \na list of groups such that each person \ni\n is in a group of size \ngroupSizes[i]\n.\n\n\nEach person should appear in \nexactly one group\n, and every person must be in a group. If there are multiple answers, \nreturn any of them\n. It is \nguaranteed\n that there will be \nat least one\n valid solution for the given input.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n groupSizes = [3,3,3,3,3,1,3]\n\nOutput:\n [[5],[0,1,2],[3,4,6]]\n\nExplanation:\n \nThe first group is [5]. The size is 1, and groupSizes[5] = 1.\nThe second group is [0,1,2]. The size is 3, and groupSizes[0] = groupSizes[1] = groupSizes[2] = 3.\nThe third group is [3,4,6]. The size is 3, and groupSizes[3] = groupSizes[4] = groupSizes[6] = 3.\nOther possible solutions are [[2,1,6],[5],[0,4,3]] and [[5],[0,6,2],[4,3,1]].\n\n\n\nExample 2:\n\n\n\n\nInput:\n groupSizes = [2,1,3,3,3,2]\n\nOutput:\n [[1],[0,5],[2,3,4]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\ngroupSizes.length == n\n\n\n1 <= n <= 500\n\n\n1 <= groupSizes[i] <= n",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1277,
        "slug": "count-square-submatrices-with-all-ones",
        "url": "https://leetcode.com/problems/count-square-submatrices-with-all-ones/",
        "titulo": "Count Square Submatrices with All Ones",
        "enunciado": "Given a \nm * n\n matrix of ones and zeros, return how many \nsquare\n submatrices have all ones.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n matrix =\n[\n  [0,1,1,1],\n  [1,1,1,1],\n  [0,1,1,1]\n]\n\nOutput:\n 15\n\nExplanation:\n \nThere are \n10\n squares of side 1.\nThere are \n4\n squares of side 2.\nThere is  \n1\n square of side 3.\nTotal number of squares = 10 + 4 + 1 = \n15\n.\n\n\n\nExample 2:\n\n\n\n\nInput:\n matrix = \n[\n  [1,0,1],\n  [1,1,0],\n  [1,1,0]\n]\n\nOutput:\n 7\n\nExplanation:\n \nThere are \n6\n squares of side 1.  \nThere is \n1\n square of side 2. \nTotal number of squares = 6 + 1 = \n7\n.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 300\n\n\n1 <= arr[0].length <= 300\n\n\n0 <= arr[i][j] <= 1",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1276,
        "slug": "number-of-burgers-with-no-waste-of-ingredients",
        "url": "https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/",
        "titulo": "Number of Burgers with No Waste of Ingredients",
        "enunciado": "Given two integers \ntomatoSlices\n and \ncheeseSlices\n. The ingredients of different burgers are as follows:\n\n\n\n\nJumbo Burger:\n \n4\n tomato slices and \n1\n cheese slice.\n\n\nSmall Burger:\n \n2\n Tomato slices and \n1\n cheese slice.\n\n\n\n\nReturn \n[total_jumbo, total_small]\n so that the number of remaining \ntomatoSlices\n equal to \n0\n and the number of remaining \ncheeseSlices\n equal to \n0\n. If it is not possible to make the remaining \ntomatoSlices\n and \ncheeseSlices\n equal to \n0\n return \n[]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tomatoSlices = 16, cheeseSlices = 7\n\nOutput:\n [1,6]\n\nExplantion:\n To make one jumbo burger and 6 small burgers we need 4*1 + 2*6 = 16 tomato and 1 + 6 = 7 cheese.\nThere will be no remaining ingredients.\n\n\n\nExample 2:\n\n\n\n\nInput:\n tomatoSlices = 17, cheeseSlices = 4\n\nOutput:\n []\n\nExplantion:\n There will be no way to use all ingredients to make small and jumbo burgers.\n\n\n\nExample 3:\n\n\n\n\nInput:\n tomatoSlices = 4, cheeseSlices = 17\n\nOutput:\n []\n\nExplantion:\n Making 1 jumbo burger there will be 16 cheese remaining and making 2 small burgers there will be 15 cheese remaining.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= tomatoSlices, cheeseSlices <= 10\n7",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1268,
        "slug": "search-suggestions-system",
        "url": "https://leetcode.com/problems/search-suggestions-system/",
        "titulo": "Search Suggestions System",
        "enunciado": "You are given an array of strings \nproducts\n and a string \nsearchWord\n.\n\n\nDesign a system that suggests at most three product names from \nproducts\n after each character of \nsearchWord\n is typed. Suggested products should have common prefix with \nsearchWord\n. If there are more than three products with a common prefix return the three lexicographically minimums products.\n\n\nReturn \na list of lists of the suggested products after each character of \nsearchWord\n is typed\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n products = [\"mobile\",\"mouse\",\"moneypot\",\"monitor\",\"mousepad\"], searchWord = \"mouse\"\n\nOutput:\n [[\"mobile\",\"moneypot\",\"monitor\"],[\"mobile\",\"moneypot\",\"monitor\"],[\"mouse\",\"mousepad\"],[\"mouse\",\"mousepad\"],[\"mouse\",\"mousepad\"]]\n\nExplanation:\n products sorted lexicographically = [\"mobile\",\"moneypot\",\"monitor\",\"mouse\",\"mousepad\"].\nAfter typing m and mo all products match and we show user [\"mobile\",\"moneypot\",\"monitor\"].\nAfter typing mou, mous and mouse the system suggests [\"mouse\",\"mousepad\"].\n\n\n\nExample 2:\n\n\n\n\nInput:\n products = [\"havana\"], searchWord = \"havana\"\n\nOutput:\n [[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"],[\"havana\"]]\n\nExplanation:\n The only word \"havana\" will be always suggested while typing the search word.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= products.length <= 1000\n\n\n1 <= products[i].length <= 3000\n\n\n1 <= sum(products[i].length) <= 2 * 10\n4\n\n\nAll the strings of \nproducts\n are \nunique\n.\n\n\nproducts[i]\n consists of lowercase English letters.\n\n\n1 <= searchWord.length <= 1000\n\n\nsearchWord\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Binary Search",
            "Trie",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1267,
        "slug": "count-servers-that-communicate",
        "url": "https://leetcode.com/problems/count-servers-that-communicate/",
        "titulo": "Count Servers that Communicate",
        "enunciado": "You are given a map of a server center, represented as a \nm * n\n integer matrix \ngrid\n, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column.\n\n\n\nReturn the number of servers that communicate with any other server.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,0],[0,1]]\n\nOutput:\n 0\n\nExplanation:\n No servers can communicate with others.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,0],[1,1]]\n\nOutput:\n 3\n\nExplanation:\n All three servers can communicate with at least one other server.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [[1,1,0,0],[0,0,1,0],[0,0,1,0],[0,0,0,1]]\n\nOutput:\n 4\n\nExplanation:\n The two servers in the first row can communicate with each other. The two servers in the third column can communicate with each other. The server at right bottom corner can't communicate with any other server.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m <= 250\n\n\n1 <= n <= 250\n\n\ngrid[i][j] == 0 or 1",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2304,
        "slug": "minimum-path-cost-in-a-grid",
        "url": "https://leetcode.com/problems/minimum-path-cost-in-a-grid/",
        "titulo": "Minimum Path Cost in a Grid",
        "enunciado": "You are given a \n0-indexed\n \nm x n\n integer matrix \ngrid\n consisting of \ndistinct\n integers from \n0\n to \nm * n - 1\n. You can move in this matrix from a cell to any other cell in the \nnext\n row. That is, if you are in cell \n(x, y)\n such that \nx < m - 1\n, you can move to any of the cells \n(x + 1, 0)\n, \n(x + 1, 1)\n, ..., \n(x + 1, n - 1)\n. \nNote\n that it is not possible to move from cells in the last row.\n\n\nEach possible move has a cost given by a \n0-indexed\n 2D array \nmoveCost\n of size \n(m * n) x n\n, where \nmoveCost[i][j]\n is the cost of moving from a cell with value \ni\n to a cell in column \nj\n of the next row. The cost of moving from cells in the last row of \ngrid\n can be ignored.\n\n\nThe cost of a path in \ngrid\n is the \nsum\n of all values of cells visited plus the \nsum\n of costs of all the moves made. Return \nthe \nminimum\n cost of a path that starts from any cell in the \nfirst\n row and ends at any cell in the \nlast\n row.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[5,3],[4,0],[2,1]], moveCost = [[9,8],[1,5],[10,12],[18,6],[2,4],[14,3]]\n\nOutput:\n 17\n\nExplanation: \nThe path with the minimum possible cost is the path 5 -> 0 -> 1.\n- The sum of the values of cells visited is 5 + 0 + 1 = 6.\n- The cost of moving from 5 to 0 is 3.\n- The cost of moving from 0 to 1 is 8.\nSo the total cost of the path is 6 + 3 + 8 = 17.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[5,1,2],[4,0,3]], moveCost = [[12,10,15],[20,23,8],[21,7,1],[8,1,13],[9,10,25],[5,3,2]]\n\nOutput:\n 6\n\nExplanation:\n The path with the minimum possible cost is the path 2 -> 3.\n- The sum of the values of cells visited is 2 + 3 = 5.\n- The cost of moving from 2 to 3 is 1.\nSo the total cost of this path is 5 + 1 = 6.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n2 <= m, n <= 50\n\n\ngrid\n consists of distinct integers from \n0\n to \nm * n - 1\n.\n\n\nmoveCost.length == m * n\n\n\nmoveCost[i].length == n\n\n\n1 <= moveCost[i][j] <= 100",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1262,
        "slug": "greatest-sum-divisible-by-three",
        "url": "https://leetcode.com/problems/greatest-sum-divisible-by-three/",
        "titulo": "Greatest Sum Divisible by Three",
        "enunciado": "Given an integer array \nnums\n, return \nthe \nmaximum possible sum \nof elements of the array such that it is divisible by three\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,6,5,1,8]\n\nOutput:\n 18\n\nExplanation:\n Pick numbers 3, 6, 1 and 8 their sum is 18 (maximum sum divisible by 3).\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4]\n\nOutput:\n 0\n\nExplanation:\n Since 4 is not divisible by 3, do not pick any number.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4,4]\n\nOutput:\n 12\n\nExplanation:\n Pick numbers 1, 3, 4 and 4 their sum is 12 (maximum sum divisible by 3).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 4 * 10\n4\n\n\n1 <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1261,
        "slug": "find-elements-in-a-contaminated-binary-tree",
        "url": "https://leetcode.com/problems/find-elements-in-a-contaminated-binary-tree/",
        "titulo": "Find Elements in a Contaminated Binary Tree",
        "enunciado": "Given a binary tree with the following rules:\n\n\n\n\nroot.val == 0\n\n\nFor any \ntreeNode\n:\n\t\n\n\nIf \ntreeNode.val\n has a value \nx\n and \ntreeNode.left != null\n, then \ntreeNode.left.val == 2 * x + 1\n\n\nIf \ntreeNode.val\n has a value \nx\n and \ntreeNode.right != null\n, then \ntreeNode.right.val == 2 * x + 2\n\n\n\n\n\n\n\n\nNow the binary tree is contaminated, which means all \ntreeNode.val\n have been changed to \n-1\n.\n\n\nImplement the \nFindElements\n class:\n\n\n\n\nFindElements(TreeNode* root)\n Initializes the object with a contaminated binary tree and recovers it.\n\n\nbool find(int target)\n Returns \ntrue\n if the \ntarget\n value exists in the recovered binary tree.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"FindElements\",\"find\",\"find\"]\n[[[-1,null,-1]],[1],[2]]\n\nOutput\n\n[null,false,true]\n\nExplanation\n\nFindElements findElements = new FindElements([-1,null,-1]); \nfindElements.find(1); // return False \nfindElements.find(2); // return True \n\n\nExample 2:\n\n\n\n\n\n\nInput\n\n[\"FindElements\",\"find\",\"find\",\"find\"]\n[[[-1,-1,-1,-1,-1]],[1],[3],[5]]\n\nOutput\n\n[null,true,true,false]\n\nExplanation\n\nFindElements findElements = new FindElements([-1,-1,-1,-1,-1]);\nfindElements.find(1); // return True\nfindElements.find(3); // return True\nfindElements.find(5); // return False\n\n\nExample 3:\n\n\n\n\n\n\nInput\n\n[\"FindElements\",\"find\",\"find\",\"find\",\"find\"]\n[[[-1,null,-1,-1,null,-1]],[2],[3],[4],[5]]\n\nOutput\n\n[null,true,false,false,true]\n\nExplanation\n\nFindElements findElements = new FindElements([-1,null,-1,-1,null,-1]);\nfindElements.find(2); // return True\nfindElements.find(3); // return False\nfindElements.find(4); // return False\nfindElements.find(5); // return True\n\n\n\n \n\n\nConstraints:\n\n\n\n\nTreeNode.val == -1\n\n\nThe height of the binary tree is less than or equal to \n20\n\n\nThe total number of nodes is between \n[1, 10\n4\n]\n\n\nTotal calls of \nfind()\n is between \n[1, 10\n4\n]\n\n\n0 <= target <= 10\n6",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 1254,
        "slug": "number-of-closed-islands",
        "url": "https://leetcode.com/problems/number-of-closed-islands/",
        "titulo": "Number of Closed Islands",
        "enunciado": "Given a 2D \ngrid\n consists of \n0s\n (land) and \n1s\n (water).  An \nisland\n is a maximal 4-directionally connected group of \n0\ns\n and a \nclosed island\n is an island \ntotally\n (all left, top, right, bottom) surrounded by \n1s.\n\n\nReturn the number of \nclosed islands\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1,1,1,1,1,0],[1,0,0,0,0,1,1,0],[1,0,1,0,1,1,1,0],[1,0,0,0,0,1,0,1],[1,1,1,1,1,1,1,0]]\n\nOutput:\n 2\n\nExplanation:\n \nIslands in gray are closed because they are completely surrounded by water (group of 1s).\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,0,1,0,0],[0,1,0,1,0],[0,1,1,1,0]]\n\nOutput:\n 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[1,1,1,1,1,1,1],\n               [1,0,0,0,0,0,1],\n               [1,0,1,1,1,0,1],\n               [1,0,1,0,1,0,1],\n               [1,0,1,1,1,0,1],\n               [1,0,0,0,0,0,1],\n               [1,1,1,1,1,1,1]]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grid.length, grid[0].length <= 100\n\n\n0 <= grid[i][j] <=1",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1253,
        "slug": "reconstruct-a-2-row-binary-matrix",
        "url": "https://leetcode.com/problems/reconstruct-a-2-row-binary-matrix/",
        "titulo": "Reconstruct a 2-Row Binary Matrix",
        "enunciado": "Given the following details of a matrix with \nn\n columns and \n2\n rows :\n\n\n\n\nThe matrix is a binary matrix, which means each element in the matrix can be \n0\n or \n1\n.\n\n\nThe sum of elements of the 0-th(upper) row is given as \nupper\n.\n\n\nThe sum of elements of the 1-st(lower) row is given as \nlower\n.\n\n\nThe sum of elements in the i-th column(0-indexed) is \ncolsum[i]\n, where \ncolsum\n is given as an integer array with length \nn\n.\n\n\n\n\nYour task is to reconstruct the matrix with \nupper\n, \nlower\n and \ncolsum\n.\n\n\nReturn it as a 2-D integer array.\n\n\nIf there are more than one valid solution, any of them will be accepted.\n\n\nIf no valid solution exists, return an empty 2-D array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n upper = 2, lower = 1, colsum = [1,1,1]\n\nOutput:\n [[1,1,0],[0,0,1]]\n\nExplanation: \n[[1,0,1],[0,1,0]], and [[0,1,1],[1,0,0]] are also correct answers.\n\n\n\nExample 2:\n\n\n\n\nInput:\n upper = 2, lower = 3, colsum = [2,2,1,1]\n\nOutput:\n []\n\n\n\nExample 3:\n\n\n\n\nInput:\n upper = 5, lower = 5, colsum = [2,1,2,0,1,0,1,2,0,1]\n\nOutput:\n [[1,1,1,0,1,0,0,1,0,0],[1,0,1,0,0,0,1,1,0,1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= colsum.length <= 10^5\n\n\n0 <= upper, lower <= colsum.length\n\n\n0 <= colsum[i] <= 2",
        "temas": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2217,
        "slug": "find-palindrome-with-fixed-length",
        "url": "https://leetcode.com/problems/find-palindrome-with-fixed-length/",
        "titulo": "Find Palindrome With Fixed Length",
        "enunciado": "Given an integer array \nqueries\n and a \npositive\n integer \nintLength\n, return \nan array\n \nanswer\n \nwhere\n \nanswer[i]\n \nis either the \nqueries[i]\nth\n \nsmallest \npositive palindrome\n of length\n \nintLength\n \nor\n \n-1\n if no such palindrome exists\n.\n\n\nA \npalindrome\n is a number that reads the same backwards and forwards. Palindromes cannot have leading zeros.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n queries = [1,2,3,4,5,90], intLength = 3\n\nOutput:\n [101,111,121,131,141,999]\n\nExplanation:\n\nThe first few palindromes of length 3 are:\n101, 111, 121, 131, 141, 151, 161, 171, 181, 191, 202, ...\nThe 90\nth\n palindrome of length 3 is 999.\n\n\n\nExample 2:\n\n\n\n\nInput:\n queries = [2,4,6], intLength = 4\n\nOutput:\n [1111,1331,1551]\n\nExplanation:\n\nThe first six palindromes of length 4 are:\n1001, 1111, 1221, 1331, 1441, and 1551.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= queries.length <= 5 * 10\n4\n\n\n1 <= queries[i] <= 10\n9\n\n\n1 <= intLength <= 15",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1249,
        "slug": "minimum-remove-to-make-valid-parentheses",
        "url": "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses/",
        "titulo": "Minimum Remove to Make Valid Parentheses",
        "enunciado": "Given a string \ns\n of \n'('\n , \n')'\n and lowercase English characters.\n\n\nYour task is to remove the minimum number of parentheses ( \n'('\n or \n')'\n, in any positions ) so that the resulting \nparentheses string\n is valid and return \nany\n valid string.\n\n\nFormally, a \nparentheses string\n is valid if and only if:\n\n\n\n\nIt is the empty string, contains only lowercase characters, or\n\n\nIt can be written as \nAB\n (\nA\n concatenated with \nB\n), where \nA\n and \nB\n are valid strings, or\n\n\nIt can be written as \n(A)\n, where \nA\n is a valid string.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"lee(t(c)o)de)\"\n\nOutput:\n \"lee(t(c)o)de\"\n\nExplanation:\n \"lee(t(co)de)\" , \"lee(t(c)ode)\" would also be accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"a)b(c)d\"\n\nOutput:\n \"ab(c)d\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"))((\"\n\nOutput:\n \"\"\n\nExplanation:\n An empty string is also valid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'('\n , \n')'\n, or lowercase English letter.",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1248,
        "slug": "count-number-of-nice-subarrays",
        "url": "https://leetcode.com/problems/count-number-of-nice-subarrays/",
        "titulo": "Count Number of Nice Subarrays",
        "enunciado": "Given an array of integers \nnums\n and an integer \nk\n. A continuous subarray is called \nnice\n if there are \nk\n odd numbers on it.\n\n\nReturn \nthe number of \nnice\n sub-arrays\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,2,1,1], k = 3\n\nOutput:\n 2\n\nExplanation:\n The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,4,6], k = 1\n\nOutput:\n 0\n\nExplanation:\n There are no odd numbers in the array.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,2,2,1,2,2,1,2,2,2], k = 2\n\nOutput:\n 16\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 50000\n\n\n1 <= nums[i] <= 10^5\n\n\n1 <= k <= nums.length",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1247,
        "slug": "minimum-swaps-to-make-strings-equal",
        "url": "https://leetcode.com/problems/minimum-swaps-to-make-strings-equal/",
        "titulo": "Minimum Swaps to Make Strings Equal",
        "enunciado": "You are given two strings \ns1\n and \ns2\n of equal length consisting of letters \n\"x\"\n and \n\"y\"\n \nonly\n. Your task is to make these two strings equal to each other. You can swap any two characters that belong to \ndifferent\n strings, which means: swap \ns1[i]\n and \ns2[j]\n.\n\n\nReturn the minimum number of swaps required to make \ns1\n and \ns2\n equal, or return \n-1\n if it is impossible to do so.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"xx\", s2 = \"yy\"\n\nOutput:\n 1\n\nExplanation:\n Swap s1[0] and s2[1], s1 = \"yx\", s2 = \"yx\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"xy\", s2 = \"yx\"\n\nOutput:\n 2\n\nExplanation:\n Swap s1[0] and s2[0], s1 = \"yy\", s2 = \"xx\".\nSwap s1[0] and s2[1], s1 = \"xy\", s2 = \"xy\".\nNote that you cannot swap s1[0] and s1[1] to make s1 equal to \"yx\", cause we can only swap chars in different strings.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s1 = \"xx\", s2 = \"xy\"\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s1.length, s2.length <= 1000\n\n\ns1.length == s2.length\n\n\ns1, s2\n only contain \n'x'\n or \n'y'\n.",
        "temas": [
            "Math",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1726,
        "slug": "tuple-with-same-product",
        "url": "https://leetcode.com/problems/tuple-with-same-product/",
        "titulo": "Tuple with Same Product",
        "enunciado": "Given an array \nnums\n of \ndistinct\n positive integers, return \nthe number of tuples \n(a, b, c, d)\n such that \na * b = c * d\n where \na\n, \nb\n, \nc\n, and \nd\n are elements of \nnums\n, and \na != b != c != d\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,4,6]\n\nOutput:\n 8\n\nExplanation:\n There are 8 valid tuples:\n(2,6,3,4) , (2,6,4,3) , (6,2,3,4) , (6,2,4,3)\n(3,4,2,6) , (4,3,2,6) , (3,4,6,2) , (4,3,6,2)\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,4,5,10]\n\nOutput:\n 16\n\nExplanation:\n There are 16 valid tuples:\n(1,10,2,5) , (1,10,5,2) , (10,1,2,5) , (10,1,5,2)\n(2,5,1,10) , (2,5,10,1) , (5,2,1,10) , (5,2,10,1)\n(2,10,4,5) , (2,10,5,4) , (10,2,4,5) , (10,2,5,4)\n(4,5,2,10) , (4,5,10,2) , (5,4,2,10) , (5,4,10,2)\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 10\n4\n\n\nAll elements in \nnums\n are \ndistinct\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1227,
        "slug": "airplane-seat-assignment-probability",
        "url": "https://leetcode.com/problems/airplane-seat-assignment-probability/",
        "titulo": "Airplane Seat Assignment Probability",
        "enunciado": "n\n passengers board an airplane with exactly \nn\n seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of the passengers will:\n\n\n\n\nTake their own seat if it is still available, and\n\n\nPick other seats randomly when they find their seat occupied\n\n\n\n\nReturn \nthe probability that the \nn\nth\n person gets his own seat\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1.00000\n\nExplanation: \nThe first person can only get the first seat.\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 0.50000\n\nExplanation: \nThe second person has a probability of 0.5 to get the second seat (when first person gets the first seat).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Brainteaser",
            "Probability and Statistics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1239,
        "slug": "maximum-length-of-a-concatenated-string-with-unique-characters",
        "url": "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters/",
        "titulo": "Maximum Length of a Concatenated String with Unique Characters",
        "enunciado": "You are given an array of strings \narr\n. A string \ns\n is formed by the \nconcatenation\n of a \nsubsequence\n of \narr\n that has \nunique characters\n.\n\n\nReturn \nthe \nmaximum\n possible length\n of \ns\n.\n\n\nA \nsubsequence\n is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [\"un\",\"iq\",\"ue\"]\n\nOutput:\n 4\n\nExplanation:\n All the valid concatenations are:\n- \"\"\n- \"un\"\n- \"iq\"\n- \"ue\"\n- \"uniq\" (\"un\" + \"iq\")\n- \"ique\" (\"iq\" + \"ue\")\nMaximum length is 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [\"cha\",\"r\",\"act\",\"ers\"]\n\nOutput:\n 6\n\nExplanation:\n Possible longest valid concatenations are \"chaers\" (\"cha\" + \"ers\") and \"acters\" (\"act\" + \"ers\").\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [\"abcdefghijklmnopqrstuvwxyz\"]\n\nOutput:\n 26\n\nExplanation:\n The only string in arr has all 26 characters.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 16\n\n\n1 <= arr[i].length <= 26\n\n\narr[i]\n contains only lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1238,
        "slug": "circular-permutation-in-binary-representation",
        "url": "https://leetcode.com/problems/circular-permutation-in-binary-representation/",
        "titulo": "Circular Permutation in Binary Representation",
        "enunciado": "Given 2 integers \nn\n and \nstart\n. Your task is return \nany\n permutation \np\n of \n(0,1,2.....,2^n -1) \nsuch that :\n\n\n\n\np[0] = start\n\n\np[i]\n and \np[i+1]\n differ by only one bit in their binary representation.\n\n\np[0]\n and \np[2^n -1]\n must also differ by only one bit in their binary representation.\n\n\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n n = 2, start = 3\r\n\nOutput:\n [3,2,0,1]\r\n\nExplanation:\n The binary representation of the permutation is (11,10,00,01). \r\nAll the adjacent element differ by one bit. Another valid permutation is [3,1,0,2]\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n n = 3, start = 2\r\n\nOutput:\n [2,6,7,5,4,0,1,3]\r\n\nExplanation:\n The binary representation of the permutation is (010,110,111,101,100,000,001,011).\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 16\n\n\n0 <= start < 2 ^ n",
        "temas": [
            "Math",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1237,
        "slug": "find-positive-integer-solution-for-a-given-equation",
        "url": "https://leetcode.com/problems/find-positive-integer-solution-for-a-given-equation/",
        "titulo": "Find Positive Integer Solution for a Given Equation",
        "enunciado": "Given a callable function \nf(x, y)\n \nwith a hidden formula\n and a value \nz\n, reverse engineer the formula and return \nall positive integer pairs \nx\n and \ny\n where \nf(x,y) == z\n. You may return the pairs in any order.\n\n\nWhile the exact formula is hidden, the function is monotonically increasing, i.e.:\n\n\n\n\nf(x, y) < f(x + 1, y)\n\n\nf(x, y) < f(x, y + 1)\n\n\n\n\nThe function interface is defined like this:\n\n\n\ninterface CustomFunction {\npublic:\n  // Returns some positive integer f(x, y) for two positive integers x and y based on a formula.\n  int f(int x, int y);\n};\n\n\n\nWe will judge your solution as follows:\n\n\n\n\nThe judge has a list of \n9\n hidden implementations of \nCustomFunction\n, along with a way to generate an \nanswer key\n of all valid pairs for a specific \nz\n.\n\n\nThe judge will receive two inputs: a \nfunction_id\n (to determine which implementation to test your code with), and the target \nz\n.\n\n\nThe judge will call your \nfindSolution\n and compare your results with the \nanswer key\n.\n\n\nIf your results match the \nanswer key\n, your solution will be \nAccepted\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n function_id = 1, z = 5\n\nOutput:\n [[1,4],[2,3],[3,2],[4,1]]\n\nExplanation:\n The hidden formula for function_id = 1 is f(x, y) = x + y.\nThe following positive integer values of x and y make f(x, y) equal to 5:\nx=1, y=4 -> f(1, 4) = 1 + 4 = 5.\nx=2, y=3 -> f(2, 3) = 2 + 3 = 5.\nx=3, y=2 -> f(3, 2) = 3 + 2 = 5.\nx=4, y=1 -> f(4, 1) = 4 + 1 = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n function_id = 2, z = 5\n\nOutput:\n [[1,5],[5,1]]\n\nExplanation:\n The hidden formula for function_id = 2 is f(x, y) = x * y.\nThe following positive integer values of x and y make f(x, y) equal to 5:\nx=1, y=5 -> f(1, 5) = 1 * 5 = 5.\nx=5, y=1 -> f(5, 1) = 5 * 1 = 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= function_id <= 9\n\n\n1 <= z <= 100\n\n\nIt is guaranteed that the solutions of \nf(x, y) == z\n will be in the range \n1 <= x, y <= 1000\n.\n\n\nIt is also guaranteed that \nf(x, y)\n will fit in 32 bit signed integer if \n1 <= x, y <= 1000\n.",
        "temas": [
            "Math",
            "Two Pointers",
            "Binary Search",
            "Interactive"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2216,
        "slug": "minimum-deletions-to-make-array-beautiful",
        "url": "https://leetcode.com/problems/minimum-deletions-to-make-array-beautiful/",
        "titulo": "Minimum Deletions to Make Array Beautiful",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n. The array \nnums\n is \nbeautiful\n if:\n\n\n\n\nnums.length\n is even.\n\n\nnums[i] != nums[i + 1]\n for all \ni % 2 == 0\n.\n\n\n\n\nNote that an empty array is considered beautiful.\n\n\nYou can delete any number of elements from \nnums\n. When you delete an element, all the elements to the right of the deleted element will be \nshifted one unit to the left\n to fill the gap created and all the elements to the left of the deleted element will remain \nunchanged\n.\n\n\nReturn \nthe \nminimum\n number of elements to delete from \nnums\n to make it \nbeautiful.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,2,3,5]\n\nOutput:\n 1\n\nExplanation:\n You can delete either \nnums[0]\n or \nnums[1]\n to make \nnums\n = [1,2,3,5] which is beautiful. It can be proven you need at least 1 deletion to make \nnums\n beautiful.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,2,2,3,3]\n\nOutput:\n 2\n\nExplanation:\n You can delete \nnums[0]\n and \nnums[5]\n to make nums = [1,2,2,3] which is beautiful. It can be proven you need at least 2 deletions to make nums beautiful.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2225,
        "slug": "find-players-with-zero-or-one-losses",
        "url": "https://leetcode.com/problems/find-players-with-zero-or-one-losses/",
        "titulo": "Find Players With Zero or One Losses",
        "enunciado": "You are given an integer array \nmatches\n where \nmatches[i] = [winner\ni\n, loser\ni\n]\n indicates that the player \nwinner\ni\n defeated player \nloser\ni\n in a match.\n\n\nReturn \na list \nanswer\n of size \n2\n where:\n\n\n\n\nanswer[0]\n is a list of all players that have \nnot\n lost any matches.\n\n\nanswer[1]\n is a list of all players that have lost exactly \none\n match.\n\n\n\n\nThe values in the two lists should be returned in \nincreasing\n order.\n\n\nNote:\n\n\n\n\nYou should only consider the players that have played \nat least one\n match.\n\n\nThe testcases will be generated such that \nno\n two matches will have the \nsame\n outcome.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n matches = [[1,3],[2,3],[3,6],[5,6],[5,7],[4,5],[4,8],[4,9],[10,4],[10,9]]\n\nOutput:\n [[1,2,10],[4,5,7,8]]\n\nExplanation:\n\nPlayers 1, 2, and 10 have not lost any matches.\nPlayers 4, 5, 7, and 8 each have lost one match.\nPlayers 3, 6, and 9 each have lost two matches.\nThus, answer[0] = [1,2,10] and answer[1] = [4,5,7,8].\n\n\n\nExample 2:\n\n\n\n\nInput:\n matches = [[2,3],[1,3],[5,4],[6,4]]\n\nOutput:\n [[1,2,5,6],[]]\n\nExplanation:\n\nPlayers 1, 2, 5, and 6 have not lost any matches.\nPlayers 3 and 4 each have lost two matches.\nThus, answer[0] = [1,2,5,6] and answer[1] = [].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= matches.length <= 10\n5\n\n\nmatches[i].length == 2\n\n\n1 <= winner\ni\n, loser\ni\n <= 10\n5\n\n\nwinner\ni\n != loser\ni\n\n\nAll \nmatches[i]\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1234,
        "slug": "replace-the-substring-for-balanced-string",
        "url": "https://leetcode.com/problems/replace-the-substring-for-balanced-string/",
        "titulo": "Replace the Substring for Balanced String",
        "enunciado": "You are given a string s of length \nn\n containing only four kinds of characters: \n'Q'\n, \n'W'\n, \n'E'\n, and \n'R'\n.\n\n\nA string is said to be \nbalanced\n \nif each of its characters appears \nn / 4\n times where \nn\n is the length of the string.\n\n\nReturn \nthe minimum length of the substring that can be replaced with \nany\n other string of the same length to make \ns\n \nbalanced\n. If s is already \nbalanced\n, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"QWER\"\n\nOutput:\n 0\n\nExplanation:\n s is already balanced.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"QQWE\"\n\nOutput:\n 1\n\nExplanation:\n We need to replace a 'Q' to 'R', so that \"RQWE\" (or \"QRWE\") is balanced.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"QQQW\"\n\nOutput:\n 2\n\nExplanation:\n We can replace the first \"QQ\" to \"ER\". \n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == s.length\n\n\n4 <= n <= 10\n5\n\n\nn\n is a multiple of \n4\n.\n\n\ns\n contains only \n'Q'\n, \n'W'\n, \n'E'\n, and \n'R'\n.",
        "temas": [
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1233,
        "slug": "remove-sub-folders-from-the-filesystem",
        "url": "https://leetcode.com/problems/remove-sub-folders-from-the-filesystem/",
        "titulo": "Remove Sub-Folders from the Filesystem",
        "enunciado": "Given a list of folders \nfolder\n, return \nthe folders after removing all \nsub-folders\n in those folders\n. You may return the answer in \nany order\n.\n\n\nIf a \nfolder[i]\n is located within another \nfolder[j]\n, it is called a \nsub-folder\n of it. A sub-folder of \nfolder[j]\n must start with \nfolder[j]\n, followed by a \n\"/\"\n. For example, \n\"/a/b\"\n is a sub-folder of \n\"/a\"\n, but \n\"/b\"\n is not a sub-folder of \n\"/a/b/c\"\n.\n\n\nThe format of a path is one or more concatenated strings of the form: \n'/'\n followed by one or more lowercase English letters.\n\n\n\n\nFor example, \n\"/leetcode\"\n and \n\"/leetcode/problems\"\n are valid paths while an empty string and \n\"/\"\n are not.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n folder = [\"/a\",\"/a/b\",\"/c/d\",\"/c/d/e\",\"/c/f\"]\n\nOutput:\n [\"/a\",\"/c/d\",\"/c/f\"]\n\nExplanation:\n Folders \"/a/b\" is a subfolder of \"/a\" and \"/c/d/e\" is inside of folder \"/c/d\" in our filesystem.\n\n\n\nExample 2:\n\n\n\n\nInput:\n folder = [\"/a\",\"/a/b/c\",\"/a/b/d\"]\n\nOutput:\n [\"/a\"]\n\nExplanation:\n Folders \"/a/b/c\" and \"/a/b/d\" will be removed because they are subfolders of \"/a\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n folder = [\"/a/b/c\",\"/a/b/ca\",\"/a/b/d\"]\n\nOutput:\n [\"/a/b/c\",\"/a/b/ca\",\"/a/b/d\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= folder.length <= 4 * 10\n4\n\n\n2 <= folder[i].length <= 100\n\n\nfolder[i]\n contains only lowercase letters and \n'/'\n.\n\n\nfolder[i]\n always starts with the character \n'/'\n.\n\n\nEach folder name is \nunique\n.",
        "temas": [
            "Array",
            "String",
            "Depth-First Search",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2202,
        "slug": "maximize-the-topmost-element-after-k-moves",
        "url": "https://leetcode.com/problems/maximize-the-topmost-element-after-k-moves/",
        "titulo": "Maximize the Topmost Element After K Moves",
        "enunciado": "You are given a \n0-indexed\n integer array \nnums\n representing the contents of a \npile\n, where \nnums[0]\n is the topmost element of the pile.\n\n\nIn one move, you can perform \neither\n of the following:\n\n\n\n\nIf the pile is not empty, \nremove\n the topmost element of the pile.\n\n\nIf there are one or more removed elements, \nadd\n any one of them back onto the pile. This element becomes the new topmost element.\n\n\n\n\nYou are also given an integer \nk\n, which denotes the total number of moves to be made.\n\n\nReturn \nthe \nmaximum value\n of the topmost element of the pile possible after \nexactly\n \nk\n \nmoves\n. In case it is not possible to obtain a non-empty pile after \nk\n moves, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,2,2,4,0,6], k = 4\n\nOutput:\n 5\n\nExplanation:\n\nOne of the ways we can end with 5 at the top of the pile after 4 moves is as follows:\n- Step 1: Remove the topmost element = 5. The pile becomes [2,2,4,0,6].\n- Step 2: Remove the topmost element = 2. The pile becomes [2,4,0,6].\n- Step 3: Remove the topmost element = 2. The pile becomes [4,0,6].\n- Step 4: Add 5 back onto the pile. The pile becomes [5,4,0,6].\nNote that this is not the only way to end with 5 at the top of the pile. It can be shown that 5 is the largest answer possible after 4 moves.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2], k = 1\n\nOutput:\n -1\n\nExplanation:\n \nIn the first move, our only option is to pop the topmost element of the pile.\nSince it is not possible to obtain a non-empty pile after one move, we return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i], k <= 10\n9",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1222,
        "slug": "queens-that-can-attack-the-king",
        "url": "https://leetcode.com/problems/queens-that-can-attack-the-king/",
        "titulo": "Queens That Can Attack the King",
        "enunciado": "On a \n0-indexed\n \n8 x 8\n chessboard, there can be multiple black queens and one white king.\n\n\nYou are given a 2D integer array \nqueens\n where \nqueens[i] = [xQueen\ni\n, yQueen\ni\n]\n represents the position of the \ni\nth\n black queen on the chessboard. You are also given an integer array \nking\n of length \n2\n where \nking = [xKing, yKing]\n represents the position of the white king.\n\n\nReturn \nthe coordinates of the black queens that can directly attack the king\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n queens = [[0,1],[1,0],[4,0],[0,4],[3,3],[2,4]], king = [0,0]\n\nOutput:\n [[0,1],[1,0],[3,3]]\n\nExplanation:\n The diagram above shows the three queens that can directly attack the king and the three queens that cannot attack the king (i.e., marked with red dashes).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n queens = [[0,0],[1,1],[2,2],[3,4],[3,5],[4,4],[4,5]], king = [3,3]\n\nOutput:\n [[2,2],[3,4],[4,4]]\n\nExplanation:\n The diagram above shows the three queens that can directly attack the king and the three queens that cannot attack the king (i.e., marked with red dashes).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= queens.length < 64\n\n\nqueens[i].length == king.length == 2\n\n\n0 <= xQueen\ni\n, yQueen\ni\n, xKing, yKing < 8\n\n\nAll the given positions are \nunique\n.",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2226,
        "slug": "maximum-candies-allocated-to-k-children",
        "url": "https://leetcode.com/problems/maximum-candies-allocated-to-k-children/",
        "titulo": "Maximum Candies Allocated to K Children",
        "enunciado": "You are given a \n0-indexed\n integer array \ncandies\n. Each element in the array denotes a pile of candies of size \ncandies[i]\n. You can divide each pile into any number of \nsub piles\n, but you \ncannot\n merge two piles together.\n\n\nYou are also given an integer \nk\n. You should allocate piles of candies to \nk\n children such that each child gets the \nsame\n number of candies. Each child can be allocated candies from \nonly one\n pile of candies and some piles of candies may go unused.\n\n\nReturn \nthe \nmaximum number of candies\n each child can get.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n candies = [5,8,6], k = 3\n\nOutput:\n 5\n\nExplanation:\n We can divide candies[1] into 2 piles of size 5 and 3, and candies[2] into 2 piles of size 5 and 1. We now have five piles of candies of sizes 5, 5, 3, 5, and 1. We can allocate the 3 piles of size 5 to 3 children. It can be proven that each child cannot receive more than 5 candies.\n\n\n\nExample 2:\n\n\n\n\nInput:\n candies = [2,5], k = 11\n\nOutput:\n 0\n\nExplanation:\n There are 11 children but only 7 candies in total, so it is impossible to ensure each child receives at least one candy. Thus, each child gets no candy and the answer is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= candies.length <= 10\n5\n\n\n1 <= candies[i] <= 10\n7\n\n\n1 <= k <= 10\n12",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 2310,
        "slug": "sum-of-numbers-with-units-digit-k",
        "url": "https://leetcode.com/problems/sum-of-numbers-with-units-digit-k/",
        "titulo": "Sum of Numbers With Units Digit K",
        "enunciado": "Given two integers \nnum\n and \nk\n, consider a set of positive integers with the following properties:\n\n\n\n\nThe units digit of each integer is \nk\n.\n\n\nThe sum of the integers is \nnum\n.\n\n\n\n\nReturn \nthe \nminimum\n possible size of such a set, or \n-1\n if no such set exists.\n\n\nNote:\n\n\n\n\nThe set can contain multiple instances of the same integer, and the sum of an empty set is considered \n0\n.\n\n\nThe \nunits digit\n of a number is the rightmost digit of the number.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 58, k = 9\n\nOutput:\n 2\n\nExplanation:\n\nOne valid set is [9,49], as the sum is 58 and each integer has a units digit of 9.\nAnother valid set is [19,39].\nIt can be shown that 2 is the minimum possible size of a valid set.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = 37, k = 2\n\nOutput:\n -1\n\nExplanation:\n It is not possible to obtain a sum of 37 using only integers that have a units digit of 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = 0, k = 7\n\nOutput:\n 0\n\nExplanation:\n The sum of an empty set is considered 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= num <= 3000\n\n\n0 <= k <= 9",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Greedy",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 2191,
        "slug": "sort-the-jumbled-numbers",
        "url": "https://leetcode.com/problems/sort-the-jumbled-numbers/",
        "titulo": "Sort the Jumbled Numbers",
        "enunciado": "You are given a \n0-indexed\n integer array \nmapping\n which represents the mapping rule of a shuffled decimal system. \nmapping[i] = j\n means digit \ni\n should be mapped to digit \nj\n in this system.\n\n\nThe \nmapped value\n of an integer is the new integer obtained by replacing each occurrence of digit \ni\n in the integer with \nmapping[i]\n for all \n0 <= i <= 9\n.\n\n\nYou are also given another integer array \nnums\n. Return \nthe array \nnums\n sorted in \nnon-decreasing\n order based on the \nmapped values\n of its elements.\n\n\nNotes:\n\n\n\n\nElements with the same mapped values should appear in the \nsame relative order\n as in the input.\n\n\nThe elements of \nnums\n should only be sorted based on their mapped values and \nnot be replaced\n by them.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n mapping = [8,9,4,0,2,1,3,5,7,6], nums = [991,338,38]\n\nOutput:\n [338,38,991]\n\nExplanation:\n \nMap the number 991 as follows:\n1. mapping[9] = 6, so all occurrences of the digit 9 will become 6.\n2. mapping[1] = 9, so all occurrences of the digit 1 will become 9.\nTherefore, the mapped value of 991 is 669.\n338 maps to 007, or 7 after removing the leading zeros.\n38 maps to 07, which is also 7 after removing leading zeros.\nSince 338 and 38 share the same mapped value, they should remain in the same relative order, so 338 comes before 38.\nThus, the sorted array is [338,38,991].\n\n\n\nExample 2:\n\n\n\n\nInput:\n mapping = [0,1,2,3,4,5,6,7,8,9], nums = [789,456,123]\n\nOutput:\n [123,456,789]\n\nExplanation:\n 789 maps to 789, 456 maps to 456, and 123 maps to 123. Thus, the sorted array is [123,456,789].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nmapping.length == 10\n\n\n0 <= mapping[i] <= 9\n\n\nAll the values of \nmapping[i]\n are \nunique\n.\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\n0 <= nums[i] < 10\n9",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1219,
        "slug": "path-with-maximum-gold",
        "url": "https://leetcode.com/problems/path-with-maximum-gold/",
        "titulo": "Path with Maximum Gold",
        "enunciado": "In a gold mine \ngrid\n of size \nm x n\n, each cell in this mine has an integer representing the amount of gold in that cell, \n0\n if it is empty.\n\n\nReturn the maximum amount of gold you can collect under the conditions:\n\n\n\n\nEvery time you are located in a cell you will collect all the gold in that cell.\n\n\nFrom your position, you can walk one step to the left, right, up, or down.\n\n\nYou can't visit the same cell more than once.\n\n\nNever visit a cell with \n0\n gold.\n\n\nYou can start and stop collecting gold from \nany \nposition in the grid that has some gold.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n grid = [[0,6,0],[5,8,7],[0,9,0]]\n\nOutput:\n 24\n\nExplanation:\n\n[[0,6,0],\n [5,8,7],\n [0,9,0]]\nPath to get the maximum gold, 9 -> 8 -> 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[1,0,7],[2,0,6],[3,4,5],[0,3,0],[9,0,20]]\n\nOutput:\n 28\n\nExplanation:\n\n[[1,0,7],\n [2,0,6],\n [3,4,5],\n [0,3,0],\n [9,0,20]]\nPath to get the maximum gold, 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 15\n\n\n0 <= grid[i][j] <= 100\n\n\nThere are at most \n25 \ncells containing gold.",
        "temas": [
            "Array",
            "Backtracking",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1218,
        "slug": "longest-arithmetic-subsequence-of-given-difference",
        "url": "https://leetcode.com/problems/longest-arithmetic-subsequence-of-given-difference/",
        "titulo": "Longest Arithmetic Subsequence of Given Difference",
        "enunciado": "Given an integer array \narr\n and an integer \ndifference\n, return the length of the longest subsequence in \narr\n which is an arithmetic sequence such that the difference between adjacent elements in the subsequence equals \ndifference\n.\n\n\nA \nsubsequence\n is a sequence that can be derived from \narr\n by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,4], difference = 1\n\nOutput:\n 4\n\nExplanation: \nThe longest arithmetic subsequence is [1,2,3,4].\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,3,5,7], difference = 1\n\nOutput:\n 1\n\nExplanation: \nThe longest arithmetic subsequence is any single element.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,5,7,8,5,3,4,2,1], difference = -2\n\nOutput:\n 4\n\nExplanation: \nThe longest arithmetic subsequence is [7,5,3,1].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n-10\n4\n <= arr[i], difference <= 10\n4",
        "temas": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1514,
        "slug": "path-with-maximum-probability",
        "url": "https://leetcode.com/problems/path-with-maximum-probability/",
        "titulo": "Path with Maximum Probability",
        "enunciado": "You are given an undirected weighted graph of \nn\n nodes (0-indexed), represented by an edge list where \nedges[i] = [a, b]\n is an undirected edge connecting the nodes \na\n and \nb\n with a probability of success of traversing that edge \nsuccProb[i]\n.\n\n\nGiven two nodes \nstart\n and \nend\n, find the path with the maximum probability of success to go from \nstart\n to \nend\n and return its success probability.\n\n\nIf there is no path from \nstart\n to \nend\n, \nreturn 0\n. Your answer will be accepted if it differs from the correct answer by at most \n1e-5\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.2], start = 0, end = 2\n\nOutput:\n 0.25000\n\nExplanation:\n There are two paths from start to end, one having a probability of success = 0.2 and the other has 0.5 * 0.5 = 0.25.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 3, edges = [[0,1],[1,2],[0,2]], succProb = [0.5,0.5,0.3], start = 0, end = 2\n\nOutput:\n 0.30000\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 3, edges = [[0,1]], succProb = [0.5], start = 0, end = 2\n\nOutput:\n 0.00000\n\nExplanation:\n There is no path between 0 and 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 10^4\n\n\n0 <= start, end < n\n\n\nstart != end\n\n\n0 <= a, b < n\n\n\na != b\n\n\n0 <= succProb.length == edges.length <= 2*10^4\n\n\n0 <= succProb[i] <= 1\n\n\nThere is at most one edge between every two nodes.",
        "temas": [
            "Array",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1706,
        "slug": "where-will-the-ball-fall",
        "url": "https://leetcode.com/problems/where-will-the-ball-fall/",
        "titulo": "Where Will the Ball Fall",
        "enunciado": "You have a 2-D \ngrid\n of size \nm x n\n representing a box, and you have \nn\n balls. The box is open on the top and bottom sides.\n\n\nEach cell in the box has a diagonal board spanning two corners of the cell that can redirect a ball to the right or to the left.\n\n\n\n\nA board that redirects the ball to the right spans the top-left corner to the bottom-right corner and is represented in the grid as \n1\n.\n\n\nA board that redirects the ball to the left spans the top-right corner to the bottom-left corner and is represented in the grid as \n-1\n.\n\n\n\n\nWe drop one ball at the top of each column of the box. Each ball can get stuck in the box or fall out of the bottom. A ball gets stuck if it hits a \"V\" shaped pattern between two boards or if a board redirects the ball into either wall of the box.\n\n\nReturn \nan array \nanswer\n of size \nn\n where \nanswer[i]\n is the column that the ball falls out of at the bottom after dropping the ball from the \ni\nth\n column at the top, or \n-1\n if the ball gets stuck in the box\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1,-1,-1],[1,1,1,-1,-1],[-1,-1,-1,1,1],[1,1,1,1,-1],[-1,-1,-1,-1,-1]]\n\nOutput:\n [1,-1,-1,-1,-1]\n\nExplanation:\n This example is shown in the photo.\nBall b0 is dropped at column 0 and falls out of the box at column 1.\nBall b1 is dropped at column 1 and will get stuck in the box between column 2 and 3 and row 1.\nBall b2 is dropped at column 2 and will get stuck on the box between column 2 and 3 and row 0.\nBall b3 is dropped at column 3 and will get stuck on the box between column 2 and 3 and row 0.\nBall b4 is dropped at column 4 and will get stuck on the box between column 2 and 3 and row 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[-1]]\n\nOutput:\n [-1]\n\nExplanation:\n The ball gets stuck against the left wall.\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1],[1,1,1,1,1,1],[-1,-1,-1,-1,-1,-1]]\n\nOutput:\n [0,1,2,3,4,-1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 100\n\n\ngrid[i][j]\n is \n1\n or \n-1\n.",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1208,
        "slug": "get-equal-substrings-within-budget",
        "url": "https://leetcode.com/problems/get-equal-substrings-within-budget/",
        "titulo": "Get Equal Substrings Within Budget",
        "enunciado": "You are given two strings \ns\n and \nt\n of the same length and an integer \nmaxCost\n.\n\n\nYou want to change \ns\n to \nt\n. Changing the \ni\nth\n character of \ns\n to \ni\nth\n character of \nt\n costs \n|s[i] - t[i]|\n (i.e., the absolute difference between the ASCII values of the characters).\n\n\nReturn \nthe maximum length of a substring of \ns\n that can be changed to be the same as the corresponding substring of \nt\n with a cost less than or equal to \nmaxCost\n. If there is no substring from \ns\n that can be changed to its corresponding substring from \nt\n, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abcd\", t = \"bcdf\", maxCost = 3\n\nOutput:\n 3\n\nExplanation:\n \"abc\" of s can change to \"bcd\".\nThat costs 3, so the maximum length is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcd\", t = \"cdef\", maxCost = 3\n\nOutput:\n 1\n\nExplanation:\n Each character in s costs 2 to change to character in t,  so the maximum length is 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"abcd\", t = \"acde\", maxCost = 0\n\nOutput:\n 1\n\nExplanation:\n You cannot make any change, so the maximum length is 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\nt.length == s.length\n\n\n0 <= maxCost <= 10\n6\n\n\ns\n and \nt\n consist of only lowercase English letters.",
        "temas": [
            "String",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1209,
        "slug": "remove-all-adjacent-duplicates-in-string-ii",
        "url": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii/",
        "titulo": "Remove All Adjacent Duplicates in String II",
        "enunciado": "You are given a string \ns\n and an integer \nk\n, a \nk\n \nduplicate removal\n consists of choosing \nk\n adjacent and equal letters from \ns\n and removing them, causing the left and the right side of the deleted substring to concatenate together.\n\n\nWe repeatedly make \nk\n \nduplicate removals\n on \ns\n until we no longer can.\n\n\nReturn \nthe final string after all such duplicate removals have been made\n. It is guaranteed that the answer is \nunique\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abcd\", k = 2\n\nOutput:\n \"abcd\"\n\nExplanation: \nThere's nothing to delete.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"deeedbbcccbdaa\", k = 3\n\nOutput:\n \"aa\"\n\nExplanation: \n\nFirst delete \"eee\" and \"ccc\", get \"ddbbbdaa\"\nThen delete \"bbb\", get \"dddaa\"\nFinally delete \"ddd\", get \"aa\"\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"pbbcggttciiippooaais\", k = 2\n\nOutput:\n \"ps\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\n2 <= k <= 10\n4\n\n\ns\n only contains lowercase English letters.",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2201,
        "slug": "count-artifacts-that-can-be-extracted",
        "url": "https://leetcode.com/problems/count-artifacts-that-can-be-extracted/",
        "titulo": "Count Artifacts That Can Be Extracted",
        "enunciado": "There is an \nn x n\n \n0-indexed\n grid with some artifacts buried in it. You are given the integer \nn\n and a \n0-indexed \n2D integer array \nartifacts\n describing the positions of the rectangular artifacts where \nartifacts[i] = [r1\ni\n, c1\ni\n, r2\ni\n, c2\ni\n]\n denotes that the \ni\nth\n artifact is buried in the subgrid where:\n\n\n\n\n(r1\ni\n, c1\ni\n)\n is the coordinate of the \ntop-left\n cell of the \ni\nth\n artifact and\n\n\n(r2\ni\n, c2\ni\n)\n is the coordinate of the \nbottom-right\n cell of the \ni\nth\n artifact.\n\n\n\n\nYou will excavate some cells of the grid and remove all the mud from them. If the cell has a part of an artifact buried underneath, it will be uncovered. If all the parts of an artifact are uncovered, you can extract it.\n\n\nGiven a \n0-indexed\n 2D integer array \ndig\n where \ndig[i] = [r\ni\n, c\ni\n]\n indicates that you will excavate the cell \n(r\ni\n, c\ni\n)\n, return \nthe number of artifacts that you can extract\n.\n\n\nThe test cases are generated such that:\n\n\n\n\nNo two artifacts overlap.\n\n\nEach artifact only covers at most \n4\n cells.\n\n\nThe entries of \ndig\n are unique.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 2, artifacts = [[0,0,0,0],[0,1,1,1]], dig = [[0,0],[0,1]]\n\nOutput:\n 1\n\nExplanation:\n \nThe different colors represent different artifacts. Excavated cells are labeled with a 'D' in the grid.\nThere is 1 artifact that can be extracted, namely the red artifact.\nThe blue artifact has one part in cell (1,1) which remains uncovered, so we cannot extract it.\nThus, we return 1.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 2, artifacts = [[0,0,0,0],[0,1,1,1]], dig = [[0,0],[0,1],[1,1]]\n\nOutput:\n 2\n\nExplanation:\n Both the red and blue artifacts have all parts uncovered (labeled with a 'D') and can be extracted, so we return 2. \n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000\n\n\n1 <= artifacts.length, dig.length <= min(n\n2\n, 10\n5\n)\n\n\nartifacts[i].length == 4\n\n\ndig[i].length == 2\n\n\n0 <= r1\ni\n, c1\ni\n, r2\ni\n, c2\ni\n, r\ni\n, c\ni\n <= n - 1\n\n\nr1\ni\n <= r2\ni\n\n\nc1\ni\n <= c2\ni\n\n\nNo two artifacts will overlap.\n\n\nThe number of cells covered by an artifact is \nat most\n \n4\n.\n\n\nThe entries of \ndig\n are unique.",
        "temas": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1895,
        "slug": "largest-magic-square",
        "url": "https://leetcode.com/problems/largest-magic-square/",
        "titulo": "Largest Magic Square",
        "enunciado": "A \nk x k\n \nmagic square\n is a \nk x k\n grid filled with integers such that every row sum, every column sum, and both diagonal sums are \nall equal\n. The integers in the magic square \ndo not have to be distinct\n. Every \n1 x 1\n grid is trivially a \nmagic square\n.\n\n\nGiven an \nm x n\n integer \ngrid\n, return \nthe \nsize\n (i.e., the side length \nk\n) of the \nlargest magic square\n that can be found within this grid\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[7,1,4,5,6],[2,5,1,6,4],[1,5,4,3,2],[1,2,7,3,4]]\n\nOutput:\n 3\n\nExplanation:\n The largest magic square has a size of 3.\nEvery row sum, column sum, and diagonal sum of this magic square is equal to 12.\n- Row sums: 5+1+6 = 5+4+3 = 2+7+3 = 12\n- Column sums: 5+5+2 = 1+4+7 = 6+3+3 = 12\n- Diagonal sums: 5+4+3 = 6+4+2 = 12\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[5,1,3,1],[9,3,3,1],[1,3,3,8]]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 50\n\n\n1 <= grid[i][j] <= 10\n6",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 2079,
        "slug": "watering-plants",
        "url": "https://leetcode.com/problems/watering-plants/",
        "titulo": "Watering Plants",
        "enunciado": "You want to water \nn\n plants in your garden with a watering can. The plants are arranged in a row and are labeled from \n0\n to \nn - 1\n from left to right where the \ni\nth\n plant is located at \nx = i\n. There is a river at \nx = -1\n that you can refill your watering can at.\n\n\nEach plant needs a specific amount of water. You will water the plants in the following way:\n\n\n\n\nWater the plants in order from left to right.\n\n\nAfter watering the current plant, if you do not have enough water to \ncompletely\n water the next plant, return to the river to fully refill the watering can.\n\n\nYou \ncannot\n refill the watering can early.\n\n\n\n\nYou are initially at the river (i.e., \nx = -1\n). It takes \none step\n to move \none unit\n on the x-axis.\n\n\nGiven a \n0-indexed\n integer array \nplants\n of \nn\n integers, where \nplants[i]\n is the amount of water the \ni\nth\n plant needs, and an integer \ncapacity\n representing the watering can capacity, return \nthe \nnumber of steps\n needed to water all the plants\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n plants = [2,2,3,3], capacity = 5\n\nOutput:\n 14\n\nExplanation:\n Start at the river with a full watering can:\n- Walk to plant 0 (1 step) and water it. Watering can has 3 units of water.\n- Walk to plant 1 (1 step) and water it. Watering can has 1 unit of water.\n- Since you cannot completely water plant 2, walk back to the river to refill (2 steps).\n- Walk to plant 2 (3 steps) and water it. Watering can has 2 units of water.\n- Since you cannot completely water plant 3, walk back to the river to refill (3 steps).\n- Walk to plant 3 (4 steps) and water it.\nSteps needed = 1 + 1 + 2 + 3 + 3 + 4 = 14.\n\n\n\nExample 2:\n\n\n\n\nInput:\n plants = [1,1,1,4,2,3], capacity = 4\n\nOutput:\n 30\n\nExplanation:\n Start at the river with a full watering can:\n- Water plants 0, 1, and 2 (3 steps). Return to river (3 steps).\n- Water plant 3 (4 steps). Return to river (4 steps).\n- Water plant 4 (5 steps). Return to river (5 steps).\n- Water plant 5 (6 steps).\nSteps needed = 3 + 3 + 4 + 4 + 5 + 5 + 6 = 30.\n\n\n\nExample 3:\n\n\n\n\nInput:\n plants = [7,7,7,7,7,7,7], capacity = 8\n\nOutput:\n 49\n\nExplanation:\n You have to refill before watering each plant.\nSteps needed = 1 + 1 + 2 + 2 + 3 + 3 + 4 + 4 + 5 + 5 + 6 + 6 + 7 = 49.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == plants.length\n\n\n1 <= n <= 1000\n\n\n1 <= plants[i] <= 10\n6\n\n\nmax(plants[i]) <= capacity <= 10\n9",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1202,
        "slug": "smallest-string-with-swaps",
        "url": "https://leetcode.com/problems/smallest-string-with-swaps/",
        "titulo": "Smallest String With Swaps",
        "enunciado": "You are given a string \ns\n, and an array of pairs of indices in the string \npairs\n where \npairs[i] = [a, b]\n indicates 2 indices(0-indexed) of the string.\n\n\nYou can swap the characters at any pair of indices in the given \npairs\n \nany number of times\n.\n\n\nReturn the lexicographically smallest string that \ns\n can be changed to after using the swaps.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"dcab\", pairs = [[0,3],[1,2]]\n\nOutput:\n \"bacd\"\n\nExplaination:\n \nSwap s[0] and s[3], s = \"bcad\"\nSwap s[1] and s[2], s = \"bacd\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"dcab\", pairs = [[0,3],[1,2],[0,2]]\n\nOutput:\n \"abcd\"\n\nExplaination: \n\nSwap s[0] and s[3], s = \"bcad\"\nSwap s[0] and s[2], s = \"acbd\"\nSwap s[1] and s[2], s = \"abcd\"\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"cba\", pairs = [[0,1],[1,2]]\n\nOutput:\n \"abc\"\n\nExplaination: \n\nSwap s[0] and s[1], s = \"bca\"\nSwap s[1] and s[2], s = \"bac\"\nSwap s[0] and s[1], s = \"abc\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10^5\n\n\n0 <= pairs.length <= 10^5\n\n\n0 <= pairs[i][0], pairs[i][1] < s.length\n\n\ns\n only contains lower case English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1201,
        "slug": "ugly-number-iii",
        "url": "https://leetcode.com/problems/ugly-number-iii/",
        "titulo": "Ugly Number III",
        "enunciado": "An \nugly number\n is a positive integer that is divisible by \na\n, \nb\n, or \nc\n.\n\n\nGiven four integers \nn\n, \na\n, \nb\n, and \nc\n, return the \nn\nth\n \nugly number\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, a = 2, b = 3, c = 5\n\nOutput:\n 4\n\nExplanation:\n The ugly numbers are 2, 3, 4, 5, 6, 8, 9, 10... The 3\nrd\n is 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4, a = 2, b = 3, c = 4\n\nOutput:\n 6\n\nExplanation:\n The ugly numbers are 2, 3, 4, 6, 8, 9, 10, 12... The 4\nth\n is 6.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 5, a = 2, b = 11, c = 13\n\nOutput:\n 10\n\nExplanation:\n The ugly numbers are 2, 4, 6, 8, 10, 11, 12, 13... The 5\nth\n is 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, a, b, c <= 10\n9\n\n\n1 <= a * b * c <= 10\n18\n\n\nIt is guaranteed that the result will be in range \n[1, 2 * 10\n9\n]\n.",
        "temas": [
            "Math",
            "Binary Search",
            "Combinatorics",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1405,
        "slug": "longest-happy-string",
        "url": "https://leetcode.com/problems/longest-happy-string/",
        "titulo": "Longest Happy String",
        "enunciado": "A string \ns\n is called \nhappy\n if it satisfies the following conditions:\n\n\n\n\ns\n only contains the letters \n'a'\n, \n'b'\n, and \n'c'\n.\n\n\ns\n does not contain any of \n\"aaa\"\n, \n\"bbb\"\n, or \n\"ccc\"\n as a substring.\n\n\ns\n contains \nat most\n \na\n occurrences of the letter \n'a'\n.\n\n\ns\n contains \nat most\n \nb\n occurrences of the letter \n'b'\n.\n\n\ns\n contains \nat most\n \nc\n occurrences of the letter \n'c'\n.\n\n\n\n\nGiven three integers \na\n, \nb\n, and \nc\n, return \nthe \nlongest possible happy \nstring\n. If there are multiple longest happy strings, return \nany of them\n. If there is no such string, return \nthe empty string \n\"\"\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = 1, b = 1, c = 7\n\nOutput:\n \"ccaccbcc\"\n\nExplanation:\n \"ccbccacc\" would also be a correct answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = 7, b = 1, c = 0\n\nOutput:\n \"aabaa\"\n\nExplanation:\n It is the only correct answer in this case.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= a, b, c <= 100\n\n\na + b + c > 0",
        "temas": [
            "String",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 2139,
        "slug": "minimum-moves-to-reach-target-score",
        "url": "https://leetcode.com/problems/minimum-moves-to-reach-target-score/",
        "titulo": "Minimum Moves to Reach Target Score",
        "enunciado": "You are playing a game with integers. You start with the integer \n1\n and you want to reach the integer \ntarget\n.\n\n\nIn one move, you can either:\n\n\n\n\nIncrement\n the current integer by one (i.e., \nx = x + 1\n).\n\n\nDouble\n the current integer (i.e., \nx = 2 * x\n).\n\n\n\n\nYou can use the \nincrement\n operation \nany\n number of times, however, you can only use the \ndouble\n operation \nat most\n \nmaxDoubles\n times.\n\n\nGiven the two integers \ntarget\n and \nmaxDoubles\n, return \nthe minimum number of moves needed to reach \ntarget\n starting with \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n target = 5, maxDoubles = 0\n\nOutput:\n 4\n\nExplanation:\n Keep incrementing by 1 until you reach target.\n\n\n\nExample 2:\n\n\n\n\nInput:\n target = 19, maxDoubles = 2\n\nOutput:\n 7\n\nExplanation:\n Initially, x = 1\nIncrement 3 times so x = 4\nDouble once so x = 8\nIncrement once so x = 9\nDouble again so x = 18\nIncrement once so x = 19\n\n\n\nExample 3:\n\n\n\n\nInput:\n target = 10, maxDoubles = 4\n\nOutput:\n 4\n\nExplanation:\n \nInitially, x = 1\nIncrement once so x = 2\nDouble once so x = 4\nIncrement once so x = 5\nDouble again so x = 10\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= target <= 10\n9\n\n\n0 <= maxDoubles <= 100",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1191,
        "slug": "k-concatenation-maximum-sum",
        "url": "https://leetcode.com/problems/k-concatenation-maximum-sum/",
        "titulo": "K-Concatenation Maximum Sum",
        "enunciado": "Given an integer array \narr\n and an integer \nk\n, modify the array by repeating it \nk\n times.\n\n\nFor example, if \narr = [1, 2]\n and \nk = 3 \nthen the modified array will be \n[1, 2, 1, 2, 1, 2]\n.\n\n\nReturn the maximum sub-array sum in the modified array. Note that the length of the sub-array can be \n0\n and its sum in that case is \n0\n.\n\n\nAs the answer can be very large, return the answer \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2], k = 3\n\nOutput:\n 9\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,-2,1], k = 5\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [-1,-2], k = 7\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n1 <= k <= 10\n5\n\n\n-10\n4\n <= arr[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1190,
        "slug": "reverse-substrings-between-each-pair-of-parentheses",
        "url": "https://leetcode.com/problems/reverse-substrings-between-each-pair-of-parentheses/",
        "titulo": "Reverse Substrings Between Each Pair of Parentheses",
        "enunciado": "You are given a string \ns\n that consists of lower case English letters and brackets.\n\n\nReverse the strings in each pair of matching parentheses, starting from the innermost one.\n\n\nYour result should \nnot\n contain any brackets.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"(abcd)\"\n\nOutput:\n \"dcba\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"(u(love)i)\"\n\nOutput:\n \"iloveu\"\n\nExplanation:\n The substring \"love\" is reversed first, then the whole string is reversed.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"(ed(et(oc))el)\"\n\nOutput:\n \"leetcode\"\n\nExplanation:\n First, we reverse the substring \"oc\", then \"etco\", and finally, the whole string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 2000\n\n\ns\n only contains lower case English characters and parentheses.\n\n\nIt is guaranteed that all parentheses are balanced.",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1954,
        "slug": "minimum-garden-perimeter-to-collect-enough-apples",
        "url": "https://leetcode.com/problems/minimum-garden-perimeter-to-collect-enough-apples/",
        "titulo": "Minimum Garden Perimeter to Collect Enough Apples",
        "enunciado": "In a garden represented as an infinite 2D grid, there is an apple tree planted at \nevery\n integer coordinate. The apple tree planted at an integer coordinate \n(i, j)\n has \n|i| + |j|\n apples growing on it.\n\n\nYou will buy an axis-aligned \nsquare plot\n of land that is centered at \n(0, 0)\n.\n\n\nGiven an integer \nneededApples\n, return \nthe \nminimum perimeter\n of a plot such that \nat least\n \nneededApples\n \napples are \ninside or on\n the perimeter of that plot\n.\n\n\nThe value of \n|x|\n is defined as:\n\n\n\n\nx\n if \nx >= 0\n\n\n-x\n if \nx < 0\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n neededApples = 1\n\nOutput:\n 8\n\nExplanation:\n A square plot of side length 1 does not contain any apples.\nHowever, a square plot of side length 2 has 12 apples inside (as depicted in the image above).\nThe perimeter is 2 * 4 = 8.\n\n\n\nExample 2:\n\n\n\n\nInput:\n neededApples = 13\n\nOutput:\n 16\n\n\n\nExample 3:\n\n\n\n\nInput:\n neededApples = 1000000000\n\nOutput:\n 5040\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= neededApples <= 10\n15",
        "temas": [
            "Math",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 2080,
        "slug": "range-frequency-queries",
        "url": "https://leetcode.com/problems/range-frequency-queries/",
        "titulo": "Range Frequency Queries",
        "enunciado": "Design a data structure to find the \nfrequency\n of a given value in a given subarray.\n\n\nThe \nfrequency\n of a value in a subarray is the number of occurrences of that value in the subarray.\n\n\nImplement the \nRangeFreqQuery\n class:\n\n\n\n\nRangeFreqQuery(int[] arr)\n Constructs an instance of the class with the given \n0-indexed\n integer array \narr\n.\n\n\nint query(int left, int right, int value)\n Returns the \nfrequency\n of \nvalue\n in the subarray \narr[left...right]\n.\n\n\n\n\nA \nsubarray\n is a contiguous sequence of elements within an array. \narr[left...right]\n denotes the subarray that contains the elements of \nnums\n between indices \nleft\n and \nright\n (\ninclusive\n).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"RangeFreqQuery\", \"query\", \"query\"]\n[[[12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]], [1, 2, 4], [0, 11, 33]]\n\nOutput\n\n[null, 1, 2]\n\n\nExplanation\n\nRangeFreqQuery rangeFreqQuery = new RangeFreqQuery([12, 33, 4, 56, 22, 2, 34, 33, 22, 12, 34, 56]);\nrangeFreqQuery.query(1, 2, 4); // return 1. The value 4 occurs 1 time in the subarray [33, 4]\nrangeFreqQuery.query(0, 11, 33); // return 2. The value 33 occurs 2 times in the whole array.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n1 <= arr[i], value <= 10\n4\n\n\n0 <= left <= right < arr.length\n\n\nAt most \n10\n5\n calls will be made to \nquery",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design",
            "Segment Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1186,
        "slug": "maximum-subarray-sum-with-one-deletion",
        "url": "https://leetcode.com/problems/maximum-subarray-sum-with-one-deletion/",
        "titulo": "Maximum Subarray Sum with One Deletion",
        "enunciado": "Given an array of integers, return the maximum sum for a \nnon-empty\n subarray (contiguous elements) with at most one element deletion. In other words, you want to choose a subarray and optionally delete one element from it so that there is still at least one element left and the sum of the remaining elements is maximum possible.\n\n\nNote that the subarray needs to be \nnon-empty\n after deleting one element.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,-2,0,3]\n\nOutput:\n 4\n\nExplanation: \nBecause we can choose [1, -2, 0, 3] and drop -2, thus the subarray [1, 0, 3] becomes the maximum value.\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,-2,-2,3]\n\nOutput:\n 3\n\nExplanation: \nWe just choose [3] and it's the maximum sum.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [-1,-1,-1,-1]\n\nOutput:\n -1\n\nExplanation:\n The final subarray needs to be non-empty. You can't choose [-1] and delete -1 from it, then get an empty subarray to make the sum equals to 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n5\n\n\n-10\n4\n <= arr[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1382,
        "slug": "balance-a-binary-search-tree",
        "url": "https://leetcode.com/problems/balance-a-binary-search-tree/",
        "titulo": "Balance a Binary Search Tree",
        "enunciado": "Given the \nroot\n of a binary search tree, return \na \nbalanced\n binary search tree with the same node values\n. If there is more than one answer, return \nany of them\n.\n\n\nA binary search tree is \nbalanced\n if the depth of the two subtrees of every node never differs by more than \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,null,2,null,3,null,4,null,null]\n\nOutput:\n [2,1,3,null,null,null,4]\n\nExplanation:\n This is not the only correct answer, [3,1,4,null,2] is also correct.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [2,1,3]\n\nOutput:\n [2,1,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n1 <= Node.val <= 10\n5",
        "temas": [
            "Divide and Conquer",
            "Greedy",
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Divide and Conquer",
        "has_image": true
    },
    {
        "id": 1390,
        "slug": "four-divisors",
        "url": "https://leetcode.com/problems/four-divisors/",
        "titulo": "Four Divisors",
        "enunciado": "Given an integer array \nnums\n, return \nthe sum of divisors of the integers in that array that have exactly four divisors\n. If there is no such integer in the array, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [21,4,7]\n\nOutput:\n 32\n\nExplanation:\n \n21 has 4 divisors: 1, 3, 7, 21\n4 has 3 divisors: 1, 2, 4\n7 has 2 divisors: 1, 7\nThe answer is the sum of divisors of 21 only.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [21,21]\n\nOutput:\n 64\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n1 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1177,
        "slug": "can-make-palindrome-from-substring",
        "url": "https://leetcode.com/problems/can-make-palindrome-from-substring/",
        "titulo": "Can Make Palindrome from Substring",
        "enunciado": "You are given a string \ns\n and array \nqueries\n where \nqueries[i] = [left\ni\n, right\ni\n, k\ni\n]\n. We may rearrange the substring \ns[left\ni\n...right\ni\n]\n for each query and then choose up to \nk\ni\n of them to replace with any lowercase English letter.\n\n\nIf the substring is possible to be a palindrome string after the operations above, the result of the query is \ntrue\n. Otherwise, the result is \nfalse\n.\n\n\nReturn a boolean array \nanswer\n where \nanswer[i]\n is the result of the \ni\nth\n query \nqueries[i]\n.\n\n\nNote that each letter is counted individually for replacement, so if, for example \ns[left\ni\n...right\ni\n] = \"aaa\"\n, and \nk\ni\n = 2\n, we can only replace two of the letters. Also, note that no query modifies the initial string \ns\n.\n\n\n \n\n\nExample :\n\n\n\n\nInput:\n s = \"abcda\", queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]\n\nOutput:\n [true,false,false,true,true]\n\nExplanation:\n\nqueries[0]: substring = \"d\", is palidrome.\nqueries[1]: substring = \"bc\", is not palidrome.\nqueries[2]: substring = \"abcd\", is not palidrome after replacing only 1 character.\nqueries[3]: substring = \"abcd\", could be changed to \"abba\" which is palidrome. Also this can be changed to \"baab\" first rearrange it \"bacd\" then replace \"cd\" with \"ab\".\nqueries[4]: substring = \"abcda\", could be changed to \"abcba\" which is palidrome.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"lyb\", queries = [[0,1,0],[2,2,1]]\n\nOutput:\n [false,true]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, queries.length <= 10\n5\n\n\n0 <= left\ni\n <= right\ni\n < s.length\n\n\n0 <= k\ni\n <= s.length\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1362,
        "slug": "closest-divisors",
        "url": "https://leetcode.com/problems/closest-divisors/",
        "titulo": "Closest Divisors",
        "enunciado": "Given an integer \nnum\n, find the closest two integers in absolute difference whose product equals \nnum + 1\n or \nnum + 2\n.\n\n\nReturn the two integers in any order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 8\n\nOutput:\n [3,3]\n\nExplanation:\n For num + 1 = 9, the closest divisors are 3 & 3, for num + 2 = 10, the closest divisors are 2 & 5, hence 3 & 3 is chosen.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = 123\n\nOutput:\n [5,25]\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = 999\n\nOutput:\n [40,25]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num <= 10^9",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1361,
        "slug": "validate-binary-tree-nodes",
        "url": "https://leetcode.com/problems/validate-binary-tree-nodes/",
        "titulo": "Validate Binary Tree Nodes",
        "enunciado": "You have \nn\n binary tree nodes numbered from \n0\n to \nn - 1\n where node \ni\n has two children \nleftChild[i]\n and \nrightChild[i]\n, return \ntrue\n if and only if \nall\n the given nodes form \nexactly one\n valid binary tree.\n\n\nIf node \ni\n has no left child then \nleftChild[i]\n will equal \n-1\n, similarly for the right child.\n\n\nNote that the nodes have no values and that we only use the node numbers in this problem.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, leftChild = [1,-1,3,-1], rightChild = [2,-1,-1,-1]\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 4, leftChild = [1,-1,3,-1], rightChild = [2,3,-1,-1]\n\nOutput:\n false\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 2, leftChild = [1,0], rightChild = [-1,-1]\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == leftChild.length == rightChild.length\n\n\n1 <= n <= 10\n4\n\n\n-1 <= leftChild[i], rightChild[i] <= n - 1",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1170,
        "slug": "compare-strings-by-frequency-of-the-smallest-character",
        "url": "https://leetcode.com/problems/compare-strings-by-frequency-of-the-smallest-character/",
        "titulo": "Compare Strings by Frequency of the Smallest Character",
        "enunciado": "Let the function \nf(s)\n be the \nfrequency of the lexicographically smallest character\n in a non-empty string \ns\n. For example, if \ns = \"dcce\"\n then \nf(s) = 2\n because the lexicographically smallest character is \n'c'\n, which has a frequency of 2.\n\n\nYou are given an array of strings \nwords\n and another array of query strings \nqueries\n. For each query \nqueries[i]\n, count the \nnumber of words\n in \nwords\n such that \nf(queries[i])\n < \nf(W)\n for each \nW\n in \nwords\n.\n\n\nReturn \nan integer array \nanswer\n, where each \nanswer[i]\n is the answer to the \ni\nth\n query\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n queries = [\"cbd\"], words = [\"zaaaz\"]\n\nOutput:\n [1]\n\nExplanation:\n On the first query we have f(\"cbd\") = 1, f(\"zaaaz\") = 3 so f(\"cbd\") < f(\"zaaaz\").\n\n\n\nExample 2:\n\n\n\n\nInput:\n queries = [\"bbb\",\"cc\"], words = [\"a\",\"aa\",\"aaa\",\"aaaa\"]\n\nOutput:\n [1,2]\n\nExplanation:\n On the first query only f(\"bbb\") < f(\"aaaa\"). On the second query both f(\"aaa\") and f(\"aaaa\") are both > f(\"cc\").\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= queries.length <= 2000\n\n\n1 <= words.length <= 2000\n\n\n1 <= queries[i].length, words[i].length <= 10\n\n\nqueries[i][j]\n, \nwords[i][j]\n consist of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1169,
        "slug": "invalid-transactions",
        "url": "https://leetcode.com/problems/invalid-transactions/",
        "titulo": "Invalid Transactions",
        "enunciado": "A transaction is possibly invalid if:\n\n\n\n\nthe amount exceeds \n$1000\n, or;\n\n\nif it occurs within (and including) \n60\n minutes of another transaction with the \nsame name\n in a \ndifferent city\n.\n\n\n\n\nYou are given an array of strings \ntransaction\n where \ntransactions[i]\n consists of comma-separated values representing the name, time (in minutes), amount, and city of the transaction.\n\n\nReturn a list of \ntransactions\n that are possibly invalid. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n transactions = [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\n\nOutput:\n [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\n\nExplanation:\n The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.\n\n\nExample 2:\n\n\n\n\nInput:\n transactions = [\"alice,20,800,mtv\",\"alice,50,1200,mtv\"]\n\nOutput:\n [\"alice,50,1200,mtv\"]\n\n\n\nExample 3:\n\n\n\n\nInput:\n transactions = [\"alice,20,800,mtv\",\"bob,50,1200,mtv\"]\n\nOutput:\n [\"bob,50,1200,mtv\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\ntransactions.length <= 1000\n\n\nEach \ntransactions[i]\n takes the form \n\"{name},{time},{amount},{city}\"\n\n\nEach \n{name}\n and \n{city}\n consist of lowercase English letters, and have lengths between \n1\n and \n10\n.\n\n\nEach \n{time}\n consist of digits, and represent an integer between \n0\n and \n1000\n.\n\n\nEach \n{amount}\n consist of digits, and represent an integer between \n0\n and \n2000\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1171,
        "slug": "remove-zero-sum-consecutive-nodes-from-linked-list",
        "url": "https://leetcode.com/problems/remove-zero-sum-consecutive-nodes-from-linked-list/",
        "titulo": "Remove Zero Sum Consecutive Nodes from Linked List",
        "enunciado": "Given the \nhead\n of a linked list, we repeatedly delete consecutive sequences of nodes that sum to \n0\n until there are no such sequences.\n\n\nAfter doing so, return the head of the final linked list.  You may return any such answer.\n\n\n \n\n\n(Note that in the examples below, all sequences are serializations of \nListNode\n objects.)\n\n\nExample 1:\n\n\n\n\nInput:\n head = [1,2,-3,3,1]\n\nOutput:\n [3,1]\n\nNote:\n The answer [1,2,1] would also be accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = [1,2,3,-3,4]\n\nOutput:\n [1,2,4]\n\n\n\nExample 3:\n\n\n\n\nInput:\n head = [1,2,3,-3,-2]\n\nOutput:\n [1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe given linked list will contain between \n1\n and \n1000\n nodes.\n\n\nEach node in the linked list has \n-1000 <= node.val <= 1000\n.",
        "temas": [
            "Hash Table",
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1155,
        "slug": "number-of-dice-rolls-with-target-sum",
        "url": "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum/",
        "titulo": "Number of Dice Rolls With Target Sum",
        "enunciado": "You have \nn\n dice, and each dice has \nk\n faces numbered from \n1\n to \nk\n.\n\n\nGiven three integers \nn\n, \nk\n, and \ntarget\n, return \nthe number of possible ways (out of the \nk\nn\n total ways) \nto roll the dice, so the sum of the face-up numbers equals \ntarget\n. Since the answer may be too large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1, k = 6, target = 3\n\nOutput:\n 1\n\nExplanation:\n You throw one die with 6 faces.\nThere is only one way to get a sum of 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, k = 6, target = 7\n\nOutput:\n 6\n\nExplanation:\n You throw two dice, each with 6 faces.\nThere are 6 ways to get a sum of 7: 1+6, 2+5, 3+4, 4+3, 5+2, 6+1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 30, k = 30, target = 500\n\nOutput:\n 222616187\n\nExplanation:\n The answer must be returned modulo 10\n9\n + 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n, k <= 30\n\n\n1 <= target <= 1000",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 1156,
        "slug": "swap-for-longest-repeated-character-substring",
        "url": "https://leetcode.com/problems/swap-for-longest-repeated-character-substring/",
        "titulo": "Swap For Longest Repeated Character Substring",
        "enunciado": "You are given a string \ntext\n. You can swap two of the characters in the \ntext\n.\n\n\nReturn \nthe length of the longest substring with repeated characters\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n text = \"ababa\"\n\nOutput:\n 3\n\nExplanation:\n We can swap the first 'b' with the last 'a', or the last 'b' with the first 'a'. Then, the longest repeated character substring is \"aaa\" with length 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n text = \"aaabaaa\"\n\nOutput:\n 6\n\nExplanation:\n Swap 'b' with the last 'a' (or the first 'a'), and we get longest repeated character substring \"aaaaaa\" with length 6.\n\n\n\nExample 3:\n\n\n\n\nInput:\n text = \"aaaaa\"\n\nOutput:\n 5\n\nExplanation:\n No need to swap, longest repeated character substring is \"aaaaa\" with length is 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= text.length <= 2 * 10\n4\n\n\ntext\n consist of lowercase English characters only.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1302,
        "slug": "deepest-leaves-sum",
        "url": "https://leetcode.com/problems/deepest-leaves-sum/",
        "titulo": "Deepest Leaves Sum",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe sum of values of its deepest leaves\n.\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\n\nOutput:\n 15\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]\n\nOutput:\n 19\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n1 <= Node.val <= 100",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1329,
        "slug": "sort-the-matrix-diagonally",
        "url": "https://leetcode.com/problems/sort-the-matrix-diagonally/",
        "titulo": "Sort the Matrix Diagonally",
        "enunciado": "A \nmatrix diagonal\n is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until reaching the matrix's end. For example, the \nmatrix diagonal\n starting from \nmat[2][0]\n, where \nmat\n is a \n6 x 3\n matrix, includes cells \nmat[2][0]\n, \nmat[3][1]\n, and \nmat[4][2]\n.\n\n\nGiven an \nm x n\n matrix \nmat\n of integers, sort each \nmatrix diagonal\n in ascending order and return \nthe resulting matrix\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[3,3,1,1],[2,2,1,2],[1,1,1,2]]\n\nOutput:\n [[1,1,1,1],[1,2,2,2],[1,2,3,3]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n mat = [[11,25,66,1,69,7],[23,55,17,45,15,52],[75,31,36,44,58,8],[22,27,33,25,68,4],[84,28,14,11,5,50]]\n\nOutput:\n [[5,17,4,1,52,7],[11,11,25,45,8,69],[14,23,25,44,58,15],[22,27,31,36,50,66],[84,28,75,33,55,68]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 100\n\n\n1 <= mat[i][j] <= 100",
        "temas": [
            "Array",
            "Sorting",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1328,
        "slug": "break-a-palindrome",
        "url": "https://leetcode.com/problems/break-a-palindrome/",
        "titulo": "Break a Palindrome",
        "enunciado": "Given a palindromic string of lowercase English letters \npalindrome\n, replace \nexactly one\n character with any lowercase English letter so that the resulting string is \nnot\n a palindrome and that it is the \nlexicographically smallest\n one possible.\n\n\nReturn \nthe resulting string. If there is no way to replace a character to make it not a palindrome, return an \nempty string\n.\n\n\nA string \na\n is lexicographically smaller than a string \nb\n (of the same length) if in the first position where \na\n and \nb\n differ, \na\n has a character strictly smaller than the corresponding character in \nb\n. For example, \n\"abcc\"\n is lexicographically smaller than \n\"abcd\"\n because the first position they differ is at the fourth character, and \n'c'\n is smaller than \n'd'\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n palindrome = \"abccba\"\n\nOutput:\n \"aaccba\"\n\nExplanation:\n There are many ways to make \"abccba\" not a palindrome, such as \"\nz\nbccba\", \"a\na\nccba\", and \"ab\na\ncba\".\nOf all the ways, \"aaccba\" is the lexicographically smallest.\n\n\n\nExample 2:\n\n\n\n\nInput:\n palindrome = \"a\"\n\nOutput:\n \"\"\n\nExplanation:\n There is no way to replace a single character to make \"a\" not a palindrome, so return an empty string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= palindrome.length <= 1000\n\n\npalindrome\n consists of only lowercase English letters.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1143,
        "slug": "longest-common-subsequence",
        "url": "https://leetcode.com/problems/longest-common-subsequence/",
        "titulo": "Longest Common Subsequence",
        "enunciado": "Given two strings \ntext1\n and \ntext2\n, return \nthe length of their longest \ncommon subsequence\n. \nIf there is no \ncommon subsequence\n, return \n0\n.\n\n\nA \nsubsequence\n of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\n\n\n\nFor example, \n\"ace\"\n is a subsequence of \n\"abcde\"\n.\n\n\n\n\nA \ncommon subsequence\n of two strings is a subsequence that is common to both strings.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n text1 = \"abcde\", text2 = \"ace\" \n\nOutput:\n 3  \n\nExplanation:\n The longest common subsequence is \"ace\" and its length is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n text1 = \"abc\", text2 = \"abc\"\n\nOutput:\n 3\n\nExplanation:\n The longest common subsequence is \"abc\" and its length is 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n text1 = \"abc\", text2 = \"def\"\n\nOutput:\n 0\n\nExplanation:\n There is no such common subsequence, so the result is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= text1.length, text2.length <= 1000\n\n\ntext1\n and \ntext2\n consist of only lowercase English characters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1146,
        "slug": "snapshot-array",
        "url": "https://leetcode.com/problems/snapshot-array/",
        "titulo": "Snapshot Array",
        "enunciado": "Implement a SnapshotArray that supports the following interface:\n\n\n\n\nSnapshotArray(int length)\n initializes an array-like data structure with the given length. \nInitially, each element equals 0\n.\n\n\nvoid set(index, val)\n sets the element at the given \nindex\n to be equal to \nval\n.\n\n\nint snap()\n takes a snapshot of the array and returns the \nsnap_id\n: the total number of times we called \nsnap()\n minus \n1\n.\n\n\nint get(index, snap_id)\n returns the value at the given \nindex\n, at the time we took the snapshot with the given \nsnap_id\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n [\"SnapshotArray\",\"set\",\"snap\",\"set\",\"get\"]\n[[3],[0,5],[],[0,6],[0,0]]\n\nOutput:\n [null,null,0,null,5]\n\nExplanation: \n\nSnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= length <= 5 * 10\n4\n\n\n0 <= index < length\n\n\n0 <= val <= 10\n9\n\n\n0 <= snap_id < \n(the total number of times we call \nsnap()\n)\n\n\nAt most \n5 * 10\n4\n calls will be made to \nset\n, \nsnap\n, and \nget\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1145,
        "slug": "binary-tree-coloring-game",
        "url": "https://leetcode.com/problems/binary-tree-coloring-game/",
        "titulo": "Binary Tree Coloring Game",
        "enunciado": "Two players play a turn based game on a binary tree. We are given the \nroot\n of this binary tree, and the number of nodes \nn\n in the tree. \nn\n is odd, and each node has a distinct value from \n1\n to \nn\n.\n\n\nInitially, the first player names a value \nx\n with \n1 <= x <= n\n, and the second player names a value \ny\n with \n1 <= y <= n\n and \ny != x\n. The first player colors the node with value \nx\n red, and the second player colors the node with value \ny\n blue.\n\n\nThen, the players take turns starting with the first player. In each turn, that player chooses a node of their color (red if player 1, blue if player 2) and colors an \nuncolored\n neighbor of the chosen node (either the left child, right child, or parent of the chosen node.)\n\n\nIf (and only if) a player cannot choose such a node in this way, they must pass their turn. If both players pass their turn, the game ends, and the winner is the player that colored more nodes.\n\n\nYou are the second player. If it is possible to choose such a \ny\n to ensure you win the game, return \ntrue\n. If it is not possible, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3\n\nOutput:\n true\n\nExplanation: \nThe second player can choose the node with value 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1,2,3], n = 3, x = 1\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is \nn\n.\n\n\n1 <= x <= n <= 100\n\n\nn\n is odd.\n\n\n1 <= Node.val <= n\n\n\nAll the values of the tree are \nunique\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1144,
        "slug": "decrease-elements-to-make-array-zigzag",
        "url": "https://leetcode.com/problems/decrease-elements-to-make-array-zigzag/",
        "titulo": "Decrease Elements To Make Array Zigzag",
        "enunciado": "Given an array \nnums\n of integers, a \nmove\n consists of choosing any element and \ndecreasing it by 1\n.\n\n\nAn array \nA\n is a \nzigzag array\n if either:\n\n\n\n\nEvery even-indexed element is greater than adjacent elements, ie. \nA[0] > A[1] < A[2] > A[3] < A[4] > ...\n\n\nOR, every odd-indexed element is greater than adjacent elements, ie. \nA[0] < A[1] > A[2] < A[3] > A[4] < ...\n\n\n\n\nReturn the minimum number of moves to transform the given array \nnums\n into a zigzag array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 2\n\nExplanation:\n We can decrease 2 to 0 or 3 to 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [9,6,1,6,2]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1315,
        "slug": "sum-of-nodes-with-even-valued-grandparent",
        "url": "https://leetcode.com/problems/sum-of-nodes-with-even-valued-grandparent/",
        "titulo": "Sum of Nodes with Even-Valued Grandparent",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe sum of values of nodes with an \neven-valued grandparent\n. If there are no nodes with an \neven-valued grandparent\n, return \n0\n.\n\n\nA \ngrandparent\n of a node is the parent of its parent if it exists.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [6,7,8,2,7,1,3,9,null,1,4,null,null,null,5]\n\nOutput:\n 18\n\nExplanation:\n The red nodes are the nodes with even-value grandparent while the blue nodes are the even-value grandparents.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n1 <= Node.val <= 100",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1314,
        "slug": "matrix-block-sum",
        "url": "https://leetcode.com/problems/matrix-block-sum/",
        "titulo": "Matrix Block Sum",
        "enunciado": "Given a \nm x n\n matrix \nmat\n and an integer \nk\n, return \na matrix\n \nanswer\n \nwhere each\n \nanswer[i][j]\n \nis the sum of all elements\n \nmat[r][c]\n \nfor\n:\n\n\n\n\ni - k <= r <= i + k,\n\n\nj - k <= c <= j + k\n, and\n\n\n(r, c)\n is a valid position in the matrix.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n mat = [[1,2,3],[4,5,6],[7,8,9]], k = 1\n\nOutput:\n [[12,21,16],[27,45,33],[24,39,28]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n mat = [[1,2,3],[4,5,6],[7,8,9]], k = 2\n\nOutput:\n [[45,45,45],[45,45,45],[45,45,45]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n, k <= 100\n\n\n1 <= mat[i][j] <= 100",
        "temas": [
            "Array",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1140,
        "slug": "stone-game-ii",
        "url": "https://leetcode.com/problems/stone-game-ii/",
        "titulo": "Stone Game II",
        "enunciado": "Alice and Bob continue their games with piles of stones. There are a number of piles \narranged in a row\n, and each pile has a positive integer number of stones \npiles[i]\n. The objective of the game is to end with the most stones.\n\n\nAlice and Bob take turns, with Alice starting first.\n\n\nOn each player's turn, that player can take \nall the stones\n in the \nfirst\n \nX\n remaining piles, where \n1 <= X <= 2M\n. Then, we set \nM = max(M, X)\n. Initially, M = 1.\n\n\nThe game continues until all the stones have been taken.\n\n\nAssuming Alice and Bob play optimally, return the maximum number of stones Alice can get.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npiles = [2,7,9,4,4]\n\n\nOutput:\n \n10\n\n\nExplanation:\n\n\n\n\nIf Alice takes one pile at the beginning, Bob takes two piles, then Alice takes 2 piles again. Alice can get \n2 + 4 + 4 = 10\n stones in total.\n\n\nIf Alice takes two piles at the beginning, then Bob can take all three piles left. In this case, Alice get \n2 + 7 = 9\n stones in total.\n\n\n\n\nSo we return 10 since it's larger.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npiles = [1,2,3,4,5,100]\n\n\nOutput:\n \n104\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= piles.length <= 100\n\n\n1 <= piles[i] <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Prefix Sum",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1139,
        "slug": "largest-1-bordered-square",
        "url": "https://leetcode.com/problems/largest-1-bordered-square/",
        "titulo": "Largest 1-Bordered Square",
        "enunciado": "Given a 2D \ngrid\n of \n0\ns and \n1\ns, return the number of elements in the largest \nsquare\n subgrid that has all \n1\ns on its \nborder\n, or \n0\n if such a subgrid doesn't exist in the \ngrid\n.\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n grid = [[1,1,1],[1,0,1],[1,1,1]]\r\n\nOutput:\n 9\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n grid = [[1,1,0,0]]\r\n\nOutput:\n 1\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= grid.length <= 100\n\n\n1 <= grid[0].length <= 100\n\n\ngrid[i][j]\n is \n0\n or \n1",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1138,
        "slug": "alphabet-board-path",
        "url": "https://leetcode.com/problems/alphabet-board-path/",
        "titulo": "Alphabet Board Path",
        "enunciado": "On an alphabet board, we start at position \n(0, 0)\n, corresponding to character \nboard[0][0]\n.\n\n\nHere, \nboard = [\"abcde\", \"fghij\", \"klmno\", \"pqrst\", \"uvwxy\", \"z\"]\n, as shown in the diagram below.\n\n\n\n\nWe may make the following moves:\n\n\n\n\n'U'\n moves our position up one row, if the position exists on the board;\n\n\n'D'\n moves our position down one row, if the position exists on the board;\n\n\n'L'\n moves our position left one column, if the position exists on the board;\n\n\n'R'\n moves our position right one column, if the position exists on the board;\n\n\n'!'\n adds the character \nboard[r][c]\n at our current position \n(r, c)\n to the answer.\n\n\n\n\n(Here, the only positions that exist on the board are positions with letters on them.)\n\n\nReturn a sequence of moves that makes our answer equal to \ntarget\n in the minimum number of moves.  You may return any path that does so.\n\n\n \n\n\nExample 1:\n\n\nInput:\n target = \"leet\"\r\n\nOutput:\n \"DDR!UURRR!!DDD!\"\r\n\nExample 2:\n\n\nInput:\n target = \"code\"\r\n\nOutput:\n \"RR!DDRR!UUL!R!\"\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= target.length <= 100\n\n\ntarget\n consists only of English lowercase letters.",
        "temas": [
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 1300,
        "slug": "sum-of-mutated-array-closest-to-target",
        "url": "https://leetcode.com/problems/sum-of-mutated-array-closest-to-target/",
        "titulo": "Sum of Mutated Array Closest to Target",
        "enunciado": "Given an integer array \narr\n and a target value \ntarget\n, return the integer \nvalue\n such that when we change all the integers larger than \nvalue\n in the given array to be equal to \nvalue\n, the sum of the array gets as close as possible (in absolute difference) to \ntarget\n.\n\n\nIn case of a tie, return the minimum such integer.\n\n\nNotice that the answer is not neccesarilly a number from \narr\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [4,9,3], target = 10\n\nOutput:\n 3\n\nExplanation:\n When using 3 arr converts to [3, 3, 3] which sums 9 and that's the optimal answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [2,3,5], target = 10\n\nOutput:\n 5\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [60864,25176,27249,21296,20204], target = 56803\n\nOutput:\n 11361\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n4\n\n\n1 <= arr[i], target <= 10\n5",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1131,
        "slug": "maximum-of-absolute-value-expression",
        "url": "https://leetcode.com/problems/maximum-of-absolute-value-expression/",
        "titulo": "Maximum of Absolute Value Expression",
        "enunciado": "Given two arrays of integers with equal lengths, return the maximum value of:\n\n\n|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|\n\n\nwhere the maximum is taken over all \n0 <= i, j < arr1.length\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\n\nOutput:\n 13\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\n\nOutput:\n 20\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= arr1.length == arr2.length <= 40000\n\n\n-10^6 <= arr1[i], arr2[i] <= 10^6",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1129,
        "slug": "shortest-path-with-alternating-colors",
        "url": "https://leetcode.com/problems/shortest-path-with-alternating-colors/",
        "titulo": "Shortest Path with Alternating Colors",
        "enunciado": "You are given an integer \nn\n, the number of nodes in a directed graph where the nodes are labeled from \n0\n to \nn - 1\n. Each edge is red or blue in this graph, and there could be self-edges and parallel edges.\n\n\nYou are given two arrays \nredEdges\n and \nblueEdges\n where:\n\n\n\n\nredEdges[i] = [a\ni\n, b\ni\n]\n indicates that there is a directed red edge from node \na\ni\n to node \nb\ni\n in the graph, and\n\n\nblueEdges[j] = [u\nj\n, v\nj\n]\n indicates that there is a directed blue edge from node \nu\nj\n to node \nv\nj\n in the graph.\n\n\n\n\nReturn an array \nanswer\n of length \nn\n, where each \nanswer[x]\n is the length of the shortest path from node \n0\n to node \nx\n such that the edge colors alternate along the path, or \n-1\n if such a path does not exist.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, redEdges = [[0,1],[1,2]], blueEdges = []\n\nOutput:\n [0,1,-1]\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, redEdges = [[0,1]], blueEdges = [[2,1]]\n\nOutput:\n [0,1,-1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 100\n\n\n0 <= redEdges.length, blueEdges.length <= 400\n\n\nredEdges[i].length == blueEdges[j].length == 2\n\n\n0 <= a\ni\n, b\ni\n, u\nj\n, v\nj\n < n",
        "temas": [
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Breadth-First Search",
        "has_image": false
    },
    {
        "id": 1130,
        "slug": "minimum-cost-tree-from-leaf-values",
        "url": "https://leetcode.com/problems/minimum-cost-tree-from-leaf-values/",
        "titulo": "Minimum Cost Tree From Leaf Values",
        "enunciado": "Given an array \narr\n of positive integers, consider all binary trees such that:\n\n\n\n\nEach node has either \n0\n or \n2\n children;\n\n\nThe values of \narr\n correspond to the values of each \nleaf\n in an in-order traversal of the tree.\n\n\nThe value of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree, respectively.\n\n\n\n\nAmong all possible binary trees considered, return \nthe smallest possible sum of the values of each non-leaf node\n. It is guaranteed this sum fits into a \n32-bit\n integer.\n\n\nA node is a \nleaf\n if and only if it has zero children.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n arr = [6,2,4]\n\nOutput:\n 32\n\nExplanation:\n There are two possible trees shown.\nThe first has a non-leaf node sum 36, and the second has non-leaf node sum 32.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n arr = [4,11]\n\nOutput:\n 44\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= arr.length <= 40\n\n\n1 <= arr[i] <= 15\n\n\nIt is guaranteed that the answer fits into a \n32-bit\n signed integer (i.e., it is less than 2\n31\n).",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1288,
        "slug": "remove-covered-intervals",
        "url": "https://leetcode.com/problems/remove-covered-intervals/",
        "titulo": "Remove Covered Intervals",
        "enunciado": "Given an array \nintervals\n where \nintervals[i] = [l\ni\n, r\ni\n]\n represent the interval \n[l\ni\n, r\ni\n)\n, remove all intervals that are covered by another interval in the list.\n\n\nThe interval \n[a, b)\n is covered by the interval \n[c, d)\n if and only if \nc <= a\n and \nb <= d\n.\n\n\nReturn \nthe number of remaining intervals\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n intervals = [[1,4],[3,6],[2,8]]\n\nOutput:\n 2\n\nExplanation:\n Interval [3,6] is covered by [2,8], therefore it is removed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n intervals = [[1,4],[2,3]]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= intervals.length <= 1000\n\n\nintervals[i].length == 2\n\n\n0 <= l\ni\n < r\ni\n <= 10\n5\n\n\nAll the given intervals are \nunique\n.",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1124,
        "slug": "longest-well-performing-interval",
        "url": "https://leetcode.com/problems/longest-well-performing-interval/",
        "titulo": "Longest Well-Performing Interval",
        "enunciado": "We are given \nhours\n, a list of the number of hours worked per day for a given employee.\n\n\nA day is considered to be a \ntiring day\n if and only if the number of hours worked is (strictly) greater than \n8\n.\n\n\nA \nwell-performing interval\n is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.\n\n\nReturn the length of the longest well-performing interval.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n hours = [9,9,6,0,6,6,9]\n\nOutput:\n 3\n\nExplanation: \nThe longest well-performing interval is [9,9,6].\n\n\n\nExample 2:\n\n\n\n\nInput:\n hours = [6,6,6]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= hours.length <= 10\n4\n\n\n0 <= hours[i] <= 16",
        "temas": [
            "Array",
            "Hash Table",
            "Stack",
            "Monotonic Stack",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1123,
        "slug": "lowest-common-ancestor-of-deepest-leaves",
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/",
        "titulo": "Lowest Common Ancestor of Deepest Leaves",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe lowest common ancestor of its deepest leaves\n.\n\n\nRecall that:\n\n\n\n\nThe node of a binary tree is a leaf if and only if it has no children\n\n\nThe depth of the root of the tree is \n0\n. if the depth of a node is \nd\n, the depth of each of its children is \nd + 1\n.\n\n\nThe lowest common ancestor of a set \nS\n of nodes, is the node \nA\n with the largest depth such that every node in \nS\n is in the subtree with root \nA\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,5,1,6,2,0,8,null,null,7,4]\n\nOutput:\n [2,7,4]\n\nExplanation:\n We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest leaf-nodes of the tree.\nNote that nodes 6, 0, and 8 are also leaf nodes, but the depth of them is 2, but the depth of nodes 7 and 4 is 3.\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n [1]\n\nExplanation:\n The root is the deepest node in the tree, and it's the lca of itself.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [0,1,3,null,2]\n\nOutput:\n [2]\n\nExplanation:\n The deepest leaf node in the tree is 2, the lca of one node is itself.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree will be in the range \n[1, 1000]\n.\n\n\n0 <= Node.val <= 1000\n\n\nThe values of the nodes in the tree are \nunique\n.\n\n\n\n\n \n\n\nNote:\n This question is the same as 865: \nhttps://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 1291,
        "slug": "sequential-digits",
        "url": "https://leetcode.com/problems/sequential-digits/",
        "titulo": "Sequential Digits",
        "enunciado": "An integer has \nsequential digits\n if and only if each digit in the number is one more than the previous digit.\n\n\nReturn a \nsorted\n list of all the integers in the range \n[low, high]\n inclusive that have sequential digits.\n\n\n \n\n\nExample 1:\n\n\nInput:\n low = 100, high = 300\n\nOutput:\n [123,234]\n\nExample 2:\n\n\nInput:\n low = 1000, high = 13000\n\nOutput:\n [1234,2345,3456,4567,5678,6789,12345]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n10 <= low <= high <= 10^9",
        "temas": [
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Enumeration",
        "has_image": false
    },
    {
        "id": 1286,
        "slug": "iterator-for-combination",
        "url": "https://leetcode.com/problems/iterator-for-combination/",
        "titulo": "Iterator for Combination",
        "enunciado": "Design the \nCombinationIterator\n class:\n\n\n\n\nCombinationIterator(string characters, int combinationLength)\n Initializes the object with a string \ncharacters\n of \nsorted distinct\n lowercase English letters and a number \ncombinationLength\n as arguments.\n\n\nnext()\n Returns the next combination of length \ncombinationLength\n in \nlexicographical order\n.\n\n\nhasNext()\n Returns \ntrue\n if and only if there exists a next combination.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"CombinationIterator\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\"]\n[[\"abc\", 2], [], [], [], [], [], []]\n\nOutput\n\n[null, \"ab\", true, \"ac\", true, \"bc\", false]\n\n\nExplanation\n\nCombinationIterator itr = new CombinationIterator(\"abc\", 2);\nitr.next();    // return \"ab\"\nitr.hasNext(); // return True\nitr.next();    // return \"ac\"\nitr.hasNext(); // return True\nitr.next();    // return \"bc\"\nitr.hasNext(); // return False\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= combinationLength <= characters.length <= 15\n\n\nAll the characters of \ncharacters\n are \nunique\n.\n\n\nAt most \n10\n4\n calls will be made to \nnext\n and \nhasNext\n.\n\n\nIt is guaranteed that all calls of the function \nnext\n are valid.",
        "temas": [
            "String",
            "Backtracking",
            "Design",
            "Iterator"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1111,
        "slug": "maximum-nesting-depth-of-two-valid-parentheses-strings",
        "url": "https://leetcode.com/problems/maximum-nesting-depth-of-two-valid-parentheses-strings/",
        "titulo": "Maximum Nesting Depth of Two Valid Parentheses Strings",
        "enunciado": "A string is a \nvalid parentheses string\n (denoted VPS) if and only if it consists of \n\"(\"\n and \n\")\"\n characters only, and:\n\n\n\n\nIt is the empty string, or\n\n\nIt can be written as \nAB\n (\nA\n concatenated with \nB\n), where \nA\n and \nB\n are VPS's, or\n\n\nIt can be written as \n(A)\n, where \nA\n is a VPS.\n\n\n\n\nWe can similarly define the \nnesting depth\n \ndepth(S)\n of any VPS \nS\n as follows:\n\n\n\n\ndepth(\"\") = 0\n\n\ndepth(A + B) = max(depth(A), depth(B))\n, where \nA\n and \nB\n are VPS's\n\n\ndepth(\"(\" + A + \")\") = 1 + depth(A)\n, where \nA\n is a VPS.\n\n\n\n\nFor example,  \n\"\"\n, \n\"()()\"\n, and \n\"()(()())\"\n are VPS's (with nesting depths 0, 1, and 2), and \n\")(\"\n and \n\"(()\"\n are not VPS's.\n\n\n \n\n\nGiven a VPS \nseq\n, split it into two disjoint subsequences \nA\n and \nB\n, such that \nA\n and \nB\n are VPS's (and \nA.length + B.length = seq.length\n).\n\n\nNow choose \nany\n such \nA\n and \nB\n such that \nmax(depth(A), depth(B))\n is the minimum possible value.\n\n\nReturn an \nanswer\n array (of length \nseq.length\n) that encodes such a choice of \nA\n and \nB\n:  \nanswer[i] = 0\n if \nseq[i]\n is part of \nA\n, else \nanswer[i] = 1\n.  Note that even though multiple answers may exist, you may return any of them.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n seq = \"(()())\"\n\nOutput:\n [0,1,1,1,1,0]\n\n\n\nExample 2:\n\n\n\n\nInput:\n seq = \"()(())()\"\n\nOutput:\n [0,0,0,1,1,0,1,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= seq.size <= 10000",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1110,
        "slug": "delete-nodes-and-return-forest",
        "url": "https://leetcode.com/problems/delete-nodes-and-return-forest/",
        "titulo": "Delete Nodes And Return Forest",
        "enunciado": "Given the \nroot\n of a binary tree, each node in the tree has a distinct value.\n\n\nAfter deleting all nodes with a value in \nto_delete\n, we are left with a forest (a disjoint union of trees).\n\n\nReturn the roots of the trees in the remaining forest. You may return the result in any order.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6,7], to_delete = [3,5]\n\nOutput:\n [[1,2,null,4],[6],[7]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1,2,4,null,3], to_delete = [3]\n\nOutput:\n [[1,2,4]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the given tree is at most \n1000\n.\n\n\nEach node has a distinct value between \n1\n and \n1000\n.\n\n\nto_delete.length <= 1000\n\n\nto_delete\n contains distinct values between \n1\n and \n1000\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1109,
        "slug": "corporate-flight-bookings",
        "url": "https://leetcode.com/problems/corporate-flight-bookings/",
        "titulo": "Corporate Flight Bookings",
        "enunciado": "There are \nn\n flights that are labeled from \n1\n to \nn\n.\n\n\nYou are given an array of flight bookings \nbookings\n, where \nbookings[i] = [first\ni\n, last\ni\n, seats\ni\n]\n represents a booking for flights \nfirst\ni\n through \nlast\ni\n (\ninclusive\n) with \nseats\ni\n seats reserved for \neach flight\n in the range.\n\n\nReturn \nan array \nanswer\n of length \nn\n, where \nanswer[i]\n is the total number of seats reserved for flight \ni\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\n\nOutput:\n [10,55,45,25,25]\n\nExplanation:\n\nFlight labels:        1   2   3   4   5\nBooking 1 reserved:  10  10\nBooking 2 reserved:      20  20\nBooking 3 reserved:      25  25  25  25\nTotal seats:         10  55  45  25  25\nHence, answer = [10,55,45,25,25]\n\n\n\nExample 2:\n\n\n\n\nInput:\n bookings = [[1,2,10],[2,2,15]], n = 2\n\nOutput:\n [10,25]\n\nExplanation:\n\nFlight labels:        1   2\nBooking 1 reserved:  10  10\nBooking 2 reserved:      15\nTotal seats:         10  25\nHence, answer = [10,25]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2 * 10\n4\n\n\n1 <= bookings.length <= 2 * 10\n4\n\n\nbookings[i].length == 3\n\n\n1 <= first\ni\n <= last\ni\n <= n\n\n\n1 <= seats\ni\n <= 10\n4",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1105,
        "slug": "filling-bookcase-shelves",
        "url": "https://leetcode.com/problems/filling-bookcase-shelves/",
        "titulo": "Filling Bookcase Shelves",
        "enunciado": "You are given an array \nbooks\n where \nbooks[i] = [thickness\ni\n, height\ni\n]\n indicates the thickness and height of the \ni\nth\n book. You are also given an integer \nshelfWidth\n.\n\n\nWe want to place these books in order onto bookcase shelves that have a total width \nshelfWidth\n.\n\n\nWe choose some of the books to place on this shelf such that the sum of their thickness is less than or equal to \nshelfWidth\n, then build another level of the shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down. We repeat this process until there are no more books to place.\n\n\nNote that at each step of the above process, the order of the books we place is the same order as the given sequence of books.\n\n\n\n\nFor example, if we have an ordered list of \n5\n books, we might place the first and second book onto the first shelf, the third book on the second shelf, and the fourth and fifth book on the last shelf.\n\n\n\n\nReturn \nthe minimum possible height that the total bookshelf can be after placing shelves in this manner\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelfWidth = 4\n\nOutput:\n 6\n\nExplanation:\n\nThe sum of the heights of the 3 shelves is 1 + 3 + 2 = 6.\nNotice that book number 2 does not have to be on the first shelf.\n\n\n\nExample 2:\n\n\n\n\nInput:\n books = [[1,3],[2,4],[3,2]], shelfWidth = 6\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= books.length <= 1000\n\n\n1 <= thickness\ni\n <= shelfWidth <= 1000\n\n\n1 <= height\ni\n <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1104,
        "slug": "path-in-zigzag-labelled-binary-tree",
        "url": "https://leetcode.com/problems/path-in-zigzag-labelled-binary-tree/",
        "titulo": "Path In Zigzag Labelled Binary Tree",
        "enunciado": "In an infinite binary tree where every node has two children, the nodes are labelled in row order.\n\n\nIn the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.\n\n\n\n\nGiven the \nlabel\n of a node in this tree, return the labels in the path from the root of the tree to the node with that \nlabel\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n label = 14\n\nOutput:\n [1,3,4,14]\n\n\n\nExample 2:\n\n\n\n\nInput:\n label = 26\n\nOutput:\n [1,2,6,10,26]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= label <= 10^6",
        "temas": [
            "Math",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 1094,
        "slug": "car-pooling",
        "url": "https://leetcode.com/problems/car-pooling/",
        "titulo": "Car Pooling",
        "enunciado": "There is a car with \ncapacity\n empty seats. The vehicle only drives east (i.e., it cannot turn around and drive west).\n\n\nYou are given the integer \ncapacity\n and an array \ntrips\n where \ntrips[i] = [numPassengers\ni\n, from\ni\n, to\ni\n]\n indicates that the \ni\nth\n trip has \nnumPassengers\ni\n passengers and the locations to pick them up and drop them off are \nfrom\ni\n and \nto\ni\n respectively. The locations are given as the number of kilometers due east from the car's initial location.\n\n\nReturn \ntrue\n if it is possible to pick up and drop off all passengers for all the given trips, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n trips = [[2,1,5],[3,3,7]], capacity = 4\n\nOutput:\n false\n\n\n\nExample 2:\n\n\n\n\nInput:\n trips = [[2,1,5],[3,3,7]], capacity = 5\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= trips.length <= 1000\n\n\ntrips[i].length == 3\n\n\n1 <= numPassengers\ni\n <= 100\n\n\n0 <= from\ni\n < to\ni\n <= 1000\n\n\n1 <= capacity <= 10\n5",
        "temas": [
            "Array",
            "Sorting",
            "Heap (Priority Queue)",
            "Simulation",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1093,
        "slug": "statistics-from-a-large-sample",
        "url": "https://leetcode.com/problems/statistics-from-a-large-sample/",
        "titulo": "Statistics from a Large Sample",
        "enunciado": "You are given a large sample of integers in the range \n[0, 255]\n. Since the sample is so large, it is represented by an array \ncount\n where \ncount[k]\n is the \nnumber of times\n that \nk\n appears in the sample.\n\n\nCalculate the following statistics:\n\n\n\n\nminimum\n: The minimum element in the sample.\n\n\nmaximum\n: The maximum element in the sample.\n\n\nmean\n: The average of the sample, calculated as the total sum of all elements divided by the total number of elements.\n\n\nmedian\n:\n\t\n\n\nIf the sample has an odd number of elements, then the \nmedian\n is the middle element once the sample is sorted.\n\n\nIf the sample has an even number of elements, then the \nmedian\n is the average of the two middle elements once the sample is sorted.\n\n\n\n\n\n\nmode\n: The number that appears the most in the sample. It is guaranteed to be \nunique\n.\n\n\n\n\nReturn \nthe statistics of the sample as an array of floating-point numbers \n[minimum, maximum, mean, median, mode]\n. Answers within \n10\n-5\n of the actual answer will be accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\nOutput:\n [1.00000,3.00000,2.37500,2.50000,3.00000]\n\nExplanation:\n The sample represented by count is [1,2,2,2,3,3,3,3].\nThe minimum and maximum are 1 and 3 respectively.\nThe mean is (1+2+2+2+3+3+3+3) / 8 = 19 / 8 = 2.375.\nSince the size of the sample is even, the median is the average of the two middle elements 2 and 3, which is 2.5.\nThe mode is 3 as it appears the most in the sample.\n\n\n\nExample 2:\n\n\n\n\nInput:\n count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n\nOutput:\n [1.00000,4.00000,2.18182,2.00000,1.00000]\n\nExplanation:\n The sample represented by count is [1,1,1,1,2,2,2,3,3,4,4].\nThe minimum and maximum are 1 and 4 respectively.\nThe mean is (1+1+1+1+2+2+2+3+3+4+4) / 11 = 24 / 11 = 2.18181818... (for display purposes, the output shows the rounded number 2.18182).\nSince the size of the sample is odd, the median is the middle element 2.\nThe mode is 1 as it appears the most in the sample.\n\n\n\n \n\n\nConstraints:\n\n\n\n\ncount.length == 256\n\n\n0 <= count[i] <= 10\n9\n\n\n1 <= sum(count) <= 10\n9\n\n\nThe mode of the sample that \ncount\n represents is \nunique\n.",
        "temas": [
            "Array",
            "Math",
            "Probability and Statistics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1091,
        "slug": "shortest-path-in-binary-matrix",
        "url": "https://leetcode.com/problems/shortest-path-in-binary-matrix/",
        "titulo": "Shortest Path in Binary Matrix",
        "enunciado": "Given an \nn x n\n binary matrix \ngrid\n, return \nthe length of the shortest \nclear path\n in the matrix\n. If there is no clear path, return \n-1\n.\n\n\nA \nclear path\n in a binary matrix is a path from the \ntop-left\n cell (i.e., \n(0, 0)\n) to the \nbottom-right\n cell (i.e., \n(n - 1, n - 1)\n) such that:\n\n\n\n\nAll the visited cells of the path are \n0\n.\n\n\nAll the adjacent cells of the path are \n8-directionally\n connected (i.e., they are different and they share an edge or a corner).\n\n\n\n\nThe \nlength of a clear path\n is the number of visited cells of this path.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,1],[1,0]]\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,0,0],[1,1,0],[1,1,0]]\n\nOutput:\n 4\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[1,0,0],[1,1,0],[1,1,0]]\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length\n\n\nn == grid[i].length\n\n\n1 <= n <= 100\n\n\ngrid[i][j] is 0 or 1",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1090,
        "slug": "largest-values-from-labels",
        "url": "https://leetcode.com/problems/largest-values-from-labels/",
        "titulo": "Largest Values From Labels",
        "enunciado": "You are given \nn\n item's value and label as two integer arrays \nvalues\n and \nlabels\n. You are also given two integers \nnumWanted\n and \nuseLimit\n.\n\n\nYour task is to find a subset of items with the \nmaximum sum\n of their values such that:\n\n\n\n\nThe number of items is \nat most\n \nnumWanted\n.\n\n\nThe number of items with the same label is \nat most\n \nuseLimit\n.\n\n\n\n\nReturn the maximum sum.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nvalues = [5,4,3,2,1], labels = [1,1,2,2,3], numWanted = 3, useLimit = 1\n\n\nOutput:\n \n9\n\n\nExplanation:\n\n\nThe subset chosen is the first, third, and fifth items with the sum of values 5 + 3 + 1.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nvalues = [5,4,3,2,1], labels = [1,3,3,3,2], numWanted = 3, useLimit = 2\n\n\nOutput:\n \n12\n\n\nExplanation:\n\n\nThe subset chosen is the first, second, and third items with the sum of values 5 + 4 + 3.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nvalues = [9,8,8,7,6], labels = [0,0,0,1,1], numWanted = 3, useLimit = 1\n\n\nOutput:\n \n16\n\n\nExplanation:\n\n\nThe subset chosen is the first and fourth items with the sum of values 9 + 7.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == values.length == labels.length\n\n\n1 <= n <= 2 * 10\n4\n\n\n0 <= values[i], labels[i] <= 2 * 10\n4\n\n\n1 <= numWanted, useLimit <= n",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1079,
        "slug": "letter-tile-possibilities",
        "url": "https://leetcode.com/problems/letter-tile-possibilities/",
        "titulo": "Letter Tile Possibilities",
        "enunciado": "You have \nn\n  \ntiles\n, where each tile has one letter \ntiles[i]\n printed on it.\n\n\nReturn \nthe number of possible non-empty sequences of letters\n you can make using the letters printed on those \ntiles\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tiles = \"AAB\"\n\nOutput:\n 8\n\nExplanation: \nThe possible sequences are \"A\", \"B\", \"AA\", \"AB\", \"BA\", \"AAB\", \"ABA\", \"BAA\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n tiles = \"AAABBC\"\n\nOutput:\n 188\n\n\n\nExample 3:\n\n\n\n\nInput:\n tiles = \"V\"\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tiles.length <= 7\n\n\ntiles\n consists of uppercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Backtracking",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1081,
        "slug": "smallest-subsequence-of-distinct-characters",
        "url": "https://leetcode.com/problems/smallest-subsequence-of-distinct-characters/",
        "titulo": "Smallest Subsequence of Distinct Characters",
        "enunciado": "Given a string \ns\n, return \nthe \nlexicographically smallest\n \nsubsequence\n of\n \ns\n \nthat contains all the distinct characters of\n \ns\n \nexactly once\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"bcabc\"\n\nOutput:\n \"abc\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cbacdcbc\"\n\nOutput:\n \"acdb\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns\n consists of lowercase English letters.\n\n\n\n\n \n\n\nNote:\n This question is the same as 316: \nhttps://leetcode.com/problems/remove-duplicate-letters/",
        "temas": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1080,
        "slug": "insufficient-nodes-in-root-to-leaf-paths",
        "url": "https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths/",
        "titulo": "Insufficient Nodes in Root to Leaf Paths",
        "enunciado": "Given the \nroot\n of a binary tree and an integer \nlimit\n, delete all \ninsufficient nodes\n in the tree simultaneously, and return \nthe root of the resulting binary tree\n.\n\n\nA node is \ninsufficient\n if every root to \nleaf\n path intersecting this node has a sum strictly less than \nlimit\n.\n\n\nA \nleaf\n is a node with no children.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14], limit = 1\n\nOutput:\n [1,2,3,4,null,null,7,8,9,null,14]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [5,4,8,11,null,17,4,7,1,null,null,5,3], limit = 22\n\nOutput:\n [5,4,8,11,null,17,4,7,null,null,null,5]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [1,2,-3,-5,null,4,null], limit = -1\n\nOutput:\n [1,null,-3,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 5000]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5\n\n\n-10\n9\n <= limit <= 10\n9",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1073,
        "slug": "adding-two-negabinary-numbers",
        "url": "https://leetcode.com/problems/adding-two-negabinary-numbers/",
        "titulo": "Adding Two Negabinary Numbers",
        "enunciado": "Given two numbers \narr1\n and \narr2\n in base \n-2\n, return the result of adding them together.\n\n\nEach number is given in \narray format\n:  as an array of 0s and 1s, from most significant bit to least significant bit.  For example, \narr = [1,1,0,1]\n represents the number \n(-2)^3 + (-2)^2 + (-2)^0 = -3\n.  A number \narr\n in \narray, format\n is also guaranteed to have no leading zeros: either \narr == [0]\n or \narr[0] == 1\n.\n\n\nReturn the result of adding \narr1\n and \narr2\n in the same format: as an array of 0s and 1s with no leading zeros.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr1 = [1,1,1,1,1], arr2 = [1,0,1]\n\nOutput:\n [1,0,0,0,0]\n\nExplanation: \narr1 represents 11, arr2 represents 5, the output represents 16.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr1 = [0], arr2 = [0]\n\nOutput:\n [0]\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr1 = [0], arr2 = [1]\n\nOutput:\n [1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr1.length, arr2.length <= 1000\n\n\narr1[i]\n and \narr2[i]\n are \n0\n or \n1\n\n\narr1\n and \narr2\n have no leading zeros",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1072,
        "slug": "flip-columns-for-maximum-number-of-equal-rows",
        "url": "https://leetcode.com/problems/flip-columns-for-maximum-number-of-equal-rows/",
        "titulo": "Flip Columns For Maximum Number of Equal Rows",
        "enunciado": "You are given an \nm x n\n binary matrix \nmatrix\n.\n\n\nYou can choose any number of columns in the matrix and flip every cell in that column (i.e., Change the value of the cell from \n0\n to \n1\n or vice versa).\n\n\nReturn \nthe maximum number of rows that have all values equal after some number of flips\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n matrix = [[0,1],[1,1]]\n\nOutput:\n 1\n\nExplanation:\n After flipping no values, 1 row has all values equal.\n\n\n\nExample 2:\n\n\n\n\nInput:\n matrix = [[0,1],[1,0]]\n\nOutput:\n 2\n\nExplanation:\n After flipping values in the first column, both rows have equal values.\n\n\n\nExample 3:\n\n\n\n\nInput:\n matrix = [[0,0,0],[0,0,1],[1,1,0]]\n\nOutput:\n 2\n\nExplanation:\n After flipping values in the first two columns, the last two rows have equal values.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 300\n\n\nmatrix[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1054,
        "slug": "distant-barcodes",
        "url": "https://leetcode.com/problems/distant-barcodes/",
        "titulo": "Distant Barcodes",
        "enunciado": "In a warehouse, there is a row of barcodes, where the \ni\nth\n barcode is \nbarcodes[i]\n.\n\n\nRearrange the barcodes so that no two adjacent barcodes are equal. You may return any answer, and it is guaranteed an answer exists.\n\n\n \n\n\nExample 1:\n\n\nInput:\n barcodes = [1,1,1,2,2,2]\n\nOutput:\n [2,1,2,1,2,1]\n\nExample 2:\n\n\nInput:\n barcodes = [1,1,1,1,2,2,3,3]\n\nOutput:\n [1,3,1,3,1,2,1,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= barcodes.length <= 10000\n\n\n1 <= barcodes[i] <= 10000",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1053,
        "slug": "previous-permutation-with-one-swap",
        "url": "https://leetcode.com/problems/previous-permutation-with-one-swap/",
        "titulo": "Previous Permutation With One Swap",
        "enunciado": "Given an array of positive integers \narr\n (not necessarily distinct), return \nthe \nlexicographically\n largest permutation that is smaller than\n \narr\n, that can be \nmade with exactly one swap\n. If it cannot be done, then return the same array.\n\n\nNote\n that a \nswap\n exchanges the positions of two numbers \narr[i]\n and \narr[j]\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,2,1]\n\nOutput:\n [3,1,2]\n\nExplanation:\n Swapping 2 and 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,1,5]\n\nOutput:\n [1,1,5]\n\nExplanation:\n This is already the smallest permutation.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,9,4,6,7]\n\nOutput:\n [1,7,4,6,9]\n\nExplanation:\n Swapping 9 and 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n4\n\n\n1 <= arr[i] <= 10\n4",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1052,
        "slug": "grumpy-bookstore-owner",
        "url": "https://leetcode.com/problems/grumpy-bookstore-owner/",
        "titulo": "Grumpy Bookstore Owner",
        "enunciado": "There is a bookstore owner that has a store open for \nn\n minutes. You are given an integer array \ncustomers\n of length \nn\n where \ncustomers[i]\n is the number of the customers that enter the store at the start of the \ni\nth\n minute and all those customers leave after the end of that minute.\n\n\nDuring certain minutes, the bookstore owner is grumpy. You are given a binary array grumpy where \ngrumpy[i]\n is \n1\n if the bookstore owner is grumpy during the \ni\nth\n minute, and is \n0\n otherwise.\n\n\nWhen the bookstore owner is grumpy, the customers entering during that minute are not \nsatisfied\n. Otherwise, they are satisfied.\n\n\nThe bookstore owner knows a secret technique to remain \nnot grumpy\n for \nminutes\n consecutive minutes, but this technique can only be used \nonce\n.\n\n\nReturn the \nmaximum\n number of customers that can be \nsatisfied\n throughout the day.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncustomers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], minutes = 3\n\n\nOutput:\n \n16\n\n\nExplanation:\n\n\nThe bookstore owner keeps themselves not grumpy for the last 3 minutes.\n\n\nThe maximum number of customers that can be satisfied = 1 + 1 + 1 + 1 + 7 + 5 = 16.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncustomers = [1], grumpy = [0], minutes = 1\n\n\nOutput:\n \n1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == customers.length == grumpy.length\n\n\n1 <= minutes <= n <= 2 * 10\n4\n\n\n0 <= customers[i] <= 1000\n\n\ngrumpy[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1049,
        "slug": "last-stone-weight-ii",
        "url": "https://leetcode.com/problems/last-stone-weight-ii/",
        "titulo": "Last Stone Weight II",
        "enunciado": "You are given an array of integers \nstones\n where \nstones[i]\n is the weight of the \ni\nth\n stone.\n\n\nWe are playing a game with the stones. On each turn, we choose any two stones and smash them together. Suppose the stones have weights \nx\n and \ny\n with \nx <= y\n. The result of this smash is:\n\n\n\n\nIf \nx == y\n, both stones are destroyed, and\n\n\nIf \nx != y\n, the stone of weight \nx\n is destroyed, and the stone of weight \ny\n has new weight \ny - x\n.\n\n\n\n\nAt the end of the game, there is \nat most one\n stone left.\n\n\nReturn \nthe smallest possible weight of the left stone\n. If there are no stones left, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n stones = [2,7,4,1,8,1]\n\nOutput:\n 1\n\nExplanation:\n\nWe can combine 2 and 4 to get 2, so the array converts to [2,7,1,8,1] then,\nwe can combine 7 and 8 to get 1, so the array converts to [2,1,1,1] then,\nwe can combine 2 and 1 to get 1, so the array converts to [1,1,1] then,\nwe can combine 1 and 1 to get 0, so the array converts to [1], then that's the optimal value.\n\n\n\nExample 2:\n\n\n\n\nInput:\n stones = [31,26,33,21,40]\n\nOutput:\n 5\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= stones.length <= 30\n\n\n1 <= stones[i] <= 100",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1048,
        "slug": "longest-string-chain",
        "url": "https://leetcode.com/problems/longest-string-chain/",
        "titulo": "Longest String Chain",
        "enunciado": "You are given an array of \nwords\n where each word consists of lowercase English letters.\n\n\nword\nA\n is a \npredecessor\n of \nword\nB\n if and only if we can insert \nexactly one\n letter anywhere in \nword\nA\n \nwithout changing the order of the other characters\n to make it equal to \nword\nB\n.\n\n\n\n\nFor example, \n\"abc\"\n is a \npredecessor\n of \n\"ab\na\nc\"\n, while \n\"cba\"\n is not a \npredecessor\n of \n\"bcad\"\n.\n\n\n\n\nA \nword chain\n \nis a sequence of words \n[word\n1\n, word\n2\n, ..., word\nk\n]\n with \nk >= 1\n, where \nword\n1\n is a \npredecessor\n of \nword\n2\n, \nword\n2\n is a \npredecessor\n of \nword\n3\n, and so on. A single word is trivially a \nword chain\n with \nk == 1\n.\n\n\nReturn \nthe \nlength\n of the \nlongest possible word chain\n with words chosen from the given list of \nwords\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"a\",\"b\",\"ba\",\"bca\",\"bda\",\"bdca\"]\n\nOutput:\n 4\n\nExplanation\n: One of the longest word chains is [\"a\",\"\nb\na\",\"b\nd\na\",\"bd\nc\na\"].\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"xbc\",\"pcxbcf\",\"xb\",\"cxbc\",\"pcxbc\"]\n\nOutput:\n 5\n\nExplanation:\n All the words can be put in a word chain [\"xb\", \"xb\nc\n\", \"\nc\nxbc\", \"\np\ncxbc\", \"pcxbc\nf\n\"].\n\n\n\nExample 3:\n\n\n\n\nInput:\n words = [\"abcd\",\"dbqca\"]\n\nOutput:\n 1\n\nExplanation:\n The trivial word chain [\"abcd\"] is one of the longest word chains.\n[\"abcd\",\"dbqca\"] is not a valid word chain because the ordering of the letters is changed.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 1000\n\n\n1 <= words[i].length <= 16\n\n\nwords[i]\n only consists of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1043,
        "slug": "partition-array-for-maximum-sum",
        "url": "https://leetcode.com/problems/partition-array-for-maximum-sum/",
        "titulo": "Partition Array for Maximum Sum",
        "enunciado": "Given an integer array \narr\n, partition the array into (contiguous) subarrays of length \nat most\n \nk\n. After partitioning, each subarray has their values changed to become the maximum value of that subarray.\n\n\nReturn \nthe largest sum of the given array after partitioning. Test cases are generated so that the answer fits in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,15,7,9,2,5,10], k = 3\n\nOutput:\n 84\n\nExplanation:\n arr becomes [15,15,15,9,10,10,10]\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,4,1,5,7,3,6,1,9,9,3], k = 4\n\nOutput:\n 83\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1], k = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 500\n\n\n0 <= arr[i] <= 10\n9\n\n\n1 <= k <= arr.length",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1042,
        "slug": "flower-planting-with-no-adjacent",
        "url": "https://leetcode.com/problems/flower-planting-with-no-adjacent/",
        "titulo": "Flower Planting With No Adjacent",
        "enunciado": "You have \nn\n gardens, labeled from \n1\n to \nn\n, and an array \npaths\n where \npaths[i] = [x\ni\n, y\ni\n]\n describes a bidirectional path between garden \nx\ni\n to garden \ny\ni\n. In each garden, you want to plant one of 4 types of flowers.\n\n\nAll gardens have \nat most 3\n paths coming into or leaving it.\n\n\nYour task is to choose a flower type for each garden such that, for any two gardens connected by a path, they have different types of flowers.\n\n\nReturn \nany\n such a choice as an array \nanswer\n, where \nanswer[i]\n is the type of flower planted in the \n(i+1)\nth\n garden. The flower types are denoted \n1\n, \n2\n, \n3\n, or \n4\n. It is guaranteed an answer exists.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, paths = [[1,2],[2,3],[3,1]]\n\nOutput:\n [1,2,3]\n\nExplanation:\n\nGardens 1 and 2 have different types.\nGardens 2 and 3 have different types.\nGardens 3 and 1 have different types.\nHence, [1,2,3] is a valid answer. Other valid answers include [1,2,4], [1,4,2], and [3,2,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 4, paths = [[1,2],[3,4]]\n\nOutput:\n [1,2,1,2]\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4, paths = [[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]\n\nOutput:\n [1,2,3,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4\n\n\n0 <= paths.length <= 2 * 10\n4\n\n\npaths[i].length == 2\n\n\n1 <= x\ni\n, y\ni\n <= n\n\n\nx\ni\n != y\ni\n\n\nEvery garden has \nat most 3\n paths coming into or leaving it.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": false
    },
    {
        "id": 1041,
        "slug": "robot-bounded-in-circle",
        "url": "https://leetcode.com/problems/robot-bounded-in-circle/",
        "titulo": "Robot Bounded In Circle",
        "enunciado": "On an infinite plane, a robot initially stands at \n(0, 0)\n and faces north. Note that:\n\n\n\n\nThe \nnorth direction\n is the positive direction of the y-axis.\n\n\nThe \nsouth direction\n is the negative direction of the y-axis.\n\n\nThe \neast direction\n is the positive direction of the x-axis.\n\n\nThe \nwest direction\n is the negative direction of the x-axis.\n\n\n\n\nThe robot can receive one of three instructions:\n\n\n\n\n\"G\"\n: go straight 1 unit.\n\n\n\"L\"\n: turn 90 degrees to the left (i.e., anti-clockwise direction).\n\n\n\"R\"\n: turn 90 degrees to the right (i.e., clockwise direction).\n\n\n\n\nThe robot performs the \ninstructions\n given in order, and repeats them forever.\n\n\nReturn \ntrue\n if and only if there exists a circle in the plane such that the robot never leaves the circle.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n instructions = \"GGLLGG\"\n\nOutput:\n true\n\nExplanation:\n The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"G\": move one step. Position: (0, 2). Direction: North.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 2). Direction: West.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 2). Direction: South.\n\"G\": move one step. Position: (0, 1). Direction: South.\n\"G\": move one step. Position: (0, 0). Direction: South.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --> (0, 1) --> (0, 2) --> (0, 1) --> (0, 0).\nBased on that, we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n instructions = \"GG\"\n\nOutput:\n false\n\nExplanation:\n The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"G\": move one step. Position: (0, 2). Direction: North.\nRepeating the instructions, keeps advancing in the north direction and does not go into cycles.\nBased on that, we return false.\n\n\n\nExample 3:\n\n\n\n\nInput:\n instructions = \"GL\"\n\nOutput:\n true\n\nExplanation:\n The robot is initially at (0, 0) facing the north direction.\n\"G\": move one step. Position: (0, 1). Direction: North.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 1). Direction: West.\n\"G\": move one step. Position: (-1, 1). Direction: West.\n\"L\": turn 90 degrees anti-clockwise. Position: (-1, 1). Direction: South.\n\"G\": move one step. Position: (-1, 0). Direction: South.\n\"L\": turn 90 degrees anti-clockwise. Position: (-1, 0). Direction: East.\n\"G\": move one step. Position: (0, 0). Direction: East.\n\"L\": turn 90 degrees anti-clockwise. Position: (0, 0). Direction: North.\nRepeating the instructions, the robot goes into the cycle: (0, 0) --> (0, 1) --> (-1, 1) --> (-1, 0) --> (0, 0).\nBased on that, we return true.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= instructions.length <= 100\n\n\ninstructions[i]\n is \n'G'\n, \n'L'\n or, \n'R'\n.",
        "temas": [
            "Math",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1162,
        "slug": "as-far-from-land-as-possible",
        "url": "https://leetcode.com/problems/as-far-from-land-as-possible/",
        "titulo": "As Far from Land as Possible",
        "enunciado": "Given an \nn x n\n \ngrid\n containing only values \n0\n and \n1\n, where \n0\n represents water and \n1\n represents land, find a water cell such that its distance to the nearest land cell is maximized, and return the distance. If no land or water exists in the grid, return \n-1\n.\n\n\nThe distance used in this problem is the Manhattan distance: the distance between two cells \n(x0, y0)\n and \n(x1, y1)\n is \n|x0 - x1| + |y0 - y1|\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,0,1],[0,0,0],[1,0,1]]\n\nOutput:\n 2\n\nExplanation:\n The cell (1, 1) is as far as possible from all the land with distance 2.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,0,0],[0,0,0],[0,0,0]]\n\nOutput:\n 4\n\nExplanation:\n The cell (2, 2) is as far as possible from all the land with distance 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length\n\n\nn == grid[i].length\n\n\n1 <= n <= 100\n\n\ngrid[i][j]\n is \n0\n or \n1",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1161,
        "slug": "maximum-level-sum-of-a-binary-tree",
        "url": "https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/",
        "titulo": "Maximum Level Sum of a Binary Tree",
        "enunciado": "Given the \nroot\n of a binary tree, the level of its root is \n1\n, the level of its children is \n2\n, and so on.\n\n\nReturn the \nsmallest\n level \nx\n such that the sum of all the values of nodes at level \nx\n is \nmaximal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,7,0,7,-8,null,null]\n\nOutput:\n 2\n\nExplanation: \n\nLevel 1 sum = 1.\nLevel 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the maximum sum which is level 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [989,null,10250,98693,-89388,null,null,null,-32127]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1038,
        "slug": "binary-search-tree-to-greater-sum-tree",
        "url": "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/",
        "titulo": "Binary Search Tree to Greater Sum Tree",
        "enunciado": "Given the \nroot\n of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\n\n\nAs a reminder, a \nbinary search tree\n is a tree that satisfies these constraints:\n\n\n\n\nThe left subtree of a node contains only nodes with keys \nless than\n the node's key.\n\n\nThe right subtree of a node contains only nodes with keys \ngreater than\n the node's key.\n\n\nBoth the left and right subtrees must also be binary search trees.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n\nOutput:\n [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [0,null,1]\n\nOutput:\n [1,null,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 100]\n.\n\n\n0 <= Node.val <= 100\n\n\nAll the values in the tree are \nunique\n.\n\n\n\n\n \n\n\nNote:\n This question is the same as 538: \nhttps://leetcode.com/problems/convert-bst-to-greater-tree/",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1040,
        "slug": "moving-stones-until-consecutive-ii",
        "url": "https://leetcode.com/problems/moving-stones-until-consecutive-ii/",
        "titulo": "Moving Stones Until Consecutive II",
        "enunciado": "There are some stones in different positions on the X-axis. You are given an integer array \nstones\n, the positions of the stones.\n\n\nCall a stone an \nendpoint stone\n if it has the smallest or largest position. In one move, you pick up an \nendpoint stone\n and move it to an unoccupied position so that it is no longer an \nendpoint stone\n.\n\n\n\n\nIn particular, if the stones are at say, \nstones = [1,2,5]\n, you cannot move the endpoint stone at position \n5\n, since moving it to any position (such as \n0\n, or \n3\n) will still keep that stone as an endpoint stone.\n\n\n\n\nThe game ends when you cannot make any more moves (i.e., the stones are in three consecutive positions).\n\n\nReturn \nan integer array \nanswer\n of length \n2\n where\n:\n\n\n\n\nanswer[0]\n \nis the minimum number of moves you can play, and\n\n\nanswer[1]\n \nis the maximum number of moves you can play\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n stones = [7,4,9]\n\nOutput:\n [1,2]\n\nExplanation:\n We can move 4 -> 8 for one move to finish the game.\nOr, we can move 9 -> 5, 4 -> 6 for two moves to finish the game.\n\n\n\nExample 2:\n\n\n\n\nInput:\n stones = [6,5,4,3,10]\n\nOutput:\n [2,3]\n\nExplanation:\n We can move 3 -> 8 then 10 -> 7 to finish the game.\nOr, we can move 3 -> 7, 4 -> 8, 5 -> 9 to finish the game.\nNotice we cannot move 10 -> 2 to finish the game, because that would be an illegal move.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= stones.length <= 10\n4\n\n\n1 <= stones[i] <= 10\n9\n\n\nAll the values of \nstones\n are \nunique\n.",
        "temas": [
            "Array",
            "Math",
            "Sliding Window",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1039,
        "slug": "minimum-score-triangulation-of-polygon",
        "url": "https://leetcode.com/problems/minimum-score-triangulation-of-polygon/",
        "titulo": "Minimum Score Triangulation of Polygon",
        "enunciado": "You have a convex \nn\n-sided polygon where each vertex has an integer value. You are given an integer array \nvalues\n where \nvalues[i]\n is the value of the \ni\nth\n vertex in \nclockwise order\n.\n\n\nPolygon\n \ntriangulation\n is a process where you divide a polygon into a set of triangles and the vertices of each triangle must also be vertices of the original polygon. Note that no other shapes other than triangles are allowed in the division. This process will result in \nn - 2\n triangles.\n\n\nYou will \ntriangulate\n the polygon. For each triangle, the \nweight\n of that triangle is the product of the values at its vertices. The total score of the triangulation is the sum of these \nweights\n over all \nn - 2\n triangles.\n\n\nReturn the\n minimum possible score \nthat you can achieve with some\n \ntriangulation\n \nof the polygon.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n \nvalues = [1,2,3]\n\n\nOutput:\n \n6\n\n\nExplanation:\n The polygon is already triangulated, and the score of the only triangle is 6.\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n \nvalues = [3,7,4,5]\n\n\nOutput:\n \n144\n\n\nExplanation:\n There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.\n\nThe minimum score is 144.\n\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n \nvalues = [1,3,1,4,1,5]\n\n\nOutput:\n \n13\n\n\nExplanation:\n The minimum score triangulation is 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == values.length\n\n\n3 <= n <= 50\n\n\n1 <= values[i] <= 100",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1035,
        "slug": "uncrossed-lines",
        "url": "https://leetcode.com/problems/uncrossed-lines/",
        "titulo": "Uncrossed Lines",
        "enunciado": "You are given two integer arrays \nnums1\n and \nnums2\n. We write the integers of \nnums1\n and \nnums2\n (in the order they are given) on two separate horizontal lines.\n\n\nWe may draw connecting lines: a straight line connecting two numbers \nnums1[i]\n and \nnums2[j]\n such that:\n\n\n\n\nnums1[i] == nums2[j]\n, and\n\n\nthe line we draw does not intersect any other connecting (non-horizontal) line.\n\n\n\n\nNote that a connecting line cannot intersect even at the endpoints (i.e., each number can only belong to one connecting line).\n\n\nReturn \nthe maximum number of connecting lines we can draw in this way\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n nums1 = [1,4,2], nums2 = [1,2,4]\n\nOutput:\n 2\n\nExplanation:\n We can draw 2 uncrossed lines as in the diagram.\nWe cannot draw 3 uncrossed lines, because the line from nums1[1] = 4 to nums2[2] = 4 will intersect the line from nums1[2]=2 to nums2[1]=2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [2,5,1,2,5], nums2 = [10,5,2,1,5,2]\n\nOutput:\n 3\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums1 = [1,3,7,1,7,5], nums2 = [1,9,2,5,1]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 500\n\n\n1 <= nums1[i], nums2[j] <= 2000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1034,
        "slug": "coloring-a-border",
        "url": "https://leetcode.com/problems/coloring-a-border/",
        "titulo": "Coloring A Border",
        "enunciado": "You are given an \nm x n\n integer matrix \ngrid\n, and three integers \nrow\n, \ncol\n, and \ncolor\n. Each value in the grid represents the color of the grid square at that location.\n\n\nTwo squares are called \nadjacent\n if they are next to each other in any of the 4 directions.\n\n\nTwo squares belong to the same \nconnected component\n if they have the same color and they are adjacent.\n\n\nThe \nborder of a connected component\n is all the squares in the connected component that are either adjacent to (at least) a square not in the component, or on the boundary of the grid (the first or last row or column).\n\n\nYou should color the \nborder\n of the \nconnected component\n that contains the square \ngrid[row][col]\n with \ncolor\n.\n\n\nReturn \nthe final grid\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n grid = [[1,1],[1,2]], row = 0, col = 0, color = 3\n\nOutput:\n [[3,3],[3,2]]\n\nExample 2:\n\n\nInput:\n grid = [[1,2,2],[2,3,2]], row = 0, col = 1, color = 3\n\nOutput:\n [[1,3,3],[2,3,3]]\n\nExample 3:\n\n\nInput:\n grid = [[1,1,1],[1,1,1],[1,1,1]], row = 1, col = 1, color = 2\n\nOutput:\n [[2,2,2],[2,1,2],[2,2,2]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 50\n\n\n1 <= grid[i][j], color <= 1000\n\n\n0 <= row < m\n\n\n0 <= col < n",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1033,
        "slug": "moving-stones-until-consecutive",
        "url": "https://leetcode.com/problems/moving-stones-until-consecutive/",
        "titulo": "Moving Stones Until Consecutive",
        "enunciado": "There are three stones in different positions on the X-axis. You are given three integers \na\n, \nb\n, and \nc\n, the positions of the stones.\n\n\nIn one move, you pick up a stone at an endpoint (i.e., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints. Formally, let's say the stones are currently at positions \nx\n, \ny\n, and \nz\n with \nx < y < z\n. You pick up the stone at either position \nx\n or position \nz\n, and move that stone to an integer position \nk\n, with \nx < k < z\n and \nk != y\n.\n\n\nThe game ends when you cannot make any more moves (i.e., the stones are in three consecutive positions).\n\n\nReturn \nan integer array \nanswer\n of length \n2\n where\n:\n\n\n\n\nanswer[0]\n \nis the minimum number of moves you can play, and\n\n\nanswer[1]\n \nis the maximum number of moves you can play\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = 1, b = 2, c = 5\n\nOutput:\n [1,2]\n\nExplanation:\n Move the stone from 5 to 3, or move the stone from 5 to 4 to 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = 4, b = 3, c = 2\n\nOutput:\n [0,0]\n\nExplanation:\n We cannot make any moves.\n\n\n\nExample 3:\n\n\n\n\nInput:\n a = 3, b = 5, c = 1\n\nOutput:\n [1,2]\n\nExplanation:\n Move the stone from 1 to 4; or move the stone from 1 to 2 to 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a, b, c <= 100\n\n\na\n, \nb\n, and \nc\n have different values.",
        "temas": [
            "Math",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1031,
        "slug": "maximum-sum-of-two-non-overlapping-subarrays",
        "url": "https://leetcode.com/problems/maximum-sum-of-two-non-overlapping-subarrays/",
        "titulo": "Maximum Sum of Two Non-Overlapping Subarrays",
        "enunciado": "Given an integer array \nnums\n and two integers \nfirstLen\n and \nsecondLen\n, return \nthe maximum sum of elements in two non-overlapping \nsubarrays\n with lengths \nfirstLen\n and \nsecondLen\n.\n\n\nThe array with length \nfirstLen\n could occur before or after the array with length \nsecondLen\n, but they have to be non-overlapping.\n\n\nA \nsubarray\n is a \ncontiguous\n part of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,6,5,2,2,5,1,9,4], firstLen = 1, secondLen = 2\n\nOutput:\n 20\n\nExplanation:\n One choice of subarrays is [9] with length 1, and [6,5] with length 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,8,1,3,2,1,8,9,0], firstLen = 3, secondLen = 2\n\nOutput:\n 29\n\nExplanation:\n One choice of subarrays is [3,8,1] with length 3, and [8,9] with length 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,1,5,6,0,9,5,0,3,8], firstLen = 4, secondLen = 3\n\nOutput:\n 31\n\nExplanation:\n One choice of subarrays is [5,6,0,9] with length 4, and [0,3,8] with length 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= firstLen, secondLen <= 1000\n\n\n2 <= firstLen + secondLen <= 1000\n\n\nfirstLen + secondLen <= nums.length <= 1000\n\n\n0 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1029,
        "slug": "two-city-scheduling",
        "url": "https://leetcode.com/problems/two-city-scheduling/",
        "titulo": "Two City Scheduling",
        "enunciado": "A company is planning to interview \n2n\n people. Given the array \ncosts\n where \ncosts[i] = [aCost\ni\n, bCost\ni\n]\n, the cost of flying the \ni\nth\n person to city \na\n is \naCost\ni\n, and the cost of flying the \ni\nth\n person to city \nb\n is \nbCost\ni\n.\n\n\nReturn \nthe minimum cost to fly every person to a city\n such that exactly \nn\n people arrive in each city.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n costs = [[10,20],[30,200],[400,50],[30,20]]\n\nOutput:\n 110\n\nExplanation: \n\nThe first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.\n\n\n\nExample 2:\n\n\n\n\nInput:\n costs = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]\n\nOutput:\n 1859\n\n\n\nExample 3:\n\n\n\n\nInput:\n costs = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]\n\nOutput:\n 3086\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 * n == costs.length\n\n\n2 <= costs.length <= 100\n\n\ncosts.length\n is even.\n\n\n1 <= aCost\ni\n, bCost\ni\n <= 1000",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1026,
        "slug": "maximum-difference-between-node-and-ancestor",
        "url": "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor/",
        "titulo": "Maximum Difference Between Node and Ancestor",
        "enunciado": "Given the \nroot\n of a binary tree, find the maximum value \nv\n for which there exist \ndifferent\n nodes \na\n and \nb\n where \nv = |a.val - b.val|\n and \na\n is an ancestor of \nb\n.\n\n\nA node \na\n is an ancestor of \nb\n if either: any child of \na\n is equal to \nb\n or any child of \na\n is an ancestor of \nb\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [8,3,10,1,6,null,14,null,null,4,7,13]\n\nOutput:\n 7\n\nExplanation: \nWe have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,null,2,null,0,3]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[2, 5000]\n.\n\n\n0 <= Node.val <= 10\n5",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 1027,
        "slug": "longest-arithmetic-subsequence",
        "url": "https://leetcode.com/problems/longest-arithmetic-subsequence/",
        "titulo": "Longest Arithmetic Subsequence",
        "enunciado": "Given an array \nnums\n of integers, return \nthe length of the longest arithmetic subsequence in\n \nnums\n.\n\n\nNote\n that:\n\n\n\n\nA \nsubsequence\n is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n\n\nA sequence \nseq\n is arithmetic if \nseq[i + 1] - seq[i]\n are all the same value (for \n0 <= i < seq.length - 1\n).\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,6,9,12]\n\nOutput:\n 4\n\nExplanation: \n The whole array is an arithmetic sequence with steps of length = 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [9,4,7,2,10]\n\nOutput:\n 3\n\nExplanation: \n The longest arithmetic subsequence is [4,7,10].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [20,1,15,3,10,5,8]\n\nOutput:\n 4\n\nExplanation: \n The longest arithmetic subsequence is [20,15,10,5].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 1000\n\n\n0 <= nums[i] <= 500",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1024,
        "slug": "video-stitching",
        "url": "https://leetcode.com/problems/video-stitching/",
        "titulo": "Video Stitching",
        "enunciado": "You are given a series of video clips from a sporting event that lasted \ntime\n seconds. These video clips can be overlapping with each other and have varying lengths.\n\n\nEach video clip is described by an array \nclips\n where \nclips[i] = [start\ni\n, end\ni\n]\n indicates that the ith clip started at \nstart\ni\n and ended at \nend\ni\n.\n\n\nWe can cut these clips into segments freely.\n\n\n\n\nFor example, a clip \n[0, 7]\n can be cut into segments \n[0, 1] + [1, 3] + [3, 7]\n.\n\n\n\n\nReturn \nthe minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event\n \n[0, time]\n. If the task is impossible, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n clips = [[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]], time = 10\n\nOutput:\n 3\n\nExplanation:\n We take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\nThen, we can reconstruct the sporting event as follows:\nWe cut [1,9] into segments [1,2] + [2,8] + [8,9].\nNow we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].\n\n\n\nExample 2:\n\n\n\n\nInput:\n clips = [[0,1],[1,2]], time = 5\n\nOutput:\n -1\n\nExplanation:\n We cannot cover [0,5] with only [0,1] and [1,2].\n\n\n\nExample 3:\n\n\n\n\nInput:\n clips = [[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]], time = 9\n\nOutput:\n 3\n\nExplanation:\n We can take clips [0,4], [4,7], and [6,9].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= clips.length <= 100\n\n\n0 <= start\ni\n <= end\ni\n <= 100\n\n\n1 <= time <= 100",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1023,
        "slug": "camelcase-matching",
        "url": "https://leetcode.com/problems/camelcase-matching/",
        "titulo": "Camelcase Matching",
        "enunciado": "Given an array of strings \nqueries\n and a string \npattern\n, return a boolean array \nanswer\n where \nanswer[i]\n is \ntrue\n if \nqueries[i]\n matches \npattern\n, and \nfalse\n otherwise.\n\n\nA query word \nqueries[i]\n matches \npattern\n if you can insert lowercase English letters into the pattern so that it equals the query. You may insert a character at any position in pattern or you may choose not to insert any characters \nat all\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FB\"\n\nOutput:\n [true,false,true,true,false]\n\nExplanation:\n \"FooBar\" can be generated like this \"F\" + \"oo\" + \"B\" + \"ar\".\n\"FootBall\" can be generated like this \"F\" + \"oot\" + \"B\" + \"all\".\n\"FrameBuffer\" can be generated like this \"F\" + \"rame\" + \"B\" + \"uffer\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBa\"\n\nOutput:\n [true,false,true,false,false]\n\nExplanation:\n \"FooBar\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\".\n\"FootBall\" can be generated like this \"Fo\" + \"ot\" + \"Ba\" + \"ll\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n queries = [\"FooBar\",\"FooBarTest\",\"FootBall\",\"FrameBuffer\",\"ForceFeedBack\"], pattern = \"FoBaT\"\n\nOutput:\n [false,true,false,false,false]\n\nExplanation:\n \"FooBarTest\" can be generated like this \"Fo\" + \"o\" + \"Ba\" + \"r\" + \"T\" + \"est\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= pattern.length, queries.length <= 100\n\n\n1 <= queries[i].length <= 100\n\n\nqueries[i]\n and \npattern\n consist of English letters.",
        "temas": [
            "Array",
            "Two Pointers",
            "String",
            "Trie",
            "String Matching"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1020,
        "slug": "number-of-enclaves",
        "url": "https://leetcode.com/problems/number-of-enclaves/",
        "titulo": "Number of Enclaves",
        "enunciado": "You are given an \nm x n\n binary matrix \ngrid\n, where \n0\n represents a sea cell and \n1\n represents a land cell.\n\n\nA \nmove\n consists of walking from one land cell to another adjacent (\n4-directionally\n) land cell or walking off the boundary of the \ngrid\n.\n\n\nReturn \nthe number of land cells in\n \ngrid\n \nfor which we cannot walk off the boundary of the grid in any number of \nmoves\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]\n\nOutput:\n 3\n\nExplanation:\n There are three 1s that are enclosed by 0s, and one 1 that is not enclosed because its on the boundary.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]\n\nOutput:\n 0\n\nExplanation:\n All 1s are either on the boundary or can reach the boundary.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 500\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1019,
        "slug": "next-greater-node-in-linked-list",
        "url": "https://leetcode.com/problems/next-greater-node-in-linked-list/",
        "titulo": "Next Greater Node In Linked List",
        "enunciado": "You are given the \nhead\n of a linked list with \nn\n nodes.\n\n\nFor each node in the list, find the value of the \nnext greater node\n. That is, for each node, find the value of the first node that is next to it and has a \nstrictly larger\n value than it.\n\n\nReturn an integer array \nanswer\n where \nanswer[i]\n is the value of the next greater node of the \ni\nth\n node (\n1-indexed\n). If the \ni\nth\n node does not have a next greater node, set \nanswer[i] = 0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [2,1,5]\n\nOutput:\n [5,5,0]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [2,7,4,3,5]\n\nOutput:\n [7,0,5,5,0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is \nn\n.\n\n\n1 <= n <= 10\n4\n\n\n1 <= Node.val <= 10\n9",
        "temas": [
            "Array",
            "Linked List",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1017,
        "slug": "convert-to-base-2",
        "url": "https://leetcode.com/problems/convert-to-base-2/",
        "titulo": "Convert to Base -2",
        "enunciado": "Given an integer \nn\n, return \na binary string representing its representation in base\n \n-2\n.\n\n\nNote\n that the returned string should not have leading zeros unless the string is \n\"0\"\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n \"110\"\n\nExplantion:\n (-2)\n2\n + (-2)\n1\n = 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n \"111\"\n\nExplantion:\n (-2)\n2\n + (-2)\n1\n + (-2)\n0\n = 3\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n \"100\"\n\nExplantion:\n (-2)\n2\n = 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10\n9",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1016,
        "slug": "binary-string-with-substrings-representing-1-to-n",
        "url": "https://leetcode.com/problems/binary-string-with-substrings-representing-1-to-n/",
        "titulo": "Binary String With Substrings Representing 1 To N",
        "enunciado": "Given a binary string \ns\n and a positive integer \nn\n, return \ntrue\n if the binary representation of all the integers in the range \n[1, n]\n are \nsubstrings\n of \ns\n, or \nfalse\n otherwise\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters within a string.\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"0110\", n = 3\n\nOutput:\n true\n\nExample 2:\n\n\nInput:\n s = \"0110\", n = 4\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.\n\n\n1 <= n <= 10\n9",
        "temas": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1015,
        "slug": "smallest-integer-divisible-by-k",
        "url": "https://leetcode.com/problems/smallest-integer-divisible-by-k/",
        "titulo": "Smallest Integer Divisible by K",
        "enunciado": "Given a positive integer \nk\n, you need to find the \nlength\n of the \nsmallest\n positive integer \nn\n such that \nn\n is divisible by \nk\n, and \nn\n only contains the digit \n1\n.\n\n\nReturn \nthe \nlength\n of \nn\n. If there is no such \nn\n, return -1.\n\n\nNote:\n \nn\n may not fit in a 64-bit signed integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n k = 1\n\nOutput:\n 1\n\nExplanation:\n The smallest answer is n = 1, which has length 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n k = 2\n\nOutput:\n -1\n\nExplanation:\n There is no such positive integer n divisible by 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n k = 3\n\nOutput:\n 3\n\nExplanation:\n The smallest answer is n = 111, which has length 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Hash Table",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 1014,
        "slug": "best-sightseeing-pair",
        "url": "https://leetcode.com/problems/best-sightseeing-pair/",
        "titulo": "Best Sightseeing Pair",
        "enunciado": "You are given an integer array \nvalues\n where values[i] represents the value of the \ni\nth\n sightseeing spot. Two sightseeing spots \ni\n and \nj\n have a \ndistance\n \nj - i\n between them.\n\n\nThe score of a pair (\ni < j\n) of sightseeing spots is \nvalues[i] + values[j] + i - j\n: the sum of the values of the sightseeing spots, minus the distance between them.\n\n\nReturn \nthe maximum score of a pair of sightseeing spots\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n values = [8,1,5,2,6]\n\nOutput:\n 11\n\nExplanation:\n i = 0, j = 2, values[i] + values[j] + i - j = 8 + 5 + 0 - 2 = 11\n\n\n\nExample 2:\n\n\n\n\nInput:\n values = [1,2]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= values.length <= 5 * 10\n4\n\n\n1 <= values[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1061,
        "slug": "lexicographically-smallest-equivalent-string",
        "url": "https://leetcode.com/problems/lexicographically-smallest-equivalent-string/",
        "titulo": "Lexicographically Smallest Equivalent String",
        "enunciado": "You are given two strings of the same length \ns1\n and \ns2\n and a string \nbaseStr\n.\n\n\nWe say \ns1[i]\n and \ns2[i]\n are equivalent characters.\n\n\n\n\nFor example, if \ns1 = \"abc\"\n and \ns2 = \"cde\"\n, then we have \n'a' == 'c'\n, \n'b' == 'd'\n, and \n'c' == 'e'\n.\n\n\n\n\nEquivalent characters follow the usual rules of any equivalence relation:\n\n\n\n\nReflexivity:\n \n'a' == 'a'\n.\n\n\nSymmetry:\n \n'a' == 'b'\n implies \n'b' == 'a'\n.\n\n\nTransitivity:\n \n'a' == 'b'\n and \n'b' == 'c'\n implies \n'a' == 'c'\n.\n\n\n\n\nFor example, given the equivalency information from \ns1 = \"abc\"\n and \ns2 = \"cde\"\n, \n\"acd\"\n and \n\"aab\"\n are equivalent strings of \nbaseStr = \"eed\"\n, and \n\"aab\"\n is the lexicographically smallest equivalent string of \nbaseStr\n.\n\n\nReturn \nthe lexicographically smallest equivalent string of \nbaseStr\n by using the equivalency information from \ns1\n and \ns2\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"parker\", s2 = \"morris\", baseStr = \"parser\"\n\nOutput:\n \"makkek\"\n\nExplanation:\n Based on the equivalency information in s1 and s2, we can group their characters as [m,p], [a,o], [k,r,s], [e,i].\nThe characters in each group are equivalent and sorted in lexicographical order.\nSo the answer is \"makkek\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"hello\", s2 = \"world\", baseStr = \"hold\"\n\nOutput:\n \"hdld\"\n\nExplanation: \nBased on the equivalency information in s1 and s2, we can group their characters as [h,w], [d,e,o], [l,r].\nSo only the second letter 'o' in baseStr is changed to 'd', the answer is \"hdld\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s1 = \"leetcode\", s2 = \"programs\", baseStr = \"sourcecode\"\n\nOutput:\n \"aauaaaaada\"\n\nExplanation:\n We group the equivalent characters in s1 and s2 as [a,o,e,r,s,c], [l,p], [g,t] and [d,m], thus all letters in baseStr except 'u' and 'd' are transformed to 'a', the answer is \"aauaaaaada\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s1.length, s2.length, baseStr <= 1000\n\n\ns1.length == s2.length\n\n\ns1\n, \ns2\n, and \nbaseStr\n consist of lowercase English letters.",
        "temas": [
            "String",
            "Union Find"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 1011,
        "slug": "capacity-to-ship-packages-within-d-days",
        "url": "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/",
        "titulo": "Capacity To Ship Packages Within D Days",
        "enunciado": "A conveyor belt has packages that must be shipped from one port to another within \ndays\n days.\n\n\nThe \ni\nth\n package on the conveyor belt has a weight of \nweights[i]\n. Each day, we load the ship with packages on the conveyor belt (in the order given by \nweights\n). We may not load more weight than the maximum weight capacity of the ship.\n\n\nReturn the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within \ndays\n days.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n weights = [1,2,3,4,5,6,7,8,9,10], days = 5\n\nOutput:\n 15\n\nExplanation:\n A ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n weights = [3,2,2,4,1,4], days = 3\n\nOutput:\n 6\n\nExplanation:\n A ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4\n\n\n\nExample 3:\n\n\n\n\nInput:\n weights = [1,2,3,1,1], days = 4\n\nOutput:\n 3\n\nExplanation:\n\n1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= days <= weights.length <= 5 * 10\n4\n\n\n1 <= weights[i] <= 500",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1010,
        "slug": "pairs-of-songs-with-total-durations-divisible-by-60",
        "url": "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60/",
        "titulo": "Pairs of Songs With Total Durations Divisible by 60",
        "enunciado": "You are given a list of songs where the \ni\nth\n song has a duration of \ntime[i]\n seconds.\n\n\nReturn \nthe number of pairs of songs for which their total duration in seconds is divisible by\n \n60\n. Formally, we want the number of indices \ni\n, \nj\n such that \ni < j\n with \n(time[i] + time[j]) % 60 == 0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n time = [30,20,150,100,40]\n\nOutput:\n 3\n\nExplanation:\n Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n\n\n\nExample 2:\n\n\n\n\nInput:\n time = [60,60,60]\n\nOutput:\n 3\n\nExplanation:\n All three pairs have a total duration of 120, which is divisible by 60.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= time.length <= 6 * 10\n4\n\n\n1 <= time[i] <= 500",
        "temas": [
            "Array",
            "Hash Table",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1008,
        "slug": "construct-binary-search-tree-from-preorder-traversal",
        "url": "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal/",
        "titulo": "Construct Binary Search Tree from Preorder Traversal",
        "enunciado": "Given an array of integers preorder, which represents the \npreorder traversal\n of a BST (i.e., \nbinary search tree\n), construct the tree and return \nits root\n.\n\n\nIt is \nguaranteed\n that there is always possible to find a binary search tree with the given requirements for the given test cases.\n\n\nA \nbinary search tree\n is a binary tree where for every node, any descendant of \nNode.left\n has a value \nstrictly less than\n \nNode.val\n, and any descendant of \nNode.right\n has a value \nstrictly greater than\n \nNode.val\n.\n\n\nA \npreorder traversal\n of a binary tree displays the value of the node first, then traverses \nNode.left\n, then traverses \nNode.right\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n preorder = [8,5,1,7,10,12]\n\nOutput:\n [8,5,10,1,7,null,12]\n\n\n\nExample 2:\n\n\n\n\nInput:\n preorder = [1,3]\n\nOutput:\n [1,null,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= preorder.length <= 100\n\n\n1 <= preorder[i] <= 1000\n\n\nAll the values of \npreorder\n are \nunique\n.",
        "temas": [
            "Array",
            "Stack",
            "Tree",
            "Binary Search Tree",
            "Monotonic Stack",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1007,
        "slug": "minimum-domino-rotations-for-equal-row",
        "url": "https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/",
        "titulo": "Minimum Domino Rotations For Equal Row",
        "enunciado": "In a row of dominoes, \ntops[i]\n and \nbottoms[i]\n represent the top and bottom halves of the \ni\nth\n domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)\n\n\nWe may rotate the \ni\nth\n domino, so that \ntops[i]\n and \nbottoms[i]\n swap values.\n\n\nReturn the minimum number of rotations so that all the values in \ntops\n are the same, or all the values in \nbottoms\n are the same.\n\n\nIf it cannot be done, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n tops = [2,1,2,4,2,2], bottoms = [5,2,6,2,3,2]\n\nOutput:\n 2\n\nExplanation:\n \nThe first figure represents the dominoes as given by tops and bottoms: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\n\n\n\nExample 2:\n\n\n\n\nInput:\n tops = [3,5,1,2,3], bottoms = [3,6,3,3,4]\n\nOutput:\n -1\n\nExplanation:\n \nIn this case, it is not possible to rotate the dominoes to make one row of values equal.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= tops.length <= 2 * 10\n4\n\n\nbottoms.length == tops.length\n\n\n1 <= tops[i], bottoms[i] <= 6",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1006,
        "slug": "clumsy-factorial",
        "url": "https://leetcode.com/problems/clumsy-factorial/",
        "titulo": "Clumsy Factorial",
        "enunciado": "The \nfactorial\n of a positive integer \nn\n is the product of all positive integers less than or equal to \nn\n.\n\n\n\n\nFor example, \nfactorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1\n.\n\n\n\n\nWe make a \nclumsy factorial\n using the integers in decreasing order by swapping out the multiply operations for a fixed rotation of operations with multiply \n'*'\n, divide \n'/'\n, add \n'+'\n, and subtract \n'-'\n in this order.\n\n\n\n\nFor example, \nclumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n.\n\n\n\n\nHowever, these operations are still applied using the usual order of operations of arithmetic. We do all multiplication and division steps before any addition or subtraction steps, and multiplication and division steps are processed left to right.\n\n\nAdditionally, the division that we use is floor division such that \n10 * 9 / 8 = 90 / 8 = 11\n.\n\n\nGiven an integer \nn\n, return \nthe clumsy factorial of \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n 7\n\nExplanation:\n 7 = 4 * 3 / 2 + 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 12\n\nExplanation:\n 12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4",
        "temas": [
            "Math",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 1004,
        "slug": "max-consecutive-ones-iii",
        "url": "https://leetcode.com/problems/max-consecutive-ones-iii/",
        "titulo": "Max Consecutive Ones III",
        "enunciado": "Given a binary array \nnums\n and an integer \nk\n, return \nthe maximum number of consecutive \n1\n's in the array if you can flip at most\n \nk\n \n0\n's.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2\n\nOutput:\n 6\n\nExplanation:\n [1,1,1,0,0,\n1\n,1,1,1,1,\n1\n]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1], k = 3\n\nOutput:\n 10\n\nExplanation:\n [0,0,\n1,1,\n1\n,\n1\n,1,1,1,\n1\n,1,1\n,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1. The longest subarray is underlined.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\nnums[i]\n is either \n0\n or \n1\n.\n\n\n0 <= k <= nums.length",
        "temas": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 1003,
        "slug": "check-if-word-is-valid-after-substitutions",
        "url": "https://leetcode.com/problems/check-if-word-is-valid-after-substitutions/",
        "titulo": "Check If Word Is Valid After Substitutions",
        "enunciado": "Given a string \ns\n, determine if it is \nvalid\n.\n\n\nA string \ns\n is \nvalid\n if, starting with an empty string \nt = \"\"\n, you can \ntransform \nt\n into \ns\n after performing the following operation \nany number of times\n:\n\n\n\n\nInsert string \n\"abc\"\n into any position in \nt\n. More formally, \nt\n becomes \nt\nleft\n + \"abc\" + t\nright\n, where \nt == t\nleft\n + t\nright\n. Note that \nt\nleft\n and \nt\nright\n may be \nempty\n.\n\n\n\n\nReturn \ntrue\n \nif \ns\n is a \nvalid\n string, otherwise, return\n \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aabcbc\"\n\nOutput:\n true\n\nExplanation:\n\n\"\" -> \"\nabc\n\" -> \"a\nabc\nbc\"\nThus, \"aabcbc\" is valid.\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abcabcababcc\"\n\nOutput:\n true\n\nExplanation:\n\n\"\" -> \"\nabc\n\" -> \"abc\nabc\n\" -> \"abcabc\nabc\n\" -> \"abcabcab\nabc\nc\"\nThus, \"abcabcababcc\" is valid.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"abccba\"\n\nOutput:\n false\n\nExplanation:\n It is impossible to get \"abccba\" using the operation.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 2 * 10\n4\n\n\ns\n consists of letters \n'a'\n, \n'b'\n, and \n'c'",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 998,
        "slug": "maximum-binary-tree-ii",
        "url": "https://leetcode.com/problems/maximum-binary-tree-ii/",
        "titulo": "Maximum Binary Tree II",
        "enunciado": "A \nmaximum tree\n is a tree where every node has a value greater than any other value in its subtree.\n\n\nYou are given the \nroot\n of a maximum binary tree and an integer \nval\n.\n\n\nJust as in the \nprevious problem\n, the given tree was constructed from a list \na\n (\nroot = Construct(a)\n) recursively with the following \nConstruct(a)\n routine:\n\n\n\n\nIf \na\n is empty, return \nnull\n.\n\n\nOtherwise, let \na[i]\n be the largest element of \na\n. Create a \nroot\n node with the value \na[i]\n.\n\n\nThe left child of \nroot\n will be \nConstruct([a[0], a[1], ..., a[i - 1]])\n.\n\n\nThe right child of \nroot\n will be \nConstruct([a[i + 1], a[i + 2], ..., a[a.length - 1]])\n.\n\n\nReturn \nroot\n.\n\n\n\n\nNote that we were not given \na\n directly, only a root node \nroot = Construct(a)\n.\n\n\nSuppose \nb\n is a copy of \na\n with the value \nval\n appended to it. It is guaranteed that \nb\n has unique values.\n\n\nReturn \nConstruct(b)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [4,1,3,null,null,2], val = 5\n\nOutput:\n [5,4,null,1,3,null,null,2]\n\nExplanation:\n a = [1,4,2,3], b = [1,4,2,3,5]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [5,2,4,null,1], val = 3\n\nOutput:\n [5,2,4,null,1,null,3]\n\nExplanation:\n a = [2,1,5,4], b = [2,1,5,4,3]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [5,2,3,null,1], val = 4\n\nOutput:\n [5,2,4,null,1,3]\n\nExplanation:\n a = [2,1,5,3], b = [2,1,5,3,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 100]\n.\n\n\n1 <= Node.val <= 100\n\n\nAll the values of the tree are \nunique\n.\n\n\n1 <= val <= 100",
        "temas": [
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 994,
        "slug": "rotting-oranges",
        "url": "https://leetcode.com/problems/rotting-oranges/",
        "titulo": "Rotting Oranges",
        "enunciado": "You are given an \nm x n\n \ngrid\n where each cell can have one of three values:\n\n\n\n\n0\n representing an empty cell,\n\n\n1\n representing a fresh orange, or\n\n\n2\n representing a rotten orange.\n\n\n\n\nEvery minute, any fresh orange that is \n4-directionally adjacent\n to a rotten orange becomes rotten.\n\n\nReturn \nthe minimum number of minutes that must elapse until no cell has a fresh orange\n. If \nthis is impossible, return\n \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[2,1,1],[1,1,0],[0,1,1]]\n\nOutput:\n 4\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[2,1,1],[0,1,1],[1,0,1]]\n\nOutput:\n -1\n\nExplanation:\n The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[0,2]]\n\nOutput:\n 0\n\nExplanation:\n Since there are already no fresh oranges at minute 0, the answer is just 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 10\n\n\ngrid[i][j]\n is \n0\n, \n1\n, or \n2\n.",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 991,
        "slug": "broken-calculator",
        "url": "https://leetcode.com/problems/broken-calculator/",
        "titulo": "Broken Calculator",
        "enunciado": "There is a broken calculator that has the integer \nstartValue\n on its display initially. In one operation, you can:\n\n\n\n\nmultiply the number on display by \n2\n, or\n\n\nsubtract \n1\n from the number on display.\n\n\n\n\nGiven two integers \nstartValue\n and \ntarget\n, return \nthe minimum number of operations needed to display \ntarget\n on the calculator\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n startValue = 2, target = 3\n\nOutput:\n 2\n\nExplanation:\n Use double operation and then decrement operation {2 -> 4 -> 3}.\n\n\n\nExample 2:\n\n\n\n\nInput:\n startValue = 5, target = 8\n\nOutput:\n 2\n\nExplanation:\n Use decrement and then double {5 -> 4 -> 8}.\n\n\n\nExample 3:\n\n\n\n\nInput:\n startValue = 3, target = 10\n\nOutput:\n 3\n\nExplanation:\n Use double, decrement and double {3 -> 6 -> 5 -> 10}.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= startValue, target <= 10\n9",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 990,
        "slug": "satisfiability-of-equality-equations",
        "url": "https://leetcode.com/problems/satisfiability-of-equality-equations/",
        "titulo": "Satisfiability of Equality Equations",
        "enunciado": "You are given an array of strings \nequations\n that represent relationships between variables where each string \nequations[i]\n is of length \n4\n and takes one of two different forms: \n\"x\ni\n==y\ni\n\"\n or \n\"x\ni\n!=y\ni\n\"\n.Here, \nx\ni\n and \ny\ni\n are lowercase letters (not necessarily different) that represent one-letter variable names.\n\n\nReturn \ntrue\n if it is possible to assign integers to variable names so as to satisfy all the given equations, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n equations = [\"a==b\",\"b!=a\"]\n\nOutput:\n false\n\nExplanation:\n If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.\nThere is no way to assign the variables to satisfy both equations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n equations = [\"b==a\",\"a==b\"]\n\nOutput:\n true\n\nExplanation:\n We could assign a = 1 and b = 1 to satisfy both equations.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= equations.length <= 500\n\n\nequations[i].length == 4\n\n\nequations[i][0]\n is a lowercase letter.\n\n\nequations[i][1]\n is either \n'='\n or \n'!'\n.\n\n\nequations[i][2]\n is \n'='\n.\n\n\nequations[i][3]\n is a lowercase letter.",
        "temas": [
            "Array",
            "String",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 988,
        "slug": "smallest-string-starting-from-leaf",
        "url": "https://leetcode.com/problems/smallest-string-starting-from-leaf/",
        "titulo": "Smallest String Starting From Leaf",
        "enunciado": "You are given the \nroot\n of a binary tree where each node has a value in the range \n[0, 25]\n representing the letters \n'a'\n to \n'z'\n.\n\n\nReturn \nthe \nlexicographically smallest\n string that starts at a leaf of this tree and ends at the root\n.\n\n\nAs a reminder, any shorter prefix of a string is \nlexicographically smaller\n.\n\n\n\n\nFor example, \n\"ab\"\n is lexicographically smaller than \n\"aba\"\n.\n\n\n\n\nA leaf of a node is a node that has no children.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [0,1,2,3,4,3,4]\n\nOutput:\n \"dba\"\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [25,1,3,1,3,0,2]\n\nOutput:\n \"adz\"\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [2,2,1,null,1,0,null,0]\n\nOutput:\n \"abc\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 8500]\n.\n\n\n0 <= Node.val <= 25",
        "temas": [
            "String",
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 986,
        "slug": "interval-list-intersections",
        "url": "https://leetcode.com/problems/interval-list-intersections/",
        "titulo": "Interval List Intersections",
        "enunciado": "You are given two lists of closed intervals, \nfirstList\n and \nsecondList\n, where \nfirstList[i] = [start\ni\n, end\ni\n]\n and \nsecondList[j] = [start\nj\n, end\nj\n]\n. Each list of intervals is pairwise \ndisjoint\n and in \nsorted order\n.\n\n\nReturn \nthe intersection of these two interval lists\n.\n\n\nA \nclosed interval\n \n[a, b]\n (with \na <= b\n) denotes the set of real numbers \nx\n with \na <= x <= b\n.\n\n\nThe \nintersection\n of two closed intervals is a set of real numbers that are either empty or represented as a closed interval. For example, the intersection of \n[1, 3]\n and \n[2, 4]\n is \n[2, 3]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n firstList = [[0,2],[5,10],[13,23],[24,25]], secondList = [[1,5],[8,12],[15,24],[25,26]]\n\nOutput:\n [[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n firstList = [[1,3],[5,9]], secondList = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= firstList.length, secondList.length <= 1000\n\n\nfirstList.length + secondList.length >= 1\n\n\n0 <= start\ni\n < end\ni\n <= 10\n9\n\n\nend\ni\n < start\ni+1\n\n\n0 <= start\nj\n < end\nj\n <= 10\n9\n \n\n\nend\nj\n < start\nj+1",
        "temas": [
            "Array",
            "Two Pointers",
            "Line Sweep"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 985,
        "slug": "sum-of-even-numbers-after-queries",
        "url": "https://leetcode.com/problems/sum-of-even-numbers-after-queries/",
        "titulo": "Sum of Even Numbers After Queries",
        "enunciado": "You are given an integer array \nnums\n and an array \nqueries\n where \nqueries[i] = [val\ni\n, index\ni\n]\n.\n\n\nFor each query \ni\n, first, apply \nnums[index\ni\n] = nums[index\ni\n] + val\ni\n, then print the sum of the even values of \nnums\n.\n\n\nReturn \nan integer array \nanswer\n where \nanswer[i]\n is the answer to the \ni\nth\n query\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]\n\nOutput:\n [8,6,2,4]\n\nExplanation:\n At the beginning, the array is [1,2,3,4].\nAfter adding 1 to nums[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\nAfter adding -3 to nums[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\nAfter adding -4 to nums[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\nAfter adding 2 to nums[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1], queries = [[4,0]]\n\nOutput:\n [0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\n1 <= queries.length <= 10\n4\n\n\n-10\n4\n <= val\ni\n <= 10\n4\n\n\n0 <= index\ni\n < nums.length",
        "temas": [
            "Array",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 984,
        "slug": "string-without-aaa-or-bbb",
        "url": "https://leetcode.com/problems/string-without-aaa-or-bbb/",
        "titulo": "String Without AAA or BBB",
        "enunciado": "Given two integers \na\n and \nb\n, return \nany\n string \ns\n such that:\n\n\n\n\ns\n has length \na + b\n and contains exactly \na\n \n'a'\n letters, and exactly \nb\n \n'b'\n letters,\n\n\nThe substring \n'aaa'\n does not occur in \ns\n, and\n\n\nThe substring \n'bbb'\n does not occur in \ns\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = 1, b = 2\n\nOutput:\n \"abb\"\n\nExplanation:\n \"abb\", \"bab\" and \"bba\" are all correct answers.\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = 4, b = 1\n\nOutput:\n \"aabaa\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= a, b <= 100\n\n\nIt is guaranteed such an \ns\n exists for the given \na\n and \nb\n.",
        "temas": [
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 983,
        "slug": "minimum-cost-for-tickets",
        "url": "https://leetcode.com/problems/minimum-cost-for-tickets/",
        "titulo": "Minimum Cost For Tickets",
        "enunciado": "You have planned some train traveling one year in advance. The days of the year in which you will travel are given as an integer array \ndays\n. Each day is an integer from \n1\n to \n365\n.\n\n\nTrain tickets are sold in \nthree different ways\n:\n\n\n\n\na \n1-day\n pass is sold for \ncosts[0]\n dollars,\n\n\na \n7-day\n pass is sold for \ncosts[1]\n dollars, and\n\n\na \n30-day\n pass is sold for \ncosts[2]\n dollars.\n\n\n\n\nThe passes allow that many days of consecutive travel.\n\n\n\n\nFor example, if we get a \n7-day\n pass on day \n2\n, then we can travel for \n7\n days: \n2\n, \n3\n, \n4\n, \n5\n, \n6\n, \n7\n, and \n8\n.\n\n\n\n\nReturn \nthe minimum number of dollars you need to travel every day in the given list of days\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n days = [1,4,6,7,8,20], costs = [2,7,15]\n\nOutput:\n 11\n\nExplanation:\n For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\nIn total, you spent $11 and covered all the days of your travel.\n\n\n\nExample 2:\n\n\n\n\nInput:\n days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15]\n\nOutput:\n 17\n\nExplanation:\n For example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\nIn total, you spent $17 and covered all the days of your travel.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= days.length <= 365\n\n\n1 <= days[i] <= 365\n\n\ndays\n is in strictly increasing order.\n\n\ncosts.length == 3\n\n\n1 <= costs[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 981,
        "slug": "time-based-key-value-store",
        "url": "https://leetcode.com/problems/time-based-key-value-store/",
        "titulo": "Time Based Key-Value Store",
        "enunciado": "Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp.\n\n\nImplement the \nTimeMap\n class:\n\n\n\n\nTimeMap()\n Initializes the object of the data structure.\n\n\nvoid set(String key, String value, int timestamp)\n Stores the key \nkey\n with the value \nvalue\n at the given time \ntimestamp\n.\n\n\nString get(String key, int timestamp)\n Returns a value such that \nset\n was called previously, with \ntimestamp_prev <= timestamp\n. If there are multiple such values, it returns the value associated with the largest \ntimestamp_prev\n. If there are no values, it returns \n\"\"\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"TimeMap\", \"set\", \"get\", \"get\", \"set\", \"get\", \"get\"]\n[[], [\"foo\", \"bar\", 1], [\"foo\", 1], [\"foo\", 3], [\"foo\", \"bar2\", 4], [\"foo\", 4], [\"foo\", 5]]\n\nOutput\n\n[null, null, \"bar\", \"bar\", null, \"bar2\", \"bar2\"]\n\n\nExplanation\n\nTimeMap timeMap = new TimeMap();\ntimeMap.set(\"foo\", \"bar\", 1);  // store the key \"foo\" and value \"bar\" along with timestamp = 1.\ntimeMap.get(\"foo\", 1);         // return \"bar\"\ntimeMap.get(\"foo\", 3);         // return \"bar\", since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 is \"bar\".\ntimeMap.set(\"foo\", \"bar2\", 4); // store the key \"foo\" and value \"bar2\" along with timestamp = 4.\ntimeMap.get(\"foo\", 4);         // return \"bar2\"\ntimeMap.get(\"foo\", 5);         // return \"bar2\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= key.length, value.length <= 100\n\n\nkey\n and \nvalue\n consist of lowercase English letters and digits.\n\n\n1 <= timestamp <= 10\n7\n\n\nAll the timestamps \ntimestamp\n of \nset\n are strictly increasing.\n\n\nAt most \n2 * 10\n5\n calls will be made to \nset\n and \nget\n.",
        "temas": [
            "Hash Table",
            "String",
            "Binary Search",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 979,
        "slug": "distribute-coins-in-binary-tree",
        "url": "https://leetcode.com/problems/distribute-coins-in-binary-tree/",
        "titulo": "Distribute Coins in Binary Tree",
        "enunciado": "You are given the \nroot\n of a binary tree with \nn\n nodes where each \nnode\n in the tree has \nnode.val\n coins. There are \nn\n coins in total throughout the whole tree.\n\n\nIn one move, we may choose two adjacent nodes and move one coin from one node to another. A move may be from parent to child, or from child to parent.\n\n\nReturn \nthe \nminimum\n number of moves required to make every node have \nexactly\n one coin\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,0,0]\n\nOutput:\n 2\n\nExplanation: \nFrom the root of the tree, we move one coin to its left child, and one coin to its right child.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [0,3,0]\n\nOutput:\n 3\n\nExplanation: \nFrom the left child of the root, we move two coins to the root [taking two moves]. Then, we move one coin from the root of the tree to the right child.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is \nn\n.\n\n\n1 <= n <= 100\n\n\n0 <= Node.val <= n\n\n\nThe sum of all \nNode.val\n is \nn\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 978,
        "slug": "longest-turbulent-subarray",
        "url": "https://leetcode.com/problems/longest-turbulent-subarray/",
        "titulo": "Longest Turbulent Subarray",
        "enunciado": "Given an integer array \narr\n, return \nthe length of a maximum size turbulent subarray of\n \narr\n.\n\n\nA subarray is \nturbulent\n if the comparison sign flips between each adjacent pair of elements in the subarray.\n\n\nMore formally, a subarray \n[arr[i], arr[i + 1], ..., arr[j]]\n of \narr\n is said to be turbulent if and only if:\n\n\n\n\nFor \ni <= k < j\n:\n\n\t\n\n\narr[k] > arr[k + 1]\n when \nk\n is odd, and\n\n\narr[k] < arr[k + 1]\n when \nk\n is even.\n\n\n\n\n\n\nOr, for \ni <= k < j\n:\n\t\n\n\narr[k] > arr[k + 1]\n when \nk\n is even, and\n\n\narr[k] < arr[k + 1]\n when \nk\n is odd.\n\n\n\n\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [9,4,2,10,7,8,8,1,9]\n\nOutput:\n 5\n\nExplanation:\n arr[1] > arr[2] < arr[3] > arr[4] < arr[5]\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [4,8,12,16]\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [100]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 4 * 10\n4\n\n\n0 <= arr[i] <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 974,
        "slug": "subarray-sums-divisible-by-k",
        "url": "https://leetcode.com/problems/subarray-sums-divisible-by-k/",
        "titulo": "Subarray Sums Divisible by K",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \nthe number of non-empty \nsubarrays\n that have a sum divisible by \nk\n.\n\n\nA \nsubarray\n is a \ncontiguous\n part of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,5,0,-2,-3,1], k = 5\n\nOutput:\n 7\n\nExplanation:\n There are 7 subarrays with a sum divisible by k = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5], k = 9\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\n2 <= k <= 10\n4",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 973,
        "slug": "k-closest-points-to-origin",
        "url": "https://leetcode.com/problems/k-closest-points-to-origin/",
        "titulo": "K Closest Points to Origin",
        "enunciado": "Given an array of \npoints\n where \npoints[i] = [x\ni\n, y\ni\n]\n represents a point on the \nX-Y\n plane and an integer \nk\n, return the \nk\n closest points to the origin \n(0, 0)\n.\n\n\nThe distance between two points on the \nX-Y\n plane is the Euclidean distance (i.e., \n√(x\n1\n - x\n2\n)\n2\n + (y\n1\n - y\n2\n)\n2\n).\n\n\nYou may return the answer in \nany order\n. The answer is \nguaranteed\n to be \nunique\n (except for the order that it is in).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n points = [[1,3],[-2,2]], k = 1\n\nOutput:\n [[-2,2]]\n\nExplanation:\n\nThe distance between (1, 3) and the origin is sqrt(10).\nThe distance between (-2, 2) and the origin is sqrt(8).\nSince sqrt(8) < sqrt(10), (-2, 2) is closer to the origin.\nWe only want the closest k = 1 points from the origin, so the answer is just [[-2,2]].\n\n\n\nExample 2:\n\n\n\n\nInput:\n points = [[3,3],[5,-1],[-2,4]], k = 2\n\nOutput:\n [[3,3],[-2,4]]\n\nExplanation:\n The answer [[-2,4],[3,3]] would also be accepted.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= points.length <= 10\n4\n\n\n-10\n4\n <= x\ni\n, y\ni\n <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Divide and Conquer",
            "Geometry",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 971,
        "slug": "flip-binary-tree-to-match-preorder-traversal",
        "url": "https://leetcode.com/problems/flip-binary-tree-to-match-preorder-traversal/",
        "titulo": "Flip Binary Tree To Match Preorder Traversal",
        "enunciado": "You are given the \nroot\n of a binary tree with \nn\n nodes, where each node is uniquely assigned a value from \n1\n to \nn\n. You are also given a sequence of \nn\n values \nvoyage\n, which is the \ndesired\n \npre-order traversal\n of the binary tree.\n\n\nAny node in the binary tree can be \nflipped\n by swapping its left and right subtrees. For example, flipping node 1 will have the following effect:\n\n\n\n\nFlip the \nsmallest\n number of nodes so that the \npre-order traversal\n of the tree \nmatches\n \nvoyage\n.\n\n\nReturn \na list of the values of all \nflipped\n nodes. You may return the answer in \nany order\n. If it is \nimpossible\n to flip the nodes in the tree to make the pre-order traversal match \nvoyage\n, return the list \n[-1]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2], voyage = [2,1]\n\nOutput:\n [-1]\n\nExplanation:\n It is impossible to flip the nodes such that the pre-order traversal matches voyage.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3], voyage = [1,3,2]\n\nOutput:\n [1]\n\nExplanation:\n Flipping node 1 swaps nodes 2 and 3, so the pre-order traversal matches voyage.\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [1,2,3], voyage = [1,2,3]\n\nOutput:\n []\n\nExplanation:\n The tree's pre-order traversal already matches voyage, so no nodes need to be flipped.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is \nn\n.\n\n\nn == voyage.length\n\n\n1 <= n <= 100\n\n\n1 <= Node.val, voyage[i] <= n\n\n\nAll the values in the tree are \nunique\n.\n\n\nAll the values in \nvoyage\n are \nunique\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 970,
        "slug": "powerful-integers",
        "url": "https://leetcode.com/problems/powerful-integers/",
        "titulo": "Powerful Integers",
        "enunciado": "Given three integers \nx\n, \ny\n, and \nbound\n, return \na list of all the \npowerful integers\n that have a value less than or equal to\n \nbound\n.\n\n\nAn integer is \npowerful\n if it can be represented as \nx\ni\n + y\nj\n for some integers \ni >= 0\n and \nj >= 0\n.\n\n\nYou may return the answer in \nany order\n. In your answer, each value should occur \nat most once\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n x = 2, y = 3, bound = 10\n\nOutput:\n [2,3,4,5,7,9,10]\n\nExplanation:\n\n2 = 2\n0\n + 3\n0\n\n3 = 2\n1\n + 3\n0\n\n4 = 2\n0\n + 3\n1\n\n5 = 2\n1\n + 3\n1\n\n7 = 2\n2\n + 3\n1\n\n9 = 2\n3\n + 3\n0\n\n10 = 2\n0\n + 3\n2\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n x = 3, y = 5, bound = 15\n\nOutput:\n [2,4,6,8,10,14]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= x, y <= 100\n\n\n0 <= bound <= 10\n6",
        "temas": [
            "Hash Table",
            "Math",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 969,
        "slug": "pancake-sorting",
        "url": "https://leetcode.com/problems/pancake-sorting/",
        "titulo": "Pancake Sorting",
        "enunciado": "Given an array of integers \narr\n, sort the array by performing a series of \npancake flips\n.\n\n\nIn one pancake flip we do the following steps:\n\n\n\n\nChoose an integer \nk\n where \n1 <= k <= arr.length\n.\n\n\nReverse the sub-array \narr[0...k-1]\n (\n0-indexed\n).\n\n\n\n\nFor example, if \narr = [3,2,1,4]\n and we performed a pancake flip choosing \nk = 3\n, we reverse the sub-array \n[3,2,1]\n, so \narr = [\n1\n,\n2\n,\n3\n,4]\n after the pancake flip at \nk = 3\n.\n\n\nReturn \nan array of the \nk\n-values corresponding to a sequence of pancake flips that sort \narr\n. Any valid answer that sorts the array within \n10 * arr.length\n flips will be judged as correct.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,2,4,1]\n\nOutput:\n [4,2,4,3]\n\nExplanation: \n\nWe perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: arr = [3, 2, 4, 1]\nAfter 1st flip (k = 4): arr = [\n1\n, \n4\n, \n2\n, \n3\n]\nAfter 2nd flip (k = 2): arr = [\n4\n, \n1\n, 2, 3]\nAfter 3rd flip (k = 4): arr = [\n3\n, \n2\n, \n1\n, \n4\n]\nAfter 4th flip (k = 3): arr = [\n1\n, \n2\n, \n3\n, 4], which is sorted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,2,3]\n\nOutput:\n []\n\nExplanation: \nThe input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 100\n\n\n1 <= arr[i] <= arr.length\n\n\nAll integers in \narr\n are unique (i.e. \narr\n is a permutation of the integers from \n1\n to \narr.length\n).",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 967,
        "slug": "numbers-with-same-consecutive-differences",
        "url": "https://leetcode.com/problems/numbers-with-same-consecutive-differences/",
        "titulo": "Numbers With Same Consecutive Differences",
        "enunciado": "Given two integers n and k, return \nan array of all the integers of length \nn\n where the difference between every two consecutive digits is \nk\n. You may return the answer in \nany order\n.\n\n\nNote that the integers should not have leading zeros. Integers as \n02\n and \n043\n are not allowed.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, k = 7\n\nOutput:\n [181,292,707,818,929]\n\nExplanation:\n Note that 070 is not a valid number, because it has leading zeroes.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, k = 1\n\nOutput:\n [10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 9\n\n\n0 <= k <= 9",
        "temas": [
            "Backtracking",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Backtracking",
        "has_image": false
    },
    {
        "id": 966,
        "slug": "vowel-spellchecker",
        "url": "https://leetcode.com/problems/vowel-spellchecker/",
        "titulo": "Vowel Spellchecker",
        "enunciado": "Given a \nwordlist\n, we want to implement a spellchecker that converts a query word into a correct word.\n\n\nFor a given \nquery\n word, the spell checker handles two categories of spelling mistakes:\n\n\n\n\nCapitalization: If the query matches a word in the wordlist (\ncase-insensitive\n), then the query word is returned with the same case as the case in the wordlist.\n\n\t\n\n\nExample: \nwordlist = [\"yellow\"]\n, \nquery = \"YellOw\"\n: \ncorrect = \"yellow\"\n\n\nExample: \nwordlist = [\"Yellow\"]\n, \nquery = \"yellow\"\n: \ncorrect = \"Yellow\"\n\n\nExample: \nwordlist = [\"yellow\"]\n, \nquery = \"yellow\"\n: \ncorrect = \"yellow\"\n\n\n\n\n\n\nVowel Errors: If after replacing the vowels \n('a', 'e', 'i', 'o', 'u')\n of the query word with any vowel individually, it matches a word in the wordlist (\ncase-insensitive\n), then the query word is returned with the same case as the match in the wordlist.\n\t\n\n\nExample: \nwordlist = [\"YellOw\"]\n, \nquery = \"yollow\"\n: \ncorrect = \"YellOw\"\n\n\nExample: \nwordlist = [\"YellOw\"]\n, \nquery = \"yeellow\"\n: \ncorrect = \"\"\n (no match)\n\n\nExample: \nwordlist = [\"YellOw\"]\n, \nquery = \"yllw\"\n: \ncorrect = \"\"\n (no match)\n\n\n\n\n\n\n\n\nIn addition, the spell checker operates under the following precedence rules:\n\n\n\n\nWhen the query exactly matches a word in the wordlist (\ncase-sensitive\n), you should return the same word back.\n\n\nWhen the query matches a word up to capitlization, you should return the first such match in the wordlist.\n\n\nWhen the query matches a word up to vowel errors, you should return the first such match in the wordlist.\n\n\nIf the query has no matches in the wordlist, you should return the empty string.\n\n\n\n\nGiven some \nqueries\n, return a list of words \nanswer\n, where \nanswer[i]\n is the correct word for \nquery = queries[i]\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n wordlist = [\"KiTe\",\"kite\",\"hare\",\"Hare\"], queries = [\"kite\",\"Kite\",\"KiTe\",\"Hare\",\"HARE\",\"Hear\",\"hear\",\"keti\",\"keet\",\"keto\"]\n\nOutput:\n [\"kite\",\"KiTe\",\"KiTe\",\"Hare\",\"hare\",\"\",\"\",\"KiTe\",\"\",\"KiTe\"]\n\nExample 2:\n\n\nInput:\n wordlist = [\"yellow\"], queries = [\"YellOw\"]\n\nOutput:\n [\"yellow\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= wordlist.length, queries.length <= 5000\n\n\n1 <= wordlist[i].length, queries[i].length <= 7\n\n\nwordlist[i]\n and \nqueries[i]\n consist only of only English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 963,
        "slug": "minimum-area-rectangle-ii",
        "url": "https://leetcode.com/problems/minimum-area-rectangle-ii/",
        "titulo": "Minimum Area Rectangle II",
        "enunciado": "You are given an array of points in the \nX-Y\n plane \npoints\n where \npoints[i] = [x\ni\n, y\ni\n]\n.\n\n\nReturn \nthe minimum area of any rectangle formed from these points, with sides \nnot necessarily parallel\n to the X and Y axes\n. If there is not any such rectangle, return \n0\n.\n\n\nAnswers within \n10\n-5\n of the actual answer will be accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n points = [[1,2],[2,1],[1,0],[0,1]]\n\nOutput:\n 2.00000\n\nExplanation:\n The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n points = [[0,1],[2,1],[1,1],[1,0],[2,0]]\n\nOutput:\n 1.00000\n\nExplanation:\n The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n points = [[0,3],[1,2],[3,1],[1,3],[2,1]]\n\nOutput:\n 0\n\nExplanation:\n There is no possible rectangle to form from these points.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 50\n\n\npoints[i].length == 2\n\n\n0 <= x\ni\n, y\ni\n <= 4 * 10\n4\n\n\nAll the given points are \nunique\n.",
        "temas": [
            "Array",
            "Math",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 962,
        "slug": "maximum-width-ramp",
        "url": "https://leetcode.com/problems/maximum-width-ramp/",
        "titulo": "Maximum Width Ramp",
        "enunciado": "A \nramp\n in an integer array \nnums\n is a pair \n(i, j)\n for which \ni < j\n and \nnums[i] <= nums[j]\n. The \nwidth\n of such a ramp is \nj - i\n.\n\n\nGiven an integer array \nnums\n, return \nthe maximum width of a \nramp\n in \nnums\n. If there is no \nramp\n in \nnums\n, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [6,0,8,2,1,5]\n\nOutput:\n 4\n\nExplanation:\n The maximum width ramp is achieved at (i, j) = (1, 5): nums[1] = 0 and nums[5] = 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [9,8,1,0,1,9,4,0,4,1]\n\nOutput:\n 7\n\nExplanation:\n The maximum width ramp is achieved at (i, j) = (2, 9): nums[2] = 1 and nums[9] = 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 5 * 10\n4\n\n\n0 <= nums[i] <= 5 * 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 959,
        "slug": "regions-cut-by-slashes",
        "url": "https://leetcode.com/problems/regions-cut-by-slashes/",
        "titulo": "Regions Cut By Slashes",
        "enunciado": "An \nn x n\n grid is composed of \n1 x 1\n squares where each \n1 x 1\n square consists of a \n'/'\n, \n'\\'\n, or blank space \n' '\n. These characters divide the square into contiguous regions.\n\n\nGiven the grid \ngrid\n represented as a string array, return \nthe number of regions\n.\n\n\nNote that backslash characters are escaped, so a \n'\\'\n is represented as \n'\\\\'\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [\" /\",\"/ \"]\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [\" /\",\"  \"]\n\nOutput:\n 1\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n grid = [\"/\\\\\",\"\\\\/\"]\n\nOutput:\n 5\n\nExplanation: \nRecall that because \\ characters are escaped, \"\\\\/\" refers to \\/, and \"/\\\\\" refers to /\\.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length == grid[i].length\n\n\n1 <= n <= 30\n\n\ngrid[i][j]\n is either \n'/'\n, \n'\\'\n, or \n' '\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 958,
        "slug": "check-completeness-of-a-binary-tree",
        "url": "https://leetcode.com/problems/check-completeness-of-a-binary-tree/",
        "titulo": "Check Completeness of a Binary Tree",
        "enunciado": "Given the \nroot\n of a binary tree, determine if it is a \ncomplete binary tree\n.\n\n\nIn a \ncomplete binary tree\n, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between \n1\n and \n2\nh\n nodes inclusive at the last level \nh\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6]\n\nOutput:\n true\n\nExplanation:\n Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,null,7]\n\nOutput:\n false\n\nExplanation:\n The node with value 7 isn't as far left as possible.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 100]\n.\n\n\n1 <= Node.val <= 1000",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 957,
        "slug": "prison-cells-after-n-days",
        "url": "https://leetcode.com/problems/prison-cells-after-n-days/",
        "titulo": "Prison Cells After N Days",
        "enunciado": "There are \n8\n prison cells in a row and each cell is either occupied or vacant.\n\n\nEach day, whether the cell is occupied or vacant changes according to the following rules:\n\n\n\n\nIf a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.\n\n\nOtherwise, it becomes vacant.\n\n\n\n\nNote\n that because the prison is a row, the first and the last cells in the row can't have two adjacent neighbors.\n\n\nYou are given an integer array \ncells\n where \ncells[i] == 1\n if the \ni\nth\n cell is occupied and \ncells[i] == 0\n if the \ni\nth\n cell is vacant, and you are given an integer \nn\n.\n\n\nReturn the state of the prison after \nn\n days (i.e., \nn\n such changes described above).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n cells = [0,1,0,1,1,0,0,1], n = 7\n\nOutput:\n [0,0,1,1,0,0,0,0]\n\nExplanation:\n The following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]\n\n\n\nExample 2:\n\n\n\n\nInput:\n cells = [1,0,0,1,0,0,1,0], n = 1000000000\n\nOutput:\n [0,0,1,1,1,1,1,0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\ncells.length == 8\n\n\ncells[i]\n is either \n0\n or \n1\n.\n\n\n1 <= n <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 955,
        "slug": "delete-columns-to-make-sorted-ii",
        "url": "https://leetcode.com/problems/delete-columns-to-make-sorted-ii/",
        "titulo": "Delete Columns to Make Sorted II",
        "enunciado": "You are given an array of \nn\n strings \nstrs\n, all of the same length.\n\n\nWe may choose any deletion indices, and we delete all the characters in those indices for each string.\n\n\nFor example, if we have \nstrs = [\"abcdef\",\"uvwxyz\"]\n and deletion indices \n{0, 2, 3}\n, then the final array after deletions is \n[\"bef\", \"vyz\"]\n.\n\n\nSuppose we chose a set of deletion indices \nanswer\n such that after deletions, the final array has its elements in \nlexicographic\n order (i.e., \nstrs[0] <= strs[1] <= strs[2] <= ... <= strs[n - 1]\n). Return \nthe minimum possible value of\n \nanswer.length\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n strs = [\"ca\",\"bb\",\"ac\"]\n\nOutput:\n 1\n\nExplanation:\n \nAfter deleting the first column, strs = [\"a\", \"b\", \"c\"].\nNow strs is in lexicographic order (ie. strs[0] <= strs[1] <= strs[2]).\nWe require at least 1 deletion since initially strs was not in lexicographic order, so the answer is 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n strs = [\"xc\",\"yb\",\"za\"]\n\nOutput:\n 0\n\nExplanation:\n \nstrs is already in lexicographic order, so we do not need to delete anything.\nNote that the rows of strs are not necessarily in lexicographic order:\ni.e., it is NOT necessarily true that (strs[0][0] <= strs[0][1] <= ...)\n\n\n\nExample 3:\n\n\n\n\nInput:\n strs = [\"zyx\",\"wvu\",\"tsr\"]\n\nOutput:\n 3\n\nExplanation:\n We have to delete every column.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == strs.length\n\n\n1 <= n <= 100\n\n\n1 <= strs[i].length <= 100\n\n\nstrs[i]\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 954,
        "slug": "array-of-doubled-pairs",
        "url": "https://leetcode.com/problems/array-of-doubled-pairs/",
        "titulo": "Array of Doubled Pairs",
        "enunciado": "Given an integer array of even length \narr\n, return \ntrue\n if it is possible to reorder \narr\n such that \narr[2 * i + 1] = 2 * arr[2 * i]\n for every \n0 <= i < len(arr) / 2\n, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,1,3,6]\n\nOutput:\n false\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [2,1,2,6]\n\nOutput:\n false\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [4,-2,2,-4]\n\nOutput:\n true\n\nExplanation:\n We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= arr.length <= 3 * 10\n4\n\n\narr.length\n is even.\n\n\n-10\n5\n <= arr[i] <= 10\n5",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 951,
        "slug": "flip-equivalent-binary-trees",
        "url": "https://leetcode.com/problems/flip-equivalent-binary-trees/",
        "titulo": "Flip Equivalent Binary Trees",
        "enunciado": "For a binary tree \nT\n, we can define a \nflip operation\n as follows: choose any node, and swap the left and right child subtrees.\n\n\nA binary tree \nX\n is \nflip equivalent\n to a binary tree \nY\n if and only if we can make \nX\n equal to \nY\n after some number of flip operations.\n\n\nGiven the roots of two binary trees \nroot1\n and \nroot2\n, return \ntrue\n if the two trees are flip equivalent or \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root1 = [1,2,3,4,5,6,null,null,null,7,8], root2 = [1,3,2,null,6,4,5,null,null,null,null,8,7]\n\nOutput:\n true\n\nExplanation: \nWe flipped at nodes with values 1, 3, and 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root1 = [], root2 = []\n\nOutput:\n true\n\n\n\nExample 3:\n\n\n\n\nInput:\n root1 = [], root2 = [1]\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in each tree is in the range \n[0, 100]\n.\n\n\nEach tree will have \nunique node values\n in the range \n[0, 99]\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 950,
        "slug": "reveal-cards-in-increasing-order",
        "url": "https://leetcode.com/problems/reveal-cards-in-increasing-order/",
        "titulo": "Reveal Cards In Increasing Order",
        "enunciado": "You are given an integer array \ndeck\n. There is a deck of cards where every card has a unique integer. The integer on the \ni\nth\n card is \ndeck[i]\n.\n\n\nYou can order the deck in any order you want. Initially, all the cards start face down (unrevealed) in one deck.\n\n\nYou will do the following steps repeatedly until all cards are revealed:\n\n\n\n\nTake the top card of the deck, reveal it, and take it out of the deck.\n\n\nIf there are still cards in the deck then put the next top card of the deck at the bottom of the deck.\n\n\nIf there are still unrevealed cards, go back to step 1. Otherwise, stop.\n\n\n\n\nReturn \nan ordering of the deck that would reveal the cards in increasing order\n.\n\n\nNote\n that the first entry in the answer is considered to be the top of the deck.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n deck = [17,13,11,2,3,5,7]\n\nOutput:\n [2,13,3,11,5,17,7]\n\nExplanation:\n \nWe get the deck in the order [17,13,11,2,3,5,7] (this order does not matter), and reorder it.\nAfter reordering, the deck starts as [2,13,3,11,5,17,7], where 2 is the top of the deck.\nWe reveal 2, and move 13 to the bottom.  The deck is now [3,11,5,17,7,13].\nWe reveal 3, and move 11 to the bottom.  The deck is now [5,17,7,13,11].\nWe reveal 5, and move 17 to the bottom.  The deck is now [7,13,11,17].\nWe reveal 7, and move 13 to the bottom.  The deck is now [11,17,13].\nWe reveal 11, and move 17 to the bottom.  The deck is now [13,17].\nWe reveal 13, and move 17 to the bottom.  The deck is now [17].\nWe reveal 17.\nSince all the cards revealed are in increasing order, the answer is correct.\n\n\n\nExample 2:\n\n\n\n\nInput:\n deck = [1,1000]\n\nOutput:\n [1,1000]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= deck.length <= 1000\n\n\n1 <= deck[i] <= 10\n6\n\n\nAll the values of \ndeck\n are \nunique\n.",
        "temas": [
            "Array",
            "Queue",
            "Sorting",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 949,
        "slug": "largest-time-for-given-digits",
        "url": "https://leetcode.com/problems/largest-time-for-given-digits/",
        "titulo": "Largest Time for Given Digits",
        "enunciado": "Given an array \narr\n of 4 digits, find the latest 24-hour time that can be made using each digit \nexactly once\n.\n\n\n24-hour times are formatted as \n\"HH:MM\"\n, where \nHH\n is between \n00\n and \n23\n, and \nMM\n is between \n00\n and \n59\n. The earliest 24-hour time is \n00:00\n, and the latest is \n23:59\n.\n\n\nReturn \nthe latest 24-hour time in \n\"HH:MM\"\n format\n. If no valid time can be made, return an empty string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,4]\n\nOutput:\n \"23:41\"\n\nExplanation:\n The valid 24-hour times are \"12:34\", \"12:43\", \"13:24\", \"13:42\", \"14:23\", \"14:32\", \"21:34\", \"21:43\", \"23:14\", and \"23:41\". Of these times, \"23:41\" is the latest.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [5,5,5,5]\n\nOutput:\n \"\"\n\nExplanation:\n There are no valid 24-hour times as \"55:55\" is not valid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\narr.length == 4\n\n\n0 <= arr[i] <= 9",
        "temas": [
            "Array",
            "String",
            "Backtracking",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 948,
        "slug": "bag-of-tokens",
        "url": "https://leetcode.com/problems/bag-of-tokens/",
        "titulo": "Bag of Tokens",
        "enunciado": "You start with an initial \npower\n of \npower\n, an initial \nscore\n of \n0\n, and a bag of tokens given as an integer array \ntokens\n, where each \ntokens[i]\n denotes the value of token\ni\n.\n\n\nYour goal is to \nmaximize\n the total \nscore\n by strategically playing these tokens. In one move, you can play an \nunplayed\n token in one of the two ways (but not both for the same token):\n\n\n\n\nFace-up\n: If your current power is \nat least\n \ntokens[i]\n, you may play token\ni\n, losing \ntokens[i]\n power and gaining \n1\n score.\n\n\nFace-down\n: If your current score is \nat least\n \n1\n, you may play token\ni\n, gaining \ntokens[i]\n power and losing \n1\n score.\n\n\n\n\nReturn \nthe \nmaximum\n possible score you can achieve after playing \nany\n number of tokens\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ntokens = [100], power = 50\n\n\nOutput:\n \n0\n\n\nExplanation\n:\n Since your score is \n0\n initially, you cannot play the token face-down. You also cannot play it face-up since your power (\n50\n) is less than \ntokens[0]\n (\n100\n).\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ntokens = [200,100], power = 150\n\n\nOutput:\n \n1\n\n\nExplanation:\n Play token\n1\n (\n100\n) face-up, reducing your power to \n50\n and increasing your score to \n1\n.\n\n\nThere is no need to play token\n0\n, since you cannot play it face-up to add to your score. The maximum score achievable is \n1\n.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ntokens = [100,200,300,400], power = 200\n\n\nOutput:\n \n2\n\n\nExplanation:\n Play the tokens in this order to get a score of \n2\n:\n\n\n\n\nPlay token\n0\n (\n100\n) face-up, reducing power to \n100\n and increasing score to \n1\n.\n\n\nPlay token\n3\n (\n400\n) face-down, increasing power to \n500\n and reducing score to \n0\n.\n\n\nPlay token\n1\n (\n200\n) face-up, reducing power to \n300\n and increasing score to \n1\n.\n\n\nPlay token\n2\n (\n300\n) face-up, reducing power to \n0\n and increasing score to \n2\n.\n\n\n\n\nThe maximum score achievable is \n2\n.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= tokens.length <= 1000\n\n\n0 <= tokens[i], power < 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 947,
        "slug": "most-stones-removed-with-same-row-or-column",
        "url": "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column/",
        "titulo": "Most Stones Removed with Same Row or Column",
        "enunciado": "On a 2D plane, we place \nn\n stones at some integer coordinate points. Each coordinate point may have at most one stone.\n\n\nA stone can be removed if it shares either \nthe same row or the same column\n as another stone that has not been removed.\n\n\nGiven an array \nstones\n of length \nn\n where \nstones[i] = [x\ni\n, y\ni\n]\n represents the location of the \ni\nth\n stone, return \nthe largest possible number of stones that can be removed\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]\n\nOutput:\n 5\n\nExplanation:\n One way to remove 5 stones is as follows:\n1. Remove stone [2,2] because it shares the same row as [2,1].\n2. Remove stone [2,1] because it shares the same column as [0,1].\n3. Remove stone [1,2] because it shares the same row as [1,0].\n4. Remove stone [1,0] because it shares the same column as [0,0].\n5. Remove stone [0,1] because it shares the same row as [0,0].\nStone [0,0] cannot be removed since it does not share a row/column with another stone still on the plane.\n\n\n\nExample 2:\n\n\n\n\nInput:\n stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]\n\nOutput:\n 3\n\nExplanation:\n One way to make 3 moves is as follows:\n1. Remove stone [2,2] because it shares the same row as [2,0].\n2. Remove stone [2,0] because it shares the same column as [0,0].\n3. Remove stone [0,2] because it shares the same row as [0,0].\nStones [0,0] and [1,1] cannot be removed since they do not share a row/column with another stone still on the plane.\n\n\n\nExample 3:\n\n\n\n\nInput:\n stones = [[0,0]]\n\nOutput:\n 0\n\nExplanation:\n [0,0] is the only stone on the plane, so you cannot remove it.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= stones.length <= 1000\n\n\n0 <= x\ni\n, y\ni\n <= 10\n4\n\n\nNo two stones are at the same coordinate point.",
        "temas": [
            "Hash Table",
            "Depth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 946,
        "slug": "validate-stack-sequences",
        "url": "https://leetcode.com/problems/validate-stack-sequences/",
        "titulo": "Validate Stack Sequences",
        "enunciado": "Given two integer arrays \npushed\n and \npopped\n each with distinct values, return \ntrue\n if this could have been the result of a sequence of push and pop operations on an initially empty stack, or \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n pushed = [1,2,3,4,5], popped = [4,5,3,2,1]\n\nOutput:\n true\n\nExplanation:\n We might do the following sequence:\npush(1), push(2), push(3), push(4),\npop() -> 4,\npush(5),\npop() -> 5, pop() -> 3, pop() -> 2, pop() -> 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n pushed = [1,2,3,4,5], popped = [4,3,5,1,2]\n\nOutput:\n false\n\nExplanation:\n 1 cannot be popped before 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= pushed.length <= 1000\n\n\n0 <= pushed[i] <= 1000\n\n\nAll the elements of \npushed\n are \nunique\n.\n\n\npopped.length == pushed.length\n\n\npopped\n is a permutation of \npushed\n.",
        "temas": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 945,
        "slug": "minimum-increment-to-make-array-unique",
        "url": "https://leetcode.com/problems/minimum-increment-to-make-array-unique/",
        "titulo": "Minimum Increment to Make Array Unique",
        "enunciado": "You are given an integer array \nnums\n. In one move, you can pick an index \ni\n where \n0 <= i < nums.length\n and increment \nnums[i]\n by \n1\n.\n\n\nReturn \nthe minimum number of moves to make every value in \nnums\n \nunique\n.\n\n\nThe test cases are generated so that the answer fits in a 32-bit integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,2]\n\nOutput:\n 1\n\nExplanation:\n After 1 move, the array could be [1, 2, 3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,2,1,2,1,7]\n\nOutput:\n 6\n\nExplanation:\n After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\nIt can be shown that it is impossible for the array to have all unique values with 5 or less moves.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Greedy",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 939,
        "slug": "minimum-area-rectangle",
        "url": "https://leetcode.com/problems/minimum-area-rectangle/",
        "titulo": "Minimum Area Rectangle",
        "enunciado": "You are given an array of points in the \nX-Y\n plane \npoints\n where \npoints[i] = [x\ni\n, y\ni\n]\n.\n\n\nReturn \nthe minimum area of a rectangle formed from these points, with sides parallel to the X and Y axes\n. If there is not any such rectangle, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n points = [[1,1],[1,3],[3,1],[3,3],[2,2]]\n\nOutput:\n 4\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n points = [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 500\n\n\npoints[i].length == 2\n\n\n0 <= x\ni\n, y\ni\n <= 4 * 10\n4\n\n\nAll the given points are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Geometry",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 937,
        "slug": "reorder-data-in-log-files",
        "url": "https://leetcode.com/problems/reorder-data-in-log-files/",
        "titulo": "Reorder Data in Log Files",
        "enunciado": "You are given an array of \nlogs\n. Each log is a space-delimited string of words, where the first word is the \nidentifier\n.\n\n\nThere are two types of logs:\n\n\n\n\nLetter-logs\n: All words (except the identifier) consist of lowercase English letters.\n\n\nDigit-logs\n: All words (except the identifier) consist of digits.\n\n\n\n\nReorder these logs so that:\n\n\n\n\nThe \nletter-logs\n come before all \ndigit-logs\n.\n\n\nThe \nletter-logs\n are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers.\n\n\nThe \ndigit-logs\n maintain their relative ordering.\n\n\n\n\nReturn \nthe final order of the logs\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n logs = [\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]\n\nOutput:\n [\"let1 art can\",\"let3 art zero\",\"let2 own kit dig\",\"dig1 8 1 5 1\",\"dig2 3 6\"]\n\nExplanation:\n\nThe letter-log contents are all different, so their ordering is \"art can\", \"art zero\", \"own kit dig\".\nThe digit-logs have a relative order of \"dig1 8 1 5 1\", \"dig2 3 6\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n logs = [\"a1 9 2 3 1\",\"g1 act car\",\"zo4 4 7\",\"ab1 off key dog\",\"a8 act zoo\"]\n\nOutput:\n [\"g1 act car\",\"a8 act zoo\",\"ab1 off key dog\",\"a1 9 2 3 1\",\"zo4 4 7\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= logs.length <= 100\n\n\n3 <= logs[i].length <= 100\n\n\nAll the tokens of \nlogs[i]\n are separated by a \nsingle\n space.\n\n\nlogs[i]\n is guaranteed to have an identifier and at least one word after the identifier.",
        "temas": [
            "Array",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 935,
        "slug": "knight-dialer",
        "url": "https://leetcode.com/problems/knight-dialer/",
        "titulo": "Knight Dialer",
        "enunciado": "The chess knight has a \nunique movement\n, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an \nL\n). The possible movements of chess knight are shown in this diagram:\n\n\nA chess knight can move as indicated in the chess diagram below:\n\n\n\n\nWe have a chess knight and a phone pad as shown below, the knight \ncan only stand on a numeric cell\n (i.e. blue cell).\n\n\n\n\nGiven an integer \nn\n, return how many distinct phone numbers of length \nn\n we can dial.\n\n\nYou are allowed to place the knight \non any numeric cell\n initially and then you should perform \nn - 1\n jumps to dial a number of length \nn\n. All jumps should be \nvalid\n knight jumps.\n\n\nAs the answer may be very large, \nreturn the answer modulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 10\n\nExplanation:\n We need to dial a number of length 1, so placing the knight over any numeric cell of the 10 cells is sufficient.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 20\n\nExplanation:\n All the valid number we can dial are [04, 06, 16, 18, 27, 29, 34, 38, 40, 43, 49, 60, 61, 67, 72, 76, 81, 83, 92, 94]\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 3131\n\nOutput:\n 136006598\n\nExplanation:\n Please take care of the mod.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 5000",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 934,
        "slug": "shortest-bridge",
        "url": "https://leetcode.com/problems/shortest-bridge/",
        "titulo": "Shortest Bridge",
        "enunciado": "You are given an \nn x n\n binary matrix \ngrid\n where \n1\n represents land and \n0\n represents water.\n\n\nAn \nisland\n is a 4-directionally connected group of \n1\n's not connected to any other \n1\n's. There are \nexactly two islands\n in \ngrid\n.\n\n\nYou may change \n0\n's to \n1\n's to connect the two islands to form \none island\n.\n\n\nReturn \nthe smallest number of \n0\n's you must flip to connect the two islands\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n grid = [[0,1],[1,0]]\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[0,1,0],[0,0,0],[0,0,1]]\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n grid = [[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length == grid[i].length\n\n\n2 <= n <= 100\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.\n\n\nThere are exactly two islands in \ngrid\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 932,
        "slug": "beautiful-array",
        "url": "https://leetcode.com/problems/beautiful-array/",
        "titulo": "Beautiful Array",
        "enunciado": "An array \nnums\n of length \nn\n is \nbeautiful\n if:\n\n\n\n\nnums\n is a permutation of the integers in the range \n[1, n]\n.\n\n\nFor every \n0 <= i < j < n\n, there is no index \nk\n with \ni < k < j\n where \n2 * nums[k] == nums[i] + nums[j]\n.\n\n\n\n\nGiven the integer \nn\n, return \nany \nbeautiful\n array \nnums\n of length \nn\n. There will be at least one valid answer for the given \nn\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n n = 4\n\nOutput:\n [2,1,4,3]\n\nExample 2:\n\n\nInput:\n n = 5\n\nOutput:\n [3,1,2,5,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000",
        "temas": [
            "Array",
            "Math",
            "Divide and Conquer"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 931,
        "slug": "minimum-falling-path-sum",
        "url": "https://leetcode.com/problems/minimum-falling-path-sum/",
        "titulo": "Minimum Falling Path Sum",
        "enunciado": "Given an \nn x n\n array of integers \nmatrix\n, return \nthe \nminimum sum\n of any \nfalling path\n through\n \nmatrix\n.\n\n\nA \nfalling path\n starts at any element in the first row and chooses the element in the next row that is either directly below or diagonally left/right. Specifically, the next element from position \n(row, col)\n will be \n(row + 1, col - 1)\n, \n(row + 1, col)\n, or \n(row + 1, col + 1)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[2,1,3],[6,5,4],[7,8,9]]\n\nOutput:\n 13\n\nExplanation:\n There are two falling paths with a minimum sum as shown.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[-19,57],[-40,-5]]\n\nOutput:\n -59\n\nExplanation:\n The falling path with a minimum sum is shown.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == matrix.length == matrix[i].length\n\n\n1 <= n <= 100\n\n\n-100 <= matrix[i][j] <= 100",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 930,
        "slug": "binary-subarrays-with-sum",
        "url": "https://leetcode.com/problems/binary-subarrays-with-sum/",
        "titulo": "Binary Subarrays With Sum",
        "enunciado": "Given a binary array \nnums\n and an integer \ngoal\n, return \nthe number of non-empty \nsubarrays\n with a sum\n \ngoal\n.\n\n\nA \nsubarray\n is a contiguous part of the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,0,1,0,1], goal = 2\n\nOutput:\n 4\n\nExplanation:\n The 4 subarrays are bolded and underlined below:\n[\n1,0,1\n,0,1]\n[\n1,0,1,0\n,1]\n[1,\n0,1,0,1\n]\n[1,0,\n1,0,1\n]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,0,0,0,0], goal = 0\n\nOutput:\n 15\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\nnums[i]\n is either \n0\n or \n1\n.\n\n\n0 <= goal <= nums.length",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 926,
        "slug": "flip-string-to-monotone-increasing",
        "url": "https://leetcode.com/problems/flip-string-to-monotone-increasing/",
        "titulo": "Flip String to Monotone Increasing",
        "enunciado": "A binary string is monotone increasing if it consists of some number of \n0\n's (possibly none), followed by some number of \n1\n's (also possibly none).\n\n\nYou are given a binary string \ns\n. You can flip \ns[i]\n changing it from \n0\n to \n1\n or from \n1\n to \n0\n.\n\n\nReturn \nthe minimum number of flips to make \ns\n monotone increasing\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"00110\"\n\nOutput:\n 1\n\nExplanation:\n We flip the last digit to get 00111.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"010110\"\n\nOutput:\n 2\n\nExplanation:\n We flip to get 011111, or alternatively 000111.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"00011000\"\n\nOutput:\n 2\n\nExplanation:\n We flip to get 00000000.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'0'\n or \n'1'\n.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 923,
        "slug": "3sum-with-multiplicity",
        "url": "https://leetcode.com/problems/3sum-with-multiplicity/",
        "titulo": "3Sum With Multiplicity",
        "enunciado": "Given an integer array \narr\n, and an integer \ntarget\n, return the number of tuples \ni, j, k\n such that \ni < j < k\n and \narr[i] + arr[j] + arr[k] == target\n.\n\n\nAs the answer can be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,1,2,2,3,3,4,4,5,5], target = 8\n\nOutput:\n 20\n\nExplanation: \n\nEnumerating by the values (arr[i], arr[j], arr[k]):\n(1, 2, 5) occurs 8 times;\n(1, 3, 4) occurs 8 times;\n(2, 2, 4) occurs 2 times;\n(2, 3, 3) occurs 2 times.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,1,2,2,2,2], target = 5\n\nOutput:\n 12\n\nExplanation: \n\narr[i] = 1, arr[j] = arr[k] = 2 occurs 12 times:\nWe choose one 1 from [1,1] in 2 ways,\nand two 2s from [2,2,2,2] in 6 ways.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [2,1,3], target = 6\n\nOutput:\n 1\n\nExplanation:\n (1, 2, 3) occured one time in the array so we return 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= arr.length <= 3000\n\n\n0 <= arr[i] <= 100\n\n\n0 <= target <= 300",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 921,
        "slug": "minimum-add-to-make-parentheses-valid",
        "url": "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/",
        "titulo": "Minimum Add to Make Parentheses Valid",
        "enunciado": "A parentheses string is valid if and only if:\n\n\n\n\nIt is the empty string,\n\n\nIt can be written as \nAB\n (\nA\n concatenated with \nB\n), where \nA\n and \nB\n are valid strings, or\n\n\nIt can be written as \n(A)\n, where \nA\n is a valid string.\n\n\n\n\nYou are given a parentheses string \ns\n. In one move, you can insert a parenthesis at any position of the string.\n\n\n\n\nFor example, if \ns = \"()))\"\n, you can insert an opening parenthesis to be \n\"(\n(\n)))\"\n or a closing parenthesis to be \n\"())\n)\n)\"\n.\n\n\n\n\nReturn \nthe minimum number of moves required to make \ns\n valid\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"())\"\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"(((\"\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns[i]\n is either \n'('\n or \n')'\n.",
        "temas": [
            "String",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 919,
        "slug": "complete-binary-tree-inserter",
        "url": "https://leetcode.com/problems/complete-binary-tree-inserter/",
        "titulo": "Complete Binary Tree Inserter",
        "enunciado": "A \ncomplete binary tree\n is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.\n\n\nDesign an algorithm to insert a new node to a complete binary tree keeping it complete after the insertion.\n\n\nImplement the \nCBTInserter\n class:\n\n\n\n\nCBTInserter(TreeNode root)\n Initializes the data structure with the \nroot\n of the complete binary tree.\n\n\nint insert(int v)\n Inserts a \nTreeNode\n into the tree with value \nNode.val == val\n so that the tree remains complete, and returns the value of the parent of the inserted \nTreeNode\n.\n\n\nTreeNode get_root()\n Returns the root node of the tree.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"CBTInserter\", \"insert\", \"insert\", \"get_root\"]\n[[[1, 2]], [3], [4], []]\n\nOutput\n\n[null, 1, 2, [1, 2, 3, 4]]\n\n\nExplanation\n\nCBTInserter cBTInserter = new CBTInserter([1, 2]);\ncBTInserter.insert(3);  // return 1\ncBTInserter.insert(4);  // return 2\ncBTInserter.get_root(); // return [1, 2, 3, 4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree will be in the range \n[1, 1000]\n.\n\n\n0 <= Node.val <= 5000\n\n\nroot\n is a complete binary tree.\n\n\n0 <= val <= 5000\n\n\nAt most \n10\n4\n calls will be made to \ninsert\n and \nget_root\n.",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Design",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 918,
        "slug": "maximum-sum-circular-subarray",
        "url": "https://leetcode.com/problems/maximum-sum-circular-subarray/",
        "titulo": "Maximum Sum Circular Subarray",
        "enunciado": "Given a \ncircular integer array\n \nnums\n of length \nn\n, return \nthe maximum possible sum of a non-empty \nsubarray\n of \nnums\n.\n\n\nA \ncircular array\n means the end of the array connects to the beginning of the array. Formally, the next element of \nnums[i]\n is \nnums[(i + 1) % n]\n and the previous element of \nnums[i]\n is \nnums[(i - 1 + n) % n]\n.\n\n\nA \nsubarray\n may only include each element of the fixed buffer \nnums\n at most once. Formally, for a subarray \nnums[i], nums[i + 1], ..., nums[j]\n, there does not exist \ni <= k1\n, \nk2 <= j\n with \nk1 % n == k2 % n\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,-2,3,-2]\n\nOutput:\n 3\n\nExplanation:\n Subarray [3] has maximum sum 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,-3,5]\n\nOutput:\n 10\n\nExplanation:\n Subarray [5,5] has maximum sum 5 + 5 = 10.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [-3,-2,-3]\n\nOutput:\n -2\n\nExplanation:\n Subarray [-2] has maximum sum -2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 3 * 10\n4\n\n\n-3 * 10\n4\n <= nums[i] <= 3 * 10\n4",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming",
            "Queue",
            "Monotonic Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 916,
        "slug": "word-subsets",
        "url": "https://leetcode.com/problems/word-subsets/",
        "titulo": "Word Subsets",
        "enunciado": "You are given two string arrays \nwords1\n and \nwords2\n.\n\n\nA string \nb\n is a \nsubset\n of string \na\n if every letter in \nb\n occurs in \na\n including multiplicity.\n\n\n\n\nFor example, \n\"wrr\"\n is a subset of \n\"warrior\"\n but is not a subset of \n\"world\"\n.\n\n\n\n\nA string \na\n from \nwords1\n is \nuniversal\n if for every string \nb\n in \nwords2\n, \nb\n is a subset of \na\n.\n\n\nReturn an array of all the \nuniversal\n strings in \nwords1\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nwords1 = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], words2 = [\"e\",\"o\"]\n\n\nOutput:\n \n[\"facebook\",\"google\",\"leetcode\"]\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nwords1 = [\"amazon\",\"apple\",\"facebook\",\"google\",\"leetcode\"], words2 = [\"lc\",\"eo\"]\n\n\nOutput:\n \n[\"leetcode\"]\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nwords1 = [\"acaac\",\"cccbb\",\"aacbb\",\"caacc\",\"bcbbb\"], words2 = [\"c\",\"cc\",\"b\"]\n\n\nOutput:\n \n[\"cccbb\"]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words1.length, words2.length <= 10\n4\n\n\n1 <= words1[i].length, words2[i].length <= 10\n\n\nwords1[i]\n and \nwords2[i]\n consist only of lowercase English letters.\n\n\nAll the strings of \nwords1\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 915,
        "slug": "partition-array-into-disjoint-intervals",
        "url": "https://leetcode.com/problems/partition-array-into-disjoint-intervals/",
        "titulo": "Partition Array into Disjoint Intervals",
        "enunciado": "Given an integer array \nnums\n, partition it into two (contiguous) subarrays \nleft\n and \nright\n so that:\n\n\n\n\nEvery element in \nleft\n is less than or equal to every element in \nright\n.\n\n\nleft\n and \nright\n are non-empty.\n\n\nleft\n has the smallest possible size.\n\n\n\n\nReturn \nthe length of \nleft\n after such a partitioning\n.\n\n\nTest cases are generated such that partitioning exists.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,0,3,8,6]\n\nOutput:\n 3\n\nExplanation:\n left = [5,0,3], right = [8,6]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1,0,6,12]\n\nOutput:\n 4\n\nExplanation:\n left = [1,1,1,0], right = [6,12]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n6\n\n\nThere is at least one valid answer for the given input.",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 912,
        "slug": "sort-an-array",
        "url": "https://leetcode.com/problems/sort-an-array/",
        "titulo": "Sort an Array",
        "enunciado": "Given an array of integers \nnums\n, sort the array in ascending order and return it.\n\n\nYou must solve the problem \nwithout using any built-in\n functions in \nO(nlog(n))\n time complexity and with the smallest space complexity possible.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,2,3,1]\n\nOutput:\n [1,2,3,5]\n\nExplanation:\n After sorting the array, the positions of some numbers are not changed (for example, 2 and 3), while the positions of other numbers are changed (for example, 1 and 5).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,1,1,2,0,0]\n\nOutput:\n [0,0,1,1,2,5]\n\nExplanation:\n Note that the values of nums are not necessairly unique.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5 * 10\n4\n\n\n-5 * 10\n4\n <= nums[i] <= 5 * 10\n4",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Merge Sort",
            "Bucket Sort",
            "Radix Sort",
            "Counting Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 911,
        "slug": "online-election",
        "url": "https://leetcode.com/problems/online-election/",
        "titulo": "Online Election",
        "enunciado": "You are given two integer arrays \npersons\n and \ntimes\n. In an election, the \ni\nth\n vote was cast for \npersons[i]\n at time \ntimes[i]\n.\n\n\nFor each query at a time \nt\n, find the person that was leading the election at time \nt\n. Votes cast at time \nt\n will count towards our query. In the case of a tie, the most recent vote (among tied candidates) wins.\n\n\nImplement the \nTopVotedCandidate\n class:\n\n\n\n\nTopVotedCandidate(int[] persons, int[] times)\n Initializes the object with the \npersons\n and \ntimes\n arrays.\n\n\nint q(int t)\n Returns the number of the person that was leading the election at time \nt\n according to the mentioned rules.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"TopVotedCandidate\", \"q\", \"q\", \"q\", \"q\", \"q\", \"q\"]\n[[[0, 1, 1, 0, 0, 1, 0], [0, 5, 10, 15, 20, 25, 30]], [3], [12], [25], [15], [24], [8]]\n\nOutput\n\n[null, 0, 1, 1, 0, 0, 1]\n\n\nExplanation\n\nTopVotedCandidate topVotedCandidate = new TopVotedCandidate([0, 1, 1, 0, 0, 1, 0], [0, 5, 10, 15, 20, 25, 30]);\ntopVotedCandidate.q(3); // return 0, At time 3, the votes are [0], and 0 is leading.\ntopVotedCandidate.q(12); // return 1, At time 12, the votes are [0,1,1], and 1 is leading.\ntopVotedCandidate.q(25); // return 1, At time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)\ntopVotedCandidate.q(15); // return 0\ntopVotedCandidate.q(24); // return 0\ntopVotedCandidate.q(8); // return 1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= persons.length <= 5000\n\n\ntimes.length == persons.length\n\n\n0 <= persons[i] < persons.length\n\n\n0 <= times[i] <= 10\n9\n\n\ntimes\n is sorted in a strictly increasing order.\n\n\ntimes[0] <= t <= 10\n9\n\n\nAt most \n10\n4\n calls will be made to \nq\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 910,
        "slug": "smallest-range-ii",
        "url": "https://leetcode.com/problems/smallest-range-ii/",
        "titulo": "Smallest Range II",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n.\n\n\nFor each index \ni\n where \n0 <= i < nums.length\n, change \nnums[i]\n to be either \nnums[i] + k\n or \nnums[i] - k\n.\n\n\nThe \nscore\n of \nnums\n is the difference between the maximum and minimum elements in \nnums\n.\n\n\nReturn \nthe minimum \nscore\n of \nnums\n after changing the values at each index\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1], k = 0\n\nOutput:\n 0\n\nExplanation:\n The score is max(nums) - min(nums) = 1 - 1 = 0.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,10], k = 2\n\nOutput:\n 6\n\nExplanation:\n Change nums to be [2, 8]. The score is max(nums) - min(nums) = 8 - 2 = 6.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,3,6], k = 3\n\nOutput:\n 3\n\nExplanation:\n Change nums to be [4, 6, 3]. The score is max(nums) - min(nums) = 6 - 3 = 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n0 <= nums[i] <= 10\n4\n\n\n0 <= k <= 10\n4",
        "temas": [
            "Array",
            "Math",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 909,
        "slug": "snakes-and-ladders",
        "url": "https://leetcode.com/problems/snakes-and-ladders/",
        "titulo": "Snakes and Ladders",
        "enunciado": "You are given an \nn x n\n integer matrix \nboard\n where the cells are labeled from \n1\n to \nn\n2\n in a \nBoustrophedon style\n starting from the bottom left of the board (i.e. \nboard[n - 1][0]\n) and alternating direction each row.\n\n\nYou start on square \n1\n of the board. In each move, starting from square \ncurr\n, do the following:\n\n\n\n\nChoose a destination square \nnext\n with a label in the range \n[curr + 1, min(curr + 6, n\n2\n)]\n.\n\n\t\n\n\nThis choice simulates the result of a standard \n6-sided die roll\n: i.e., there are always at most 6 destinations, regardless of the size of the board.\n\n\n\n\n\n\nIf \nnext\n has a snake or ladder, you \nmust\n move to the destination of that snake or ladder. Otherwise, you move to \nnext\n.\n\n\nThe game ends when you reach the square \nn\n2\n.\n\n\n\n\nA board square on row \nr\n and column \nc\n has a snake or ladder if \nboard[r][c] != -1\n. The destination of that snake or ladder is \nboard[r][c]\n. Squares \n1\n and \nn\n2\n are not the starting points of any snake or ladder.\n\n\nNote that you only take a snake or ladder at most once per dice roll. If the destination to a snake or ladder is the start of another snake or ladder, you do \nnot\n follow the subsequent snake or ladder.\n\n\n\n\nFor example, suppose the board is \n[[-1,4],[-1,3]]\n, and on the first move, your destination square is \n2\n. You follow the ladder to square \n3\n, but do \nnot\n follow the subsequent ladder to \n4\n.\n\n\n\n\nReturn \nthe least number of dice rolls required to reach the square \nn\n2\n. If it is not possible to reach the square, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,-1,-1,-1,-1,-1],[-1,35,-1,-1,13,-1],[-1,-1,-1,-1,-1,-1],[-1,15,-1,-1,-1,-1]]\n\nOutput:\n 4\n\nExplanation:\n \nIn the beginning, you start at square 1 (at row 5, column 0).\nYou decide to move to square 2 and must take the ladder to square 15.\nYou then decide to move to square 17 and must take the snake to square 13.\nYou then decide to move to square 14 and must take the ladder to square 35.\nYou then decide to move to square 36, ending the game.\nThis is the lowest possible number of moves to reach the last square, so return 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n board = [[-1,-1],[-1,3]]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == board.length == board[i].length\n\n\n2 <= n <= 20\n\n\nboard[i][j]\n is either \n-1\n or in the range \n[1, n\n2\n]\n.\n\n\nThe squares labeled \n1\n and \nn\n2\n are not the starting points of any snake or ladder.",
        "temas": [
            "Array",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 907,
        "slug": "sum-of-subarray-minimums",
        "url": "https://leetcode.com/problems/sum-of-subarray-minimums/",
        "titulo": "Sum of Subarray Minimums",
        "enunciado": "Given an array of integers arr, find the sum of \nmin(b)\n, where \nb\n ranges over every (contiguous) subarray of \narr\n. Since the answer may be large, return the answer \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [3,1,2,4]\n\nOutput:\n 17\n\nExplanation:\n \nSubarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.\nSum is 17.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [11,81,94,43,3]\n\nOutput:\n 444\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 3 * 10\n4\n\n\n1 <= arr[i] <= 3 * 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 904,
        "slug": "fruit-into-baskets",
        "url": "https://leetcode.com/problems/fruit-into-baskets/",
        "titulo": "Fruit Into Baskets",
        "enunciado": "You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array \nfruits\n where \nfruits[i]\n is the \ntype\n of fruit the \ni\nth\n tree produces.\n\n\nYou want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:\n\n\n\n\nYou only have \ntwo\n baskets, and each basket can only hold a \nsingle type\n of fruit. There is no limit on the amount of fruit each basket can hold.\n\n\nStarting from any tree of your choice, you must pick \nexactly one fruit\n from \nevery\n tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.\n\n\nOnce you reach a tree with fruit that cannot fit in your baskets, you must stop.\n\n\n\n\nGiven the integer array \nfruits\n, return \nthe \nmaximum\n number of fruits you can pick\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n fruits = [\n1,2,1\n]\n\nOutput:\n 3\n\nExplanation:\n We can pick from all 3 trees.\n\n\n\nExample 2:\n\n\n\n\nInput:\n fruits = [0,\n1,2,2\n]\n\nOutput:\n 3\n\nExplanation:\n We can pick from trees [1,2,2].\nIf we had started at the first tree, we would only pick from trees [0,1].\n\n\n\nExample 3:\n\n\n\n\nInput:\n fruits = [1,\n2,3,2,2\n]\n\nOutput:\n 4\n\nExplanation:\n We can pick from trees [2,3,2,2].\nIf we had started at the first tree, we would only pick from trees [1,2].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= fruits.length <= 10\n5\n\n\n0 <= fruits[i] < fruits.length",
        "temas": [
            "Array",
            "Hash Table",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 901,
        "slug": "online-stock-span",
        "url": "https://leetcode.com/problems/online-stock-span/",
        "titulo": "Online Stock Span",
        "enunciado": "Design an algorithm that collects daily price quotes for some stock and returns \nthe span\n of that stock's price for the current day.\n\n\nThe \nspan\n of the stock's price in one day is the maximum number of consecutive days (starting from that day and going backward) for which the stock price was less than or equal to the price of that day.\n\n\n\n\nFor example, if the prices of the stock in the last four days is \n[7,2,1,2]\n and the price of the stock today is \n2\n, then the span of today is \n4\n because starting from today, the price of the stock was less than or equal \n2\n for \n4\n consecutive days.\n\n\nAlso, if the prices of the stock in the last four days is \n[7,34,1,2]\n and the price of the stock today is \n8\n, then the span of today is \n3\n because starting from today, the price of the stock was less than or equal \n8\n for \n3\n consecutive days.\n\n\n\n\nImplement the \nStockSpanner\n class:\n\n\n\n\nStockSpanner()\n Initializes the object of the class.\n\n\nint next(int price)\n Returns the \nspan\n of the stock's price given that today's price is \nprice\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"StockSpanner\", \"next\", \"next\", \"next\", \"next\", \"next\", \"next\", \"next\"]\n[[], [100], [80], [60], [70], [60], [75], [85]]\n\nOutput\n\n[null, 1, 1, 1, 2, 1, 4, 6]\n\n\nExplanation\n\nStockSpanner stockSpanner = new StockSpanner();\nstockSpanner.next(100); // return 1\nstockSpanner.next(80);  // return 1\nstockSpanner.next(60);  // return 1\nstockSpanner.next(70);  // return 2\nstockSpanner.next(60);  // return 1\nstockSpanner.next(75);  // return 4, because the last 4 prices (including today's price of 75) were less than or equal to today's price.\nstockSpanner.next(85);  // return 6\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= price <= 10\n5\n\n\nAt most \n10\n4\n calls will be made to \nnext\n.",
        "temas": [
            "Stack",
            "Design",
            "Monotonic Stack",
            "Data Stream"
        ],
        "dificuldade": "Média",
        "tema_principal": "Stack",
        "has_image": false
    },
    {
        "id": 900,
        "slug": "rle-iterator",
        "url": "https://leetcode.com/problems/rle-iterator/",
        "titulo": "RLE Iterator",
        "enunciado": "We can use run-length encoding (i.e., \nRLE\n) to encode a sequence of integers. In a run-length encoded array of even length \nencoding\n (\n0-indexed\n), for all even \ni\n, \nencoding[i]\n tells us the number of times that the non-negative integer value \nencoding[i + 1]\n is repeated in the sequence.\n\n\n\n\nFor example, the sequence \narr = [8,8,8,5,5]\n can be encoded to be \nencoding = [3,8,2,5]\n. \nencoding = [3,8,0,9,2,5]\n and \nencoding = [2,8,1,8,2,5]\n are also valid \nRLE\n of \narr\n.\n\n\n\n\nGiven a run-length encoded array, design an iterator that iterates through it.\n\n\nImplement the \nRLEIterator\n class:\n\n\n\n\nRLEIterator(int[] encoded)\n Initializes the object with the encoded array \nencoded\n.\n\n\nint next(int n)\n Exhausts the next \nn\n elements and returns the last element exhausted in this way. If there is no element left to exhaust, return \n-1\n instead.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"RLEIterator\", \"next\", \"next\", \"next\", \"next\"]\n[[[3, 8, 0, 9, 2, 5]], [2], [1], [1], [2]]\n\nOutput\n\n[null, 8, 8, 5, -1]\n\n\nExplanation\n\nRLEIterator rLEIterator = new RLEIterator([3, 8, 0, 9, 2, 5]); // This maps to the sequence [8,8,8,5,5].\nrLEIterator.next(2); // exhausts 2 terms of the sequence, returning 8. The remaining sequence is now [8, 5, 5].\nrLEIterator.next(1); // exhausts 1 term of the sequence, returning 8. The remaining sequence is now [5, 5].\nrLEIterator.next(1); // exhausts 1 term of the sequence, returning 5. The remaining sequence is now [5].\nrLEIterator.next(2); // exhausts 2 terms, returning -1. This is because the first term exhausted was 5,\nbut the second term did not exist. Since the last term exhausted does not exist, we return -1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= encoding.length <= 1000\n\n\nencoding.length\n is even.\n\n\n0 <= encoding[i] <= 10\n9\n\n\n1 <= n <= 10\n9\n\n\nAt most \n1000\n calls will be made to \nnext\n.",
        "temas": [
            "Array",
            "Design",
            "Counting",
            "Iterator"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 898,
        "slug": "bitwise-ors-of-subarrays",
        "url": "https://leetcode.com/problems/bitwise-ors-of-subarrays/",
        "titulo": "Bitwise ORs of Subarrays",
        "enunciado": "Given an integer array \narr\n, return \nthe number of distinct bitwise ORs of all the non-empty subarrays of\n \narr\n.\n\n\nThe bitwise OR of a subarray is the bitwise OR of each integer in the subarray. The bitwise OR of a subarray of one integer is that integer.\n\n\nA \nsubarray\n is a contiguous non-empty sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [0]\n\nOutput:\n 1\n\nExplanation:\n There is only one possible result: 0.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,1,2]\n\nOutput:\n 3\n\nExplanation:\n The possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n arr = [1,2,4]\n\nOutput:\n 6\n\nExplanation:\n The possible results are 1, 2, 3, 4, 6, and 7.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 5 * 10\n4\n\n\n0 <= arr[i] <= 10\n9",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 894,
        "slug": "all-possible-full-binary-trees",
        "url": "https://leetcode.com/problems/all-possible-full-binary-trees/",
        "titulo": "All Possible Full Binary Trees",
        "enunciado": "Given an integer \nn\n, return \na list of all possible \nfull binary trees\n with\n \nn\n \nnodes\n. Each node of each tree in the answer must have \nNode.val == 0\n.\n\n\nEach element of the answer is the root node of one possible tree. You may return the final list of trees in \nany order\n.\n\n\nA \nfull binary tree\n is a binary tree where each node has exactly \n0\n or \n2\n children.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 7\n\nOutput:\n [[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n [[0,0,0]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 20",
        "temas": [
            "Dynamic Programming",
            "Tree",
            "Recursion",
            "Memoization",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 893,
        "slug": "groups-of-special-equivalent-strings",
        "url": "https://leetcode.com/problems/groups-of-special-equivalent-strings/",
        "titulo": "Groups of Special-Equivalent Strings",
        "enunciado": "You are given an array of strings of the same length \nwords\n.\n\n\nIn one \nmove\n, you can swap any two even indexed characters or any two odd indexed characters of a string \nwords[i]\n.\n\n\nTwo strings \nwords[i]\n and \nwords[j]\n are \nspecial-equivalent\n if after any number of moves, \nwords[i] == words[j]\n.\n\n\n\n\nFor example, \nwords[i] = \"zzxy\"\n and \nwords[j] = \"xyzz\"\n are \nspecial-equivalent\n because we may make the moves \n\"zzxy\" -> \"xzzy\" -> \"xyzz\"\n.\n\n\n\n\nA \ngroup of special-equivalent strings\n from \nwords\n is a non-empty subset of words such that:\n\n\n\n\nEvery pair of strings in the group are special equivalent, and\n\n\nThe group is the largest size possible (i.e., there is not a string \nwords[i]\n not in the group such that \nwords[i]\n is special-equivalent to every string in the group).\n\n\n\n\nReturn \nthe number of \ngroups of special-equivalent strings\n from \nwords\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"abcd\",\"cdab\",\"cbad\",\"xyzz\",\"zzxy\",\"zzyx\"]\n\nOutput:\n 3\n\nExplanation:\n \nOne group is [\"abcd\", \"cdab\", \"cbad\"], since they are all pairwise special equivalent, and none of the other strings is all pairwise special equivalent to these.\nThe other two groups are [\"xyzz\", \"zzxy\"] and [\"zzyx\"].\nNote that in particular, \"zzxy\" is not special equivalent to \"zzyx\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"abc\",\"acb\",\"bac\",\"bca\",\"cab\",\"cba\"]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 1000\n\n\n1 <= words[i].length <= 20\n\n\nwords[i]\n consist of lowercase English letters.\n\n\nAll the strings are of the same length.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 890,
        "slug": "find-and-replace-pattern",
        "url": "https://leetcode.com/problems/find-and-replace-pattern/",
        "titulo": "Find and Replace Pattern",
        "enunciado": "Given a list of strings \nwords\n and a string \npattern\n, return \na list of\n \nwords[i]\n \nthat match\n \npattern\n. You may return the answer in \nany order\n.\n\n\nA word matches the pattern if there exists a permutation of letters \np\n so that after replacing every letter \nx\n in the pattern with \np(x)\n, we get the desired word.\n\n\nRecall that a permutation of letters is a bijection from letters to letters: every letter maps to another letter, and no two letters map to the same letter.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"abc\",\"deq\",\"mee\",\"aqq\",\"dkd\",\"ccc\"], pattern = \"abb\"\n\nOutput:\n [\"mee\",\"aqq\"]\n\nExplanation:\n \"mee\" matches the pattern because there is a permutation {a -> m, b -> e, ...}. \n\"ccc\" does not match the pattern because {a -> c, b -> c, ...} is not a permutation, since a and b map to the same letter.\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"a\",\"b\",\"c\"], pattern = \"a\"\n\nOutput:\n [\"a\",\"b\",\"c\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= pattern.length <= 20\n\n\n1 <= words.length <= 50\n\n\nwords[i].length == pattern.length\n\n\npattern\n and \nwords[i]\n are lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 889,
        "slug": "construct-binary-tree-from-preorder-and-postorder-traversal",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal/",
        "titulo": "Construct Binary Tree from Preorder and Postorder Traversal",
        "enunciado": "Given two integer arrays, \npreorder\n and \npostorder\n where \npreorder\n is the preorder traversal of a binary tree of \ndistinct\n values and \npostorder\n is the postorder traversal of the same tree, reconstruct and return \nthe binary tree\n.\n\n\nIf there exist multiple answers, you can \nreturn any\n of them.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n preorder = [1,2,4,5,3,6,7], postorder = [4,5,2,6,7,3,1]\n\nOutput:\n [1,2,3,4,5,6,7]\n\n\n\nExample 2:\n\n\n\n\nInput:\n preorder = [1], postorder = [1]\n\nOutput:\n [1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= preorder.length <= 30\n\n\n1 <= preorder[i] <= preorder.length\n\n\nAll the values of \npreorder\n are \nunique\n.\n\n\npostorder.length == preorder.length\n\n\n1 <= postorder[i] <= postorder.length\n\n\nAll the values of \npostorder\n are \nunique\n.\n\n\nIt is guaranteed that \npreorder\n and \npostorder\n are the preorder traversal and postorder traversal of the same binary tree.",
        "temas": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 886,
        "slug": "possible-bipartition",
        "url": "https://leetcode.com/problems/possible-bipartition/",
        "titulo": "Possible Bipartition",
        "enunciado": "We want to split a group of \nn\n people (labeled from \n1\n to \nn\n) into two groups of \nany size\n. Each person may dislike some other people, and they should not go into the same group.\n\n\nGiven the integer \nn\n and the array \ndislikes\n where \ndislikes[i] = [a\ni\n, b\ni\n]\n indicates that the person labeled \na\ni\n does not like the person labeled \nb\ni\n, return \ntrue\n \nif it is possible to split everyone into two groups in this way\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 4, dislikes = [[1,2],[1,3],[2,4]]\n\nOutput:\n true\n\nExplanation:\n The first group has [1,4], and the second group has [2,3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, dislikes = [[1,2],[1,3],[2,3]]\n\nOutput:\n false\n\nExplanation:\n We need at least 3 groups to divide them. We cannot put them in two groups.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2000\n\n\n0 <= dislikes.length <= 10\n4\n\n\ndislikes[i].length == 2\n\n\n1 <= a\ni\n < b\ni\n <= n\n\n\nAll the pairs of \ndislikes\n are \nunique\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": false
    },
    {
        "id": 885,
        "slug": "spiral-matrix-iii",
        "url": "https://leetcode.com/problems/spiral-matrix-iii/",
        "titulo": "Spiral Matrix III",
        "enunciado": "You start at the cell \n(rStart, cStart)\n of an \nrows x cols\n grid facing east. The northwest corner is at the first row and column in the grid, and the southeast corner is at the last row and column.\n\n\nYou will walk in a clockwise spiral shape to visit every position in this grid. Whenever you move outside the grid's boundary, we continue our walk outside the grid (but may return to the grid boundary later.). Eventually, we reach all \nrows * cols\n spaces of the grid.\n\n\nReturn \nan array of coordinates representing the positions of the grid in the order you visited them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n rows = 1, cols = 4, rStart = 0, cStart = 0\n\nOutput:\n [[0,0],[0,1],[0,2],[0,3]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n rows = 5, cols = 6, rStart = 1, cStart = 4\n\nOutput:\n [[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rows, cols <= 100\n\n\n0 <= rStart < rows\n\n\n0 <= cStart < cols",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 881,
        "slug": "boats-to-save-people",
        "url": "https://leetcode.com/problems/boats-to-save-people/",
        "titulo": "Boats to Save People",
        "enunciado": "You are given an array \npeople\n where \npeople[i]\n is the weight of the \ni\nth\n person, and an \ninfinite number of boats\n where each boat can carry a maximum weight of \nlimit\n. Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most \nlimit\n.\n\n\nReturn \nthe minimum number of boats to carry every given person\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n people = [1,2], limit = 3\n\nOutput:\n 1\n\nExplanation:\n 1 boat (1, 2)\n\n\n\nExample 2:\n\n\n\n\nInput:\n people = [3,2,2,1], limit = 3\n\nOutput:\n 3\n\nExplanation:\n 3 boats (1, 2), (2) and (3)\n\n\n\nExample 3:\n\n\n\n\nInput:\n people = [3,5,3,4], limit = 5\n\nOutput:\n 4\n\nExplanation:\n 4 boats (3), (3), (4), (5)\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= people.length <= 5 * 10\n4\n\n\n1 <= people[i] <= limit <= 3 * 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 880,
        "slug": "decoded-string-at-index",
        "url": "https://leetcode.com/problems/decoded-string-at-index/",
        "titulo": "Decoded String at Index",
        "enunciado": "You are given an encoded string \ns\n. To decode the string to a tape, the encoded string is read one character at a time and the following steps are taken:\n\n\n\n\nIf the character read is a letter, that letter is written onto the tape.\n\n\nIf the character read is a digit \nd\n, the entire current tape is repeatedly written \nd - 1\n more times in total.\n\n\n\n\nGiven an integer \nk\n, return \nthe \nk\nth\n letter (\n1-indexed)\n in the decoded string\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"leet2code3\", k = 10\n\nOutput:\n \"o\"\n\nExplanation:\n The decoded string is \"leetleetcodeleetleetcodeleetleetcode\".\nThe 10\nth\n letter in the string is \"o\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"ha22\", k = 5\n\nOutput:\n \"h\"\n\nExplanation:\n The decoded string is \"hahahaha\".\nThe 5\nth\n letter is \"h\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"a2345678999999999999999\", k = 1\n\nOutput:\n \"a\"\n\nExplanation:\n The decoded string is \"a\" repeated 8301530446056247680 times.\nThe 1\nst\n letter is \"a\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= s.length <= 100\n\n\ns\n consists of lowercase English letters and digits \n2\n through \n9\n.\n\n\ns\n starts with a letter.\n\n\n1 <= k <= 10\n9\n\n\nIt is guaranteed that \nk\n is less than or equal to the length of the decoded string.\n\n\nThe decoded string is guaranteed to have less than \n2\n63\n letters.",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 478,
        "slug": "generate-random-point-in-a-circle",
        "url": "https://leetcode.com/problems/generate-random-point-in-a-circle/",
        "titulo": "Generate Random Point in a Circle",
        "enunciado": "Given the radius and the position of the center of a circle, implement the function \nrandPoint\n which generates a uniform random point inside the circle.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution(double radius, double x_center, double y_center)\n initializes the object with the radius of the circle \nradius\n and the position of the center \n(x_center, y_center)\n.\n\n\nrandPoint()\n returns a random point inside the circle. A point on the circumference of the circle is considered to be in the circle. The answer is returned as an array \n[x, y]\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Solution\", \"randPoint\", \"randPoint\", \"randPoint\"]\n[[1.0, 0.0, 0.0], [], [], []]\n\nOutput\n\n[null, [-0.02493, -0.38077], [0.82314, 0.38945], [0.36572, 0.17248]]\n\n\nExplanation\n\nSolution solution = new Solution(1.0, 0.0, 0.0);\nsolution.randPoint(); // return [-0.02493, -0.38077]\nsolution.randPoint(); // return [0.82314, 0.38945]\nsolution.randPoint(); // return [0.36572, 0.17248]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 < radius <= 10\n8\n\n\n-10\n7\n <= x_center, y_center <= 10\n7\n\n\nAt most \n3 * 10\n4\n calls will be made to \nrandPoint\n.",
        "temas": [
            "Math",
            "Geometry",
            "Rejection Sampling",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 497,
        "slug": "random-point-in-non-overlapping-rectangles",
        "url": "https://leetcode.com/problems/random-point-in-non-overlapping-rectangles/",
        "titulo": "Random Point in Non-overlapping Rectangles",
        "enunciado": "You are given an array of non-overlapping axis-aligned rectangles \nrects\n where \nrects[i] = [a\ni\n, b\ni\n, x\ni\n, y\ni\n]\n indicates that \n(a\ni\n, b\ni\n)\n is the bottom-left corner point of the \ni\nth\n rectangle and \n(x\ni\n, y\ni\n)\n is the top-right corner point of the \ni\nth\n rectangle. Design an algorithm to pick a random integer point inside the space covered by one of the given rectangles. A point on the perimeter of a rectangle is included in the space covered by the rectangle.\n\n\nAny integer point inside the space covered by one of the given rectangles should be equally likely to be returned.\n\n\nNote\n that an integer point is a point that has integer coordinates.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution(int[][] rects)\n Initializes the object with the given rectangles \nrects\n.\n\n\nint[] pick()\n Returns a random integer point \n[u, v]\n inside the space covered by one of the given rectangles.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"Solution\", \"pick\", \"pick\", \"pick\", \"pick\", \"pick\"]\n[[[[-2, -2, 1, 1], [2, 2, 4, 6]]], [], [], [], [], []]\n\nOutput\n\n[null, [1, -2], [1, -1], [-1, -2], [-2, -2], [0, 0]]\n\n\nExplanation\n\nSolution solution = new Solution([[-2, -2, 1, 1], [2, 2, 4, 6]]);\nsolution.pick(); // return [1, -2]\nsolution.pick(); // return [1, -1]\nsolution.pick(); // return [-1, -2]\nsolution.pick(); // return [-2, -2]\nsolution.pick(); // return [0, 0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= rects.length <= 100\n\n\nrects[i].length == 4\n\n\n-10\n9\n <= a\ni\n < x\ni\n <= 10\n9\n\n\n-10\n9\n <= b\ni\n < y\ni\n <= 10\n9\n\n\nx\ni\n - a\ni\n <= 2000\n\n\ny\ni\n - b\ni\n <= 2000\n\n\nAll the rectangles do not overlap.\n\n\nAt most \n10\n4\n calls will be made to \npick\n.",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Reservoir Sampling",
            "Prefix Sum",
            "Ordered Set",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 519,
        "slug": "random-flip-matrix",
        "url": "https://leetcode.com/problems/random-flip-matrix/",
        "titulo": "Random Flip Matrix",
        "enunciado": "There is an \nm x n\n binary grid \nmatrix\n with all the values set \n0\n initially. Design an algorithm to randomly pick an index \n(i, j)\n where \nmatrix[i][j] == 0\n and flips it to \n1\n. All the indices \n(i, j)\n where \nmatrix[i][j] == 0\n should be equally likely to be returned.\n\n\nOptimize your algorithm to minimize the number of calls made to the \nbuilt-in\n random function of your language and optimize the time and space complexity.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution(int m, int n)\n Initializes the object with the size of the binary matrix \nm\n and \nn\n.\n\n\nint[] flip()\n Returns a random index \n[i, j]\n of the matrix where \nmatrix[i][j] == 0\n and flips it to \n1\n.\n\n\nvoid reset()\n Resets all the values of the matrix to be \n0\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Solution\", \"flip\", \"flip\", \"flip\", \"reset\", \"flip\"]\n[[3, 1], [], [], [], [], []]\n\nOutput\n\n[null, [1, 0], [2, 0], [0, 0], null, [2, 0]]\n\n\nExplanation\n\nSolution solution = new Solution(3, 1);\nsolution.flip();  // return [1, 0], [0,0], [1,0], and [2,0] should be equally likely to be returned.\nsolution.flip();  // return [2, 0], Since [1,0] was returned, [2,0] and [0,0]\nsolution.flip();  // return [0, 0], Based on the previously returned indices, only [0,0] can be returned.\nsolution.reset(); // All the values are reset to 0 and can be returned.\nsolution.flip();  // return [2, 0], [0,0], [1,0], and [2,0] should be equally likely to be returned.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 10\n4\n\n\nThere will be at least one free cell for each call to \nflip\n.\n\n\nAt most \n1000\n calls will be made to \nflip\n and \nreset\n.",
        "temas": [
            "Hash Table",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 528,
        "slug": "random-pick-with-weight",
        "url": "https://leetcode.com/problems/random-pick-with-weight/",
        "titulo": "Random Pick with Weight",
        "enunciado": "You are given a \n0-indexed\n array of positive integers \nw\n where \nw[i]\n describes the \nweight\n of the \ni\nth\n index.\n\n\nYou need to implement the function \npickIndex()\n, which \nrandomly\n picks an index in the range \n[0, w.length - 1]\n (\ninclusive\n) and returns it. The \nprobability\n of picking an index \ni\n is \nw[i] / sum(w)\n.\n\n\n\n\nFor example, if \nw = [1, 3]\n, the probability of picking index \n0\n is \n1 / (1 + 3) = 0.25\n (i.e., \n25%\n), and the probability of picking index \n1\n is \n3 / (1 + 3) = 0.75\n (i.e., \n75%\n).\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Solution\",\"pickIndex\"]\n[[[1]],[]]\n\nOutput\n\n[null,0]\n\n\nExplanation\n\nSolution solution = new Solution([1]);\nsolution.pickIndex(); // return 0. The only option is to return 0 since there is only one element in w.\n\n\n\nExample 2:\n\n\n\n\nInput\n\n[\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\n[[[1,3]],[],[],[],[],[]]\n\nOutput\n\n[null,1,1,1,1,0]\n\n\nExplanation\n\nSolution solution = new Solution([1, 3]);\nsolution.pickIndex(); // return 1. It is returning the second element (index = 1) that has a probability of 3/4.\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 1\nsolution.pickIndex(); // return 0. It is returning the first element (index = 0) that has a probability of 1/4.\n\nSince this is a randomization problem, multiple answers are allowed.\nAll of the following outputs can be considered correct:\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\nand so on.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= w.length <= 10\n4\n\n\n1 <= w[i] <= 10\n5\n\n\npickIndex\n will be called at most \n10\n4\n times.",
        "temas": [
            "Array",
            "Math",
            "Binary Search",
            "Prefix Sum",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 877,
        "slug": "stone-game",
        "url": "https://leetcode.com/problems/stone-game/",
        "titulo": "Stone Game",
        "enunciado": "Alice and Bob play a game with piles of stones. There are an \neven\n number of piles arranged in a row, and each pile has a \npositive\n integer number of stones \npiles[i]\n.\n\n\nThe objective of the game is to end with the most stones. The \ntotal\n number of stones across all the piles is \nodd\n, so there are no ties.\n\n\nAlice and Bob take turns, with \nAlice starting first\n. Each turn, a player takes the entire pile of stones either from the \nbeginning\n or from the \nend\n of the row. This continues until there are no more piles left, at which point the person with the \nmost stones wins\n.\n\n\nAssuming Alice and Bob play optimally, return \ntrue\n if Alice wins the game, or \nfalse\n if Bob wins\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n piles = [5,3,4,5]\n\nOutput:\n true\n\nExplanation:\n \nAlice starts first, and can only take the first 5 or the last 5.\nSay she takes the first 5, so that the row becomes [3, 4, 5].\nIf Bob takes 3, then the board is [4, 5], and Alice takes 5 to win with 10 points.\nIf Bob takes the last 5, then the board is [3, 4], and Alice takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alice, so we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n piles = [3,7,2,3]\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= piles.length <= 500\n\n\npiles.length\n is \neven\n.\n\n\n1 <= piles[i] <= 500\n\n\nsum(piles[i])\n is \nodd\n.",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 875,
        "slug": "koko-eating-bananas",
        "url": "https://leetcode.com/problems/koko-eating-bananas/",
        "titulo": "Koko Eating Bananas",
        "enunciado": "Koko loves to eat bananas. There are \nn\n piles of bananas, the \ni\nth\n pile has \npiles[i]\n bananas. The guards have gone and will come back in \nh\n hours.\n\n\nKoko can decide her bananas-per-hour eating speed of \nk\n. Each hour, she chooses some pile of bananas and eats \nk\n bananas from that pile. If the pile has less than \nk\n bananas, she eats all of them instead and will not eat any more bananas during this hour.\n\n\nKoko likes to eat slowly but still wants to finish eating all the bananas before the guards return.\n\n\nReturn \nthe minimum integer\n \nk\n \nsuch that she can eat all the bananas within\n \nh\n \nhours\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n piles = [3,6,7,11], h = 8\n\nOutput:\n 4\n\n\n\nExample 2:\n\n\n\n\nInput:\n piles = [30,11,23,4,20], h = 5\n\nOutput:\n 30\n\n\n\nExample 3:\n\n\n\n\nInput:\n piles = [30,11,23,4,20], h = 6\n\nOutput:\n 23\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= piles.length <= 10\n4\n\n\npiles.length <= h <= 10\n9\n\n\n1 <= piles[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 874,
        "slug": "walking-robot-simulation",
        "url": "https://leetcode.com/problems/walking-robot-simulation/",
        "titulo": "Walking Robot Simulation",
        "enunciado": "A robot on an infinite XY-plane starts at point \n(0, 0)\n facing north. The robot receives an array of integers \ncommands\n, which represents a sequence of moves that it needs to execute. There are only three possible types of instructions the robot can receive:\n\n\n\n\n-2\n: Turn left \n90\n degrees.\n\n\n-1\n: Turn right \n90\n degrees.\n\n\n1 <= k <= 9\n: Move forward \nk\n units, one unit at a time.\n\n\n\n\nSome of the grid squares are \nobstacles\n. The \ni\nth\n obstacle is at grid point \nobstacles[i] = (x\ni\n, y\ni\n)\n. If the robot runs into an obstacle, it will stay in its current location (on the block adjacent to the obstacle) and move onto the next command.\n\n\nReturn the \nmaximum squared Euclidean distance\n that the robot reaches at any point in its path (i.e. if the distance is \n5\n, return \n25\n).\n\n\nNote:\n\n\n\n\nThere can be an obstacle at \n(0, 0)\n. If this happens, the robot will ignore the obstacle until it has moved off the origin. However, it will be unable to return to \n(0, 0)\n due to the obstacle.\n\n\nNorth means +Y direction.\n\n\nEast means +X direction.\n\n\nSouth means -Y direction.\n\n\nWest means -X direction.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ncommands = [4,-1,3], obstacles = []\n\n\nOutput:\n \n25\n\n\nExplanation: \n\n\nThe robot starts at \n(0, 0)\n:\n\n\n\n\nMove north 4 units to \n(0, 4)\n.\n\n\nTurn right.\n\n\nMove east 3 units to \n(3, 4)\n.\n\n\n\n\nThe furthest point the robot ever gets from the origin is \n(3, 4)\n, which squared is \n3\n2\n + 4\n2 \n= 25\n units away.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ncommands = [4,-1,4,-2,4], obstacles = [[2,4]]\n\n\nOutput:\n \n65\n\n\nExplanation:\n\n\nThe robot starts at \n(0, 0)\n:\n\n\n\n\nMove north 4 units to \n(0, 4)\n.\n\n\nTurn right.\n\n\nMove east 1 unit and get blocked by the obstacle at \n(2, 4)\n, robot is at \n(1, 4)\n.\n\n\nTurn left.\n\n\nMove north 4 units to \n(1, 8)\n.\n\n\n\n\nThe furthest point the robot ever gets from the origin is \n(1, 8)\n, which squared is \n1\n2\n + 8\n2\n = 65\n units away.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ncommands = [6,-1,-1,6], obstacles = [[0,0]]\n\n\nOutput:\n \n36\n\n\nExplanation:\n\n\nThe robot starts at \n(0, 0)\n:\n\n\n\n\nMove north 6 units to \n(0, 6)\n.\n\n\nTurn right.\n\n\nTurn right.\n\n\nMove south 5 units and get blocked by the obstacle at \n(0,0)\n, robot is at \n(0, 1)\n.\n\n\n\n\nThe furthest point the robot ever gets from the origin is \n(0, 6)\n, which squared is \n6\n2\n = 36\n units away.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= commands.length <= 10\n4\n\n\ncommands[i]\n is either \n-2\n, \n-1\n, or an integer in the range \n[1, 9]\n.\n\n\n0 <= obstacles.length <= 10\n4\n\n\n-3 * 10\n4\n <= x\ni\n, y\ni\n <= 3 * 10\n4\n\n\nThe answer is guaranteed to be less than \n2\n31\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 873,
        "slug": "length-of-longest-fibonacci-subsequence",
        "url": "https://leetcode.com/problems/length-of-longest-fibonacci-subsequence/",
        "titulo": "Length of Longest Fibonacci Subsequence",
        "enunciado": "A sequence \nx\n1\n, x\n2\n, ..., x\nn\n is \nFibonacci-like\n if:\n\n\n\n\nn >= 3\n\n\nx\ni\n + x\ni+1\n == x\ni+2\n for all \ni + 2 <= n\n\n\n\n\nGiven a \nstrictly increasing\n array \narr\n of positive integers forming a sequence, return \nthe \nlength\n of the longest Fibonacci-like subsequence of\n \narr\n. If one does not exist, return \n0\n.\n\n\nA \nsubsequence\n is derived from another sequence \narr\n by deleting any number of elements (including none) from \narr\n, without changing the order of the remaining elements. For example, \n[3, 5, 8]\n is a subsequence of \n[3, 4, 5, 6, 7, 8]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,4,5,6,7,8]\n\nOutput:\n 5\n\nExplanation:\n The longest subsequence that is fibonacci-like: [1,2,3,5,8].\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,3,7,11,12,14,18]\n\nOutput:\n 3\n\nExplanation\n:\n \nThe longest subsequence that is fibonacci-like: [1,11,12], [3,11,14] or [7,11,18].\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= arr.length <= 1000\n\n\n1 <= arr[i] < arr[i + 1] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 470,
        "slug": "implement-rand10-using-rand7",
        "url": "https://leetcode.com/problems/implement-rand10-using-rand7/",
        "titulo": "Implement Rand10() Using Rand7()",
        "enunciado": "Given the \nAPI\n \nrand7()\n that generates a uniform random integer in the range \n[1, 7]\n, write a function \nrand10()\n that generates a uniform random integer in the range \n[1, 10]\n. You can only call the API \nrand7()\n, and you shouldn't call any other API. Please \ndo not\n use a language's built-in random API.\n\n\nEach test case will have one \ninternal\n argument \nn\n, the number of times that your implemented function \nrand10()\n will be called while testing. Note that this is \nnot an argument\n passed to \nrand10()\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n n = 1\n\nOutput:\n [2]\n\nExample 2:\n\n\nInput:\n n = 2\n\nOutput:\n [2,8]\n\nExample 3:\n\n\nInput:\n n = 3\n\nOutput:\n [3,8,10]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nWhat is the \nexpected value\n for the number of calls to \nrand7()\n function?\n\n\nCould you minimize the number of calls to \nrand7()\n?",
        "temas": [
            "Math",
            "Rejection Sampling",
            "Randomized",
            "Probability and Statistics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 870,
        "slug": "advantage-shuffle",
        "url": "https://leetcode.com/problems/advantage-shuffle/",
        "titulo": "Advantage Shuffle",
        "enunciado": "You are given two integer arrays \nnums1\n and \nnums2\n both of the same length. The \nadvantage\n of \nnums1\n with respect to \nnums2\n is the number of indices \ni\n for which \nnums1[i] > nums2[i]\n.\n\n\nReturn \nany permutation of \nnums1\n that maximizes its \nadvantage\n with respect to \nnums2\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums1 = [2,7,11,15], nums2 = [1,10,4,11]\n\nOutput:\n [2,11,7,15]\n\nExample 2:\n\n\nInput:\n nums1 = [12,24,8,32], nums2 = [13,25,32,11]\n\nOutput:\n [24,32,8,12]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length <= 10\n5\n\n\nnums2.length == nums1.length\n\n\n0 <= nums1[i], nums2[i] <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 869,
        "slug": "reordered-power-of-2",
        "url": "https://leetcode.com/problems/reordered-power-of-2/",
        "titulo": "Reordered Power of 2",
        "enunciado": "You are given an integer \nn\n. We reorder the digits in any order (including the original order) such that the leading digit is not zero.\n\n\nReturn \ntrue\n \nif and only if we can do this so that the resulting number is a power of two\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n9",
        "temas": [
            "Hash Table",
            "Math",
            "Sorting",
            "Counting",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 866,
        "slug": "prime-palindrome",
        "url": "https://leetcode.com/problems/prime-palindrome/",
        "titulo": "Prime Palindrome",
        "enunciado": "Given an integer n, return \nthe smallest \nprime palindrome\n greater than or equal to \nn\n.\n\n\nAn integer is \nprime\n if it has exactly two divisors: \n1\n and itself. Note that \n1\n is not a prime number.\n\n\n\n\nFor example, \n2\n, \n3\n, \n5\n, \n7\n, \n11\n, and \n13\n are all primes.\n\n\n\n\nAn integer is a \npalindrome\n if it reads the same from left to right as it does from right to left.\n\n\n\n\nFor example, \n101\n and \n12321\n are palindromes.\n\n\n\n\nThe test cases are generated so that the answer always exists and is in the range \n[2, 2 * 10\n8\n]\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n n = 6\n\nOutput:\n 7\n\nExample 2:\n\n\nInput:\n n = 8\n\nOutput:\n 11\n\nExample 3:\n\n\nInput:\n n = 13\n\nOutput:\n 101\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n8",
        "temas": [
            "Math",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 865,
        "slug": "smallest-subtree-with-all-the-deepest-nodes",
        "url": "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes/",
        "titulo": "Smallest Subtree with all the Deepest Nodes",
        "enunciado": "Given the \nroot\n of a binary tree, the depth of each node is \nthe shortest distance to the root\n.\n\n\nReturn \nthe smallest subtree\n such that it contains \nall the deepest nodes\n in the original tree.\n\n\nA node is called \nthe deepest\n if it has the largest depth possible among any node in the entire tree.\n\n\nThe \nsubtree\n of a node is a tree consisting of that node, plus the set of all descendants of that node.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,5,1,6,2,0,8,null,null,7,4]\n\nOutput:\n [2,7,4]\n\nExplanation:\n We return the node with value 2, colored in yellow in the diagram.\nThe nodes coloured in blue are the deepest nodes of the tree.\nNotice that nodes 5, 3 and 2 contain the deepest nodes in the tree but node 2 is the smallest subtree among them, so we return it.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n [1]\n\nExplanation:\n The root is the deepest node in the tree.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [0,1,3,null,2]\n\nOutput:\n [2]\n\nExplanation:\n The deepest node in the tree is 2, the valid subtrees are the subtrees of nodes 2, 1 and 0 but the subtree of node 2 is the smallest.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree will be in the range \n[1, 500]\n.\n\n\n0 <= Node.val <= 500\n\n\nThe values of the nodes in the tree are \nunique\n.\n\n\n\n\n \n\n\nNote:\n This question is the same as 1123: \nhttps://leetcode.com/problems/lowest-common-ancestor-of-deepest-leaves/",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 863,
        "slug": "all-nodes-distance-k-in-binary-tree",
        "url": "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree/",
        "titulo": "All Nodes Distance K in Binary Tree",
        "enunciado": "Given the \nroot\n of a binary tree, the value of a target node \ntarget\n, and an integer \nk\n, return \nan array of the values of all nodes that have a distance \nk\n from the target node.\n\n\nYou can return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,5,1,6,2,0,8,null,null,7,4], target = 5, k = 2\n\nOutput:\n [7,4,1]\nExplanation: The nodes that are a distance 2 from the target node (with value 5) have values 7, 4, and 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1], target = 1, k = 3\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 500]\n.\n\n\n0 <= Node.val <= 500\n\n\nAll the values \nNode.val\n are \nunique\n.\n\n\ntarget\n is the value of one of the nodes in the tree.\n\n\n0 <= k <= 1000",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 861,
        "slug": "score-after-flipping-matrix",
        "url": "https://leetcode.com/problems/score-after-flipping-matrix/",
        "titulo": "Score After Flipping Matrix",
        "enunciado": "You are given an \nm x n\n binary matrix \ngrid\n.\n\n\nA \nmove\n consists of choosing any row or column and toggling each value in that row or column (i.e., changing all \n0\n's to \n1\n's, and all \n1\n's to \n0\n's).\n\n\nEvery row of the matrix is interpreted as a binary number, and the \nscore\n of the matrix is the sum of these numbers.\n\n\nReturn \nthe highest possible \nscore\n after making any number of \nmoves\n (including zero moves)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,0,1,1],[1,0,1,0],[1,1,0,0]]\n\nOutput:\n 39\n\nExplanation:\n 0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[0]]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 20\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Greedy",
            "Bit Manipulation",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 858,
        "slug": "mirror-reflection",
        "url": "https://leetcode.com/problems/mirror-reflection/",
        "titulo": "Mirror Reflection",
        "enunciado": "There is a special square room with mirrors on each of the four walls. Except for the southwest corner, there are receptors on each of the remaining corners, numbered \n0\n, \n1\n, and \n2\n.\n\n\nThe square room has walls of length \np\n and a laser ray from the southwest corner first meets the east wall at a distance \nq\n from the \n0\nth\n receptor.\n\n\nGiven the two integers \np\n and \nq\n, return \nthe number of the receptor that the ray meets first\n.\n\n\nThe test cases are guaranteed so that the ray will meet a receptor eventually.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n p = 2, q = 1\n\nOutput:\n 2\n\nExplanation:\n The ray meets receptor 2 the first time it gets reflected back to the left wall.\n\n\n\nExample 2:\n\n\n\n\nInput:\n p = 3, q = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= q <= p <= 1000",
        "temas": [
            "Math",
            "Geometry",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 856,
        "slug": "score-of-parentheses",
        "url": "https://leetcode.com/problems/score-of-parentheses/",
        "titulo": "Score of Parentheses",
        "enunciado": "Given a balanced parentheses string \ns\n, return \nthe \nscore\n of the string\n.\n\n\nThe \nscore\n of a balanced parentheses string is based on the following rule:\n\n\n\n\n\"()\"\n has score \n1\n.\n\n\nAB\n has score \nA + B\n, where \nA\n and \nB\n are balanced parentheses strings.\n\n\n(A)\n has score \n2 * A\n, where \nA\n is a balanced parentheses string.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"()\"\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"(())\"\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"()()\"\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= s.length <= 50\n\n\ns\n consists of only \n'('\n and \n')'\n.\n\n\ns\n is a balanced parentheses string.",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 855,
        "slug": "exam-room",
        "url": "https://leetcode.com/problems/exam-room/",
        "titulo": "Exam Room",
        "enunciado": "There is an exam room with \nn\n seats in a single row labeled from \n0\n to \nn - 1\n.\n\n\nWhen a student enters the room, they must sit in the seat that maximizes the distance to the closest person. If there are multiple such seats, they sit in the seat with the lowest number. If no one is in the room, then the student sits at seat number \n0\n.\n\n\nDesign a class that simulates the mentioned exam room.\n\n\nImplement the \nExamRoom\n class:\n\n\n\n\nExamRoom(int n)\n Initializes the object of the exam room with the number of the seats \nn\n.\n\n\nint seat()\n Returns the label of the seat at which the next student will set.\n\n\nvoid leave(int p)\n Indicates that the student sitting at seat \np\n will leave the room. It is guaranteed that there will be a student sitting at seat \np\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"ExamRoom\", \"seat\", \"seat\", \"seat\", \"seat\", \"leave\", \"seat\"]\n[[10], [], [], [], [], [4], []]\n\nOutput\n\n[null, 0, 9, 4, 2, null, 5]\n\n\nExplanation\n\nExamRoom examRoom = new ExamRoom(10);\nexamRoom.seat(); // return 0, no one is in the room, then the student sits at seat number 0.\nexamRoom.seat(); // return 9, the student sits at the last seat number 9.\nexamRoom.seat(); // return 4, the student sits at the last seat number 4.\nexamRoom.seat(); // return 2, the student sits at the last seat number 2.\nexamRoom.leave(4);\nexamRoom.seat(); // return 5, the student sits at the last seat number 5.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n9\n\n\nIt is guaranteed that there is a student sitting at seat \np\n.\n\n\nAt most \n10\n4\n calls will be made to \nseat\n and \nleave\n.",
        "temas": [
            "Design",
            "Heap (Priority Queue)",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Design",
        "has_image": false
    },
    {
        "id": 853,
        "slug": "car-fleet",
        "url": "https://leetcode.com/problems/car-fleet/",
        "titulo": "Car Fleet",
        "enunciado": "There are \nn\n cars at given miles away from the starting mile 0, traveling to reach the mile \ntarget\n.\n\n\nYou are given two integer array \nposition\n and \nspeed\n, both of length \nn\n, where \nposition[i]\n is the starting mile of the \ni\nth\n car and \nspeed[i]\n is the speed of the \ni\nth\n car in miles per hour.\n\n\nA car cannot pass another car, but it can catch up and then travel next to it at the speed of the slower car.\n\n\nA \ncar fleet\n is a car or cars driving next to each other. The speed of the car fleet is the \nminimum\n speed of any car in the fleet.\n\n\nIf a car catches up to a car fleet at the mile \ntarget\n, it will still be considered as part of the car fleet.\n\n\nReturn the number of car fleets that will arrive at the destination.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ntarget = 12, position = [10,8,0,5,3], speed = [2,4,1,1,3]\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\n\nThe cars starting at 10 (speed 2) and 8 (speed 4) become a fleet, meeting each other at 12. The fleet forms at \ntarget\n.\n\n\nThe car starting at 0 (speed 1) does not catch up to any other car, so it is a fleet by itself.\n\n\nThe cars starting at 5 (speed 1) and 3 (speed 3) become a fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches \ntarget\n.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ntarget = 10, position = [3], speed = [3]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\nThere is only one car, hence there is only one fleet.\n\n\nExample 3:\n\n\n\n\nInput:\n \ntarget = 100, position = [0,2,4], speed = [4,2,1]\n\n\nOutput:\n \n1\n\n\nExplanation:\n\n\n\n\nThe cars starting at 0 (speed 4) and 2 (speed 2) become a fleet, meeting each other at 4. The car starting at 4 (speed 1) travels to 5.\n\n\nThen, the fleet at 4 (speed 2) and the car at position 5 (speed 1) become one fleet, meeting each other at 6. The fleet moves at speed 1 until it reaches \ntarget\n.\n\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == position.length == speed.length\n\n\n1 <= n <= 10\n5\n\n\n0 < target <= 10\n6\n\n\n0 <= position[i] < target\n\n\nAll the values of \nposition\n are \nunique\n.\n\n\n0 < speed[i] <= 10\n6",
        "temas": [
            "Array",
            "Stack",
            "Sorting",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 852,
        "slug": "peak-index-in-a-mountain-array",
        "url": "https://leetcode.com/problems/peak-index-in-a-mountain-array/",
        "titulo": "Peak Index in a Mountain Array",
        "enunciado": "You are given an integer \nmountain\n array \narr\n of length \nn\n where the values increase to a \npeak element\n and then decrease.\n\n\nReturn the index of the peak element.\n\n\nYour task is to solve it in \nO(log(n))\n time complexity.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \narr = [0,1,0]\n\n\nOutput:\n \n1\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \narr = [0,2,1,0]\n\n\nOutput:\n \n1\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \narr = [0,10,5,2]\n\n\nOutput:\n \n1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= arr.length <= 10\n5\n\n\n0 <= arr[i] <= 10\n6\n\n\narr\n is \nguaranteed\n to be a mountain array.",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 851,
        "slug": "loud-and-rich",
        "url": "https://leetcode.com/problems/loud-and-rich/",
        "titulo": "Loud and Rich",
        "enunciado": "There is a group of \nn\n people labeled from \n0\n to \nn - 1\n where each person has a different amount of money and a different level of quietness.\n\n\nYou are given an array \nricher\n where \nricher[i] = [a\ni\n, b\ni\n]\n indicates that \na\ni\n has more money than \nb\ni\n and an integer array \nquiet\n where \nquiet[i]\n is the quietness of the \ni\nth\n person. All the given data in richer are \nlogically correct\n (i.e., the data will not lead you to a situation where \nx\n is richer than \ny\n and \ny\n is richer than \nx\n at the same time).\n\n\nReturn \nan integer array \nanswer\n where \nanswer[x] = y\n if \ny\n is the least quiet person (that is, the person \ny\n with the smallest value of \nquiet[y]\n) among all people who definitely have equal to or more money than the person \nx\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n richer = [[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]], quiet = [3,2,5,4,6,1,7,0]\n\nOutput:\n [5,5,2,5,4,5,6,7]\n\nExplanation:\n \nanswer[0] = 5.\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\nThe only person who is quieter (has lower quiet[x]) is person 7, but it is not clear if they have more money than person 0.\nanswer[7] = 7.\nAmong all people that definitely have equal to or more money than person 7 (which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x]) is person 7.\nThe other answers can be filled out with similar reasoning.\n\n\n\nExample 2:\n\n\n\n\nInput:\n richer = [], quiet = [0]\n\nOutput:\n [0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == quiet.length\n\n\n1 <= n <= 500\n\n\n0 <= quiet[i] < n\n\n\nAll the values of \nquiet\n are \nunique\n.\n\n\n0 <= richer.length <= n * (n - 1) / 2\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni \n!= b\ni\n\n\nAll the pairs of \nricher\n are \nunique\n.\n\n\nThe observations in \nricher\n are all logically consistent.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 849,
        "slug": "maximize-distance-to-closest-person",
        "url": "https://leetcode.com/problems/maximize-distance-to-closest-person/",
        "titulo": "Maximize Distance to Closest Person",
        "enunciado": "You are given an array representing a row of \nseats\n where \nseats[i] = 1\n represents a person sitting in the \ni\nth\n seat, and \nseats[i] = 0\n represents that the \ni\nth\n seat is empty \n(0-indexed)\n.\n\n\nThere is at least one empty seat, and at least one person sitting.\n\n\nAlex wants to sit in the seat such that the distance between him and the closest person to him is maximized. \n\n\nReturn \nthat maximum distance to the closest person\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n seats = [1,0,0,0,1,0,1]\n\nOutput:\n 2\n\nExplanation: \n\nIf Alex sits in the second open seat (i.e. seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n seats = [1,0,0,0]\n\nOutput:\n 3\n\nExplanation: \n\nIf Alex sits in the last seat (i.e. seats[3]), the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n seats = [0,1]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= seats.length <= 2 * 10\n4\n\n\nseats[i]\n is \n0\n or \n1\n.\n\n\nAt least one seat is \nempty\n.\n\n\nAt least one seat is \noccupied\n.",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 848,
        "slug": "shifting-letters",
        "url": "https://leetcode.com/problems/shifting-letters/",
        "titulo": "Shifting Letters",
        "enunciado": "You are given a string \ns\n of lowercase English letters and an integer array \nshifts\n of the same length.\n\n\nCall the \nshift()\n of a letter, the next letter in the alphabet, (wrapping around so that \n'z'\n becomes \n'a'\n).\n\n\n\n\nFor example, \nshift('a') = 'b'\n, \nshift('t') = 'u'\n, and \nshift('z') = 'a'\n.\n\n\n\n\nNow for each \nshifts[i] = x\n, we want to shift the first \ni + 1\n letters of \ns\n, \nx\n times.\n\n\nReturn \nthe final string after all such shifts to s are applied\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abc\", shifts = [3,5,9]\n\nOutput:\n \"rpl\"\n\nExplanation:\n We start with \"abc\".\nAfter shifting the first 1 letters of s by 3, we have \"dbc\".\nAfter shifting the first 2 letters of s by 5, we have \"igc\".\nAfter shifting the first 3 letters of s by 9, we have \"rpl\", the answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aaa\", shifts = [1,2,3]\n\nOutput:\n \"gfd\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters.\n\n\nshifts.length == s.length\n\n\n0 <= shifts[i] <= 10\n9",
        "temas": [
            "Array",
            "String",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 846,
        "slug": "hand-of-straights",
        "url": "https://leetcode.com/problems/hand-of-straights/",
        "titulo": "Hand of Straights",
        "enunciado": "Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size \ngroupSize\n, and consists of \ngroupSize\n consecutive cards.\n\n\nGiven an integer array \nhand\n where \nhand[i]\n is the value written on the \ni\nth\n card and an integer \ngroupSize\n, return \ntrue\n if she can rearrange the cards, or \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n hand = [1,2,3,6,2,3,4,7,8], groupSize = 3\n\nOutput:\n true\n\nExplanation:\n Alice's hand can be rearranged as [1,2,3],[2,3,4],[6,7,8]\n\n\n\nExample 2:\n\n\n\n\nInput:\n hand = [1,2,3,4,5], groupSize = 4\n\nOutput:\n false\n\nExplanation:\n Alice's hand can not be rearranged into groups of 4.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= hand.length <= 10\n4\n\n\n0 <= hand[i] <= 10\n9\n\n\n1 <= groupSize <= hand.length\n\n\n\n\n \n\n\nNote:\n This question is the same as 1296: \nhttps://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 845,
        "slug": "longest-mountain-in-array",
        "url": "https://leetcode.com/problems/longest-mountain-in-array/",
        "titulo": "Longest Mountain in Array",
        "enunciado": "You may recall that an array \narr\n is a \nmountain array\n if and only if:\n\n\n\n\narr.length >= 3\n\n\nThere exists some index \ni\n (\n0-indexed\n) with \n0 < i < arr.length - 1\n such that:\n\t\n\n\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\n\n\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n\n\n\n\n\n\n\n\nGiven an integer array \narr\n, return \nthe length of the longest subarray, which is a mountain\n. Return \n0\n if there is no mountain subarray.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,1,4,7,3,2,5]\n\nOutput:\n 5\n\nExplanation:\n The largest mountain is [1,4,7,3,2] which has length 5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [2,2,2]\n\nOutput:\n 0\n\nExplanation:\n There is no mountain.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 10\n4\n\n\n0 <= arr[i] <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nCan you solve it using only one pass?\n\n\nCan you solve it in \nO(1)\n space?",
        "temas": [
            "Array",
            "Two Pointers",
            "Dynamic Programming",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 842,
        "slug": "split-array-into-fibonacci-sequence",
        "url": "https://leetcode.com/problems/split-array-into-fibonacci-sequence/",
        "titulo": "Split Array into Fibonacci Sequence",
        "enunciado": "You are given a string of digits \nnum\n, such as \n\"123456579\"\n. We can split it into a Fibonacci-like sequence \n[123, 456, 579]\n.\n\n\nFormally, a \nFibonacci-like\n sequence is a list \nf\n of non-negative integers such that:\n\n\n\n\n0 <= f[i] < 2\n31\n, (that is, each integer fits in a \n32-bit\n signed integer type),\n\n\nf.length >= 3\n, and\n\n\nf[i] + f[i + 1] == f[i + 2]\n for all \n0 <= i < f.length - 2\n.\n\n\n\n\nNote that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number \n0\n itself.\n\n\nReturn any Fibonacci-like sequence split from \nnum\n, or return \n[]\n if it cannot be done.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"1101111\"\n\nOutput:\n [11,0,11,11]\n\nExplanation:\n The output [110, 1, 111] would also be accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"112358130\"\n\nOutput:\n []\n\nExplanation:\n The task is impossible.\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = \"0123\"\n\nOutput:\n []\n\nExplanation:\n Leading zeroes are not allowed, so \"01\", \"2\", \"3\" is not valid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num.length <= 200\n\n\nnum\n contains only digits.",
        "temas": [
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 841,
        "slug": "keys-and-rooms",
        "url": "https://leetcode.com/problems/keys-and-rooms/",
        "titulo": "Keys and Rooms",
        "enunciado": "There are \nn\n rooms labeled from \n0\n to \nn - 1\n and all the rooms are locked except for room \n0\n. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.\n\n\nWhen you visit a room, you may find a set of \ndistinct keys\n in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.\n\n\nGiven an array \nrooms\n where \nrooms[i]\n is the set of keys that you can obtain if you visited room \ni\n, return \ntrue\n \nif you can visit \nall\n the rooms, or\n \nfalse\n \notherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n rooms = [[1],[2],[3],[]]\n\nOutput:\n true\n\nExplanation:\n \nWe visit room 0 and pick up key 1.\nWe then visit room 1 and pick up key 2.\nWe then visit room 2 and pick up key 3.\nWe then visit room 3.\nSince we were able to visit every room, we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n rooms = [[1,3],[3,0,1],[2],[0]]\n\nOutput:\n false\n\nExplanation:\n We can not enter room number 2 since the only key that unlocks it is in that room.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == rooms.length\n\n\n2 <= n <= 1000\n\n\n0 <= rooms[i].length <= 1000\n\n\n1 <= sum(rooms[i].length) <= 3000\n\n\n0 <= rooms[i][j] < n\n\n\nAll the values of \nrooms[i]\n are \nunique\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": false
    },
    {
        "id": 840,
        "slug": "magic-squares-in-grid",
        "url": "https://leetcode.com/problems/magic-squares-in-grid/",
        "titulo": "Magic Squares In Grid",
        "enunciado": "A \n3 x 3\n \nmagic square\n is a \n3 x 3\n grid filled with distinct numbers \nfrom \n1\n to \n9 such that each row, column, and both diagonals all have the same sum.\n\n\nGiven a \nrow x col\n \ngrid\n of integers, how many \n3 x 3\n magic square subgrids are there?\n\n\nNote: while a magic square can only contain numbers from 1 to 9, \ngrid\n may contain numbers up to 15.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]\n\nOutput:\n 1\n\nExplanation: \n\nThe following subgrid is a 3 x 3 magic square:\n\n\nwhile this one is not:\n\n\nIn total, there is only one magic square inside the given grid.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[8]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nrow == grid.length\n\n\ncol == grid[i].length\n\n\n1 <= row, col <= 10\n\n\n0 <= grid[i][j] <= 15",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 838,
        "slug": "push-dominoes",
        "url": "https://leetcode.com/problems/push-dominoes/",
        "titulo": "Push Dominoes",
        "enunciado": "There are \nn\n dominoes in a line, and we place each domino vertically upright. In the beginning, we simultaneously push some of the dominoes either to the left or to the right.\n\n\nAfter each second, each domino that is falling to the left pushes the adjacent domino on the left. Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right.\n\n\nWhen a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.\n\n\nFor the purposes of this question, we will consider that a falling domino expends no additional force to a falling or already fallen domino.\n\n\nYou are given a string \ndominoes\n representing the initial state where:\n\n\n\n\ndominoes[i] = 'L'\n, if the \ni\nth\n domino has been pushed to the left,\n\n\ndominoes[i] = 'R'\n, if the \ni\nth\n domino has been pushed to the right, and\n\n\ndominoes[i] = '.'\n, if the \ni\nth\n domino has not been pushed.\n\n\n\n\nReturn \na string representing the final state\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n dominoes = \"RR.L\"\n\nOutput:\n \"RR.L\"\n\nExplanation:\n The first domino expends no additional force on the second domino.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n dominoes = \".L.R...LR..L..\"\n\nOutput:\n \"LL.RR.LLRRLL..\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == dominoes.length\n\n\n1 <= n <= 10\n5\n\n\ndominoes[i]\n is either \n'L'\n, \n'R'\n, or \n'.'\n.",
        "temas": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": true
    },
    {
        "id": 837,
        "slug": "new-21-game",
        "url": "https://leetcode.com/problems/new-21-game/",
        "titulo": "New 21 Game",
        "enunciado": "Alice plays the following game, loosely based on the card game \n\"21\"\n.\n\n\nAlice starts with \n0\n points and draws numbers while she has less than \nk\n points. During each draw, she gains an integer number of points randomly from the range \n[1, maxPts]\n, where \nmaxPts\n is an integer. Each draw is independent and the outcomes have equal probabilities.\n\n\nAlice stops drawing numbers when she gets \nk\n \nor more points\n.\n\n\nReturn the probability that Alice has \nn\n or fewer points.\n\n\nAnswers within \n10\n-5\n of the actual answer are considered accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10, k = 1, maxPts = 10\n\nOutput:\n 1.00000\n\nExplanation:\n Alice gets a single card, then stops.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 6, k = 1, maxPts = 10\n\nOutput:\n 0.60000\n\nExplanation:\n Alice gets a single card, then stops.\nIn 6 out of 10 possibilities, she is at or below 6 points.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 21, k = 17, maxPts = 10\n\nOutput:\n 0.73278\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= k <= n <= 10\n4\n\n\n1 <= maxPts <= 10\n4",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Sliding Window",
            "Probability and Statistics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 835,
        "slug": "image-overlap",
        "url": "https://leetcode.com/problems/image-overlap/",
        "titulo": "Image Overlap",
        "enunciado": "You are given two images, \nimg1\n and \nimg2\n, represented as binary, square matrices of size \nn x n\n. A binary matrix has only \n0\ns and \n1\ns as values.\n\n\nWe \ntranslate\n one image however we choose by sliding all the \n1\n bits left, right, up, and/or down any number of units. We then place it on top of the other image. We can then calculate the \noverlap\n by counting the number of positions that have a \n1\n in \nboth\n images.\n\n\nNote also that a translation does \nnot\n include any kind of rotation. Any \n1\n bits that are translated outside of the matrix borders are erased.\n\n\nReturn \nthe largest possible overlap\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n img1 = [[1,1,0],[0,1,0],[0,1,0]], img2 = [[0,0,0],[0,1,1],[0,0,1]]\n\nOutput:\n 3\n\nExplanation:\n We translate img1 to right by 1 unit and down by 1 unit.\n\n\nThe number of positions that have a 1 in both images is 3 (shown in red).\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n img1 = [[1]], img2 = [[1]]\n\nOutput:\n 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n img1 = [[0]], img2 = [[0]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == img1.length == img1[i].length\n\n\nn == img2.length == img2[i].length\n\n\n1 <= n <= 30\n\n\nimg1[i][j]\n is either \n0\n or \n1\n.\n\n\nimg2[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 833,
        "slug": "find-and-replace-in-string",
        "url": "https://leetcode.com/problems/find-and-replace-in-string/",
        "titulo": "Find And Replace in String",
        "enunciado": "You are given a \n0-indexed\n string \ns\n that you must perform \nk\n replacement operations on. The replacement operations are given as three \n0-indexed\n parallel arrays, \nindices\n, \nsources\n, and \ntargets\n, all of length \nk\n.\n\n\nTo complete the \ni\nth\n replacement operation:\n\n\n\n\nCheck if the \nsubstring\n \nsources[i]\n occurs at index \nindices[i]\n in the \noriginal string\n \ns\n.\n\n\nIf it does not occur, \ndo nothing\n.\n\n\nOtherwise if it does occur, \nreplace\n that substring with \ntargets[i]\n.\n\n\n\n\nFor example, if \ns = \"\nab\ncd\"\n, \nindices[i] = 0\n, \nsources[i] = \"ab\"\n, and \ntargets[i] = \"eee\"\n, then the result of this replacement will be \n\"\neee\ncd\"\n.\n\n\nAll replacement operations must occur \nsimultaneously\n, meaning the replacement operations should not affect the indexing of each other. The testcases will be generated such that the replacements will \nnot overlap\n.\n\n\n\n\nFor example, a testcase with \ns = \"abc\"\n, \nindices = [0, 1]\n, and \nsources = [\"ab\",\"bc\"]\n will not be generated because the \n\"ab\"\n and \n\"bc\"\n replacements overlap.\n\n\n\n\nReturn \nthe \nresulting string\n after performing all replacement operations on \ns\n.\n\n\nA \nsubstring\n is a contiguous sequence of characters in a string.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n s = \"abcd\", indices = [0, 2], sources = [\"a\", \"cd\"], targets = [\"eee\", \"ffff\"]\n\nOutput:\n \"eeebffff\"\n\nExplanation:\n\n\"a\" occurs at index 0 in s, so we replace it with \"eee\".\n\"cd\" occurs at index 2 in s, so we replace it with \"ffff\".\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n s = \"abcd\", indices = [0, 2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]\n\nOutput:\n \"eeecd\"\n\nExplanation:\n\n\"ab\" occurs at index 0 in s, so we replace it with \"eee\".\n\"ec\" does not occur at index 2 in s, so we do nothing.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\nk == indices.length == sources.length == targets.length\n\n\n1 <= k <= 100\n\n\n0 <= indexes[i] < s.length\n\n\n1 <= sources[i].length, targets[i].length <= 50\n\n\ns\n consists of only lowercase English letters.\n\n\nsources[i]\n and \ntargets[i]\n consist of only lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 622,
        "slug": "design-circular-queue",
        "url": "https://leetcode.com/problems/design-circular-queue/",
        "titulo": "Design Circular Queue",
        "enunciado": "Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle, and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\".\n\n\nOne of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.\n\n\nImplement the \nMyCircularQueue\n class:\n\n\n\n\nMyCircularQueue(k)\n Initializes the object with the size of the queue to be \nk\n.\n\n\nint Front()\n Gets the front item from the queue. If the queue is empty, return \n-1\n.\n\n\nint Rear()\n Gets the last item from the queue. If the queue is empty, return \n-1\n.\n\n\nboolean enQueue(int value)\n Inserts an element into the circular queue. Return \ntrue\n if the operation is successful.\n\n\nboolean deQueue()\n Deletes an element from the circular queue. Return \ntrue\n if the operation is successful.\n\n\nboolean isEmpty()\n Checks whether the circular queue is empty or not.\n\n\nboolean isFull()\n Checks whether the circular queue is full or not.\n\n\n\n\nYou must solve the problem without using the built-in queue data structure in your programming language. \n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MyCircularQueue\", \"enQueue\", \"enQueue\", \"enQueue\", \"enQueue\", \"Rear\", \"isFull\", \"deQueue\", \"enQueue\", \"Rear\"]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]\n\nOutput\n\n[null, true, true, true, false, 3, true, true, true, 4]\n\n\nExplanation\n\nMyCircularQueue myCircularQueue = new MyCircularQueue(3);\nmyCircularQueue.enQueue(1); // return True\nmyCircularQueue.enQueue(2); // return True\nmyCircularQueue.enQueue(3); // return True\nmyCircularQueue.enQueue(4); // return False\nmyCircularQueue.Rear();     // return 3\nmyCircularQueue.isFull();   // return True\nmyCircularQueue.deQueue();  // return True\nmyCircularQueue.enQueue(4); // return True\nmyCircularQueue.Rear();     // return 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 1000\n\n\n0 <= value <= 1000\n\n\nAt most \n3000\n calls will be made to \nenQueue\n, \ndeQueue\n, \nFront\n, \nRear\n, \nisEmpty\n, and \nisFull\n.",
        "temas": [
            "Array",
            "Linked List",
            "Design",
            "Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 641,
        "slug": "design-circular-deque",
        "url": "https://leetcode.com/problems/design-circular-deque/",
        "titulo": "Design Circular Deque",
        "enunciado": "Design your implementation of the circular double-ended queue (deque).\n\n\nImplement the \nMyCircularDeque\n class:\n\n\n\n\nMyCircularDeque(int k)\n Initializes the deque with a maximum size of \nk\n.\n\n\nboolean insertFront()\n Adds an item at the front of Deque. Returns \ntrue\n if the operation is successful, or \nfalse\n otherwise.\n\n\nboolean insertLast()\n Adds an item at the rear of Deque. Returns \ntrue\n if the operation is successful, or \nfalse\n otherwise.\n\n\nboolean deleteFront()\n Deletes an item from the front of Deque. Returns \ntrue\n if the operation is successful, or \nfalse\n otherwise.\n\n\nboolean deleteLast()\n Deletes an item from the rear of Deque. Returns \ntrue\n if the operation is successful, or \nfalse\n otherwise.\n\n\nint getFront()\n Returns the front item from the Deque. Returns \n-1\n if the deque is empty.\n\n\nint getRear()\n Returns the last item from Deque. Returns \n-1\n if the deque is empty.\n\n\nboolean isEmpty()\n Returns \ntrue\n if the deque is empty, or \nfalse\n otherwise.\n\n\nboolean isFull()\n Returns \ntrue\n if the deque is full, or \nfalse\n otherwise.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MyCircularDeque\", \"insertLast\", \"insertLast\", \"insertFront\", \"insertFront\", \"getRear\", \"isFull\", \"deleteLast\", \"insertFront\", \"getFront\"]\n[[3], [1], [2], [3], [4], [], [], [], [4], []]\n\nOutput\n\n[null, true, true, true, false, 2, true, true, true, 4]\n\n\nExplanation\n\nMyCircularDeque myCircularDeque = new MyCircularDeque(3);\nmyCircularDeque.insertLast(1);  // return True\nmyCircularDeque.insertLast(2);  // return True\nmyCircularDeque.insertFront(3); // return True\nmyCircularDeque.insertFront(4); // return False, the queue is full.\nmyCircularDeque.getRear();      // return 2\nmyCircularDeque.isFull();       // return True\nmyCircularDeque.deleteLast();   // return True\nmyCircularDeque.insertFront(4); // return True\nmyCircularDeque.getFront();     // return 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= 1000\n\n\n0 <= value <= 1000\n\n\nAt most \n2000\n calls will be made to \ninsertFront\n, \ninsertLast\n, \ndeleteFront\n, \ndeleteLast\n, \ngetFront\n, \ngetRear\n, \nisEmpty\n, \nisFull\n.",
        "temas": [
            "Array",
            "Linked List",
            "Design",
            "Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 831,
        "slug": "masking-personal-information",
        "url": "https://leetcode.com/problems/masking-personal-information/",
        "titulo": "Masking Personal Information",
        "enunciado": "You are given a personal information string \ns\n, representing either an \nemail address\n or a \nphone number\n. Return \nthe \nmasked\n personal information using the below rules\n.\n\n\nEmail address:\n\n\nAn email address is:\n\n\n\n\nA \nname\n consisting of uppercase and lowercase English letters, followed by\n\n\nThe \n'@'\n symbol, followed by\n\n\nThe \ndomain\n consisting of uppercase and lowercase English letters with a dot \n'.'\n somewhere in the middle (not the first or last character).\n\n\n\n\nTo mask an email:\n\n\n\n\nThe uppercase letters in the \nname\n and \ndomain\n must be converted to lowercase letters.\n\n\nThe middle letters of the \nname\n (i.e., all but the first and last letters) must be replaced by 5 asterisks \n\"*****\"\n.\n\n\n\n\nPhone number:\n\n\nA phone number is formatted as follows:\n\n\n\n\nThe phone number contains 10-13 digits.\n\n\nThe last 10 digits make up the \nlocal number\n.\n\n\nThe remaining 0-3 digits, in the beginning, make up the \ncountry code\n.\n\n\nSeparation characters\n from the set \n{'+', '-', '(', ')', ' '}\n separate the above digits in some way.\n\n\n\n\nTo mask a phone number:\n\n\n\n\nRemove all \nseparation characters\n.\n\n\nThe masked phone number should have the form:\n\t\n\n\n\"***-***-XXXX\"\n if the country code has 0 digits.\n\n\n\"+*-***-***-XXXX\"\n if the country code has 1 digit.\n\n\n\"+**-***-***-XXXX\"\n if the country code has 2 digits.\n\n\n\"+***-***-***-XXXX\"\n if the country code has 3 digits.\n\n\n\n\n\n\n\"XXXX\"\n is the last 4 digits of the \nlocal number\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"LeetCode@LeetCode.com\"\n\nOutput:\n \"l*****e@leetcode.com\"\n\nExplanation:\n s is an email address.\nThe name and domain are converted to lowercase, and the middle of the name is replaced by 5 asterisks.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"AB@qq.com\"\n\nOutput:\n \"a*****b@qq.com\"\n\nExplanation:\n s is an email address.\nThe name and domain are converted to lowercase, and the middle of the name is replaced by 5 asterisks.\nNote that even though \"ab\" is 2 characters, it still must have 5 asterisks in the middle.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"1(234)567-890\"\n\nOutput:\n \"***-***-7890\"\n\nExplanation:\n s is a phone number.\nThere are 10 digits, so the local number is 10 digits and the country code is 0 digits.\nThus, the resulting masked number is \"***-***-7890\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\ns\n is either a \nvalid\n email or a phone number.\n\n\nIf \ns\n is an email:\n\t\n\n\n8 <= s.length <= 40\n\n\ns\n consists of uppercase and lowercase English letters and exactly one \n'@'\n symbol and \n'.'\n symbol.\n\n\n\n\n\n\nIf \ns\n is a phone number:\n\t\n\n\n10 <= s.length <= 20\n\n\ns\n consists of digits, spaces, and the symbols \n'('\n, \n')'\n, \n'-'\n, and \n'+'\n.",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 826,
        "slug": "most-profit-assigning-work",
        "url": "https://leetcode.com/problems/most-profit-assigning-work/",
        "titulo": "Most Profit Assigning Work",
        "enunciado": "You have \nn\n jobs and \nm\n workers. You are given three arrays: \ndifficulty\n, \nprofit\n, and \nworker\n where:\n\n\n\n\ndifficulty[i]\n and \nprofit[i]\n are the difficulty and the profit of the \ni\nth\n job, and\n\n\nworker[j]\n is the ability of \nj\nth\n worker (i.e., the \nj\nth\n worker can only complete a job with difficulty at most \nworker[j]\n).\n\n\n\n\nEvery worker can be assigned \nat most one job\n, but one job can be \ncompleted multiple times\n.\n\n\n\n\nFor example, if three workers attempt the same job that pays \n$1\n, then the total profit will be \n$3\n. If a worker cannot complete any job, their profit is \n$0\n.\n\n\n\n\nReturn the maximum profit we can achieve after assigning the workers to the jobs.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\n\nOutput:\n 100\n\nExplanation:\n Workers are assigned jobs of difficulty [4,4,6,6] and they get a profit of [20,20,30,30] separately.\n\n\n\nExample 2:\n\n\n\n\nInput:\n difficulty = [85,47,57], profit = [24,66,99], worker = [40,25,25]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == difficulty.length\n\n\nn == profit.length\n\n\nm == worker.length\n\n\n1 <= n, m <= 10\n4\n\n\n1 <= difficulty[i], profit[i], worker[i] <= 10\n5",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 825,
        "slug": "friends-of-appropriate-ages",
        "url": "https://leetcode.com/problems/friends-of-appropriate-ages/",
        "titulo": "Friends Of Appropriate Ages",
        "enunciado": "There are \nn\n persons on a social media website. You are given an integer array \nages\n where \nages[i]\n is the age of the \ni\nth\n person.\n\n\nA Person \nx\n will not send a friend request to a person \ny\n (\nx != y\n) if any of the following conditions is true:\n\n\n\n\nage[y] <= 0.5 * age[x] + 7\n\n\nage[y] > age[x]\n\n\nage[y] > 100 && age[x] < 100\n\n\n\n\nOtherwise, \nx\n will send a friend request to \ny\n.\n\n\nNote that if \nx\n sends a request to \ny\n, \ny\n will not necessarily send a request to \nx\n. Also, a person will not send a friend request to themself.\n\n\nReturn \nthe total number of friend requests made\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n ages = [16,16]\n\nOutput:\n 2\n\nExplanation:\n 2 people friend request each other.\n\n\n\nExample 2:\n\n\n\n\nInput:\n ages = [16,17,18]\n\nOutput:\n 2\n\nExplanation:\n Friend requests are made 17 -> 16, 18 -> 17.\n\n\n\nExample 3:\n\n\n\n\nInput:\n ages = [20,30,100,110,120]\n\nOutput:\n 3\n\nExplanation:\n Friend requests are made 110 -> 100, 120 -> 110, 120 -> 100.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == ages.length\n\n\n1 <= n <= 2 * 10\n4\n\n\n1 <= ages[i] <= 120",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 823,
        "slug": "binary-trees-with-factors",
        "url": "https://leetcode.com/problems/binary-trees-with-factors/",
        "titulo": "Binary Trees With Factors",
        "enunciado": "Given an array of unique integers, \narr\n, where each integer \narr[i]\n is strictly greater than \n1\n.\n\n\nWe make a binary tree using these integers, and each number may be used for any number of times. Each non-leaf node's value should be equal to the product of the values of its children.\n\n\nReturn \nthe number of binary trees we can make\n. The answer may be too large so return the answer \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [2,4]\n\nOutput:\n 3\n\nExplanation:\n We can make these trees: \n[2], [4], [4, 2, 2]\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [2,4,5,10]\n\nOutput:\n 7\n\nExplanation:\n We can make these trees: \n[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]\n.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= arr.length <= 1000\n\n\n2 <= arr[i] <= 10\n9\n\n\nAll the values of \narr\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 822,
        "slug": "card-flipping-game",
        "url": "https://leetcode.com/problems/card-flipping-game/",
        "titulo": "Card Flipping Game",
        "enunciado": "You are given two \n0-indexed\n integer arrays \nfronts\n and \nbacks\n of length \nn\n, where the \ni\nth\n card has the positive integer \nfronts[i]\n printed on the front and \nbacks[i]\n printed on the back. Initially, each card is placed on a table such that the front number is facing up and the other is facing down. You may flip over any number of cards (possibly zero).\n\n\nAfter flipping the cards, an integer is considered \ngood\n if it is facing down on some card and \nnot\n facing up on any card.\n\n\nReturn \nthe minimum possible good integer after flipping the cards\n. If there are no good integers, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\n\nOutput:\n 2\n\nExplanation:\n\nIf we flip the second card, the face up numbers are [1,3,4,4,7] and the face down are [1,2,4,1,3].\n2 is the minimum good integer as it appears facing down but not facing up.\nIt can be shown that 2 is the minimum possible good integer obtainable after flipping some cards.\n\n\n\nExample 2:\n\n\n\n\nInput:\n fronts = [1], backs = [1]\n\nOutput:\n 0\n\nExplanation:\n\nThere are no good integers no matter how we flip the cards, so we return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == fronts.length == backs.length\n\n\n1 <= n <= 1000\n\n\n1 <= fronts[i], backs[i] <= 2000",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 820,
        "slug": "short-encoding-of-words",
        "url": "https://leetcode.com/problems/short-encoding-of-words/",
        "titulo": "Short Encoding of Words",
        "enunciado": "A \nvalid encoding\n of an array of \nwords\n is any reference string \ns\n and array of indices \nindices\n such that:\n\n\n\n\nwords.length == indices.length\n\n\nThe reference string \ns\n ends with the \n'#'\n character.\n\n\nFor each index \nindices[i]\n, the \nsubstring\n of \ns\n starting from \nindices[i]\n and up to (but not including) the next \n'#'\n character is equal to \nwords[i]\n.\n\n\n\n\nGiven an array of \nwords\n, return \nthe \nlength of the shortest reference string\n \ns\n possible of any \nvalid encoding\n of \nwords\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"time\", \"me\", \"bell\"]\n\nOutput:\n 10\n\nExplanation:\n A valid encoding would be s = \n\"time#bell#\" and indices = [0, 2, 5\n].\nwords[0] = \"time\", the substring of s starting from indices[0] = 0 to the next '#' is underlined in \"\ntime\n#bell#\"\nwords[1] = \"me\", the substring of s starting from indices[1] = 2 to the next '#' is underlined in \"ti\nme\n#bell#\"\nwords[2] = \"bell\", the substring of s starting from indices[2] = 5 to the next '#' is underlined in \"time#\nbell\n#\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"t\"]\n\nOutput:\n 2\n\nExplanation:\n A valid encoding would be s = \"t#\" and indices = [0].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 2000\n\n\n1 <= words[i].length <= 7\n\n\nwords[i]\n consists of only lowercase letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 707,
        "slug": "design-linked-list",
        "url": "https://leetcode.com/problems/design-linked-list/",
        "titulo": "Design Linked List",
        "enunciado": "Design your implementation of the linked list. You can choose to use a singly or doubly linked list.\n\nA node in a singly linked list should have two attributes: \nval\n and \nnext\n. \nval\n is the value of the current node, and \nnext\n is a pointer/reference to the next node.\n\nIf you want to use the doubly linked list, you will need one more attribute \nprev\n to indicate the previous node in the linked list. Assume all nodes in the linked list are \n0-indexed\n.\n\n\nImplement the \nMyLinkedList\n class:\n\n\n\n\nMyLinkedList()\n Initializes the \nMyLinkedList\n object.\n\n\nint get(int index)\n Get the value of the \nindex\nth\n node in the linked list. If the index is invalid, return \n-1\n.\n\n\nvoid addAtHead(int val)\n Add a node of value \nval\n before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.\n\n\nvoid addAtTail(int val)\n Append a node of value \nval\n as the last element of the linked list.\n\n\nvoid addAtIndex(int index, int val)\n Add a node of value \nval\n before the \nindex\nth\n node in the linked list. If \nindex\n equals the length of the linked list, the node will be appended to the end of the linked list. If \nindex\n is greater than the length, the node \nwill not be inserted\n.\n\n\nvoid deleteAtIndex(int index)\n Delete the \nindex\nth\n node in the linked list, if the index is valid.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MyLinkedList\", \"addAtHead\", \"addAtTail\", \"addAtIndex\", \"get\", \"deleteAtIndex\", \"get\"]\n[[], [1], [3], [1, 2], [1], [1], [1]]\n\nOutput\n\n[null, null, null, null, 2, null, 3]\n\n\nExplanation\n\nMyLinkedList myLinkedList = new MyLinkedList();\nmyLinkedList.addAtHead(1);\nmyLinkedList.addAtTail(3);\nmyLinkedList.addAtIndex(1, 2);    // linked list becomes 1->2->3\nmyLinkedList.get(1);              // return 2\nmyLinkedList.deleteAtIndex(1);    // now the linked list is 1->3\nmyLinkedList.get(1);              // return 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= index, val <= 1000\n\n\nPlease do not use the built-in LinkedList library.\n\n\nAt most \n2000\n calls will be made to \nget\n, \naddAtHead\n, \naddAtTail\n, \naddAtIndex\n and \ndeleteAtIndex\n.",
        "temas": [
            "Linked List",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": false
    },
    {
        "id": 817,
        "slug": "linked-list-components",
        "url": "https://leetcode.com/problems/linked-list-components/",
        "titulo": "Linked List Components",
        "enunciado": "You are given the \nhead\n of a linked list containing unique integer values and an integer array \nnums\n that is a subset of the linked list values.\n\n\nReturn \nthe number of connected components in \nnums\n where two values are connected if they appear \nconsecutively\n in the linked list\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [0,1,2,3], nums = [0,1,3]\n\nOutput:\n 2\n\nExplanation:\n 0 and 1 are connected, so [0, 1] and [3] are the two connected components.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [0,1,2,3,4], nums = [0,3,1,4]\n\nOutput:\n 2\n\nExplanation:\n 0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the linked list is \nn\n.\n\n\n1 <= n <= 10\n4\n\n\n0 <= Node.val < n\n\n\nAll the values \nNode.val\n are \nunique\n.\n\n\n1 <= nums.length <= n\n\n\n0 <= nums[i] < n\n\n\nAll the values of \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 816,
        "slug": "ambiguous-coordinates",
        "url": "https://leetcode.com/problems/ambiguous-coordinates/",
        "titulo": "Ambiguous Coordinates",
        "enunciado": "We had some 2-dimensional coordinates, like \n\"(1, 3)\"\n or \n\"(2, 0.5)\"\n. Then, we removed all commas, decimal points, and spaces and ended up with the string s.\n\n\n\n\nFor example, \n\"(1, 3)\"\n becomes \ns = \"(13)\"\n and \n\"(2, 0.5)\"\n becomes \ns = \"(205)\"\n.\n\n\n\n\nReturn \na list of strings representing all possibilities for what our original coordinates could have been\n.\n\n\nOur original representation never had extraneous zeroes, so we never started with numbers like \n\"00\"\n, \n\"0.0\"\n, \n\"0.00\"\n, \n\"1.0\"\n, \n\"001\"\n, \n\"00.01\"\n, or any other number that can be represented with fewer digits. Also, a decimal point within a number never occurs without at least one digit occurring before it, so we never started with numbers like \n\".1\"\n.\n\n\nThe final answer list can be returned in any order. All coordinates in the final answer have exactly one space between them (occurring after the comma.)\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"(123)\"\n\nOutput:\n [\"(1, 2.3)\",\"(1, 23)\",\"(1.2, 3)\",\"(12, 3)\"]\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"(0123)\"\n\nOutput:\n [\"(0, 1.23)\",\"(0, 12.3)\",\"(0, 123)\",\"(0.1, 2.3)\",\"(0.1, 23)\",\"(0.12, 3)\"]\n\nExplanation:\n 0.0, 00, 0001 or 00.01 are not allowed.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"(00011)\"\n\nOutput:\n [\"(0, 0.011)\",\"(0.001, 1)\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n4 <= s.length <= 12\n\n\ns[0] == '('\n and \ns[s.length - 1] == ')'\n.\n\n\nThe rest of \ns\n are digits.",
        "temas": [
            "String",
            "Backtracking",
            "Enumeration"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 814,
        "slug": "binary-tree-pruning",
        "url": "https://leetcode.com/problems/binary-tree-pruning/",
        "titulo": "Binary Tree Pruning",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe same tree where every subtree (of the given tree) not containing a \n1\n has been removed\n.\n\n\nA subtree of a node \nnode\n is \nnode\n plus every node that is a descendant of \nnode\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,null,0,0,1]\n\nOutput:\n [1,null,0,null,1]\n\nExplanation:\n \nOnly the red nodes satisfy the property \"every subtree not containing a 1\".\nThe diagram on the right represents the answer.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,0,1,0,0,0,1]\n\nOutput:\n [1,null,1,null,1]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [1,1,0,1,1,0,1,0]\n\nOutput:\n [1,1,0,1,1,null,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 200]\n.\n\n\nNode.val\n is either \n0\n or \n1\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 813,
        "slug": "largest-sum-of-averages",
        "url": "https://leetcode.com/problems/largest-sum-of-averages/",
        "titulo": "Largest Sum of Averages",
        "enunciado": "You are given an integer array \nnums\n and an integer \nk\n. You can partition the array into \nat most\n \nk\n non-empty adjacent subarrays. The \nscore\n of a partition is the sum of the averages of each subarray.\n\n\nNote that the partition must use every integer in \nnums\n, and that the score is not necessarily an integer.\n\n\nReturn \nthe maximum \nscore\n you can achieve of all the possible partitions\n. Answers within \n10\n-6\n of the actual answer will be accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [9,1,2,3,9], k = 3\n\nOutput:\n 20.00000\n\nExplanation:\n \nThe best choice is to partition nums into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\nWe could have also partitioned nums into [9, 1], [2], [3, 9], for example.\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,6,7], k = 4\n\nOutput:\n 20.50000\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n1 <= nums[i] <= 10\n4\n\n\n1 <= k <= nums.length",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 811,
        "slug": "subdomain-visit-count",
        "url": "https://leetcode.com/problems/subdomain-visit-count/",
        "titulo": "Subdomain Visit Count",
        "enunciado": "A website domain \n\"discuss.leetcode.com\"\n consists of various subdomains. At the top level, we have \n\"com\"\n, at the next level, we have \n\"leetcode.com\"\n and at the lowest level, \n\"discuss.leetcode.com\"\n. When we visit a domain like \n\"discuss.leetcode.com\"\n, we will also visit the parent domains \n\"leetcode.com\"\n and \n\"com\"\n implicitly.\n\n\nA \ncount-paired domain\n is a domain that has one of the two formats \n\"rep d1.d2.d3\"\n or \n\"rep d1.d2\"\n where \nrep\n is the number of visits to the domain and \nd1.d2.d3\n is the domain itself.\n\n\n\n\nFor example, \n\"9001 discuss.leetcode.com\"\n is a \ncount-paired domain\n that indicates that \ndiscuss.leetcode.com\n was visited \n9001\n times.\n\n\n\n\nGiven an array of \ncount-paired domains\n \ncpdomains\n, return \nan array of the \ncount-paired domains\n of each subdomain in the input\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n cpdomains = [\"9001 discuss.leetcode.com\"]\n\nOutput:\n [\"9001 leetcode.com\",\"9001 discuss.leetcode.com\",\"9001 com\"]\n\nExplanation:\n We only have one website domain: \"discuss.leetcode.com\".\nAs discussed above, the subdomain \"leetcode.com\" and \"com\" will also be visited. So they will all be visited 9001 times.\n\n\n\nExample 2:\n\n\n\n\nInput:\n cpdomains = [\"900 google.mail.com\", \"50 yahoo.com\", \"1 intel.mail.com\", \"5 wiki.org\"]\n\nOutput:\n [\"901 mail.com\",\"50 yahoo.com\",\"900 google.mail.com\",\"5 wiki.org\",\"5 org\",\"1 intel.mail.com\",\"951 com\"]\n\nExplanation:\n We will visit \"google.mail.com\" 900 times, \"yahoo.com\" 50 times, \"intel.mail.com\" once and \"wiki.org\" 5 times.\nFor the subdomains, we will visit \"mail.com\" 900 + 1 = 901 times, \"com\" 900 + 50 + 1 = 951 times, and \"org\" 5 times.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= cpdomain.length <= 100\n\n\n1 <= cpdomain[i].length <= 100\n\n\ncpdomain[i]\n follows either the \n\"rep\ni\n d1\ni\n.d2\ni\n.d3\ni\n\"\n format or the \n\"rep\ni\n d1\ni\n.d2\ni\n\"\n format.\n\n\nrep\ni\n is an integer in the range \n[1, 10\n4\n]\n.\n\n\nd1\ni\n, \nd2\ni\n, and \nd3\ni\n consist of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 809,
        "slug": "expressive-words",
        "url": "https://leetcode.com/problems/expressive-words/",
        "titulo": "Expressive Words",
        "enunciado": "Sometimes people repeat letters to represent extra feeling. For example:\n\n\n\n\n\"hello\" -> \"heeellooo\"\n\n\n\"hi\" -> \"hiiii\"\n\n\n\n\nIn these strings like \n\"heeellooo\"\n, we have groups of adjacent letters that are all the same: \n\"h\"\n, \n\"eee\"\n, \n\"ll\"\n, \n\"ooo\"\n.\n\n\nYou are given a string \ns\n and an array of query strings \nwords\n. A query word is \nstretchy\n if it can be made to be equal to \ns\n by any number of applications of the following extension operation: choose a group consisting of characters \nc\n, and add some number of characters \nc\n to the group so that the size of the group is \nthree or more\n.\n\n\n\n\nFor example, starting with \n\"hello\"\n, we could do an extension on the group \n\"o\"\n to get \n\"hellooo\"\n, but we cannot get \n\"helloo\"\n since the group \n\"oo\"\n has a size less than three. Also, we could do another extension like \n\"ll\" -> \"lllll\"\n to get \n\"helllllooo\"\n. If \ns = \"helllllooo\"\n, then the query word \n\"hello\"\n would be \nstretchy\n because of these two extension operations: \nquery = \"hello\" -> \"hellooo\" -> \"helllllooo\" = s\n.\n\n\n\n\nReturn \nthe number of query strings that are \nstretchy\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"heeellooo\", words = [\"hello\", \"hi\", \"helo\"]\n\nOutput:\n 1\n\nExplanation:\n \nWe can extend \"e\" and \"o\" in the word \"hello\" to get \"heeellooo\".\nWe can't extend \"helo\" to get \"heeellooo\" because the group \"ll\" is not size 3 or more.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"zzzzzyyyyy\", words = [\"zzyy\",\"zy\",\"zyy\"]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, words.length <= 100\n\n\n1 <= words[i].length <= 100\n\n\ns\n and \nwords[i]\n consist of lowercase letters.",
        "temas": [
            "Array",
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 808,
        "slug": "soup-servings",
        "url": "https://leetcode.com/problems/soup-servings/",
        "titulo": "Soup Servings",
        "enunciado": "There are two types of soup: \ntype A\n and \ntype B\n. Initially, we have \nn\n ml of each type of soup. There are four kinds of operations:\n\n\n\n\nServe \n100\n ml of \nsoup A\n and \n0\n ml of \nsoup B\n,\n\n\nServe \n75\n ml of \nsoup A\n and \n25\n ml of \nsoup B\n,\n\n\nServe \n50\n ml of \nsoup A\n and \n50\n ml of \nsoup B\n, and\n\n\nServe \n25\n ml of \nsoup A\n and \n75\n ml of \nsoup B\n.\n\n\n\n\nWhen we serve some soup, we give it to someone, and we no longer have it. Each turn, we will choose from the four operations with an equal probability \n0.25\n. If the remaining volume of soup is not enough to complete the operation, we will serve as much as possible. We stop once we no longer have some quantity of both types of soup.\n\n\nNote\n that we do not have an operation where all \n100\n ml's of \nsoup B\n are used first.\n\n\nReturn \nthe probability that \nsoup A\n will be empty first, plus half the probability that \nA\n and \nB\n become empty at the same time\n. Answers within \n10\n-5\n of the actual answer will be accepted.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 50\n\nOutput:\n 0.62500\n\nExplanation:\n If we choose the first two operations, A will become empty first.\nFor the third operation, A and B will become empty at the same time.\nFor the fourth operation, B will become empty first.\nSo the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 100\n\nOutput:\n 0.71875\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10\n9",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Probability and Statistics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 807,
        "slug": "max-increase-to-keep-city-skyline",
        "url": "https://leetcode.com/problems/max-increase-to-keep-city-skyline/",
        "titulo": "Max Increase to Keep City Skyline",
        "enunciado": "There is a city composed of \nn x n\n blocks, where each block contains a single building shaped like a vertical square prism. You are given a \n0-indexed\n \nn x n\n integer matrix \ngrid\n where \ngrid[r][c]\n represents the \nheight\n of the building located in the block at row \nr\n and column \nc\n.\n\n\nA city's \nskyline\n is the outer contour formed by all the building when viewing the side of the city from a distance. The \nskyline\n from each cardinal direction north, east, south, and west may be different.\n\n\nWe are allowed to increase the height of \nany number of buildings by any amount\n (the amount can be different per building). The height of a \n0\n-height building can also be increased. However, increasing the height of a building should \nnot\n affect the city's \nskyline\n from any cardinal direction.\n\n\nReturn \nthe \nmaximum total sum\n that the height of the buildings can be increased by \nwithout\n changing the city's \nskyline\n from any cardinal direction\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\n\nOutput:\n 35\n\nExplanation:\n The building heights are shown in the center of the above image.\nThe skylines when viewed from each cardinal direction are drawn in red.\nThe grid after increasing the height of buildings without affecting skylines is:\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[0,0,0],[0,0,0],[0,0,0]]\n\nOutput:\n 0\n\nExplanation:\n Increasing the height of any building will result in the skyline changing.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length\n\n\nn == grid[r].length\n\n\n2 <= n <= 50\n\n\n0 <= grid[r][c] <= 100",
        "temas": [
            "Array",
            "Greedy",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 802,
        "slug": "find-eventual-safe-states",
        "url": "https://leetcode.com/problems/find-eventual-safe-states/",
        "titulo": "Find Eventual Safe States",
        "enunciado": "There is a directed graph of \nn\n nodes with each node labeled from \n0\n to \nn - 1\n. The graph is represented by a \n0-indexed\n 2D integer array \ngraph\n where \ngraph[i]\n is an integer array of nodes adjacent to node \ni\n, meaning there is an edge from node \ni\n to each node in \ngraph[i]\n.\n\n\nA node is a \nterminal node\n if there are no outgoing edges. A node is a \nsafe node\n if every possible path starting from that node leads to a \nterminal node\n (or another safe node).\n\n\nReturn \nan array containing all the \nsafe nodes\n of the graph\n. The answer should be sorted in \nascending\n order.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n\nOutput:\n [2,4,5,6]\n\nExplanation:\n The given graph is shown above.\nNodes 5 and 6 are terminal nodes as there are no outgoing edges from either of them.\nEvery path starting at nodes 2, 4, 5, and 6 all lead to either node 5 or 6.\n\n\nExample 2:\n\n\n\n\nInput:\n graph = [[1,2,3,4],[1,2],[3,4],[0,4],[]]\n\nOutput:\n [4]\n\nExplanation:\n\nOnly node 4 is a terminal node, and every path starting at node 4 leads to node 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == graph.length\n\n\n1 <= n <= 10\n4\n\n\n0 <= graph[i].length <= n\n\n\n0 <= graph[i][j] <= n - 1\n\n\ngraph[i]\n is sorted in a strictly increasing order.\n\n\nThe graph may contain self-loops.\n\n\nThe number of edges in the graph will be in the range \n[1, 4 * 10\n4\n]\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 799,
        "slug": "champagne-tower",
        "url": "https://leetcode.com/problems/champagne-tower/",
        "titulo": "Champagne Tower",
        "enunciado": "We stack glasses in a pyramid, where the \nfirst\n row has \n1\n glass, the \nsecond\n row has \n2\n glasses, and so on until the 100\nth\n row.  Each glass holds one cup of champagne.\n\n\nThen, some champagne is poured into the first glass at the top.  When the topmost glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.  When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.  (A glass at the bottom row has its excess champagne fall on the floor.)\n\n\nFor example, after one cup of champagne is poured, the top most glass is full.  After two cups of champagne are poured, the two glasses on the second row are half full.  After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.  After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.\n\n\n\n\nNow after pouring some non-negative integer cups of champagne, return how full the \nj\nth\n glass in the \ni\nth\n row is (both \ni\n and \nj\n are 0-indexed.)\n\n\n \n\n\nExample 1:\n\n\n\r\n\nInput:\n poured = 1, query_row = 1, query_glass = 1\r\n\nOutput:\n 0.00000\r\n\nExplanation:\n We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\r\n\n\n\nExample 2:\n\n\n\r\n\nInput:\n poured = 2, query_row = 1, query_glass = 1\r\n\nOutput:\n 0.50000\r\n\nExplanation:\n We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\r\n\n\n\nExample 3:\n\n\n\r\n\nInput:\n poured = 100000009, query_row = 33, query_glass = 17\r\n\nOutput:\n 1.00000\r\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= poured <= 10\n9\n\n\n0 <= query_glass <= query_row < 100",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 797,
        "slug": "all-paths-from-source-to-target",
        "url": "https://leetcode.com/problems/all-paths-from-source-to-target/",
        "titulo": "All Paths From Source to Target",
        "enunciado": "Given a directed acyclic graph (\nDAG\n) of \nn\n nodes labeled from \n0\n to \nn - 1\n, find all possible paths from node \n0\n to node \nn - 1\n and return them in \nany order\n.\n\n\nThe graph is given as follows: \ngraph[i]\n is a list of all nodes you can visit from node \ni\n (i.e., there is a directed edge from node \ni\n to node \ngraph[i][j]\n).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n graph = [[1,2],[3],[3],[]]\n\nOutput:\n [[0,1,3],[0,2,3]]\n\nExplanation:\n There are two paths: 0 -> 1 -> 3 and 0 -> 2 -> 3.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n graph = [[4,3,1],[3,2,4],[3],[4],[]]\n\nOutput:\n [[0,4],[0,3,4],[0,1,3,4],[0,1,2,3,4],[0,1,4]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == graph.length\n\n\n2 <= n <= 15\n\n\n0 <= graph[i][j] < n\n\n\ngraph[i][j] != i\n (i.e., there will be no self-loops).\n\n\nAll the elements of \ngraph[i]\n are \nunique\n.\n\n\nThe input graph is \nguaranteed\n to be a \nDAG\n.",
        "temas": [
            "Backtracking",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Backtracking",
        "has_image": true
    },
    {
        "id": 795,
        "slug": "number-of-subarrays-with-bounded-maximum",
        "url": "https://leetcode.com/problems/number-of-subarrays-with-bounded-maximum/",
        "titulo": "Number of Subarrays with Bounded Maximum",
        "enunciado": "Given an integer array \nnums\n and two integers \nleft\n and \nright\n, return \nthe number of contiguous non-empty \nsubarrays\n such that the value of the maximum array element in that subarray is in the range \n[left, right]\n.\n\n\nThe test cases are generated so that the answer will fit in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,1,4,3], left = 2, right = 3\n\nOutput:\n 3\n\nExplanation:\n There are three subarrays that meet the requirements: [2], [2, 1], [3].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,9,2,5,6], left = 2, right = 8\n\nOutput:\n 7\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n0 <= left <= right <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 794,
        "slug": "valid-tic-tac-toe-state",
        "url": "https://leetcode.com/problems/valid-tic-tac-toe-state/",
        "titulo": "Valid Tic-Tac-Toe State",
        "enunciado": "Given a Tic-Tac-Toe board as a string array \nboard\n, return \ntrue\n if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.\n\n\nThe board is a \n3 x 3\n array that consists of characters \n' '\n, \n'X'\n, and \n'O'\n. The \n' '\n character represents an empty square.\n\n\nHere are the rules of Tic-Tac-Toe:\n\n\n\n\nPlayers take turns placing characters into empty squares \n' '\n.\n\n\nThe first player always places \n'X'\n characters, while the second player always places \n'O'\n characters.\n\n\n'X'\n and \n'O'\n characters are always placed into empty squares, never filled ones.\n\n\nThe game ends when there are three of the same (non-empty) character filling any row, column, or diagonal.\n\n\nThe game also ends if all squares are non-empty.\n\n\nNo more moves can be played if the game is over.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [\"O  \",\"   \",\"   \"]\n\nOutput:\n false\n\nExplanation:\n The first player always plays \"X\".\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n board = [\"XOX\",\" X \",\"   \"]\n\nOutput:\n false\n\nExplanation:\n Players take turns making moves.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n board = [\"XOX\",\"O O\",\"XOX\"]\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\nboard.length == 3\n\n\nboard[i].length == 3\n\n\nboard[i][j]\n is either \n'X'\n, \n'O'\n, or \n' '\n.",
        "temas": [
            "Array",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 792,
        "slug": "number-of-matching-subsequences",
        "url": "https://leetcode.com/problems/number-of-matching-subsequences/",
        "titulo": "Number of Matching Subsequences",
        "enunciado": "Given a string \ns\n and an array of strings \nwords\n, return \nthe number of\n \nwords[i]\n \nthat is a subsequence of\n \ns\n.\n\n\nA \nsubsequence\n of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n\n\n\n\nFor example, \n\"ace\"\n is a subsequence of \n\"abcde\"\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abcde\", words = [\"a\",\"bb\",\"acd\",\"ace\"]\n\nOutput:\n 3\n\nExplanation:\n There are three strings in words that are a subsequence of s: \"a\", \"acd\", \"ace\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"dsahjpjauf\", words = [\"ahjpjau\",\"ja\",\"ahbwzgqnuk\",\"tnmlanowax\"]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 * 10\n4\n\n\n1 <= words.length <= 5000\n\n\n1 <= words[i].length <= 50\n\n\ns\n and \nwords[i]\n consist of only lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Binary Search",
            "Dynamic Programming",
            "Trie",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 791,
        "slug": "custom-sort-string",
        "url": "https://leetcode.com/problems/custom-sort-string/",
        "titulo": "Custom Sort String",
        "enunciado": "You are given two strings \norder\n and \ns\n. All the characters of \norder\n are \nunique\n and were sorted in some custom order previously.\n\n\nPermute the characters of \ns\n so that they match the order that \norder\n was sorted. More specifically, if a character \nx\n occurs before a character \ny\n in \norder\n, then \nx\n should occur before \ny\n in the permuted string.\n\n\nReturn \nany permutation of \ns\n that satisfies this property\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput: \n \n order = \"cba\", s = \"abcd\" \n\n\nOutput: \n \n \"cbad\" \n\n\nExplanation: \n \n\"a\"\n, \n\"b\"\n, \n\"c\"\n appear in order, so the order of \n\"a\"\n, \n\"b\"\n, \n\"c\"\n should be \n\"c\"\n, \n\"b\"\n, and \n\"a\"\n.\n\n\nSince \n\"d\"\n does not appear in \norder\n, it can be at any position in the returned string. \n\"dcba\"\n, \n\"cdba\"\n, \n\"cbda\"\n are also valid outputs.\n\n\n\n\nExample 2:\n\n\n\n\nInput: \n \n order = \"bcafg\", s = \"abcd\" \n\n\nOutput: \n \n \"bcad\" \n\n\nExplanation: \n The characters \n\"b\"\n, \n\"c\"\n, and \n\"a\"\n from \norder\n dictate the order for the characters in \ns\n. The character \n\"d\"\n in \ns\n does not appear in \norder\n, so its position is flexible.\n\n\nFollowing the order of appearance in \norder\n, \n\"b\"\n, \n\"c\"\n, and \n\"a\"\n from \ns\n should be arranged as \n\"b\"\n, \n\"c\"\n, \n\"a\"\n. \n\"d\"\n can be placed at any position since it's not in order. The output \n\"bcad\"\n correctly follows this rule. Other arrangements like \n\"dbca\"\n or \n\"bcda\"\n would also be valid, as long as \n\"b\"\n, \n\"c\"\n, \n\"a\"\n maintain their order.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= order.length <= 26\n\n\n1 <= s.length <= 200\n\n\norder\n and \ns\n consist of lowercase English letters.\n\n\nAll the characters of \norder\n are \nunique\n.",
        "temas": [
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 790,
        "slug": "domino-and-tromino-tiling",
        "url": "https://leetcode.com/problems/domino-and-tromino-tiling/",
        "titulo": "Domino and Tromino Tiling",
        "enunciado": "You have two types of tiles: a \n2 x 1\n domino shape and a tromino shape. You may rotate these shapes.\n\n\n\n\nGiven an integer n, return \nthe number of ways to tile an\n \n2 x n\n \nboard\n. Since the answer may be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\nIn a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 5\n\nExplanation:\n The five different ways are shown above.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 789,
        "slug": "escape-the-ghosts",
        "url": "https://leetcode.com/problems/escape-the-ghosts/",
        "titulo": "Escape The Ghosts",
        "enunciado": "You are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point \n[0, 0]\n, and you are given a destination point \ntarget = [x\ntarget\n, y\ntarget\n]\n that you are trying to get to. There are several ghosts on the map with their starting positions given as a 2D array \nghosts\n, where \nghosts[i] = [x\ni\n, y\ni\n]\n represents the starting position of the \ni\nth\n ghost. All inputs are \nintegral coordinates\n.\n\n\nEach turn, you and all the ghosts may independently choose to either \nmove 1 unit\n in any of the four cardinal directions: north, east, south, or west, or \nstay still\n. All actions happen \nsimultaneously\n.\n\n\nYou escape if and only if you can reach the target \nbefore\n any ghost reaches you. If you reach any square (including the target) at the \nsame time\n as a ghost, it \ndoes not\n count as an escape.\n\n\nReturn \ntrue\n if it is possible to escape regardless of how the ghosts move, otherwise return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n ghosts = [[1,0],[0,3]], target = [0,1]\n\nOutput:\n true\n\nExplanation:\n You can reach the destination (0, 1) after 1 turn, while the ghosts located at (1, 0) and (0, 3) cannot catch up with you.\n\n\n\nExample 2:\n\n\n\n\nInput:\n ghosts = [[1,0]], target = [2,0]\n\nOutput:\n false\n\nExplanation:\n You need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\n\n\n\nExample 3:\n\n\n\n\nInput:\n ghosts = [[2,0]], target = [1,0]\n\nOutput:\n false\n\nExplanation:\n The ghost can reach the target at the same time as you.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= ghosts.length <= 100\n\n\nghosts[i].length == 2\n\n\n-10\n4\n <= x\ni\n, y\ni\n <= 10\n4\n\n\nThere can be \nmultiple ghosts\n in the same location.\n\n\ntarget.length == 2\n\n\n-10\n4\n <= x\ntarget\n, y\ntarget\n <= 10\n4",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 788,
        "slug": "rotated-digits",
        "url": "https://leetcode.com/problems/rotated-digits/",
        "titulo": "Rotated Digits",
        "enunciado": "An integer \nx\n is a \ngood\n if after rotating each digit individually by 180 degrees, we get a valid number that is different from \nx\n. Each digit must be rotated - we cannot choose to leave it alone.\n\n\nA number is valid if each digit remains a digit after rotation. For example:\n\n\n\n\n0\n, \n1\n, and \n8\n rotate to themselves,\n\n\n2\n and \n5\n rotate to each other (in this case they are rotated in a different direction, in other words, \n2\n or \n5\n gets mirrored),\n\n\n6\n and \n9\n rotate to each other, and\n\n\nthe rest of the numbers do not rotate to any other number and become invalid.\n\n\n\n\nGiven an integer \nn\n, return \nthe number of \ngood\n integers in the range \n[1, n]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 4\n\nExplanation:\n There are four good numbers in the range [1, 10] : 2, 5, 6, 9.\nNote that 1 and 10 are not good numbers, since they remain unchanged after rotating.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 0\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4",
        "temas": [
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 787,
        "slug": "cheapest-flights-within-k-stops",
        "url": "https://leetcode.com/problems/cheapest-flights-within-k-stops/",
        "titulo": "Cheapest Flights Within K Stops",
        "enunciado": "There are \nn\n cities connected by some number of flights. You are given an array \nflights\n where \nflights[i] = [from\ni\n, to\ni\n, price\ni\n]\n indicates that there is a flight from city \nfrom\ni\n to city \nto\ni\n with cost \nprice\ni\n.\n\n\nYou are also given three integers \nsrc\n, \ndst\n, and \nk\n, return \nthe cheapest price\n from \nsrc\n to \ndst\n with at most \nk\n stops. \nIf there is no such route, return\n \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, flights = [[0,1,100],[1,2,100],[2,0,100],[1,3,600],[2,3,200]], src = 0, dst = 3, k = 1\n\nOutput:\n 700\n\nExplanation:\n\nThe graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 3 is marked in red and has cost 100 + 600 = 700.\nNote that the path through cities [0,1,2,3] is cheaper but is invalid because it uses 2 stops.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 1\n\nOutput:\n 200\n\nExplanation:\n\nThe graph is shown above.\nThe optimal path with at most 1 stop from city 0 to 2 is marked in red and has cost 100 + 100 = 200.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n n = 3, flights = [[0,1,100],[1,2,100],[0,2,500]], src = 0, dst = 2, k = 0\n\nOutput:\n 500\n\nExplanation:\n\nThe graph is shown above.\nThe optimal path with no stops from city 0 to 2 is marked in red and has cost 500.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 100\n\n\n0 <= flights.length <= (n * (n - 1) / 2)\n\n\nflights[i].length == 3\n\n\n0 <= from\ni\n, to\ni\n < n\n\n\nfrom\ni\n != to\ni\n\n\n1 <= price\ni\n <= 10\n4\n\n\nThere will not be any multiple flights between two cities.\n\n\n0 <= src, dst, k < n\n\n\nsrc != dst",
        "temas": [
            "Dynamic Programming",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 786,
        "slug": "k-th-smallest-prime-fraction",
        "url": "https://leetcode.com/problems/k-th-smallest-prime-fraction/",
        "titulo": "K-th Smallest Prime Fraction",
        "enunciado": "You are given a sorted integer array \narr\n containing \n1\n and \nprime\n numbers, where all the integers of \narr\n are unique. You are also given an integer \nk\n.\n\n\nFor every \ni\n and \nj\n where \n0 <= i < j < arr.length\n, we consider the fraction \narr[i] / arr[j]\n.\n\n\nReturn \nthe\n \nk\nth\n \nsmallest fraction considered\n. Return your answer as an array of integers of size \n2\n, where \nanswer[0] == arr[i]\n and \nanswer[1] == arr[j]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [1,2,3,5], k = 3\n\nOutput:\n [2,5]\n\nExplanation:\n The fractions to be considered in sorted order are:\n1/5, 1/3, 2/5, 1/2, 3/5, and 2/3.\nThe third fraction is 2/5.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,7], k = 1\n\nOutput:\n [1,7]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= arr.length <= 1000\n\n\n1 <= arr[i] <= 3 * 10\n4\n\n\narr[0] == 1\n\n\narr[i]\n is a \nprime\n number for \ni > 0\n.\n\n\nAll the numbers of \narr\n are \nunique\n and sorted in \nstrictly increasing\n order.\n\n\n1 <= k <= arr.length * (arr.length - 1) / 2\n\n\n\n\n \n\n\nFollow up:\n Can you solve the problem with better than \nO(n\n2\n)\n complexity?",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 785,
        "slug": "is-graph-bipartite",
        "url": "https://leetcode.com/problems/is-graph-bipartite/",
        "titulo": "Is Graph Bipartite?",
        "enunciado": "There is an \nundirected\n graph with \nn\n nodes, where each node is numbered between \n0\n and \nn - 1\n. You are given a 2D array \ngraph\n, where \ngraph[u]\n is an array of nodes that node \nu\n is adjacent to. More formally, for each \nv\n in \ngraph[u]\n, there is an undirected edge between node \nu\n and node \nv\n. The graph has the following properties:\n\n\n\n\nThere are no self-edges (\ngraph[u]\n does not contain \nu\n).\n\n\nThere are no parallel edges (\ngraph[u]\n does not contain duplicate values).\n\n\nIf \nv\n is in \ngraph[u]\n, then \nu\n is in \ngraph[v]\n (the graph is undirected).\n\n\nThe graph may not be connected, meaning there may be two nodes \nu\n and \nv\n such that there is no path between them.\n\n\n\n\nA graph is \nbipartite\n if the nodes can be partitioned into two independent sets \nA\n and \nB\n such that \nevery\n edge in the graph connects a node in set \nA\n and a node in set \nB\n.\n\n\nReturn \ntrue\n if and only if it is \nbipartite\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n graph = [[1,2,3],[0,2],[0,1,3],[0,2]]\n\nOutput:\n false\n\nExplanation:\n There is no way to partition the nodes into two independent sets such that every edge connects a node in one and a node in the other.\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n graph = [[1,3],[0,2],[1,3],[0,2]]\n\nOutput:\n true\n\nExplanation:\n We can partition the nodes into two sets: {0, 2} and {1, 3}.\n\n\n \n\n\nConstraints:\n\n\n\n\ngraph.length == n\n\n\n1 <= n <= 100\n\n\n0 <= graph[u].length < n\n\n\n0 <= graph[u][i] <= n - 1\n\n\ngraph[u]\n does not contain \nu\n.\n\n\nAll the values of \ngraph[u]\n are \nunique\n.\n\n\nIf \ngraph[u]\n contains \nv\n, then \ngraph[v]\n contains \nu\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 784,
        "slug": "letter-case-permutation",
        "url": "https://leetcode.com/problems/letter-case-permutation/",
        "titulo": "Letter Case Permutation",
        "enunciado": "Given a string \ns\n, you can transform every letter individually to be lowercase or uppercase to create another string.\n\n\nReturn \na list of all possible strings we could create\n. Return the output in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"a1b2\"\n\nOutput:\n [\"a1b2\",\"a1B2\",\"A1b2\",\"A1B2\"]\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"3z4\"\n\nOutput:\n [\"3z4\",\"3Z4\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 12\n\n\ns\n consists of lowercase English letters, uppercase English letters, and digits.",
        "temas": [
            "String",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 781,
        "slug": "rabbits-in-forest",
        "url": "https://leetcode.com/problems/rabbits-in-forest/",
        "titulo": "Rabbits in Forest",
        "enunciado": "There is a forest with an unknown number of rabbits. We asked n rabbits \n\"How many rabbits have the same color as you?\"\n and collected the answers in an integer array \nanswers\n where \nanswers[i]\n is the answer of the \ni\nth\n rabbit.\n\n\nGiven the array \nanswers\n, return \nthe minimum number of rabbits that could be in the forest\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n answers = [1,1,2]\n\nOutput:\n 5\n\nExplanation:\n\nThe two rabbits that answered \"1\" could both be the same color, say red.\nThe rabbit that answered \"2\" can't be red or the answers would be inconsistent.\nSay the rabbit that answered \"2\" was blue.\nThen there should be 2 other blue rabbits in the forest that didn't answer into the array.\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn't.\n\n\n\nExample 2:\n\n\n\n\nInput:\n answers = [10,10,10]\n\nOutput:\n 11\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= answers.length <= 1000\n\n\n0 <= answers[i] < 1000",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 779,
        "slug": "k-th-symbol-in-grammar",
        "url": "https://leetcode.com/problems/k-th-symbol-in-grammar/",
        "titulo": "K-th Symbol in Grammar",
        "enunciado": "We build a table of \nn\n rows (\n1-indexed\n). We start by writing \n0\n in the \n1\nst\n row. Now in every subsequent row, we look at the previous row and replace each occurrence of \n0\n with \n01\n, and each occurrence of \n1\n with \n10\n.\n\n\n\n\nFor example, for \nn = 3\n, the \n1\nst\n row is \n0\n, the \n2\nnd\n row is \n01\n, and the \n3\nrd\n row is \n0110\n.\n\n\n\n\nGiven two integer \nn\n and \nk\n, return the \nk\nth\n (\n1-indexed\n) symbol in the \nn\nth\n row of a table of \nn\n rows.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1, k = 1\n\nOutput:\n 0\n\nExplanation:\n row 1: \n0\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, k = 1\n\nOutput:\n 0\n\nExplanation:\n \nrow 1: 0\nrow 2: \n0\n1\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 2, k = 2\n\nOutput:\n 1\n\nExplanation:\n \nrow 1: 0\nrow 2: 0\n1\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 30\n\n\n1 <= k <= 2\nn - 1",
        "temas": [
            "Math",
            "Bit Manipulation",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 777,
        "slug": "swap-adjacent-in-lr-string",
        "url": "https://leetcode.com/problems/swap-adjacent-in-lr-string/",
        "titulo": "Swap Adjacent in LR String",
        "enunciado": "In a string composed of \n'L'\n, \n'R'\n, and \n'X'\n characters, like \n\"RXXLRXRXL\"\n, a move consists of either replacing one occurrence of \n\"XL\"\n with \n\"LX\"\n, or replacing one occurrence of \n\"RX\"\n with \n\"XR\"\n. Given the starting string \nstart\n and the ending string \nresult\n, return \nTrue\n if and only if there exists a sequence of moves to transform \nstart\n to \nresult\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n start = \"RXXLRXRXL\", result = \"XRLXXRRLX\"\n\nOutput:\n true\n\nExplanation:\n We can transform start to result following these steps:\nRXXLRXRXL ->\nXRXLRXRXL ->\nXRLXRXRXL ->\nXRLXXRRXL ->\nXRLXXRRLX\n\n\n\nExample 2:\n\n\n\n\nInput:\n start = \"X\", result = \"L\"\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= start.length <= 10\n4\n\n\nstart.length == result.length\n\n\nBoth \nstart\n and \nresult\n will only consist of characters in \n'L'\n, \n'R'\n, and \n'X'\n.",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 775,
        "slug": "global-and-local-inversions",
        "url": "https://leetcode.com/problems/global-and-local-inversions/",
        "titulo": "Global and Local Inversions",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n which represents a permutation of all the integers in the range \n[0, n - 1]\n.\n\n\nThe number of \nglobal inversions\n is the number of the different pairs \n(i, j)\n where:\n\n\n\n\n0 <= i < j < n\n\n\nnums[i] > nums[j]\n\n\n\n\nThe number of \nlocal inversions\n is the number of indices \ni\n where:\n\n\n\n\n0 <= i < n - 1\n\n\nnums[i] > nums[i + 1]\n\n\n\n\nReturn \ntrue\n \nif the number of \nglobal inversions\n is equal to the number of \nlocal inversions\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,0,2]\n\nOutput:\n true\n\nExplanation:\n There is 1 global inversion and 1 local inversion.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,0]\n\nOutput:\n false\n\nExplanation:\n There are 2 global inversions and 1 local inversion.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= nums[i] < n\n\n\nAll the integers of \nnums\n are \nunique\n.\n\n\nnums\n is a permutation of all the numbers in the range \n[0, n - 1]\n.",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 701,
        "slug": "insert-into-a-binary-search-tree",
        "url": "https://leetcode.com/problems/insert-into-a-binary-search-tree/",
        "titulo": "Insert into a Binary Search Tree",
        "enunciado": "You are given the \nroot\n node of a binary search tree (BST) and a \nvalue\n to insert into the tree. Return \nthe root node of the BST after the insertion\n. It is \nguaranteed\n that the new value does not exist in the original BST.\n\n\nNotice\n that there may exist multiple valid ways for the insertion, as long as the tree remains a BST after insertion. You can return \nany of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [4,2,7,1,3], val = 5\n\nOutput:\n [4,2,7,1,3,5]\n\nExplanation:\n Another accepted tree is:\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [40,20,60,10,30,50,70], val = 25\n\nOutput:\n [40,20,60,10,30,50,70,null,null,25]\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [4,2,7,1,3,null,null,null,null,null,null], val = 5\n\nOutput:\n [4,2,7,1,3,5]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree will be in the range \n[0, 10\n4\n]\n.\n\n\n-10\n8\n <= Node.val <= 10\n8\n\n\nAll the values \nNode.val\n are \nunique\n.\n\n\n-10\n8\n <= val <= 10\n8\n\n\nIt's \nguaranteed\n that \nval\n does not exist in the original BST.",
        "temas": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 769,
        "slug": "max-chunks-to-make-sorted",
        "url": "https://leetcode.com/problems/max-chunks-to-make-sorted/",
        "titulo": "Max Chunks To Make Sorted",
        "enunciado": "You are given an integer array \narr\n of length \nn\n that represents a permutation of the integers in the range \n[0, n - 1]\n.\n\n\nWe split \narr\n into some number of \nchunks\n (i.e., partitions), and individually sort each chunk. After concatenating them, the result should equal the sorted array.\n\n\nReturn \nthe largest number of chunks we can make to sort the array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arr = [4,3,2,1,0]\n\nOutput:\n 1\n\nExplanation:\n\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn't sorted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arr = [1,0,2,3,4]\n\nOutput:\n 4\n\nExplanation:\n\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == arr.length\n\n\n1 <= n <= 10\n\n\n0 <= arr[i] < n\n\n\nAll the elements of \narr\n are \nunique\n.",
        "temas": [
            "Array",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 767,
        "slug": "reorganize-string",
        "url": "https://leetcode.com/problems/reorganize-string/",
        "titulo": "Reorganize String",
        "enunciado": "Given a string \ns\n, rearrange the characters of \ns\n so that any two adjacent characters are not the same.\n\n\nReturn \nany possible rearrangement of\n \ns\n \nor return\n \n\"\"\n \nif not possible\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"aab\"\n\nOutput:\n \"aba\"\n\nExample 2:\n\n\nInput:\n s = \"aaab\"\n\nOutput:\n \"\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 500\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 558,
        "slug": "logical-or-of-two-binary-grids-represented-as-quad-trees",
        "url": "https://leetcode.com/problems/logical-or-of-two-binary-grids-represented-as-quad-trees/",
        "titulo": "Logical OR of Two Binary Grids Represented as Quad-Trees",
        "enunciado": "A Binary Matrix is a matrix in which all the elements are either \n0\n or \n1\n.\n\n\nGiven \nquadTree1\n and \nquadTree2\n. \nquadTree1\n represents a \nn * n\n binary matrix and \nquadTree2\n represents another \nn * n\n binary matrix.\n\n\nReturn \na Quad-Tree\n representing the \nn * n\n binary matrix which is the result of \nlogical bitwise OR\n of the two binary matrixes represented by \nquadTree1\n and \nquadTree2\n.\n\n\nNotice that you can assign the value of a node to \nTrue\n or \nFalse\n when \nisLeaf\n is \nFalse\n, and both are \naccepted\n in the answer.\n\n\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\n\n\n\n\nval\n: True if the node represents a grid of 1's or False if the node represents a grid of 0's.\n\n\nisLeaf\n: True if the node is leaf node on the tree or False if the node has the four children.\n\n\n\n\n\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\n\n\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\n\n\n\n\nIf the current grid has the same value (i.e all \n1's\n or all \n0's\n) set \nisLeaf\n True and set \nval\n to the value of the grid and set the four children to Null and stop.\n\n\nIf the current grid has different values, set \nisLeaf\n to False and set \nval\n to any value and divide the current grid into four sub-grids as shown in the photo.\n\n\nRecurse for each of the children with the proper sub-grid.\n\n\n\n\n\n\nIf you want to know more about the Quad-Tree, you can refer to the \nwiki\n.\n\n\nQuad-Tree format:\n\n\nThe input/output represents the serialized format of a Quad-Tree using level order traversal, where \nnull\n signifies a path terminator where no node exists below.\n\n\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list \n[isLeaf, val]\n.\n\n\nIf the value of \nisLeaf\n or \nval\n is True we represent it as \n1\n in the list \n[isLeaf, val]\n and if the value of \nisLeaf\n or \nval\n is False we represent it as \n0\n.\n\n\n \n\n\nExample 1:\n\n\n \n\n\n\n\nInput:\n quadTree1 = [[0,1],[1,1],[1,1],[1,0],[1,0]]\n, quadTree2 = [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\n\nOutput:\n [[0,0],[1,1],[1,1],[1,1],[1,0]]\n\nExplanation:\n quadTree1 and quadTree2 are shown above. You can see the binary matrix which is represented by each Quad-Tree.\nIf we apply logical bitwise OR on the two binary matrices we get the binary matrix below which is represented by the result Quad-Tree.\nNotice that the binary matrices shown are only for illustration, you don't have to construct the binary matrix to get the result tree.\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n quadTree1 = [[1,0]], quadTree2 = [[1,0]]\n\nOutput:\n [[1,0]]\n\nExplanation:\n Each tree represents a binary matrix of size 1*1. Each matrix contains only zero.\nThe resulting matrix is of size 1*1 with also zero.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nquadTree1\n and \nquadTree2\n are both \nvalid\n Quad-Trees each representing a \nn * n\n grid.\n\n\nn == 2\nx\n where \n0 <= x <= 9\n.",
        "temas": [
            "Divide and Conquer",
            "Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Divide and Conquer",
        "has_image": true
    },
    {
        "id": 427,
        "slug": "construct-quad-tree",
        "url": "https://leetcode.com/problems/construct-quad-tree/",
        "titulo": "Construct Quad Tree",
        "enunciado": "Given a \nn * n\n matrix \ngrid\n of \n0's\n and \n1's\n only. We want to represent \ngrid\n with a Quad-Tree.\n\n\nReturn \nthe root of the Quad-Tree representing \ngrid\n.\n\n\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\n\n\n\n\nval\n: True if the node represents a grid of 1's or False if the node represents a grid of 0's. Notice that you can assign the \nval\n to True or False when \nisLeaf\n is False, and both are accepted in the answer.\n\n\nisLeaf\n: True if the node is a leaf node on the tree or False if the node has four children.\n\n\n\n\n\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\n\n\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\n\n\n\n\nIf the current grid has the same value (i.e all \n1's\n or all \n0's\n) set \nisLeaf\n True and set \nval\n to the value of the grid and set the four children to Null and stop.\n\n\nIf the current grid has different values, set \nisLeaf\n to False and set \nval\n to any value and divide the current grid into four sub-grids as shown in the photo.\n\n\nRecurse for each of the children with the proper sub-grid.\n\n\n\n\n\n\nIf you want to know more about the Quad-Tree, you can refer to the \nwiki\n.\n\n\nQuad-Tree format:\n\n\nYou don't need to read this section for solving the problem. This is only if you want to understand the output format here. The output represents the serialized format of a Quad-Tree using level order traversal, where \nnull\n signifies a path terminator where no node exists below.\n\n\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list \n[isLeaf, val]\n.\n\n\nIf the value of \nisLeaf\n or \nval\n is True we represent it as \n1\n in the list \n[isLeaf, val]\n and if the value of \nisLeaf\n or \nval\n is False we represent it as \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,1],[1,0]]\n\nOutput:\n [[0,1],[1,0],[1,1],[1,1],[1,0]]\n\nExplanation:\n The explanation of this example is shown below:\nNotice that 0 represents False and 1 represents True in the photo representing the Quad-Tree.\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n grid = [[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0],[1,1,1,1,0,0,0,0]]\n\nOutput:\n [[0,1],[1,1],[0,1],[1,1],[1,0],null,null,null,null,[1,0],[1,0],[1,1],[1,1]]\n\nExplanation:\n All values in the grid are not the same. We divide the grid into four sub-grids.\nThe topLeft, bottomLeft and bottomRight each has the same value.\nThe topRight have different values so we divide it into 4 sub-grids where each has the same value.\nExplanation is shown in the photo below:\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == grid.length == grid[i].length\n\n\nn == 2\nx\n where \n0 <= x <= 6",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Tree",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 764,
        "slug": "largest-plus-sign",
        "url": "https://leetcode.com/problems/largest-plus-sign/",
        "titulo": "Largest Plus Sign",
        "enunciado": "You are given an integer \nn\n. You have an \nn x n\n binary grid \ngrid\n with all values initially \n1\n's except for some indices given in the array \nmines\n. The \ni\nth\n element of the array \nmines\n is defined as \nmines[i] = [x\ni\n, y\ni\n]\n where \ngrid[x\ni\n][y\ni\n] == 0\n.\n\n\nReturn \nthe order of the largest \naxis-aligned\n plus sign of \n1\n's contained in \ngrid\n. If there is none, return \n0\n.\n\n\nAn \naxis-aligned plus sign\n of \n1\n's of order \nk\n has some center \ngrid[r][c] == 1\n along with four arms of length \nk - 1\n going up, down, left, and right, and made of \n1\n's. Note that there could be \n0\n's or \n1\n's beyond the arms of the plus sign, only the relevant area of the plus sign is checked for \n1\n's.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 5, mines = [[4,2]]\n\nOutput:\n 2\n\nExplanation:\n In the above grid, the largest plus sign can only be of order 2. One of them is shown.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 1, mines = [[0,0]]\n\nOutput:\n 0\n\nExplanation:\n There is no plus sign, so return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 500\n\n\n1 <= mines.length <= 5000\n\n\n0 <= x\ni\n, y\ni\n < n\n\n\nAll the pairs \n(x\ni\n, y\ni\n)\n are \nunique\n.",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 763,
        "slug": "partition-labels",
        "url": "https://leetcode.com/problems/partition-labels/",
        "titulo": "Partition Labels",
        "enunciado": "You are given a string \ns\n. We want to partition the string into as many parts as possible so that each letter appears in at most one part. For example, the string \n\"ababcc\"\n can be partitioned into \n[\"abab\", \"cc\"]\n, but partitions such as \n[\"aba\", \"bcc\"]\n or \n[\"ab\", \"ab\", \"cc\"]\n are invalid.\n\n\nNote that the partition is done so that after concatenating all the parts in order, the resultant string should be \ns\n.\n\n\nReturn \na list of integers representing the size of these parts\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"ababcbacadefegdehijhklij\"\n\nOutput:\n [9,7,8]\n\nExplanation:\n\nThe partition is \"ababcbaca\", \"defegde\", \"hijhklij\".\nThis is a partition so that each letter appears in at most one part.\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits s into less parts.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"eccbbbbdec\"\n\nOutput:\n [10]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 500\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 430,
        "slug": "flatten-a-multilevel-doubly-linked-list",
        "url": "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list/",
        "titulo": "Flatten a Multilevel Doubly Linked List",
        "enunciado": "You are given a doubly linked list, which contains nodes that have a next pointer, a previous pointer, and an additional \nchild pointer\n. This child pointer may or may not point to a separate doubly linked list, also containing these special nodes. These child lists may have one or more children of their own, and so on, to produce a \nmultilevel data structure\n as shown in the example below.\n\n\nGiven the \nhead\n of the first level of the list, \nflatten\n the list so that all the nodes appear in a single-level, doubly linked list. Let \ncurr\n be a node with a child list. The nodes in the child list should appear \nafter\n \ncurr\n and \nbefore\n \ncurr.next\n in the flattened list.\n\n\nReturn \nthe \nhead\n of the flattened list. The nodes in the list must have \nall\n of their child pointers set to \nnull\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]\n\nOutput:\n [1,2,3,7,8,11,12,9,10,4,5,6]\n\nExplanation:\n The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n\n\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,2,null,3]\n\nOutput:\n [1,3,2]\n\nExplanation:\n The multilevel linked list in the input is shown.\nAfter flattening the multilevel linked list it becomes:\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n head = []\n\nOutput:\n []\n\nExplanation:\n There could be empty list in the input.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of Nodes will not exceed \n1000\n.\n\n\n1 <= Node.val <= 10\n5\n\n\n\n\n \n\n\nHow the multilevel linked list is represented in test cases:\n\n\nWe use the multilevel linked list from \nExample 1\n above:\n\n\n\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL\n\n\nThe serialization of each level is as follows:\n\n\n\n[1,2,3,4,5,6,null]\n[7,8,9,10,null]\n[11,12,null]\n\n\n\nTo serialize all levels together, we will add nulls in each level to signify no node connects to the upper node of the previous level. The serialization becomes:\n\n\n\n[1,    2,    3, 4, 5, 6, null]\n             |\n[null, null, 7,    8, 9, 10, null]\n                   |\n[            null, 11, 12, null]\n\n\n\nMerging the serialization of each level and removing trailing nulls we obtain:\n\n\n\n[1,2,3,4,5,6,null,null,null,7,8,9,10,null,null,11,12]",
        "temas": [
            "Linked List",
            "Depth-First Search",
            "Doubly-Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 429,
        "slug": "n-ary-tree-level-order-traversal",
        "url": "https://leetcode.com/problems/n-ary-tree-level-order-traversal/",
        "titulo": "N-ary Tree Level Order Traversal",
        "enunciado": "Given an n-ary tree, return the \nlevel order\n traversal of its nodes' values.\n\n\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,null,3,2,4,null,5,6]\n\nOutput:\n [[1],[3,2,4],[5,6]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n\nOutput:\n [[1],[2,3,4,5],[6,7,8,9,10],[11,12,13],[14]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe height of the n-ary tree is less than or equal to \n1000\n\n\nThe total number of nodes is between \n[0, 10\n4\n]",
        "temas": [
            "Tree",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 756,
        "slug": "pyramid-transition-matrix",
        "url": "https://leetcode.com/problems/pyramid-transition-matrix/",
        "titulo": "Pyramid Transition Matrix",
        "enunciado": "You are stacking blocks to form a pyramid. Each block has a color, which is represented by a single letter. Each row of blocks contains \none less block\n than the row beneath it and is centered on top.\n\n\nTo make the pyramid aesthetically pleasing, there are only specific \ntriangular patterns\n that are allowed. A triangular pattern consists of a \nsingle block\n stacked on top of \ntwo blocks\n. The patterns are given as a list of three-letter strings \nallowed\n, where the first two characters of a pattern represent the left and right bottom blocks respectively, and the third character is the top block.\n\n\n\n\nFor example, \n\"ABC\"\n represents a triangular pattern with a \n'C'\n block stacked on top of an \n'A'\n (left) and \n'B'\n (right) block. Note that this is different from \n\"BAC\"\n where \n'B'\n is on the left bottom and \n'A'\n is on the right bottom.\n\n\n\n\nYou start with a bottom row of blocks \nbottom\n, given as a single string, that you \nmust\n use as the base of the pyramid.\n\n\nGiven \nbottom\n and \nallowed\n, return \ntrue\n if you can build the pyramid all the way to the top such that \nevery triangular pattern\n in the pyramid is in \nallowed\n, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n bottom = \"BCD\", allowed = [\"BCC\",\"CDE\",\"CEA\",\"FFF\"]\n\nOutput:\n true\n\nExplanation:\n The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 3), we can build \"CE\" on level 2 and then build \"A\" on level 1.\nThere are three triangular patterns in the pyramid, which are \"BCC\", \"CDE\", and \"CEA\". All are allowed.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n bottom = \"AAAA\", allowed = [\"AAB\",\"AAC\",\"BCD\",\"BBE\",\"DEF\"]\n\nOutput:\n false\n\nExplanation:\n The allowed triangular patterns are shown on the right.\nStarting from the bottom (level 4), there are multiple ways to build level 3, but trying all the possibilites, you will get always stuck before building level 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= bottom.length <= 6\n\n\n0 <= allowed.length <= 216\n\n\nallowed[i].length == 3\n\n\nThe letters in all input strings are from the set \n{'A', 'B', 'C', 'D', 'E', 'F'}\n.\n\n\nAll the values of \nallowed\n are \nunique\n.",
        "temas": [
            "Bit Manipulation",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Bit Manipulation",
        "has_image": true
    },
    {
        "id": 754,
        "slug": "reach-a-number",
        "url": "https://leetcode.com/problems/reach-a-number/",
        "titulo": "Reach a Number",
        "enunciado": "You are standing at position \n0\n on an infinite number line. There is a destination at position \ntarget\n.\n\n\nYou can make some number of moves \nnumMoves\n so that:\n\n\n\n\nOn each move, you can either go left or right.\n\n\nDuring the \ni\nth\n move (starting from \ni == 1\n to \ni == numMoves\n), you take \ni\n steps in the chosen direction.\n\n\n\n\nGiven the integer \ntarget\n, return \nthe \nminimum\n number of moves required (i.e., the minimum \nnumMoves\n) to reach the destination\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n target = 2\n\nOutput:\n 3\n\nExplanation:\n\nOn the 1\nst\n move, we step from 0 to 1 (1 step).\nOn the 2\nnd\n move, we step from 1 to -1 (2 steps).\nOn the 3\nrd\n move, we step from -1 to 2 (3 steps).\n\n\n\nExample 2:\n\n\n\n\nInput:\n target = 3\n\nOutput:\n 2\n\nExplanation:\n\nOn the 1\nst\n move, we step from 0 to 1 (1 step).\nOn the 2\nnd\n move, we step from 1 to 3 (2 steps).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-10\n9\n <= target <= 10\n9\n\n\ntarget != 0",
        "temas": [
            "Math",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 752,
        "slug": "open-the-lock",
        "url": "https://leetcode.com/problems/open-the-lock/",
        "titulo": "Open the Lock",
        "enunciado": "You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: \n'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'\n. The wheels can rotate freely and wrap around: for example we can turn \n'9'\n to be \n'0'\n, or \n'0'\n to be \n'9'\n. Each move consists of turning one wheel one slot.\n\n\nThe lock initially starts at \n'0000'\n, a string representing the state of the 4 wheels.\n\n\nYou are given a list of \ndeadends\n dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\n\n\nGiven a \ntarget\n representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"\n\nOutput:\n 6\n\nExplanation:\n \nA sequence of valid moves would be \"0000\" -> \"1000\" -> \"1100\" -> \"1200\" -> \"1201\" -> \"1202\" -> \"0202\".\nNote that a sequence like \"0000\" -> \"0001\" -> \"0002\" -> \"0102\" -> \"0202\" would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n deadends = [\"8888\"], target = \"0009\"\n\nOutput:\n 1\n\nExplanation:\n We can turn the last wheel in reverse to move from \"0000\" -> \"0009\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"\n\nOutput:\n -1\n\nExplanation:\n We cannot reach the target without getting stuck.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= deadends.length <= 500\n\n\ndeadends[i].length == 4\n\n\ntarget.length == 4\n\n\ntarget \nwill not be\n in the list \ndeadends\n.\n\n\ntarget\n and \ndeadends[i]\n consist of digits only.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 743,
        "slug": "network-delay-time",
        "url": "https://leetcode.com/problems/network-delay-time/",
        "titulo": "Network Delay Time",
        "enunciado": "You are given a network of \nn\n nodes, labeled from \n1\n to \nn\n. You are also given \ntimes\n, a list of travel times as directed edges \ntimes[i] = (u\ni\n, v\ni\n, w\ni\n)\n, where \nu\ni\n is the source node, \nv\ni\n is the target node, and \nw\ni\n is the time it takes for a signal to travel from source to target.\n\n\nWe will send a signal from a given node \nk\n. Return \nthe \nminimum\n time it takes for all the\n \nn\n \nnodes to receive the signal\n. If it is impossible for all the \nn\n nodes to receive the signal, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n times = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n times = [[1,2,1]], n = 2, k = 1\n\nOutput:\n 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n times = [[1,2,1]], n = 2, k = 2\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= n <= 100\n\n\n1 <= times.length <= 6000\n\n\ntimes[i].length == 3\n\n\n1 <= u\ni\n, v\ni\n <= n\n\n\nu\ni\n != v\ni\n\n\n0 <= w\ni\n <= 100\n\n\nAll the pairs \n(u\ni\n, v\ni\n)\n are \nunique\n. (i.e., no multiple edges.)",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Heap (Priority Queue)",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 740,
        "slug": "delete-and-earn",
        "url": "https://leetcode.com/problems/delete-and-earn/",
        "titulo": "Delete and Earn",
        "enunciado": "You are given an integer array \nnums\n. You want to maximize the number of points you get by performing the following operation any number of times:\n\n\n\n\nPick any \nnums[i]\n and delete it to earn \nnums[i]\n points. Afterwards, you must delete \nevery\n element equal to \nnums[i] - 1\n and \nevery\n element equal to \nnums[i] + 1\n.\n\n\n\n\nReturn \nthe \nmaximum number of points\n you can earn by applying the above operation some number of times\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,4,2]\n\nOutput:\n 6\n\nExplanation:\n You can perform the following operations:\n- Delete 4 to earn 4 points. Consequently, 3 is also deleted. nums = [2].\n- Delete 2 to earn 2 points. nums = [].\nYou earn a total of 6 points.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,2,3,3,3,4]\n\nOutput:\n 9\n\nExplanation:\n You can perform the following operations:\n- Delete a 3 to earn 3 points. All 2's and 4's are also deleted. nums = [3,3].\n- Delete a 3 again to earn 3 points. nums = [3].\n- Delete a 3 once more to earn 3 points. nums = [].\nYou earn a total of 9 points.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n4\n\n\n1 <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Hash Table",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 739,
        "slug": "daily-temperatures",
        "url": "https://leetcode.com/problems/daily-temperatures/",
        "titulo": "Daily Temperatures",
        "enunciado": "Given an array of integers \ntemperatures\n represents the daily temperatures, return \nan array\n \nanswer\n \nsuch that\n \nanswer[i]\n \nis the number of days you have to wait after the\n \ni\nth\n \nday to get a warmer temperature\n. If there is no future day for which this is possible, keep \nanswer[i] == 0\n instead.\n\n\n \n\n\nExample 1:\n\n\nInput:\n temperatures = [73,74,75,71,69,72,76,73]\n\nOutput:\n [1,1,4,2,1,1,0,0]\n\nExample 2:\n\n\nInput:\n temperatures = [30,40,50,60]\n\nOutput:\n [1,1,1,0]\n\nExample 3:\n\n\nInput:\n temperatures = [30,60,90]\n\nOutput:\n [1,1,0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= temperatures.length <= 10\n5\n\n\n30 <= temperatures[i] <= 100",
        "temas": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 738,
        "slug": "monotone-increasing-digits",
        "url": "https://leetcode.com/problems/monotone-increasing-digits/",
        "titulo": "Monotone Increasing Digits",
        "enunciado": "An integer has \nmonotone increasing digits\n if and only if each pair of adjacent digits \nx\n and \ny\n satisfy \nx <= y\n.\n\n\nGiven an integer \nn\n, return \nthe largest number that is less than or equal to \nn\n with \nmonotone increasing digits\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 9\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1234\n\nOutput:\n 1234\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 332\n\nOutput:\n 299\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10\n9",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 735,
        "slug": "asteroid-collision",
        "url": "https://leetcode.com/problems/asteroid-collision/",
        "titulo": "Asteroid Collision",
        "enunciado": "We are given an array \nasteroids\n of integers representing asteroids in a row. The indices of the asteriod in the array represent their relative position in space.\n\n\nFor each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.\n\n\nFind out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n asteroids = [5,10,-5]\n\nOutput:\n [5,10]\n\nExplanation:\n The 10 and -5 collide resulting in 10. The 5 and 10 never collide.\n\n\n\nExample 2:\n\n\n\n\nInput:\n asteroids = [8,-8]\n\nOutput:\n []\n\nExplanation:\n The 8 and -8 collide exploding each other.\n\n\n\nExample 3:\n\n\n\n\nInput:\n asteroids = [10,2,-5]\n\nOutput:\n [10]\n\nExplanation:\n The 2 and -5 collide resulting in -5. The 10 and -5 collide resulting in 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= asteroids.length <= 10\n4\n\n\n-1000 <= asteroids[i] <= 1000\n\n\nasteroids[i] != 0",
        "temas": [
            "Array",
            "Stack",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 731,
        "slug": "my-calendar-ii",
        "url": "https://leetcode.com/problems/my-calendar-ii/",
        "titulo": "My Calendar II",
        "enunciado": "You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a \ntriple booking\n.\n\n\nA \ntriple booking\n happens when three events have some non-empty intersection (i.e., some moment is common to all the three events.).\n\n\nThe event can be represented as a pair of integers \nstartTime\n and \nendTime\n that represents a booking on the half-open interval \n[startTime, endTime)\n, the range of real numbers \nx\n such that \nstartTime <= x < endTime\n.\n\n\nImplement the \nMyCalendarTwo\n class:\n\n\n\n\nMyCalendarTwo()\n Initializes the calendar object.\n\n\nboolean book(int startTime, int endTime)\n Returns \ntrue\n if the event can be added to the calendar successfully without causing a \ntriple booking\n. Otherwise, return \nfalse\n and do not add the event to the calendar.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MyCalendarTwo\", \"book\", \"book\", \"book\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]]\n\nOutput\n\n[null, true, true, true, false, true, true]\n\n\nExplanation\n\nMyCalendarTwo myCalendarTwo = new MyCalendarTwo();\nmyCalendarTwo.book(10, 20); // return True, The event can be booked. \nmyCalendarTwo.book(50, 60); // return True, The event can be booked. \nmyCalendarTwo.book(10, 40); // return True, The event can be double booked. \nmyCalendarTwo.book(5, 15);  // return False, The event cannot be booked, because it would result in a triple booking.\nmyCalendarTwo.book(5, 10); // return True, The event can be booked, as it does not use time 10 which is already double booked.\nmyCalendarTwo.book(25, 55); // return True, The event can be booked, as the time in [25, 40) will be double booked with the third event, the time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= start < end <= 10\n9\n\n\nAt most \n1000\n calls will be made to \nbook\n.",
        "temas": [
            "Array",
            "Binary Search",
            "Design",
            "Segment Tree",
            "Prefix Sum",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 729,
        "slug": "my-calendar-i",
        "url": "https://leetcode.com/problems/my-calendar-i/",
        "titulo": "My Calendar I",
        "enunciado": "You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a \ndouble booking\n.\n\n\nA \ndouble booking\n happens when two events have some non-empty intersection (i.e., some moment is common to both events.).\n\n\nThe event can be represented as a pair of integers \nstartTime\n and \nendTime\n that represents a booking on the half-open interval \n[startTime, endTime)\n, the range of real numbers \nx\n such that \nstartTime <= x < endTime\n.\n\n\nImplement the \nMyCalendar\n class:\n\n\n\n\nMyCalendar()\n Initializes the calendar object.\n\n\nboolean book(int startTime, int endTime)\n Returns \ntrue\n if the event can be added to the calendar successfully without causing a \ndouble booking\n. Otherwise, return \nfalse\n and do not add the event to the calendar.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MyCalendar\", \"book\", \"book\", \"book\"]\n[[], [10, 20], [15, 25], [20, 30]]\n\nOutput\n\n[null, true, false, true]\n\n\nExplanation\n\nMyCalendar myCalendar = new MyCalendar();\nmyCalendar.book(10, 20); // return True\nmyCalendar.book(15, 25); // return False, It can not be booked because time 15 is already booked by another event.\nmyCalendar.book(20, 30); // return True, The event can be booked, as the first event takes every time less than 20, but not including 20.\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= start < end <= 10\n9\n\n\nAt most \n1000\n calls will be made to \nbook\n.",
        "temas": [
            "Array",
            "Binary Search",
            "Design",
            "Segment Tree",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 725,
        "slug": "split-linked-list-in-parts",
        "url": "https://leetcode.com/problems/split-linked-list-in-parts/",
        "titulo": "Split Linked List in Parts",
        "enunciado": "Given the \nhead\n of a singly linked list and an integer \nk\n, split the linked list into \nk\n consecutive linked list parts.\n\n\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than one. This may lead to some parts being null.\n\n\nThe parts should be in the order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal to parts occurring later.\n\n\nReturn \nan array of the \nk\n parts\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3], k = 5\n\nOutput:\n [[1],[2],[3],[],[]]\n\nExplanation:\n\nThe first element output[0] has output[0].val = 1, output[0].next = null.\nThe last element output[4] is null, but its string representation as a ListNode is [].\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5,6,7,8,9,10], k = 3\n\nOutput:\n [[1,2,3,4],[5,6,7],[8,9,10]]\n\nExplanation:\n\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[0, 1000]\n.\n\n\n0 <= Node.val <= 1000\n\n\n1 <= k <= 50",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 722,
        "slug": "remove-comments",
        "url": "https://leetcode.com/problems/remove-comments/",
        "titulo": "Remove Comments",
        "enunciado": "Given a C++ program, remove comments from it. The program source is an array of strings \nsource\n where \nsource[i]\n is the \ni\nth\n line of the source code. This represents the result of splitting the original source code string by the newline character \n'\\n'\n.\n\n\nIn C++, there are two types of comments, line comments, and block comments.\n\n\n\n\nThe string \n\"//\"\n denotes a line comment, which represents that it and the rest of the characters to the right of it in the same line should be ignored.\n\n\nThe string \n\"/*\"\n denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of \n\"*/\"\n should be ignored. (Here, occurrences happen in reading order: line by line from left to right.) To be clear, the string \n\"/*/\"\n does not yet end the block comment, as the ending would be overlapping the beginning.\n\n\n\n\nThe first effective comment takes precedence over others.\n\n\n\n\nFor example, if the string \n\"//\"\n occurs in a block comment, it is ignored.\n\n\nSimilarly, if the string \n\"/*\"\n occurs in a line or block comment, it is also ignored.\n\n\n\n\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\n\n\nThere will be no control characters, single quote, or double quote characters.\n\n\n\n\nFor example, \nsource = \"string s = \"/* Not a comment. */\";\"\n will not be a test case.\n\n\n\n\nAlso, nothing else such as defines or macros will interfere with the comments.\n\n\nIt is guaranteed that every open block comment will eventually be closed, so \n\"/*\"\n outside of a line or block comment always starts a new comment.\n\n\nFinally, implicit newline characters can be deleted by block comments. Please see the examples below for details.\n\n\nAfter removing the comments from the source code, return \nthe source code in the same format\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n source = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]\n\nOutput:\n [\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]\n\nExplanation:\n The line by line code is visualized as below:\n/*Test program */\nint main()\n{ \n  // variable declaration \nint a, b, c;\n/* This is a test\n   multiline  \n   comment for \n   testing */\na = b + c;\n}\nThe string /* denotes a block comment, including line 1 and lines 6-9. The string // denotes line 4 as comments.\nThe line by line output code is visualized as below:\nint main()\n{ \n  \nint a, b, c;\na = b + c;\n}\n\n\n\nExample 2:\n\n\n\n\nInput:\n source = [\"a/*comment\", \"line\", \"more_comment*/b\"]\n\nOutput:\n [\"ab\"]\n\nExplanation:\n The original source string is \"a/*comment\\nline\\nmore_comment*/b\", where we have bolded the newline characters.  After deletion, the implicit newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= source.length <= 100\n\n\n0 <= source[i].length <= 80\n\n\nsource[i]\n consists of printable \nASCII\n characters.\n\n\nEvery open block comment is eventually closed.\n\n\nThere are no single-quote or double-quote in the input.",
        "temas": [
            "Array",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 721,
        "slug": "accounts-merge",
        "url": "https://leetcode.com/problems/accounts-merge/",
        "titulo": "Accounts Merge",
        "enunciado": "Given a list of \naccounts\n where each element \naccounts[i]\n is a list of strings, where the first element \naccounts[i][0]\n is a name, and the rest of the elements are \nemails\n representing emails of the account.\n\n\nNow, we would like to merge these accounts. Two accounts definitely belong to the same person if there is some common email to both accounts. Note that even if two accounts have the same name, they may belong to different people as people could have the same name. A person can have any number of accounts initially, but all of their accounts definitely have the same name.\n\n\nAfter merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails \nin sorted order\n. The accounts themselves can be returned in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n accounts = [[\"John\",\"johnsmith@mail.com\",\"john_newyork@mail.com\"],[\"John\",\"johnsmith@mail.com\",\"john00@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]\n\nOutput:\n [[\"John\",\"john00@mail.com\",\"john_newyork@mail.com\",\"johnsmith@mail.com\"],[\"Mary\",\"mary@mail.com\"],[\"John\",\"johnnybravo@mail.com\"]]\n\nExplanation:\n\nThe first and second John's are the same person as they have the common email \"johnsmith@mail.com\".\nThe third John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'], ['John', 'johnnybravo@mail.com'], \n['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n accounts = [[\"Gabe\",\"Gabe0@m.co\",\"Gabe3@m.co\",\"Gabe1@m.co\"],[\"Kevin\",\"Kevin3@m.co\",\"Kevin5@m.co\",\"Kevin0@m.co\"],[\"Ethan\",\"Ethan5@m.co\",\"Ethan4@m.co\",\"Ethan0@m.co\"],[\"Hanzo\",\"Hanzo3@m.co\",\"Hanzo1@m.co\",\"Hanzo0@m.co\"],[\"Fern\",\"Fern5@m.co\",\"Fern1@m.co\",\"Fern0@m.co\"]]\n\nOutput:\n [[\"Ethan\",\"Ethan0@m.co\",\"Ethan4@m.co\",\"Ethan5@m.co\"],[\"Gabe\",\"Gabe0@m.co\",\"Gabe1@m.co\",\"Gabe3@m.co\"],[\"Hanzo\",\"Hanzo0@m.co\",\"Hanzo1@m.co\",\"Hanzo3@m.co\"],[\"Kevin\",\"Kevin0@m.co\",\"Kevin3@m.co\",\"Kevin5@m.co\"],[\"Fern\",\"Fern0@m.co\",\"Fern1@m.co\",\"Fern5@m.co\"]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= accounts.length <= 1000\n\n\n2 <= accounts[i].length <= 10\n\n\n1 <= accounts[i][j].length <= 30\n\n\naccounts[i][0]\n consists of English letters.\n\n\naccounts[i][j] (for j > 0)\n is a valid email.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 720,
        "slug": "longest-word-in-dictionary",
        "url": "https://leetcode.com/problems/longest-word-in-dictionary/",
        "titulo": "Longest Word in Dictionary",
        "enunciado": "Given an array of strings \nwords\n representing an English Dictionary, return \nthe longest word in\n \nwords\n \nthat can be built one character at a time by other words in\n \nwords\n.\n\n\nIf there is more than one possible answer, return the longest word with the smallest lexicographical order. If there is no answer, return the empty string.\n\n\nNote that the word should be built from left to right with each additional character being added to the end of a previous word. \n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"w\",\"wo\",\"wor\",\"worl\",\"world\"]\n\nOutput:\n \"world\"\n\nExplanation:\n The word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"a\",\"banana\",\"app\",\"appl\",\"ap\",\"apply\",\"apple\"]\n\nOutput:\n \"apple\"\n\nExplanation:\n Both \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 1000\n\n\n1 <= words[i].length <= 30\n\n\nwords[i]\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Trie",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 718,
        "slug": "maximum-length-of-repeated-subarray",
        "url": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/",
        "titulo": "Maximum Length of Repeated Subarray",
        "enunciado": "Given two integer arrays \nnums1\n and \nnums2\n, return \nthe maximum length of a subarray that appears in \nboth\n arrays\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]\n\nOutput:\n 3\n\nExplanation:\n The repeated subarray with maximum length is [3,2,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]\n\nOutput:\n 5\n\nExplanation:\n The repeated subarray with maximum length is [0,0,0,0,0].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 1000\n\n\n0 <= nums1[i], nums2[i] <= 100",
        "temas": [
            "Array",
            "Binary Search",
            "Dynamic Programming",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 714,
        "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/",
        "titulo": "Best Time to Buy and Sell Stock with Transaction Fee",
        "enunciado": "You are given an array \nprices\n where \nprices[i]\n is the price of a given stock on the \ni\nth\n day, and an integer \nfee\n representing a transaction fee.\n\n\nFind the maximum profit you can achieve. You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction.\n\n\nNote:\n\n\n\n\nYou may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n\n\nThe transaction fee is only charged once for each stock purchase and sale.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n prices = [1,3,2,8,4,9], fee = 2\n\nOutput:\n 8\n\nExplanation:\n The maximum profit can be achieved by:\n- Buying at prices[0] = 1\n- Selling at prices[3] = 8\n- Buying at prices[4] = 4\n- Selling at prices[5] = 9\nThe total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\n\n\n\nExample 2:\n\n\n\n\nInput:\n prices = [1,3,7,5,10,3], fee = 3\n\nOutput:\n 6\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= prices.length <= 5 * 10\n4\n\n\n1 <= prices[i] < 5 * 10\n4\n\n\n0 <= fee < 5 * 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 713,
        "slug": "subarray-product-less-than-k",
        "url": "https://leetcode.com/problems/subarray-product-less-than-k/",
        "titulo": "Subarray Product Less Than K",
        "enunciado": "Given an array of integers \nnums\n and an integer \nk\n, return \nthe number of contiguous subarrays where the product of all the elements in the subarray is strictly less than \nk\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,5,2,6], k = 100\n\nOutput:\n 8\n\nExplanation:\n The 8 subarrays that have product less than 100 are:\n[10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3], k = 0\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\n1 <= nums[i] <= 1000\n\n\n0 <= k <= 10\n6",
        "temas": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 712,
        "slug": "minimum-ascii-delete-sum-for-two-strings",
        "url": "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings/",
        "titulo": "Minimum ASCII Delete Sum for Two Strings",
        "enunciado": "Given two strings \ns1\n and \ns2\n, return \nthe lowest \nASCII\n sum of deleted characters to make two strings equal\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"sea\", s2 = \"eat\"\n\nOutput:\n 231\n\nExplanation:\n Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\nDeleting \"t\" from \"eat\" adds 116 to the sum.\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"delete\", s2 = \"leet\"\n\nOutput:\n 403\n\nExplanation:\n Deleting \"dee\" from \"delete\" to turn the string into \"let\",\nadds 100[d] + 101[e] + 101[e] to the sum.\nDeleting \"e\" from \"leet\" adds 101[e] to the sum.\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s1.length, s2.length <= 1000\n\n\ns1\n and \ns2\n consist of lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 698,
        "slug": "partition-to-k-equal-sum-subsets",
        "url": "https://leetcode.com/problems/partition-to-k-equal-sum-subsets/",
        "titulo": "Partition to K Equal Sum Subsets",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \ntrue\n if it is possible to divide this array into \nk\n non-empty subsets whose sums are all equal.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,3,2,3,5,2,1], k = 4\n\nOutput:\n true\n\nExplanation:\n It is possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4], k = 3\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 16\n\n\n1 <= nums[i] <= 10\n4\n\n\nThe frequency of each element is in the range \n[1, 4]\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 695,
        "slug": "max-area-of-island",
        "url": "https://leetcode.com/problems/max-area-of-island/",
        "titulo": "Max Area of Island",
        "enunciado": "You are given an \nm x n\n binary matrix \ngrid\n. An island is a group of \n1\n's (representing land) connected \n4-directionally\n (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.\n\n\nThe \narea\n of an island is the number of cells with a value \n1\n in the island.\n\n\nReturn \nthe maximum \narea\n of an island in \ngrid\n. If there is no island, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[0,0,1,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,1,1,0,1,0,0,0,0,0,0,0,0],[0,1,0,0,1,1,0,0,1,0,1,0,0],[0,1,0,0,1,1,0,0,1,1,1,0,0],[0,0,0,0,0,0,0,0,0,0,1,0,0],[0,0,0,0,0,0,0,1,1,1,0,0,0],[0,0,0,0,0,0,0,1,1,0,0,0,0]]\n\nOutput:\n 6\n\nExplanation:\n The answer is not 11, because the island must be connected 4-directionally.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[0,0,0,0,0,0,0,0]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 50\n\n\ngrid[i][j]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 692,
        "slug": "top-k-frequent-words",
        "url": "https://leetcode.com/problems/top-k-frequent-words/",
        "titulo": "Top K Frequent Words",
        "enunciado": "Given an array of strings \nwords\n and an integer \nk\n, return \nthe \nk\n most frequent strings\n.\n\n\nReturn the answer \nsorted\n by \nthe frequency\n from highest to lowest. Sort the words with the same frequency by their \nlexicographical order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"i\",\"love\",\"leetcode\",\"i\",\"love\",\"coding\"], k = 2\n\nOutput:\n [\"i\",\"love\"]\n\nExplanation:\n \"i\" and \"love\" are the two most frequent words.\nNote that \"i\" comes before \"love\" due to a lower alphabetical order.\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"the\",\"day\",\"is\",\"sunny\",\"the\",\"the\",\"the\",\"sunny\",\"is\",\"is\"], k = 4\n\nOutput:\n [\"the\",\"is\",\"sunny\",\"day\"]\n\nExplanation:\n \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words, with the number of occurrence being 4, 3, 2 and 1 respectively.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= words.length <= 500\n\n\n1 <= words[i].length <= 10\n\n\nwords[i]\n consists of lowercase English letters.\n\n\nk\n is in the range \n[1, The number of \nunique\n words[i]]\n\n\n\n\n \n\n\nFollow-up:\n Could you solve it in \nO(n log(k))\n time and \nO(n)\n extra space?",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Trie",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 690,
        "slug": "employee-importance",
        "url": "https://leetcode.com/problems/employee-importance/",
        "titulo": "Employee Importance",
        "enunciado": "You have a data structure of employee information, including the employee's unique ID, importance value, and direct subordinates' IDs.\n\n\nYou are given an array of employees \nemployees\n where:\n\n\n\n\nemployees[i].id\n is the ID of the \ni\nth\n employee.\n\n\nemployees[i].importance\n is the importance value of the \ni\nth\n employee.\n\n\nemployees[i].subordinates\n is a list of the IDs of the direct subordinates of the \ni\nth\n employee.\n\n\n\n\nGiven an integer \nid\n that represents an employee's ID, return \nthe \ntotal\n importance value of this employee and all their direct and indirect subordinates\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n employees = [[1,5,[2,3]],[2,3,[]],[3,3,[]]], id = 1\n\nOutput:\n 11\n\nExplanation:\n Employee 1 has an importance value of 5 and has two direct subordinates: employee 2 and employee 3.\nThey both have an importance value of 3.\nThus, the total importance value of employee 1 is 5 + 3 + 3 = 11.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n employees = [[1,2,[5]],[5,-3,[]]], id = 5\n\nOutput:\n -3\n\nExplanation:\n Employee 5 has an importance value of -3 and has no direct subordinates.\nThus, the total importance value of employee 5 is -3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= employees.length <= 2000\n\n\n1 <= employees[i].id <= 2000\n\n\nAll \nemployees[i].id\n are \nunique\n.\n\n\n-100 <= employees[i].importance <= 100\n\n\nOne employee has at most one direct leader and may have several subordinates.\n\n\nThe IDs in \nemployees[i].subordinates\n are valid IDs.",
        "temas": [
            "Array",
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 688,
        "slug": "knight-probability-in-chessboard",
        "url": "https://leetcode.com/problems/knight-probability-in-chessboard/",
        "titulo": "Knight Probability in Chessboard",
        "enunciado": "On an \nn x n\n chessboard, a knight starts at the cell \n(row, column)\n and attempts to make exactly \nk\n moves. The rows and columns are \n0-indexed\n, so the top-left cell is \n(0, 0)\n, and the bottom-right cell is \n(n - 1, n - 1)\n.\n\n\nA chess knight has eight possible moves it can make, as illustrated below. Each move is two cells in a cardinal direction, then one cell in an orthogonal direction.\n\n\n\n\nEach time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.\n\n\nThe knight continues moving until it has made exactly \nk\n moves or has moved off the chessboard.\n\n\nReturn \nthe probability that the knight remains on the board after it has stopped moving\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, k = 2, row = 0, column = 0\n\nOutput:\n 0.06250\n\nExplanation:\n There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\nFrom each of those positions, there are also two moves that will keep the knight on the board.\nThe total probability the knight stays on the board is 0.0625.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1, k = 0, row = 0, column = 0\n\nOutput:\n 1.00000\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 25\n\n\n0 <= k <= 100\n\n\n0 <= row, column <= n - 1",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 687,
        "slug": "longest-univalue-path",
        "url": "https://leetcode.com/problems/longest-univalue-path/",
        "titulo": "Longest Univalue Path",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe length of the longest path, where each node in the path has the same value\n. This path may or may not pass through the root.\n\n\nThe length of the path\n between two nodes is represented by the number of edges between them.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,4,5,1,1,null,5]\n\nOutput:\n 2\n\nExplanation:\n The shown image shows that the longest path of the same value (i.e. 5).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,4,5,4,4,null,5]\n\nOutput:\n 2\n\nExplanation:\n The shown image shows that the longest path of the same value (i.e. 4).\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 10\n4\n]\n.\n\n\n-1000 <= Node.val <= 1000\n\n\nThe depth of the tree will not exceed \n1000\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 686,
        "slug": "repeated-string-match",
        "url": "https://leetcode.com/problems/repeated-string-match/",
        "titulo": "Repeated String Match",
        "enunciado": "Given two strings \na\n and \nb\n, return \nthe minimum number of times you should repeat string \na\n so that string\n \nb\n \nis a substring of it\n. If it is impossible for \nb\n​​​​​​ to be a substring of \na\n after repeating it, return \n-1\n.\n\n\nNotice:\n string \n\"abc\"\n repeated 0 times is \n\"\"\n, repeated 1 time is \n\"abc\"\n and repeated 2 times is \n\"abcabc\"\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = \"abcd\", b = \"cdabcdab\"\n\nOutput:\n 3\n\nExplanation:\n We return 3 because by repeating a three times \"ab\ncdabcdab\ncd\", b is a substring of it.\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = \"a\", b = \"aa\"\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a.length, b.length <= 10\n4\n\n\na\n and \nb\n consist of lowercase English letters.",
        "temas": [
            "String",
            "String Matching"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 684,
        "slug": "redundant-connection",
        "url": "https://leetcode.com/problems/redundant-connection/",
        "titulo": "Redundant Connection",
        "enunciado": "In this problem, a tree is an \nundirected graph\n that is connected and has no cycles.\n\n\nYou are given a graph that started as a tree with \nn\n nodes labeled from \n1\n to \nn\n, with one additional edge added. The added edge has two \ndifferent\n vertices chosen from \n1\n to \nn\n, and was not an edge that already existed. The graph is represented as an array \nedges\n of length \nn\n where \nedges[i] = [a\ni\n, b\ni\n]\n indicates that there is an edge between nodes \na\ni\n and \nb\ni\n in the graph.\n\n\nReturn \nan edge that can be removed so that the resulting graph is a tree of \nn\n nodes\n. If there are multiple answers, return the answer that occurs last in the input.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n edges = [[1,2],[1,3],[2,3]]\n\nOutput:\n [2,3]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n edges = [[1,2],[2,3],[3,4],[1,4],[1,5]]\n\nOutput:\n [1,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == edges.length\n\n\n3 <= n <= 1000\n\n\nedges[i].length == 2\n\n\n1 <= a\ni\n < b\ni\n <= edges.length\n\n\na\ni\n != b\ni\n\n\nThere are no repeated edges.\n\n\nThe given graph is connected.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 678,
        "slug": "valid-parenthesis-string",
        "url": "https://leetcode.com/problems/valid-parenthesis-string/",
        "titulo": "Valid Parenthesis String",
        "enunciado": "Given a string \ns\n containing only three types of characters: \n'('\n, \n')'\n and \n'*'\n, return \ntrue\n \nif\n \ns\n \nis \nvalid\n.\n\n\nThe following rules define a \nvalid\n string:\n\n\n\n\nAny left parenthesis \n'('\n must have a corresponding right parenthesis \n')'\n.\n\n\nAny right parenthesis \n')'\n must have a corresponding left parenthesis \n'('\n.\n\n\nLeft parenthesis \n'('\n must go before the corresponding right parenthesis \n')'\n.\n\n\n'*'\n could be treated as a single right parenthesis \n')'\n or a single left parenthesis \n'('\n or an empty string \n\"\"\n.\n\n\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"()\"\n\nOutput:\n true\n\nExample 2:\n\n\nInput:\n s = \"(*)\"\n\nOutput:\n true\n\nExample 3:\n\n\nInput:\n s = \"(*))\"\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 100\n\n\ns[i]\n is \n'('\n, \n')'\n or \n'*'\n.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Stack",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 677,
        "slug": "map-sum-pairs",
        "url": "https://leetcode.com/problems/map-sum-pairs/",
        "titulo": "Map Sum Pairs",
        "enunciado": "Design a map that allows you to do the following:\n\n\n\n\nMaps a string key to a given value.\n\n\nReturns the sum of the values that have a key with a prefix equal to a given string.\n\n\n\n\nImplement the \nMapSum\n class:\n\n\n\n\nMapSum()\n Initializes the \nMapSum\n object.\n\n\nvoid insert(String key, int val)\n Inserts the \nkey-val\n pair into the map. If the \nkey\n already existed, the original \nkey-value\n pair will be overridden to the new one.\n\n\nint sum(string prefix)\n Returns the sum of all the pairs' value whose \nkey\n starts with the \nprefix\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MapSum\", \"insert\", \"sum\", \"insert\", \"sum\"]\n[[], [\"apple\", 3], [\"ap\"], [\"app\", 2], [\"ap\"]]\n\nOutput\n\n[null, null, 3, null, 5]\n\n\nExplanation\n\nMapSum mapSum = new MapSum();\nmapSum.insert(\"apple\", 3);  \nmapSum.sum(\"ap\");           // return 3 (\nap\nple = 3)\nmapSum.insert(\"app\", 2);    \nmapSum.sum(\"ap\");           // return 5 (\nap\nple + \nap\np = 3 + 2 = 5)\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= key.length, prefix.length <= 50\n\n\nkey\n and \nprefix\n consist of only lowercase English letters.\n\n\n1 <= val <= 1000\n\n\nAt most \n50\n calls will be made to \ninsert\n and \nsum\n.",
        "temas": [
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 676,
        "slug": "implement-magic-dictionary",
        "url": "https://leetcode.com/problems/implement-magic-dictionary/",
        "titulo": "Implement Magic Dictionary",
        "enunciado": "Design a data structure that is initialized with a list of \ndifferent\n words. Provided a string, you should determine if you can change exactly one character in this string to match any word in the data structure.\n\n\nImplement the \nMagicDictionary\n class:\n\n\n\n\nMagicDictionary()\n Initializes the object.\n\n\nvoid buildDict(String[] dictionary)\n Sets the data structure with an array of distinct strings \ndictionary\n.\n\n\nbool search(String searchWord)\n Returns \ntrue\n if you can change \nexactly one character\n in \nsearchWord\n to match any string in the data structure, otherwise returns \nfalse\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MagicDictionary\", \"buildDict\", \"search\", \"search\", \"search\", \"search\"]\n[[], [[\"hello\", \"leetcode\"]], [\"hello\"], [\"hhllo\"], [\"hell\"], [\"leetcoded\"]]\n\nOutput\n\n[null, null, false, true, false, false]\n\n\nExplanation\n\nMagicDictionary magicDictionary = new MagicDictionary();\nmagicDictionary.buildDict([\"hello\", \"leetcode\"]);\nmagicDictionary.search(\"hello\"); // return False\nmagicDictionary.search(\"hhllo\"); // We can change the second 'h' to 'e' to match \"hello\" so we return True\nmagicDictionary.search(\"hell\"); // return False\nmagicDictionary.search(\"leetcoded\"); // return False\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= dictionary.length <= 100\n\n\n1 <= dictionary[i].length <= 100\n\n\ndictionary[i]\n consists of only lower-case English letters.\n\n\nAll the strings in \ndictionary\n are \ndistinct\n.\n\n\n1 <= searchWord.length <= 100\n\n\nsearchWord\n consists of only lower-case English letters.\n\n\nbuildDict\n will be called only once before \nsearch\n.\n\n\nAt most \n100\n calls will be made to \nsearch\n.",
        "temas": [
            "Hash Table",
            "String",
            "Depth-First Search",
            "Design",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 673,
        "slug": "number-of-longest-increasing-subsequence",
        "url": "https://leetcode.com/problems/number-of-longest-increasing-subsequence/",
        "titulo": "Number of Longest Increasing Subsequence",
        "enunciado": "Given an integer array \nnums\n, return \nthe number of longest increasing subsequences.\n\n\nNotice\n that the sequence has to be \nstrictly\n increasing.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,5,4,7]\n\nOutput:\n 2\n\nExplanation:\n The two longest increasing subsequences are [1, 3, 4, 7] and [1, 3, 5, 7].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,2,2,2,2]\n\nOutput:\n 5\n\nExplanation:\n The length of the longest increasing subsequence is 1, and there are 5 increasing subsequences of length 1, so output 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2000\n\n\n-10\n6\n <= nums[i] <= 10\n6\n\n\nThe answer is guaranteed to fit inside a 32-bit integer.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 672,
        "slug": "bulb-switcher-ii",
        "url": "https://leetcode.com/problems/bulb-switcher-ii/",
        "titulo": "Bulb Switcher II",
        "enunciado": "There is a room with \nn\n bulbs labeled from \n1\n to \nn\n that all are turned on initially, and \nfour buttons\n on the wall. Each of the four buttons has a different functionality where:\n\n\n\n\nButton 1:\n Flips the status of all the bulbs.\n\n\nButton 2:\n Flips the status of all the bulbs with even labels (i.e., \n2, 4, ...\n).\n\n\nButton 3:\n Flips the status of all the bulbs with odd labels (i.e., \n1, 3, ...\n).\n\n\nButton 4:\n Flips the status of all the bulbs with a label \nj = 3k + 1\n where \nk = 0, 1, 2, ...\n (i.e., \n1, 4, 7, 10, ...\n).\n\n\n\n\nYou must make \nexactly\n \npresses\n button presses in total. For each press, you may pick \nany\n of the four buttons to press.\n\n\nGiven the two integers \nn\n and \npresses\n, return \nthe number of \ndifferent possible statuses\n after performing all \npresses\n button presses\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 1, presses = 1\n\nOutput:\n 2\n\nExplanation:\n Status can be:\n- [off] by pressing button 1\n- [on] by pressing button 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 2, presses = 1\n\nOutput:\n 3\n\nExplanation:\n Status can be:\n- [off, off] by pressing button 1\n- [on, off] by pressing button 2\n- [off, on] by pressing button 3\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 3, presses = 1\n\nOutput:\n 4\n\nExplanation:\n Status can be:\n- [off, off, off] by pressing button 1\n- [off, on, off] by pressing button 2\n- [on, off, on] by pressing button 3\n- [off, on, on] by pressing button 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000\n\n\n0 <= presses <= 1000",
        "temas": [
            "Math",
            "Bit Manipulation",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 670,
        "slug": "maximum-swap",
        "url": "https://leetcode.com/problems/maximum-swap/",
        "titulo": "Maximum Swap",
        "enunciado": "You are given an integer \nnum\n. You can swap two digits at most once to get the maximum valued number.\n\n\nReturn \nthe maximum valued number you can get\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = 2736\n\nOutput:\n 7236\n\nExplanation:\n Swap the number 2 and the number 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = 9973\n\nOutput:\n 9973\n\nExplanation:\n No swap.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= num <= 10\n8",
        "temas": [
            "Math",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 669,
        "slug": "trim-a-binary-search-tree",
        "url": "https://leetcode.com/problems/trim-a-binary-search-tree/",
        "titulo": "Trim a Binary Search Tree",
        "enunciado": "Given the \nroot\n of a binary search tree and the lowest and highest boundaries as \nlow\n and \nhigh\n, trim the tree so that all its elements lies in \n[low, high]\n. Trimming the tree should \nnot\n change the relative structure of the elements that will remain in the tree (i.e., any node's descendant should remain a descendant). It can be proven that there is a \nunique answer\n.\n\n\nReturn \nthe root of the trimmed binary search tree\n. Note that the root may change depending on the given bounds.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,0,2], low = 1, high = 2\n\nOutput:\n [1,null,2]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [3,0,4,null,2,null,null,1], low = 1, high = 3\n\nOutput:\n [3,2,null,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n0 <= Node.val <= 10\n4\n\n\nThe value of each node in the tree is \nunique\n.\n\n\nroot\n is guaranteed to be a valid binary search tree.\n\n\n0 <= low <= high <= 10\n4",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 667,
        "slug": "beautiful-arrangement-ii",
        "url": "https://leetcode.com/problems/beautiful-arrangement-ii/",
        "titulo": "Beautiful Arrangement II",
        "enunciado": "Given two integers \nn\n and \nk\n, construct a list \nanswer\n that contains \nn\n different positive integers ranging from \n1\n to \nn\n and obeys the following requirement:\n\n\n\n\nSuppose this list is \nanswer = [a\n1\n, a\n2\n, a\n3\n, ... , a\nn\n]\n, then the list \n[|a\n1\n - a\n2\n|, |a\n2\n - a\n3\n|, |a\n3\n - a\n4\n|, ... , |a\nn-1\n - a\nn\n|]\n has exactly \nk\n distinct integers.\n\n\n\n\nReturn \nthe list\n \nanswer\n. If there multiple valid answers, return \nany of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3, k = 1\n\nOutput:\n [1,2,3]\nExplanation: The [1,2,3] has three different positive integers ranging from 1 to 3, and the [1,1] has exactly 1 distinct integer: 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 3, k = 2\n\nOutput:\n [1,3,2]\nExplanation: The [1,3,2] has three different positive integers ranging from 1 to 3, and the [2,1] has exactly 2 distinct integers: 1 and 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k < n <= 10\n4",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 665,
        "slug": "non-decreasing-array",
        "url": "https://leetcode.com/problems/non-decreasing-array/",
        "titulo": "Non-decreasing Array",
        "enunciado": "Given an array \nnums\n with \nn\n integers, your task is to check if it could become non-decreasing by modifying \nat most one element\n.\n\n\nWe define an array is non-decreasing if \nnums[i] <= nums[i + 1]\n holds for every \ni\n (\n0-based\n) such that (\n0 <= i <= n - 2\n).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,2,3]\n\nOutput:\n true\n\nExplanation:\n You could modify the first 4 to 1 to get a non-decreasing array.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,2,1]\n\nOutput:\n false\n\nExplanation:\n You cannot get a non-decreasing array by modifying at most one element.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n4\n\n\n-10\n5\n <= nums[i] <= 10\n5",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 662,
        "slug": "maximum-width-of-binary-tree",
        "url": "https://leetcode.com/problems/maximum-width-of-binary-tree/",
        "titulo": "Maximum Width of Binary Tree",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe \nmaximum width\n of the given tree\n.\n\n\nThe \nmaximum width\n of a tree is the maximum \nwidth\n among all levels.\n\n\nThe \nwidth\n of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level are also counted into the length calculation.\n\n\nIt is \nguaranteed\n that the answer will in the range of a \n32-bit\n signed integer.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,3,2,5,3,null,9]\n\nOutput:\n 4\n\nExplanation:\n The maximum width exists in the third level with length 4 (5,3,null,9).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,3,2,5,null,null,9,6,null,7]\n\nOutput:\n 7\n\nExplanation:\n The maximum width exists in the fourth level with length 7 (6,null,null,null,null,null,7).\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [1,3,2,5]\n\nOutput:\n 2\n\nExplanation:\n The maximum width exists in the second level with length 2 (3,2).\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 3000]\n.\n\n\n-100 <= Node.val <= 100",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 659,
        "slug": "split-array-into-consecutive-subsequences",
        "url": "https://leetcode.com/problems/split-array-into-consecutive-subsequences/",
        "titulo": "Split Array into Consecutive Subsequences",
        "enunciado": "You are given an integer array \nnums\n that is \nsorted in non-decreasing order\n.\n\n\nDetermine if it is possible to split \nnums\n into \none or more subsequences\n such that \nboth\n of the following conditions are true:\n\n\n\n\nEach subsequence is a \nconsecutive increasing sequence\n (i.e. each integer is \nexactly one\n more than the previous integer).\n\n\nAll subsequences have a length of \n3\n or more\n.\n\n\n\n\nReturn \ntrue\n if you can split \nnums\n according to the above conditions, or \nfalse\n otherwise\n.\n\n\nA \nsubsequence\n of an array is a new array that is formed from the original array by deleting some (can be none) of the elements without disturbing the relative positions of the remaining elements. (i.e., \n[1,3,5]\n is a subsequence of \n[\n1\n,2,\n3\n,4,\n5\n]\n while \n[1,3,2]\n is not).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,3,4,5]\n\nOutput:\n true\n\nExplanation:\n nums can be split into the following subsequences:\n[\n1\n,\n2\n,\n3\n,3,4,5] --> 1, 2, 3\n[1,2,3,\n3\n,\n4\n,\n5\n] --> 3, 4, 5\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,3,4,4,5,5]\n\nOutput:\n true\n\nExplanation:\n nums can be split into the following subsequences:\n[\n1\n,\n2\n,\n3\n,3,\n4\n,4,\n5\n,5] --> 1, 2, 3, 4, 5\n[1,2,3,\n3\n,4,\n4\n,5,\n5\n] --> 3, 4, 5\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4,4,5]\n\nOutput:\n false\n\nExplanation:\n It is impossible to split nums into consecutive increasing subsequences of length 3 or more.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n-1000 <= nums[i] <= 1000\n\n\nnums\n is sorted in \nnon-decreasing\n order.",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 658,
        "slug": "find-k-closest-elements",
        "url": "https://leetcode.com/problems/find-k-closest-elements/",
        "titulo": "Find K Closest Elements",
        "enunciado": "Given a \nsorted\n integer array \narr\n, two integers \nk\n and \nx\n, return the \nk\n closest integers to \nx\n in the array. The result should also be sorted in ascending order.\n\n\nAn integer \na\n is closer to \nx\n than an integer \nb\n if:\n\n\n\n\n|a - x| < |b - x|\n, or\n\n\n|a - x| == |b - x|\n and \na < b\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \narr = [1,2,3,4,5], k = 4, x = 3\n\n\nOutput:\n \n[1,2,3,4]\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \narr = [1,1,2,3,4,5], k = 4, x = -1\n\n\nOutput:\n \n[1,1,2,3]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= arr.length\n\n\n1 <= arr.length <= 10\n4\n\n\narr\n is sorted in \nascending\n order.\n\n\n-10\n4\n <= arr[i], x <= 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sliding Window",
            "Sorting",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 655,
        "slug": "print-binary-tree",
        "url": "https://leetcode.com/problems/print-binary-tree/",
        "titulo": "Print Binary Tree",
        "enunciado": "Given the \nroot\n of a binary tree, construct a \n0-indexed\n \nm x n\n string matrix \nres\n that represents a \nformatted layout\n of the tree. The formatted layout matrix should be constructed using the following rules:\n\n\n\n\nThe \nheight\n of the tree is \nheight\n and the number of rows \nm\n should be equal to \nheight + 1\n.\n\n\nThe number of columns \nn\n should be equal to \n2\nheight+1\n - 1\n.\n\n\nPlace the \nroot node\n in the \nmiddle\n of the \ntop row\n (more formally, at location \nres[0][(n-1)/2]\n).\n\n\nFor each node that has been placed in the matrix at position \nres[r][c]\n, place its \nleft child\n at \nres[r+1][c-2\nheight-r-1\n]\n and its \nright child\n at \nres[r+1][c+2\nheight-r-1\n]\n.\n\n\nContinue this process until all the nodes in the tree have been placed.\n\n\nAny empty cells should contain the empty string \n\"\"\n.\n\n\n\n\nReturn \nthe constructed matrix \nres\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2]\n\nOutput:\n \n[[\"\",\"1\",\"\"],\n [\"2\",\"\",\"\"]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3,null,4]\n\nOutput:\n \n[[\"\",\"\",\"\",\"1\",\"\",\"\",\"\"],\n [\"\",\"2\",\"\",\"\",\"\",\"3\",\"\"],\n [\"\",\"\",\"4\",\"\",\"\",\"\",\"\"]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 2\n10\n]\n.\n\n\n-99 <= Node.val <= 99\n\n\nThe depth of the tree will be in the range \n[1, 10]\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 654,
        "slug": "maximum-binary-tree",
        "url": "https://leetcode.com/problems/maximum-binary-tree/",
        "titulo": "Maximum Binary Tree",
        "enunciado": "You are given an integer array \nnums\n with no duplicates. A \nmaximum binary tree\n can be built recursively from \nnums\n using the following algorithm:\n\n\n\n\nCreate a root node whose value is the maximum value in \nnums\n.\n\n\nRecursively build the left subtree on the \nsubarray prefix\n to the \nleft\n of the maximum value.\n\n\nRecursively build the right subtree on the \nsubarray suffix\n to the \nright\n of the maximum value.\n\n\n\n\nReturn \nthe \nmaximum binary tree\n built from \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n nums = [3,2,1,6,0,5]\n\nOutput:\n [6,3,5,null,2,0,null,null,1]\n\nExplanation:\n The recursive calls are as follow:\n- The largest value in [3,2,1,6,0,5] is 6. Left prefix is [3,2,1] and right suffix is [0,5].\n    - The largest value in [3,2,1] is 3. Left prefix is [] and right suffix is [2,1].\n        - Empty array, so no child.\n        - The largest value in [2,1] is 2. Left prefix is [] and right suffix is [1].\n            - Empty array, so no child.\n            - Only one element, so child is a node with value 1.\n    - The largest value in [0,5] is 5. Left prefix is [0] and right suffix is [].\n        - Only one element, so child is a node with value 0.\n        - Empty array, so no child.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n nums = [3,2,1]\n\nOutput:\n [3,null,2,null,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n0 <= nums[i] <= 1000\n\n\nAll integers in \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Stack",
            "Tree",
            "Monotonic Stack",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 652,
        "slug": "find-duplicate-subtrees",
        "url": "https://leetcode.com/problems/find-duplicate-subtrees/",
        "titulo": "Find Duplicate Subtrees",
        "enunciado": "Given the \nroot\n of a binary tree, return all \nduplicate subtrees\n.\n\n\nFor each kind of duplicate subtrees, you only need to return the root node of any \none\n of them.\n\n\nTwo trees are \nduplicate\n if they have the \nsame structure\n with the \nsame node values\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,null,2,4,null,null,4]\n\nOutput:\n [[2,4],[4]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [2,1,1]\n\nOutput:\n [[1]]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n root = [2,2,2,3,null,3,null]\n\nOutput:\n [[2,3],[3]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of the nodes in the tree will be in the range \n[1, 5000]\n\n\n-200 <= Node.val <= 200",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 650,
        "slug": "2-keys-keyboard",
        "url": "https://leetcode.com/problems/2-keys-keyboard/",
        "titulo": "2 Keys Keyboard",
        "enunciado": "There is only one character \n'A'\n on the screen of a notepad. You can perform one of two operations on this notepad for each step:\n\n\n\n\nCopy All: You can copy all the characters present on the screen (a partial copy is not allowed).\n\n\nPaste: You can paste the characters which are copied last time.\n\n\n\n\nGiven an integer \nn\n, return \nthe minimum number of operations to get the character\n \n'A'\n \nexactly\n \nn\n \ntimes on the screen\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 3\n\nExplanation:\n Initially, we have one character 'A'.\nIn step 1, we use Copy All operation.\nIn step 2, we use Paste operation to get 'AA'.\nIn step 3, we use Paste operation to get 'AAA'.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1000",
        "temas": [
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 649,
        "slug": "dota2-senate",
        "url": "https://leetcode.com/problems/dota2-senate/",
        "titulo": "Dota2 Senate",
        "enunciado": "In the world of Dota2, there are two parties: the Radiant and the Dire.\n\n\nThe Dota2 senate consists of senators coming from two parties. Now the Senate wants to decide on a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise \none\n of the two rights:\n\n\n\n\nBan one senator's right:\n A senator can make another senator lose all his rights in this and all the following rounds.\n\n\nAnnounce the victory:\n If this senator found the senators who still have rights to vote are all from the same party, he can announce the victory and decide on the change in the game.\n\n\n\n\nGiven a string \nsenate\n representing each senator's party belonging. The character \n'R'\n and \n'D'\n represent the Radiant party and the Dire party. Then if there are \nn\n senators, the size of the given string will be \nn\n.\n\n\nThe round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.\n\n\nSuppose every senator is smart enough and will play the best strategy for his own party. Predict which party will finally announce the victory and change the Dota2 game. The output should be \n\"Radiant\"\n or \n\"Dire\"\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n senate = \"RD\"\n\nOutput:\n \"Radiant\"\n\nExplanation:\n \nThe first senator comes from Radiant and he can just ban the next senator's right in round 1. \nAnd the second senator can't exercise any rights anymore since his right has been banned. \nAnd in round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.\n\n\n\nExample 2:\n\n\n\n\nInput:\n senate = \"RDD\"\n\nOutput:\n \"Dire\"\n\nExplanation:\n \nThe first senator comes from Radiant and he can just ban the next senator's right in round 1. \nAnd the second senator can't exercise any rights anymore since his right has been banned. \nAnd the third senator comes from Dire and he can ban the first senator's right in round 1. \nAnd in round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == senate.length\n\n\n1 <= n <= 10\n4\n\n\nsenate[i]\n is either \n'R'\n or \n'D'\n.",
        "temas": [
            "String",
            "Greedy",
            "Queue"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 648,
        "slug": "replace-words",
        "url": "https://leetcode.com/problems/replace-words/",
        "titulo": "Replace Words",
        "enunciado": "In English, we have a concept called \nroot\n, which can be followed by some other word to form another longer word - let's call this word \nderivative\n. For example, when the \nroot\n \n\"help\"\n is followed by the word \n\"ful\"\n, we can form a derivative \n\"helpful\"\n.\n\n\nGiven a \ndictionary\n consisting of many \nroots\n and a \nsentence\n consisting of words separated by spaces, replace all the derivatives in the sentence with the \nroot\n forming it. If a derivative can be replaced by more than one \nroot\n, replace it with the \nroot\n that has \nthe shortest length\n.\n\n\nReturn \nthe \nsentence\n after the replacement.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n dictionary = [\"cat\",\"bat\",\"rat\"], sentence = \"the cattle was rattled by the battery\"\n\nOutput:\n \"the cat was rat by the bat\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n dictionary = [\"a\",\"b\",\"c\"], sentence = \"aadsfasf absbs bbab cadsfafs\"\n\nOutput:\n \"a a b c\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= dictionary.length <= 1000\n\n\n1 <= dictionary[i].length <= 100\n\n\ndictionary[i]\n consists of only lower-case letters.\n\n\n1 <= sentence.length <= 10\n6\n\n\nsentence\n consists of only lower-case letters and spaces.\n\n\nThe number of words in \nsentence\n is in the range \n[1, 1000]\n\n\nThe length of each word in \nsentence\n is in the range \n[1, 1000]\n\n\nEvery two consecutive words in \nsentence\n will be separated by exactly one space.\n\n\nsentence\n does not have leading or trailing spaces.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 647,
        "slug": "palindromic-substrings",
        "url": "https://leetcode.com/problems/palindromic-substrings/",
        "titulo": "Palindromic Substrings",
        "enunciado": "Given a string \ns\n, return \nthe number of \npalindromic substrings\n in it\n.\n\n\nA string is a \npalindrome\n when it reads the same backward as forward.\n\n\nA \nsubstring\n is a contiguous sequence of characters within the string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abc\"\n\nOutput:\n 3\n\nExplanation:\n Three palindromic strings: \"a\", \"b\", \"c\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"aaa\"\n\nOutput:\n 6\n\nExplanation:\n Six palindromic strings: \"a\", \"a\", \"a\", \"aa\", \"aa\", \"aaa\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 646,
        "slug": "maximum-length-of-pair-chain",
        "url": "https://leetcode.com/problems/maximum-length-of-pair-chain/",
        "titulo": "Maximum Length of Pair Chain",
        "enunciado": "You are given an array of \nn\n pairs \npairs\n where \npairs[i] = [left\ni\n, right\ni\n]\n and \nleft\ni\n < right\ni\n.\n\n\nA pair \np2 = [c, d]\n \nfollows\n a pair \np1 = [a, b]\n if \nb < c\n. A \nchain\n of pairs can be formed in this fashion.\n\n\nReturn \nthe length longest chain which can be formed\n.\n\n\nYou do not need to use up all the given intervals. You can select pairs in any order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n pairs = [[1,2],[2,3],[3,4]]\n\nOutput:\n 2\n\nExplanation:\n The longest chain is [1,2] -> [3,4].\n\n\n\nExample 2:\n\n\n\n\nInput:\n pairs = [[1,2],[7,8],[4,5]]\n\nOutput:\n 3\n\nExplanation:\n The longest chain is [1,2] -> [4,5] -> [7,8].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == pairs.length\n\n\n1 <= n <= 1000\n\n\n-1000 <= left\ni\n < right\ni\n <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 640,
        "slug": "solve-the-equation",
        "url": "https://leetcode.com/problems/solve-the-equation/",
        "titulo": "Solve the Equation",
        "enunciado": "Solve a given equation and return the value of \n'x'\n in the form of a string \n\"x=#value\"\n. The equation contains only \n'+'\n, \n'-'\n operation, the variable \n'x'\n and its coefficient. You should return \n\"No solution\"\n if there is no solution for the equation, or \n\"Infinite solutions\"\n if there are infinite solutions for the equation.\n\n\nIf there is exactly one solution for the equation, we ensure that the value of \n'x'\n is an integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n equation = \"x+5-3+x=6+x-2\"\n\nOutput:\n \"x=2\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n equation = \"x=x\"\n\nOutput:\n \"Infinite solutions\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n equation = \"2x=x\"\n\nOutput:\n \"x=0\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= equation.length <= 1000\n\n\nequation\n has exactly one \n'='\n.\n\n\nequation\n consists of integers with an absolute value in the range \n[0, 100]\n without any leading zeros, and the variable \n'x'\n.\n\n\nThe input is generated that if there is a single solution, it will be an integer.",
        "temas": [
            "Math",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 638,
        "slug": "shopping-offers",
        "url": "https://leetcode.com/problems/shopping-offers/",
        "titulo": "Shopping Offers",
        "enunciado": "In LeetCode Store, there are \nn\n items to sell. Each item has a price. However, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\n\n\nYou are given an integer array \nprice\n where \nprice[i]\n is the price of the \ni\nth\n item, and an integer array \nneeds\n where \nneeds[i]\n is the number of pieces of the \ni\nth\n item you want to buy.\n\n\nYou are also given an array \nspecial\n where \nspecial[i]\n is of size \nn + 1\n where \nspecial[i][j]\n is the number of pieces of the \nj\nth\n item in the \ni\nth\n offer and \nspecial[i][n]\n (i.e., the last integer in the array) is the price of the \ni\nth\n offer.\n\n\nReturn \nthe lowest price you have to pay for exactly certain items as given, where you could make optimal use of the special offers\n. You are not allowed to buy more items than you want, even if that would lower the overall price. You could use any of the special offers as many times as you want.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n price = [2,5], special = [[3,0,5],[1,2,10]], needs = [3,2]\n\nOutput:\n 14\n\nExplanation:\n There are two kinds of items, A and B. Their prices are $2 and $5 respectively. \nIn special offer 1, you can pay $5 for 3A and 0B\nIn special offer 2, you can pay $10 for 1A and 2B. \nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\n\n\n\nExample 2:\n\n\n\n\nInput:\n price = [2,3,4], special = [[1,1,0,4],[2,2,1,9]], needs = [1,2,1]\n\nOutput:\n 11\n\nExplanation:\n The price of A is $2, and $3 for B, $4 for C. \nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \nYou cannot add more items, though only $9 for 2A ,2B and 1C.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == price.length == needs.length\n\n\n1 <= n <= 6\n\n\n0 <= price[i], needs[i] <= 10\n\n\n1 <= special.length <= 100\n\n\nspecial[i].length == n + 1\n\n\n0 <= special[i][j] <= 50\n\n\nThe input is generated that at least one of \nspecial[i][j]\n is non-zero for \n0 <= j <= n - 1\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Memoization",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 636,
        "slug": "exclusive-time-of-functions",
        "url": "https://leetcode.com/problems/exclusive-time-of-functions/",
        "titulo": "Exclusive Time of Functions",
        "enunciado": "On a \nsingle-threaded\n CPU, we execute a program containing \nn\n functions. Each function has a unique ID between \n0\n and \nn-1\n.\n\n\nFunction calls are \nstored in a \ncall stack\n: when a function call starts, its ID is pushed onto the stack, and when a function call ends, its ID is popped off the stack. The function whose ID is at the top of the stack is \nthe current function being executed\n. Each time a function starts or ends, we write a log with the ID, whether it started or ended, and the timestamp.\n\n\nYou are given a list \nlogs\n, where \nlogs[i]\n represents the \ni\nth\n log message formatted as a string \n\"{function_id}:{\"start\" | \"end\"}:{timestamp}\"\n. For example, \n\"0:start:3\"\n means a function call with function ID \n0\n \nstarted at the beginning\n of timestamp \n3\n, and \n\"1:end:2\"\n means a function call with function ID \n1\n \nended at the end\n of timestamp \n2\n. Note that a function can be called \nmultiple times, possibly recursively\n.\n\n\nA function's \nexclusive time\n is the sum of execution times for all function calls in the program. For example, if a function is called twice, one call executing for \n2\n time units and another call executing for \n1\n time unit, the \nexclusive time\n is \n2 + 1 = 3\n.\n\n\nReturn \nthe \nexclusive time\n of each function in an array, where the value at the \ni\nth\n index represents the exclusive time for the function with ID \ni\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 2, logs = [\"0:start:0\",\"1:start:2\",\"1:end:5\",\"0:end:6\"]\n\nOutput:\n [3,4]\n\nExplanation:\n\nFunction 0 starts at the beginning of time 0, then it executes 2 for units of time and reaches the end of time 1.\nFunction 1 starts at the beginning of time 2, executes for 4 units of time, and ends at the end of time 5.\nFunction 0 resumes execution at the beginning of time 6 and executes for 1 unit of time.\nSo function 0 spends 2 + 1 = 3 units of total time executing, and function 1 spends 4 units of total time executing.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"0:start:6\",\"0:end:6\",\"0:end:7\"]\n\nOutput:\n [8]\n\nExplanation:\n\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls itself again.\nFunction 0 (2nd recursive call) starts at the beginning of time 6 and executes for 1 unit of time.\nFunction 0 (initial call) resumes execution at the beginning of time 7 and executes for 1 unit of time.\nSo function 0 spends 2 + 4 + 1 + 1 = 8 units of total time executing.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 2, logs = [\"0:start:0\",\"0:start:2\",\"0:end:5\",\"1:start:6\",\"1:end:6\",\"0:end:7\"]\n\nOutput:\n [7,1]\n\nExplanation:\n\nFunction 0 starts at the beginning of time 0, executes for 2 units of time, and recursively calls itself.\nFunction 0 (recursive call) starts at the beginning of time 2 and executes for 4 units of time.\nFunction 0 (initial call) resumes execution then immediately calls function 1.\nFunction 1 starts at the beginning of time 6, executes 1 unit of time, and ends at the end of time 6.\nFunction 0 resumes execution at the beginning of time 6 and executes for 2 units of time.\nSo function 0 spends 2 + 4 + 1 = 7 units of total time executing, and function 1 spends 1 unit of total time executing.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 100\n\n\n2 <= logs.length <= 500\n\n\n0 <= function_id < n\n\n\n0 <= timestamp <= 10\n9\n\n\nNo two start events will happen at the same timestamp.\n\n\nNo two end events will happen at the same timestamp.\n\n\nEach function has an \n\"end\"\n log for each \n\"start\"\n log.",
        "temas": [
            "Array",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 633,
        "slug": "sum-of-square-numbers",
        "url": "https://leetcode.com/problems/sum-of-square-numbers/",
        "titulo": "Sum of Square Numbers",
        "enunciado": "Given a non-negative integer \nc\n, decide whether there're two integers \na\n and \nb\n such that \na\n2\n + b\n2\n = c\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n c = 5\n\nOutput:\n true\n\nExplanation:\n 1 * 1 + 2 * 2 = 5\n\n\n\nExample 2:\n\n\n\n\nInput:\n c = 3\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= c <= 2\n31\n - 1",
        "temas": [
            "Math",
            "Two Pointers",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 624,
        "slug": "maximum-distance-in-arrays",
        "url": "https://leetcode.com/problems/maximum-distance-in-arrays/",
        "titulo": "Maximum Distance in Arrays",
        "enunciado": "You are given \nm\n \narrays\n, where each array is sorted in \nascending order\n.\n\n\nYou can pick up two integers from two different arrays (each array picks one) and calculate the distance. We define the distance between two integers \na\n and \nb\n to be their absolute difference \n|a - b|\n.\n\n\nReturn \nthe maximum distance\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n arrays = [[1,2,3],[4,5],[1,2,3]]\n\nOutput:\n 4\n\nExplanation:\n One way to reach the maximum distance 4 is to pick 1 in the first or third array and pick 5 in the second array.\n\n\n\nExample 2:\n\n\n\n\nInput:\n arrays = [[1],[1]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == arrays.length\n\n\n2 <= m <= 10\n5\n\n\n1 <= arrays[i].length <= 500\n\n\n-10\n4\n <= arrays[i][j] <= 10\n4\n\n\narrays[i]\n is sorted in \nascending order\n.\n\n\nThere will be at most \n10\n5\n integers in all the arrays.",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 623,
        "slug": "add-one-row-to-tree",
        "url": "https://leetcode.com/problems/add-one-row-to-tree/",
        "titulo": "Add One Row to Tree",
        "enunciado": "Given the \nroot\n of a binary tree and two integers \nval\n and \ndepth\n, add a row of nodes with value \nval\n at the given depth \ndepth\n.\n\n\nNote that the \nroot\n node is at depth \n1\n.\n\n\nThe adding rule is:\n\n\n\n\nGiven the integer \ndepth\n, for each not null tree node \ncur\n at the depth \ndepth - 1\n, create two tree nodes with value \nval\n as \ncur\n's left subtree root and right subtree root.\n\n\ncur\n's original left subtree should be the left subtree of the new left subtree root.\n\n\ncur\n's original right subtree should be the right subtree of the new right subtree root.\n\n\nIf \ndepth == 1\n that means there is no depth \ndepth - 1\n at all, then create a tree node with value \nval\n as the new root of the whole original tree, and the original tree is the new root's left subtree.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [4,2,6,3,1,5], val = 1, depth = 2\n\nOutput:\n [4,1,1,2,null,null,6,3,1,5]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [4,2,null,3,1], val = 1, depth = 3\n\nOutput:\n [4,2,null,1,1,3,null,null,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\nThe depth of the tree is in the range \n[1, 10\n4\n]\n.\n\n\n-100 <= Node.val <= 100\n\n\n-10\n5\n <= val <= 10\n5\n\n\n1 <= depth <= the depth of tree + 1",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 621,
        "slug": "task-scheduler",
        "url": "https://leetcode.com/problems/task-scheduler/",
        "titulo": "Task Scheduler",
        "enunciado": "You are given an array of CPU \ntasks\n, each labeled with a letter from A to Z, and a number \nn\n. Each CPU interval can be idle or allow the completion of one task. Tasks can be completed in any order, but there's a constraint: there has to be a gap of \nat least\n \nn\n intervals between two tasks with the same label.\n\n\nReturn the \nminimum\n number of CPU intervals required to complete all tasks.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ntasks = [\"A\",\"A\",\"A\",\"B\",\"B\",\"B\"], n = 2\n\n\nOutput:\n \n8\n\n\nExplanation:\n A possible sequence is: A -> B -> idle -> A -> B -> idle -> A -> B.\n\n\nAfter completing task A, you must wait two intervals before doing A again. The same applies to task B. In the 3\nrd\n interval, neither A nor B can be done, so you idle. By the 4\nth\n interval, you can do A again as 2 intervals have passed.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ntasks = [\"A\",\"C\",\"A\",\"B\",\"D\",\"B\"], n = 1\n\n\nOutput:\n \n6\n\n\nExplanation:\n A possible sequence is: A -> B -> C -> D -> A -> B.\n\n\nWith a cooling interval of 1, you can repeat a task after just one other task.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ntasks = [\"A\",\"A\",\"A\", \"B\",\"B\",\"B\"], n = 3\n\n\nOutput:\n \n10\n\n\nExplanation:\n A possible sequence is: A -> B -> idle -> idle -> A -> B -> idle -> idle -> A -> B.\n\n\nThere are only two types of tasks, A and B, which need to be separated by 3 intervals. This leads to idling twice between repetitions of these tasks.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tasks.length <= 10\n4\n\n\ntasks[i]\n is an uppercase English letter.\n\n\n0 <= n <= 100",
        "temas": [
            "Array",
            "Hash Table",
            "Greedy",
            "Sorting",
            "Heap (Priority Queue)",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 611,
        "slug": "valid-triangle-number",
        "url": "https://leetcode.com/problems/valid-triangle-number/",
        "titulo": "Valid Triangle Number",
        "enunciado": "Given an integer array \nnums\n, return \nthe number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,2,3,4]\n\nOutput:\n 3\n\nExplanation:\n Valid combinations are: \n2,3,4 (using the first 2)\n2,3,4 (using the second 2)\n2,2,3\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,2,3,4]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n0 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 609,
        "slug": "find-duplicate-file-in-system",
        "url": "https://leetcode.com/problems/find-duplicate-file-in-system/",
        "titulo": "Find Duplicate File in System",
        "enunciado": "Given a list \npaths\n of directory info, including the directory path, and all the files with contents in this directory, return \nall the duplicate files in the file system in terms of their paths\n. You may return the answer in \nany order\n.\n\n\nA group of duplicate files consists of at least two files that have the same content.\n\n\nA single directory info string in the input list has the following format:\n\n\n\n\n\"root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)\"\n\n\n\n\nIt means there are \nn\n files \n(f1.txt, f2.txt ... fn.txt)\n with content \n(f1_content, f2_content ... fn_content)\n respectively in the directory \"\nroot/d1/d2/.../dm\"\n. Note that \nn >= 1\n and \nm >= 0\n. If \nm = 0\n, it means the directory is just the root directory.\n\n\nThe output is a list of groups of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:\n\n\n\n\n\"directory_path/file_name.txt\"\n\n\n\n\n \n\n\nExample 1:\n\n\nInput:\n paths = [\"root/a 1.txt(abcd) 2.txt(efgh)\",\"root/c 3.txt(abcd)\",\"root/c/d 4.txt(efgh)\",\"root 4.txt(efgh)\"]\n\nOutput:\n [[\"root/a/2.txt\",\"root/c/d/4.txt\",\"root/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]\n\nExample 2:\n\n\nInput:\n paths = [\"root/a 1.txt(abcd) 2.txt(efgh)\",\"root/c 3.txt(abcd)\",\"root/c/d 4.txt(efgh)\"]\n\nOutput:\n [[\"root/a/2.txt\",\"root/c/d/4.txt\"],[\"root/a/1.txt\",\"root/c/3.txt\"]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= paths.length <= 2 * 10\n4\n\n\n1 <= paths[i].length <= 3000\n\n\n1 <= sum(paths[i].length) <= 5 * 10\n5\n\n\npaths[i]\n consist of English letters, digits, \n'/'\n, \n'.'\n, \n'('\n, \n')'\n, and \n' '\n.\n\n\nYou may assume no files or directories share the same name in the same directory.\n\n\nYou may assume each given directory info represents a unique directory. A single blank space separates the directory path and file info.\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nImagine you are given a real file system, how will you search files? DFS or BFS?\n\n\nIf the file content is very large (GB level), how will you modify your solution?\n\n\nIf you can only read the file by 1kb each time, how will you modify your solution?\n\n\nWhat is the time complexity of your modified solution? What is the most time-consuming part and memory-consuming part of it? How to optimize?\n\n\nHow to make sure the duplicated files you find are not false positive?",
        "temas": [
            "Array",
            "Hash Table",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 606,
        "slug": "construct-string-from-binary-tree",
        "url": "https://leetcode.com/problems/construct-string-from-binary-tree/",
        "titulo": "Construct String from Binary Tree",
        "enunciado": "Given the \nroot\n node of a binary tree, your task is to create a string representation of the tree following a specific set of formatting rules. The representation should be based on a preorder traversal of the binary tree and must adhere to the following guidelines:\n\n\n\n\n\n\nNode Representation\n: Each node in the tree should be represented by its integer value.\n\n\n\n\n\n\nParentheses for Children\n: If a node has at least one child (either left or right), its children should be represented inside parentheses. Specifically:\n\n\n\n\nIf a node has a left child, the value of the left child should be enclosed in parentheses immediately following the node's value.\n\n\nIf a node has a right child, the value of the right child should also be enclosed in parentheses. The parentheses for the right child should follow those of the left child.\n\n\n\n\n\n\n\n\nOmitting Empty Parentheses\n: Any empty parentheses pairs (i.e., \n()\n) should be omitted from the final string representation of the tree, with one specific exception: when a node has a right child but no left child. In such cases, you must include an empty pair of parentheses to indicate the absence of the left child. This ensures that the one-to-one mapping between the string representation and the original binary tree structure is maintained.\n\n\nIn summary, empty parentheses pairs should be omitted when a node has only a left child or no children. However, when a node has a right child but no left child, an empty pair of parentheses must precede the representation of the right child to reflect the tree's structure accurately.\n\n\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4]\n\nOutput:\n \"1(2(4))(3)\"\n\nExplanation:\n Originally, it needs to be \"1(2(4)())(3()())\", but you need to omit all the empty parenthesis pairs. And it will be \"1(2(4))(3)\".\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3,null,4]\n\nOutput:\n \"1(2()(4))(3)\"\n\nExplanation:\n Almost the same as the first example, except the \n()\n after \n2\n is necessary to indicate the absence of a left child for \n2\n and the presence of a right child.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n-1000 <= Node.val <= 1000",
        "temas": [
            "String",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 593,
        "slug": "valid-square",
        "url": "https://leetcode.com/problems/valid-square/",
        "titulo": "Valid Square",
        "enunciado": "Given the coordinates of four points in 2D space \np1\n, \np2\n, \np3\n and \np4\n, return \ntrue\n \nif the four points construct a square\n.\n\n\nThe coordinate of a point \np\ni\n is represented as \n[x\ni\n, y\ni\n]\n. The input is \nnot\n given in any order.\n\n\nA \nvalid square\n has four equal sides with positive length and four equal angles (90-degree angles).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\nInput:\n p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,12]\n\nOutput:\n false\n\n\n\nExample 3:\n\n\n\n\nInput:\n p1 = [1,0], p2 = [-1,0], p3 = [0,1], p4 = [0,-1]\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\np1.length == p2.length == p3.length == p4.length == 2\n\n\n-10\n4\n <= x\ni\n, y\ni\n <= 10\n4",
        "temas": [
            "Math",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 592,
        "slug": "fraction-addition-and-subtraction",
        "url": "https://leetcode.com/problems/fraction-addition-and-subtraction/",
        "titulo": "Fraction Addition and Subtraction",
        "enunciado": "Given a string \nexpression\n representing an expression of fraction addition and subtraction, return the calculation result in string format.\n\n\nThe final result should be an \nirreducible fraction\n. If your final result is an integer, change it to the format of a fraction that has a denominator \n1\n. So in this case, \n2\n should be converted to \n2/1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n expression = \"-1/2+1/2\"\n\nOutput:\n \"0/1\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n expression = \"-1/2+1/2+1/3\"\n\nOutput:\n \"1/3\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n expression = \"1/3-1/2\"\n\nOutput:\n \"-1/6\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe input string only contains \n'0'\n to \n'9'\n, \n'/'\n, \n'+'\n and \n'-'\n. So does the output.\n\n\nEach fraction (input and output) has the format \n±numerator/denominator\n. If the first input fraction or the output is positive, then \n'+'\n will be omitted.\n\n\nThe input only contains valid \nirreducible fractions\n, where the \nnumerator\n and \ndenominator\n of each fraction will always be in the range \n[1, 10]\n. If the denominator is \n1\n, it means this fraction is actually an integer in a fraction format defined above.\n\n\nThe number of given fractions will be in the range \n[1, 10]\n.\n\n\nThe numerator and denominator of the \nfinal result\n are guaranteed to be valid and in the range of \n32-bit\n int.",
        "temas": [
            "Math",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 583,
        "slug": "delete-operation-for-two-strings",
        "url": "https://leetcode.com/problems/delete-operation-for-two-strings/",
        "titulo": "Delete Operation for Two Strings",
        "enunciado": "Given two strings \nword1\n and \nword2\n, return \nthe minimum number of \nsteps\n required to make\n \nword1\n \nand\n \nword2\n \nthe same\n.\n\n\nIn one \nstep\n, you can delete exactly one character in either string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word1 = \"sea\", word2 = \"eat\"\n\nOutput:\n 2\n\nExplanation:\n You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n word1 = \"leetcode\", word2 = \"etco\"\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word1.length, word2.length <= 500\n\n\nword1\n and \nword2\n consist of only lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 581,
        "slug": "shortest-unsorted-continuous-subarray",
        "url": "https://leetcode.com/problems/shortest-unsorted-continuous-subarray/",
        "titulo": "Shortest Unsorted Continuous Subarray",
        "enunciado": "Given an integer array \nnums\n, you need to find one \ncontinuous subarray\n such that if you only sort this subarray in non-decreasing order, then the whole array will be sorted in non-decreasing order.\n\n\nReturn \nthe shortest such subarray and output its length\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,6,4,8,10,9,15]\n\nOutput:\n 5\n\nExplanation:\n You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n 0\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n-10\n5\n <= nums[i] <= 10\n5\n\n\n\n\n \n\n\nFollow up:\n Can you solve it in \nO(n)\n time complexity?",
        "temas": [
            "Array",
            "Two Pointers",
            "Stack",
            "Greedy",
            "Sorting",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 576,
        "slug": "out-of-boundary-paths",
        "url": "https://leetcode.com/problems/out-of-boundary-paths/",
        "titulo": "Out of Boundary Paths",
        "enunciado": "There is an \nm x n\n grid with a ball. The ball is initially at the position \n[startRow, startColumn]\n. You are allowed to move the ball to one of the four adjacent cells in the grid (possibly out of the grid crossing the grid boundary). You can apply \nat most\n \nmaxMove\n moves to the ball.\n\n\nGiven the five integers \nm\n, \nn\n, \nmaxMove\n, \nstartRow\n, \nstartColumn\n, return the number of paths to move the ball out of the grid boundary. Since the answer can be very large, return it \nmodulo\n \n10\n9\n + 7\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n m = 2, n = 2, maxMove = 2, startRow = 0, startColumn = 0\n\nOutput:\n 6\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n m = 1, n = 3, maxMove = 3, startRow = 0, startColumn = 1\n\nOutput:\n 12\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 50\n\n\n0 <= maxMove <= 50\n\n\n0 <= startRow < m\n\n\n0 <= startColumn < n",
        "temas": [
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 567,
        "slug": "permutation-in-string",
        "url": "https://leetcode.com/problems/permutation-in-string/",
        "titulo": "Permutation in String",
        "enunciado": "Given two strings \ns1\n and \ns2\n, return \ntrue\n if \ns2\n contains a \npermutation\n of \ns1\n, or \nfalse\n otherwise.\n\n\nIn other words, return \ntrue\n if one of \ns1\n's permutations is the substring of \ns2\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s1 = \"ab\", s2 = \"eidbaooo\"\n\nOutput:\n true\n\nExplanation:\n s2 contains one permutation of s1 (\"ba\").\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"ab\", s2 = \"eidboaoo\"\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s1.length, s2.length <= 10\n4\n\n\ns1\n and \ns2\n consist of lowercase English letters.",
        "temas": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 565,
        "slug": "array-nesting",
        "url": "https://leetcode.com/problems/array-nesting/",
        "titulo": "Array Nesting",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n where \nnums\n is a permutation of the numbers in the range \n[0, n - 1]\n.\n\n\nYou should build a set \ns[k] = {nums[k], nums[nums[k]], nums[nums[nums[k]]], ... }\n subjected to the following rule:\n\n\n\n\nThe first element in \ns[k]\n starts with the selection of the element \nnums[k]\n of \nindex = k\n.\n\n\nThe next element in \ns[k]\n should be \nnums[nums[k]]\n, and then \nnums[nums[nums[k]]]\n, and so on.\n\n\nWe stop adding right before a duplicate element occurs in \ns[k]\n.\n\n\n\n\nReturn \nthe longest length of a set\n \ns[k]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [5,4,0,3,1,6,2]\n\nOutput:\n 4\n\nExplanation:\n \nnums[0] = 5, nums[1] = 4, nums[2] = 0, nums[3] = 3, nums[4] = 1, nums[5] = 6, nums[6] = 2.\nOne of the longest sets s[k]:\ns[0] = {nums[0], nums[5], nums[6], nums[2]} = {5, 6, 2, 0}\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,2]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] < nums.length\n\n\nAll the values of \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 560,
        "slug": "subarray-sum-equals-k",
        "url": "https://leetcode.com/problems/subarray-sum-equals-k/",
        "titulo": "Subarray Sum Equals K",
        "enunciado": "Given an array of integers \nnums\n and an integer \nk\n, return \nthe total number of subarrays whose sum equals to\n \nk\n.\n\n\nA subarray is a contiguous \nnon-empty\n sequence of elements within an array.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [1,1,1], k = 2\n\nOutput:\n 2\n\nExample 2:\n\n\nInput:\n nums = [1,2,3], k = 3\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n4\n\n\n-1000 <= nums[i] <= 1000\n\n\n-10\n7\n <= k <= 10\n7",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 556,
        "slug": "next-greater-element-iii",
        "url": "https://leetcode.com/problems/next-greater-element-iii/",
        "titulo": "Next Greater Element III",
        "enunciado": "Given a positive integer \nn\n, find \nthe smallest integer which has exactly the same digits existing in the integer\n \nn\n \nand is greater in value than\n \nn\n. If no such positive integer exists, return \n-1\n.\n\n\nNote\n that the returned integer should fit in \n32-bit integer\n, if there is a valid answer but it does not fit in \n32-bit integer\n, return \n-1\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n n = 12\n\nOutput:\n 21\n\nExample 2:\n\n\nInput:\n n = 21\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2\n31\n - 1",
        "temas": [
            "Math",
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 554,
        "slug": "brick-wall",
        "url": "https://leetcode.com/problems/brick-wall/",
        "titulo": "Brick Wall",
        "enunciado": "There is a rectangular brick wall in front of you with \nn\n rows of bricks. The \ni\nth\n row has some number of bricks each of the same height (i.e., one unit) but they can be of different widths. The total width of each row is the same.\n\n\nDraw a vertical line from the top to the bottom and cross the least bricks. If your line goes through the edge of a brick, then the brick is not considered as crossed. You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks.\n\n\nGiven the 2D array \nwall\n that contains the information about the wall, return \nthe minimum number of crossed bricks after drawing such a vertical line\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n wall = [[1,2,2,1],[3,1,2],[1,3,2],[2,4],[3,1,2],[1,3,1,1]]\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n wall = [[1],[1],[1]]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == wall.length\n\n\n1 <= n <= 10\n4\n\n\n1 <= wall[i].length <= 10\n4\n\n\n1 <= sum(wall[i].length) <= 2 * 10\n4\n\n\nsum(wall[i])\n is the same for each row \ni\n.\n\n\n1 <= wall[i][j] <= 2\n31\n - 1",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 553,
        "slug": "optimal-division",
        "url": "https://leetcode.com/problems/optimal-division/",
        "titulo": "Optimal Division",
        "enunciado": "You are given an integer array \nnums\n. The adjacent integers in \nnums\n will perform the float division.\n\n\n\n\nFor example, for \nnums = [2,3,4]\n, we will evaluate the expression \n\"2/3/4\"\n.\n\n\n\n\nHowever, you can add any number of parenthesis at any position to change the priority of operations. You want to add these parentheses such the value of the expression after the evaluation is maximum.\n\n\nReturn \nthe corresponding expression that has the maximum value in string format\n.\n\n\nNote:\n your expression should not contain redundant parenthesis.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1000,100,10,2]\n\nOutput:\n \"1000/(100/10/2)\"\n\nExplanation:\n 1000/(100/10/2) = 1000/((100/10)/2) = 200\nHowever, the bold parenthesis in \"1000/(\n(\n100/10\n)\n/2)\" are redundant since they do not influence the operation priority.\nSo you should return \"1000/(100/10/2)\".\nOther cases:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,3,4]\n\nOutput:\n \"2/(3/4)\"\n\nExplanation:\n (2/(3/4)) = 8/3 = 2.667\nIt can be shown that after trying all possibilities, we cannot get an expression with evaluation greater than 2.667\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n\n\n2 <= nums[i] <= 1000\n\n\nThere is only one optimal division for the given input.",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 547,
        "slug": "number-of-provinces",
        "url": "https://leetcode.com/problems/number-of-provinces/",
        "titulo": "Number of Provinces",
        "enunciado": "There are \nn\n cities. Some of them are connected, while some are not. If city \na\n is connected directly with city \nb\n, and city \nb\n is connected directly with city \nc\n, then city \na\n is connected indirectly with city \nc\n.\n\n\nA \nprovince\n is a group of directly or indirectly connected cities and no other cities outside of the group.\n\n\nYou are given an \nn x n\n matrix \nisConnected\n where \nisConnected[i][j] = 1\n if the \ni\nth\n city and the \nj\nth\n city are directly connected, and \nisConnected[i][j] = 0\n otherwise.\n\n\nReturn \nthe total number of \nprovinces\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n isConnected = [[1,1,0],[1,1,0],[0,0,1]]\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n isConnected = [[1,0,0],[0,1,0],[0,0,1]]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 200\n\n\nn == isConnected.length\n\n\nn == isConnected[i].length\n\n\nisConnected[i][j]\n is \n1\n or \n0\n.\n\n\nisConnected[i][i] == 1\n\n\nisConnected[i][j] == isConnected[j][i]",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 542,
        "slug": "01-matrix",
        "url": "https://leetcode.com/problems/01-matrix/",
        "titulo": "01 Matrix",
        "enunciado": "Given an \nm x n\n binary matrix \nmat\n, return \nthe distance of the nearest \n0\n for each cell\n.\n\n\nThe distance between two cells sharing a common edge is \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[0,0,0],[0,1,0],[0,0,0]]\n\nOutput:\n [[0,0,0],[0,1,0],[0,0,0]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n mat = [[0,0,0],[0,1,0],[1,1,1]]\n\nOutput:\n [[0,0,0],[0,1,0],[1,2,1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 10\n4\n\n\n1 <= m * n <= 10\n4\n\n\nmat[i][j]\n is either \n0\n or \n1\n.\n\n\nThere is at least one \n0\n in \nmat\n.\n\n\n\n\n \n\n\nNote:\n This question is the same as 1765: \nhttps://leetcode.com/problems/map-of-highest-peak/",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 540,
        "slug": "single-element-in-a-sorted-array",
        "url": "https://leetcode.com/problems/single-element-in-a-sorted-array/",
        "titulo": "Single Element in a Sorted Array",
        "enunciado": "You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.\n\n\nReturn \nthe single element that appears only once\n.\n\n\nYour solution must run in \nO(log n)\n time and \nO(1)\n space.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [1,1,2,3,3,4,4,8,8]\n\nOutput:\n 2\n\nExample 2:\n\n\nInput:\n nums = [3,3,7,7,10,11,11]\n\nOutput:\n 10\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 539,
        "slug": "minimum-time-difference",
        "url": "https://leetcode.com/problems/minimum-time-difference/",
        "titulo": "Minimum Time Difference",
        "enunciado": "Given a list of 24-hour clock time points in \n\"HH:MM\"\n format, return \nthe minimum \nminutes\n difference between any two time-points in the list\n.\n\n \n\n\nExample 1:\n\n\nInput:\n timePoints = [\"23:59\",\"00:00\"]\n\nOutput:\n 1\n\nExample 2:\n\n\nInput:\n timePoints = [\"00:00\",\"23:59\",\"00:00\"]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= timePoints.length <= 2 * 10\n4\n\n\ntimePoints[i]\n is in the format \n\"HH:MM\"\n.",
        "temas": [
            "Array",
            "Math",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 538,
        "slug": "convert-bst-to-greater-tree",
        "url": "https://leetcode.com/problems/convert-bst-to-greater-tree/",
        "titulo": "Convert BST to Greater Tree",
        "enunciado": "Given the \nroot\n of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\n\n\nAs a reminder, a \nbinary search tree\n is a tree that satisfies these constraints:\n\n\n\n\nThe left subtree of a node contains only nodes with keys \nless than\n the node's key.\n\n\nThe right subtree of a node contains only nodes with keys \ngreater than\n the node's key.\n\n\nBoth the left and right subtrees must also be binary search trees.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]\n\nOutput:\n [30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [0,null,1]\n\nOutput:\n [1,null,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 10\n4\n]\n.\n\n\n-10\n4\n <= Node.val <= 10\n4\n\n\nAll the values in the tree are \nunique\n.\n\n\nroot\n is guaranteed to be a valid binary search tree.\n\n\n\n\n \n\n\nNote:\n This question is the same as 1038: \nhttps://leetcode.com/problems/binary-search-tree-to-greater-sum-tree/",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 537,
        "slug": "complex-number-multiplication",
        "url": "https://leetcode.com/problems/complex-number-multiplication/",
        "titulo": "Complex Number Multiplication",
        "enunciado": "A \ncomplex number\n can be represented as a string on the form \n\"\nreal\n+\nimaginary\ni\"\n where:\n\n\n\n\nreal\n is the real part and is an integer in the range \n[-100, 100]\n.\n\n\nimaginary\n is the imaginary part and is an integer in the range \n[-100, 100]\n.\n\n\ni\n2\n == -1\n.\n\n\n\n\nGiven two complex numbers \nnum1\n and \nnum2\n as strings, return \na string of the complex number that represents their multiplications\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num1 = \"1+1i\", num2 = \"1+1i\"\n\nOutput:\n \"0+2i\"\n\nExplanation:\n (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num1 = \"1+-1i\", num2 = \"1+-1i\"\n\nOutput:\n \"0+-2i\"\n\nExplanation:\n (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nnum1\n and \nnum2\n are valid complex numbers.",
        "temas": [
            "Math",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 535,
        "slug": "encode-and-decode-tinyurl",
        "url": "https://leetcode.com/problems/encode-and-decode-tinyurl/",
        "titulo": "Encode and Decode TinyURL",
        "enunciado": "Note: This is a companion problem to the \nSystem Design\n problem: \nDesign TinyURL\n.\n\n\nTinyURL is a URL shortening service where you enter a URL such as \nhttps://leetcode.com/problems/design-tinyurl\n and it returns a short URL such as \nhttp://tinyurl.com/4e9iAk\n. Design a class to encode a URL and decode a tiny URL.\n\n\nThere is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution()\n Initializes the object of the system.\n\n\nString encode(String longUrl)\n Returns a tiny URL for the given \nlongUrl\n.\n\n\nString decode(String shortUrl)\n Returns the original long URL for the given \nshortUrl\n. It is guaranteed that the given \nshortUrl\n was encoded by the same object.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n url = \"https://leetcode.com/problems/design-tinyurl\"\n\nOutput:\n \"https://leetcode.com/problems/design-tinyurl\"\n\n\nExplanation:\n\nSolution obj = new Solution();\nstring tiny = obj.encode(url); // returns the encoded tiny url.\nstring ans = obj.decode(tiny); // returns the original url after decoding it.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= url.length <= 10\n4\n\n\nurl\n is guranteed to be a valid URL.",
        "temas": [
            "Hash Table",
            "String",
            "Design",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 532,
        "slug": "k-diff-pairs-in-an-array",
        "url": "https://leetcode.com/problems/k-diff-pairs-in-an-array/",
        "titulo": "K-diff Pairs in an Array",
        "enunciado": "Given an array of integers \nnums\n and an integer \nk\n, return \nthe number of \nunique\n k-diff pairs in the array\n.\n\n\nA \nk-diff\n pair is an integer pair \n(nums[i], nums[j])\n, where the following are true:\n\n\n\n\n0 <= i, j < nums.length\n\n\ni != j\n\n\n|nums[i] - nums[j]| == k\n\n\n\n\nNotice\n that \n|val|\n denotes the absolute value of \nval\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,1,4,1,5], k = 2\n\nOutput:\n 2\n\nExplanation:\n There are two 2-diff pairs in the array, (1, 3) and (3, 5).\nAlthough we have two 1s in the input, we should only return the number of \nunique\n pairs.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4,5], k = 1\n\nOutput:\n 4\n\nExplanation:\n There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,3,1,5,4], k = 0\n\nOutput:\n 1\n\nExplanation:\n There is one 0-diff pair in the array, (1, 1).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n-10\n7\n <= nums[i] <= 10\n7\n\n\n0 <= k <= 10\n7",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 529,
        "slug": "minesweeper",
        "url": "https://leetcode.com/problems/minesweeper/",
        "titulo": "Minesweeper",
        "enunciado": "Let's play the minesweeper game (\nWikipedia\n, \nonline game\n)!\n\n\nYou are given an \nm x n\n char matrix \nboard\n representing the game board where:\n\n\n\n\n'M'\n represents an unrevealed mine,\n\n\n'E'\n represents an unrevealed empty square,\n\n\n'B'\n represents a revealed blank square that has no adjacent mines (i.e., above, below, left, right, and all 4 diagonals),\n\n\ndigit (\n'1'\n to \n'8'\n) represents how many mines are adjacent to this revealed square, and\n\n\n'X'\n represents a revealed mine.\n\n\n\n\nYou are also given an integer array \nclick\n where \nclick = [click\nr\n, click\nc\n]\n represents the next click position among all the unrevealed squares (\n'M'\n or \n'E'\n).\n\n\nReturn \nthe board after revealing this position according to the following rules\n:\n\n\n\n\nIf a mine \n'M'\n is revealed, then the game is over. You should change it to \n'X'\n.\n\n\nIf an empty square \n'E'\n with no adjacent mines is revealed, then change it to a revealed blank \n'B'\n and all of its adjacent unrevealed squares should be revealed recursively.\n\n\nIf an empty square \n'E'\n with at least one adjacent mine is revealed, then change it to a digit (\n'1'\n to \n'8'\n) representing the number of adjacent mines.\n\n\nReturn the board when no more squares will be revealed.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[\"E\",\"E\",\"E\",\"E\",\"E\"],[\"E\",\"E\",\"M\",\"E\",\"E\"],[\"E\",\"E\",\"E\",\"E\",\"E\"],[\"E\",\"E\",\"E\",\"E\",\"E\"]], click = [3,0]\n\nOutput:\n [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"M\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n board = [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"M\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]], click = [1,2]\n\nOutput:\n [[\"B\",\"1\",\"E\",\"1\",\"B\"],[\"B\",\"1\",\"X\",\"1\",\"B\"],[\"B\",\"1\",\"1\",\"1\",\"B\"],[\"B\",\"B\",\"B\",\"B\",\"B\"]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == board.length\n\n\nn == board[i].length\n\n\n1 <= m, n <= 50\n\n\nboard[i][j]\n is either \n'M'\n, \n'E'\n, \n'B'\n, or a digit from \n'1'\n to \n'8'\n.\n\n\nclick.length == 2\n\n\n0 <= click\nr\n < m\n\n\n0 <= click\nc\n < n\n\n\nboard[click\nr\n][click\nc\n]\n is either \n'M'\n or \n'E'\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 1721,
        "slug": "swapping-nodes-in-a-linked-list",
        "url": "https://leetcode.com/problems/swapping-nodes-in-a-linked-list/",
        "titulo": "Swapping Nodes in a Linked List",
        "enunciado": "You are given the \nhead\n of a linked list, and an integer \nk\n.\n\n\nReturn \nthe head of the linked list after \nswapping\n the values of the \nk\nth\n \nnode from the beginning and the \nk\nth\n \nnode from the end (the list is \n1-indexed\n).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5], k = 2\n\nOutput:\n [1,4,3,2,5]\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = [7,9,6,6,7,8,3,0,9,5], k = 5\n\nOutput:\n [7,9,6,6,8,7,3,0,9,5]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is \nn\n.\n\n\n1 <= k <= n <= 10\n5\n\n\n0 <= Node.val <= 100",
        "temas": [
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 526,
        "slug": "beautiful-arrangement",
        "url": "https://leetcode.com/problems/beautiful-arrangement/",
        "titulo": "Beautiful Arrangement",
        "enunciado": "Suppose you have \nn\n integers labeled \n1\n through \nn\n. A permutation of those \nn\n integers \nperm\n (\n1-indexed\n) is considered a \nbeautiful arrangement\n if for every \ni\n (\n1 <= i <= n\n), \neither\n of the following is true:\n\n\n\n\nperm[i]\n is divisible by \ni\n.\n\n\ni\n is divisible by \nperm[i]\n.\n\n\n\n\nGiven an integer \nn\n, return \nthe \nnumber\n of the \nbeautiful arrangements\n that you can construct\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 2\n\nExplanation:\n \nThe first beautiful arrangement is [1,2]:\n    - perm[1] = 1 is divisible by i = 1\n    - perm[2] = 2 is divisible by i = 2\nThe second beautiful arrangement is [2,1]:\n    - perm[1] = 2 is divisible by i = 1\n    - i = 2 is divisible by perm[2] = 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 15",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 525,
        "slug": "contiguous-array",
        "url": "https://leetcode.com/problems/contiguous-array/",
        "titulo": "Contiguous Array",
        "enunciado": "Given a binary array \nnums\n, return \nthe maximum length of a contiguous subarray with an equal number of \n0\n and \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [0,1]\n\nOutput:\n 2\n\nExplanation:\n [0, 1] is the longest contiguous subarray with an equal number of 0 and 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,0]\n\nOutput:\n 2\n\nExplanation:\n [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [0,1,1,1,1,1,0,0,0]\n\nOutput:\n 6\n\nExplanation:\n [1,1,1,0,0,0] is the longest contiguous subarray with equal number of 0 and 1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\nnums[i]\n is either \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 524,
        "slug": "longest-word-in-dictionary-through-deleting",
        "url": "https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/",
        "titulo": "Longest Word in Dictionary through Deleting",
        "enunciado": "Given a string \ns\n and a string array \ndictionary\n, return \nthe longest string in the dictionary that can be formed by deleting some of the given string characters\n. If there is more than one possible result, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abpcplea\", dictionary = [\"ale\",\"apple\",\"monkey\",\"plea\"]\n\nOutput:\n \"apple\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abpcplea\", dictionary = [\"a\",\"b\",\"c\"]\n\nOutput:\n \"a\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\n1 <= dictionary.length <= 1000\n\n\n1 <= dictionary[i].length <= 1000\n\n\ns\n and \ndictionary[i]\n consist of lowercase English letters.",
        "temas": [
            "Array",
            "Two Pointers",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 523,
        "slug": "continuous-subarray-sum",
        "url": "https://leetcode.com/problems/continuous-subarray-sum/",
        "titulo": "Continuous Subarray Sum",
        "enunciado": "Given an integer array nums and an integer k, return \ntrue\n \nif \nnums\n has a \ngood subarray\n or \nfalse\n otherwise\n.\n\n\nA \ngood subarray\n is a subarray where:\n\n\n\n\nits length is \nat least two\n, and\n\n\nthe sum of the elements of the subarray is a multiple of \nk\n.\n\n\n\n\nNote\n that:\n\n\n\n\nA \nsubarray\n is a contiguous part of the array.\n\n\nAn integer \nx\n is a multiple of \nk\n if there exists an integer \nn\n such that \nx = n * k\n. \n0\n is \nalways\n a multiple of \nk\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [23,\n2,4\n,6,7], k = 6\n\nOutput:\n true\n\nExplanation:\n [2, 4] is a continuous subarray of size 2 whose elements sum up to 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [\n23,2,6,4,7\n], k = 6\n\nOutput:\n true\n\nExplanation:\n [23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.\n42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [23,2,6,4,7], k = 13\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9\n\n\n0 <= sum(nums[i]) <= 2\n31\n - 1\n\n\n1 <= k <= 2\n31\n - 1",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 522,
        "slug": "longest-uncommon-subsequence-ii",
        "url": "https://leetcode.com/problems/longest-uncommon-subsequence-ii/",
        "titulo": "Longest Uncommon Subsequence II",
        "enunciado": "Given an array of strings \nstrs\n, return \nthe length of the \nlongest uncommon subsequence\n between them\n. If the longest uncommon subsequence does not exist, return \n-1\n.\n\n\nAn \nuncommon subsequence\n between an array of strings is a string that is a \nsubsequence of one string but not the others\n.\n\n\nA \nsubsequence\n of a string \ns\n is a string that can be obtained after deleting any number of characters from \ns\n.\n\n\n\n\nFor example, \n\"abc\"\n is a subsequence of \n\"aebdc\"\n because you can delete the underlined characters in \n\"a\ne\nb\nd\nc\"\n to get \n\"abc\"\n. Other subsequences of \n\"aebdc\"\n include \n\"aebdc\"\n, \n\"aeb\"\n, and \n\"\"\n (empty string).\n\n\n\n\n \n\n\nExample 1:\n\n\nInput:\n strs = [\"aba\",\"cdc\",\"eae\"]\n\nOutput:\n 3\n\nExample 2:\n\n\nInput:\n strs = [\"aaa\",\"aaa\",\"aa\"]\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= strs.length <= 50\n\n\n1 <= strs[i].length <= 10\n\n\nstrs[i]\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 518,
        "slug": "coin-change-ii",
        "url": "https://leetcode.com/problems/coin-change-ii/",
        "titulo": "Coin Change II",
        "enunciado": "You are given an integer array \ncoins\n representing coins of different denominations and an integer \namount\n representing a total amount of money.\n\n\nReturn \nthe number of combinations that make up that amount\n. If that amount of money cannot be made up by any combination of the coins, return \n0\n.\n\n\nYou may assume that you have an infinite number of each kind of coin.\n\n\nThe answer is \nguaranteed\n to fit into a signed \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n amount = 5, coins = [1,2,5]\n\nOutput:\n 4\n\nExplanation:\n there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n\n\n\nExample 2:\n\n\n\n\nInput:\n amount = 3, coins = [2]\n\nOutput:\n 0\n\nExplanation:\n the amount of 3 cannot be made up just with coins of 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n amount = 10, coins = [10]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= coins.length <= 300\n\n\n1 <= coins[i] <= 5000\n\n\nAll the values of \ncoins\n are \nunique\n.\n\n\n0 <= amount <= 5000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 516,
        "slug": "longest-palindromic-subsequence",
        "url": "https://leetcode.com/problems/longest-palindromic-subsequence/",
        "titulo": "Longest Palindromic Subsequence",
        "enunciado": "Given a string \ns\n, find \nthe longest palindromic \nsubsequence\n's length in\n \ns\n.\n\n\nA \nsubsequence\n is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"bbbab\"\n\nOutput:\n 4\n\nExplanation:\n One possible longest palindromic subsequence is \"bbbb\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cbbd\"\n\nOutput:\n 2\n\nExplanation:\n One possible longest palindromic subsequence is \"bb\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns\n consists only of lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 515,
        "slug": "find-largest-value-in-each-tree-row",
        "url": "https://leetcode.com/problems/find-largest-value-in-each-tree-row/",
        "titulo": "Find Largest Value in Each Tree Row",
        "enunciado": "Given the \nroot\n of a binary tree, return \nan array of the largest value in each row\n of the tree \n(0-indexed)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,3,2,5,3,null,9]\n\nOutput:\n [1,3,9]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1,2,3]\n\nOutput:\n [1,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree will be in the range \n[0, 10\n4\n]\n.\n\n\n-2\n31\n <= Node.val <= 2\n31\n - 1",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 513,
        "slug": "find-bottom-left-tree-value",
        "url": "https://leetcode.com/problems/find-bottom-left-tree-value/",
        "titulo": "Find Bottom Left Tree Value",
        "enunciado": "Given the \nroot\n of a binary tree, return the leftmost value in the last row of the tree.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [2,1,3]\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,null,5,6,null,null,7]\n\nOutput:\n 7\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n-2\n31\n <= Node.val <= 2\n31\n - 1",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 508,
        "slug": "most-frequent-subtree-sum",
        "url": "https://leetcode.com/problems/most-frequent-subtree-sum/",
        "titulo": "Most Frequent Subtree Sum",
        "enunciado": "Given the \nroot\n of a binary tree, return the most frequent \nsubtree sum\n. If there is a tie, return all the values with the highest frequency in any order.\n\n\nThe \nsubtree sum\n of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,2,-3]\n\nOutput:\n [2,-3,4]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [5,2,-5]\n\nOutput:\n [2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5",
        "temas": [
            "Hash Table",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 503,
        "slug": "next-greater-element-ii",
        "url": "https://leetcode.com/problems/next-greater-element-ii/",
        "titulo": "Next Greater Element II",
        "enunciado": "Given a circular integer array \nnums\n (i.e., the next element of \nnums[nums.length - 1]\n is \nnums[0]\n), return \nthe \nnext greater number\n for every element in\n \nnums\n.\n\n\nThe \nnext greater number\n of a number \nx\n is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, return \n-1\n for this number.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,1]\n\nOutput:\n [2,-1,2]\nExplanation: The first 1's next greater number is 2; \nThe number 2 can't find next greater number. \nThe second 1's next greater number needs to search circularly, which is also 2.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,4,3]\n\nOutput:\n [2,3,4,-1,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Stack",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 498,
        "slug": "diagonal-traverse",
        "url": "https://leetcode.com/problems/diagonal-traverse/",
        "titulo": "Diagonal Traverse",
        "enunciado": "Given an \nm x n\n matrix \nmat\n, return \nan array of all the elements of the array in a diagonal order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n mat = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput:\n [1,2,4,7,5,3,6,8,9]\n\n\n\nExample 2:\n\n\n\n\nInput:\n mat = [[1,2],[3,4]]\n\nOutput:\n [1,2,3,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == mat.length\n\n\nn == mat[i].length\n\n\n1 <= m, n <= 10\n4\n\n\n1 <= m * n <= 10\n4\n\n\n-10\n5\n <= mat[i][j] <= 10\n5",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 494,
        "slug": "target-sum",
        "url": "https://leetcode.com/problems/target-sum/",
        "titulo": "Target Sum",
        "enunciado": "You are given an integer array \nnums\n and an integer \ntarget\n.\n\n\nYou want to build an \nexpression\n out of nums by adding one of the symbols \n'+'\n and \n'-'\n before each integer in nums and then concatenate all the integers.\n\n\n\n\nFor example, if \nnums = [2, 1]\n, you can add a \n'+'\n before \n2\n and a \n'-'\n before \n1\n and concatenate them to build the expression \n\"+2-1\"\n.\n\n\n\n\nReturn the number of different \nexpressions\n that you can build, which evaluates to \ntarget\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,1,1,1], target = 3\n\nOutput:\n 5\n\nExplanation:\n There are 5 ways to assign symbols to make the sum of nums be target 3.\n-1 + 1 + 1 + 1 + 1 = 3\n+1 - 1 + 1 + 1 + 1 = 3\n+1 + 1 - 1 + 1 + 1 = 3\n+1 + 1 + 1 - 1 + 1 = 3\n+1 + 1 + 1 + 1 - 1 = 3\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1], target = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 20\n\n\n0 <= nums[i] <= 1000\n\n\n0 <= sum(nums[i]) <= 1000\n\n\n-1000 <= target <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 491,
        "slug": "non-decreasing-subsequences",
        "url": "https://leetcode.com/problems/non-decreasing-subsequences/",
        "titulo": "Non-decreasing Subsequences",
        "enunciado": "Given an integer array \nnums\n, return \nall the different possible non-decreasing subsequences of the given array with at least two elements\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,6,7,7]\n\nOutput:\n [[4,6],[4,6,7],[4,6,7,7],[4,7],[4,7,7],[6,7],[6,7,7],[7,7]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,4,3,2,1]\n\nOutput:\n [[4,4]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 15\n\n\n-100 <= nums[i] <= 100",
        "temas": [
            "Array",
            "Hash Table",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 486,
        "slug": "predict-the-winner",
        "url": "https://leetcode.com/problems/predict-the-winner/",
        "titulo": "Predict the Winner",
        "enunciado": "You are given an integer array \nnums\n. Two players are playing a game with this array: player 1 and player 2.\n\n\nPlayer 1 and player 2 take turns, with player 1 starting first. Both players start the game with a score of \n0\n. At each turn, the player takes one of the numbers from either end of the array (i.e., \nnums[0]\n or \nnums[nums.length - 1]\n) which reduces the size of the array by \n1\n. The player adds the chosen number to their score. The game ends when there are no more elements in the array.\n\n\nReturn \ntrue\n if Player 1 can win the game. If the scores of both players are equal, then player 1 is still the winner, and you should also return \ntrue\n. You may assume that both players are playing optimally.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,5,2]\n\nOutput:\n false\n\nExplanation:\n Initially, player 1 can choose between 1 and 2. \nIf he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). \nSo, final score of player 1 is 1 + 2 = 3, and player 2 is 5. \nHence, player 1 will never be the winner and you need to return false.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,5,233,7]\n\nOutput:\n true\n\nExplanation:\n Player 1 first chooses 1. Then player 2 has to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.\nFinally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 20\n\n\n0 <= nums[i] <= 10\n7",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Recursion",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 481,
        "slug": "magical-string",
        "url": "https://leetcode.com/problems/magical-string/",
        "titulo": "Magical String",
        "enunciado": "A magical string \ns\n consists of only \n'1'\n and \n'2'\n and obeys the following rules:\n\n\n\n\nThe string s is magical because concatenating the number of contiguous occurrences of characters \n'1'\n and \n'2'\n generates the string \ns\n itself.\n\n\n\n\nThe first few elements of \ns\n is \ns = \"1221121221221121122……\"\n. If we group the consecutive \n1\n's and \n2\n's in \ns\n, it will be \n\"1 22 11 2 1 22 1 22 11 2 11 22 ......\"\n and the occurrences of \n1\n's or \n2\n's in each group are \n\"1 2 2 1 1 2 1 2 2 1 2 2 ......\"\n. You can see that the occurrence sequence is \ns\n itself.\n\n\nGiven an integer \nn\n, return the number of \n1\n's in the first \nn\n number in the magical string \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 6\n\nOutput:\n 3\n\nExplanation:\n The first 6 elements of magical string s is \"122112\" and it contains three 1's, so return 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 477,
        "slug": "total-hamming-distance",
        "url": "https://leetcode.com/problems/total-hamming-distance/",
        "titulo": "Total Hamming Distance",
        "enunciado": "The \nHamming distance\n between two integers is the number of positions at which the corresponding bits are different.\n\n\nGiven an integer array \nnums\n, return \nthe sum of \nHamming distances\n between all the pairs of the integers in\n \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,14,2]\n\nOutput:\n 6\n\nExplanation:\n In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case).\nThe answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,14,4]\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n0 <= nums[i] <= 10\n9\n\n\nThe answer for the given input will fit in a \n32-bit\n integer.",
        "temas": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 475,
        "slug": "heaters",
        "url": "https://leetcode.com/problems/heaters/",
        "titulo": "Heaters",
        "enunciado": "Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses.\n\n\nEvery house can be warmed, as long as the house is within the heater's warm radius range. \n\n\nGiven the positions of \nhouses\n and \nheaters\n on a horizontal line, return \nthe minimum radius standard of heaters so that those heaters could cover all houses.\n\n\nNotice\n that all the \nheaters\n follow your radius standard, and the warm radius will the same.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n houses = [1,2,3], heaters = [2]\n\nOutput:\n 1\n\nExplanation:\n The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\n\n\n\nExample 2:\n\n\n\n\nInput:\n houses = [1,2,3,4], heaters = [1,4]\n\nOutput:\n 1\n\nExplanation:\n The two heaters were placed at positions 1 and 4. We need to use a radius 1 standard, then all the houses can be warmed.\n\n\n\nExample 3:\n\n\n\n\nInput:\n houses = [1,5], heaters = [2]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= houses.length, heaters.length <= 3 * 10\n4\n\n\n1 <= houses[i], heaters[i] <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 474,
        "slug": "ones-and-zeroes",
        "url": "https://leetcode.com/problems/ones-and-zeroes/",
        "titulo": "Ones and Zeroes",
        "enunciado": "You are given an array of binary strings \nstrs\n and two integers \nm\n and \nn\n.\n\n\nReturn \nthe size of the largest subset of \nstrs\n such that there are \nat most\n \nm\n \n0\n's and \nn\n \n1\n's in the subset\n.\n\n\nA set \nx\n is a \nsubset\n of a set \ny\n if all elements of \nx\n are also elements of \ny\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n strs = [\"10\",\"0001\",\"111001\",\"1\",\"0\"], m = 5, n = 3\n\nOutput:\n 4\n\nExplanation:\n The largest subset with at most 5 0's and 3 1's is {\"10\", \"0001\", \"1\", \"0\"}, so the answer is 4.\nOther valid but smaller subsets include {\"0001\", \"1\"} and {\"10\", \"1\", \"0\"}.\n{\"111001\"} is an invalid subset because it contains 4 1's, greater than the maximum of 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n strs = [\"10\",\"0\",\"1\"], m = 1, n = 1\n\nOutput:\n 2\n\nExplanation:\n The largest subset is {\"0\", \"1\"}, so the answer is 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= strs.length <= 600\n\n\n1 <= strs[i].length <= 100\n\n\nstrs[i]\n consists only of digits \n'0'\n and \n'1'\n.\n\n\n1 <= m, n <= 100",
        "temas": [
            "Array",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 473,
        "slug": "matchsticks-to-square",
        "url": "https://leetcode.com/problems/matchsticks-to-square/",
        "titulo": "Matchsticks to Square",
        "enunciado": "You are given an integer array \nmatchsticks\n where \nmatchsticks[i]\n is the length of the \ni\nth\n matchstick. You want to use \nall the matchsticks\n to make one square. You \nshould not break\n any stick, but you can link them up, and each matchstick must be used \nexactly one time\n.\n\n\nReturn \ntrue\n if you can make this square and \nfalse\n otherwise.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matchsticks = [1,1,2,2,2]\n\nOutput:\n true\n\nExplanation:\n You can form a square with length 2, one side of the square came two sticks with length 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n matchsticks = [3,3,3,3,4]\n\nOutput:\n false\n\nExplanation:\n You cannot find a way to form a square with all the matchsticks.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= matchsticks.length <= 15\n\n\n1 <= matchsticks[i] <= 10\n8",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Backtracking",
            "Bit Manipulation",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 468,
        "slug": "validate-ip-address",
        "url": "https://leetcode.com/problems/validate-ip-address/",
        "titulo": "Validate IP Address",
        "enunciado": "Given a string \nqueryIP\n, return \n\"IPv4\"\n if IP is a valid IPv4 address, \n\"IPv6\"\n if IP is a valid IPv6 address or \n\"Neither\"\n if IP is not a correct IP of any type.\n\n\nA valid IPv4\n address is an IP in the form \n\"x\n1\n.x\n2\n.x\n3\n.x\n4\n\"\n where \n0 <= x\ni\n <= 255\n and \nx\ni\n \ncannot contain\n leading zeros. For example, \n\"192.168.1.1\"\n and \n\"192.168.1.0\"\n are valid IPv4 addresses while \n\"192.168.01.1\"\n, \n\"192.168.1.00\"\n, and \n\"192.168@1.1\"\n are invalid IPv4 addresses.\n\n\nA valid IPv6\n address is an IP in the form \n\"x\n1\n:x\n2\n:x\n3\n:x\n4\n:x\n5\n:x\n6\n:x\n7\n:x\n8\n\"\n where:\n\n\n\n\n1 <= x\ni\n.length <= 4\n\n\nx\ni\n is a \nhexadecimal string\n which may contain digits, lowercase English letter (\n'a'\n to \n'f'\n) and upper-case English letters (\n'A'\n to \n'F'\n).\n\n\nLeading zeros are allowed in \nx\ni\n.\n\n\n\n\nFor example, \"\n2001:0db8:85a3:0000:0000:8a2e:0370:7334\"\n and \"\n2001:db8:85a3:0:0:8A2E:0370:7334\"\n are valid IPv6 addresses, while \"\n2001:0db8:85a3::8A2E:037j:7334\"\n and \"\n02001:0db8:85a3:0000:0000:8a2e:0370:7334\"\n are invalid IPv6 addresses.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n queryIP = \"172.16.254.1\"\n\nOutput:\n \"IPv4\"\n\nExplanation:\n This is a valid IPv4 address, return \"IPv4\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n queryIP = \"2001:0db8:85a3:0:0:8A2E:0370:7334\"\n\nOutput:\n \"IPv6\"\n\nExplanation:\n This is a valid IPv6 address, return \"IPv6\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n queryIP = \"256.256.256.256\"\n\nOutput:\n \"Neither\"\n\nExplanation:\n This is neither a IPv4 address nor a IPv6 address.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nqueryIP\n consists only of English letters, digits and the characters \n'.'\n and \n':'\n.",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 467,
        "slug": "unique-substrings-in-wraparound-string",
        "url": "https://leetcode.com/problems/unique-substrings-in-wraparound-string/",
        "titulo": "Unique Substrings in Wraparound String",
        "enunciado": "We define the string \nbase\n to be the infinite wraparound string of \n\"abcdefghijklmnopqrstuvwxyz\"\n, so \nbase\n will look like this:\n\n\n\n\n\"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\"\n.\n\n\n\n\nGiven a string \ns\n, return \nthe number of \nunique non-empty substrings\n of \ns\n are present in \nbase\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"a\"\n\nOutput:\n 1\n\nExplanation:\n Only the substring \"a\" of s is in base.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cac\"\n\nOutput:\n 2\n\nExplanation:\n There are two substrings (\"a\", \"c\") of s in base.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"zab\"\n\nOutput:\n 6\n\nExplanation:\n There are six substrings (\"z\", \"a\", \"b\", \"za\", \"ab\", and \"zab\") of s in base.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 464,
        "slug": "can-i-win",
        "url": "https://leetcode.com/problems/can-i-win/",
        "titulo": "Can I Win",
        "enunciado": "In the \"100 game\" two players take turns adding, to a running total, any integer from \n1\n to \n10\n. The player who first causes the running total to \nreach or exceed\n 100 wins.\n\n\nWhat if we change the game so that players \ncannot\n re-use integers?\n\n\nFor example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total >= 100.\n\n\nGiven two integers \nmaxChoosableInteger\n and \ndesiredTotal\n, return \ntrue\n if the first player to move can force a win, otherwise, return \nfalse\n. Assume both players play \noptimally\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n maxChoosableInteger = 10, desiredTotal = 11\n\nOutput:\n false\n\nExplanation:\n\nNo matter which integer the first player choose, the first player will lose.\nThe first player can choose an integer from 1 up to 10.\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\nThe second player will win by choosing 10 and get a total = 11, which is >= desiredTotal.\nSame with other integers chosen by the first player, the second player will always win.\n\n\n\nExample 2:\n\n\n\n\nInput:\n maxChoosableInteger = 10, desiredTotal = 0\n\nOutput:\n true\n\n\n\nExample 3:\n\n\n\n\nInput:\n maxChoosableInteger = 10, desiredTotal = 1\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= maxChoosableInteger <= 20\n\n\n0 <= desiredTotal <= 300",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Bit Manipulation",
            "Memoization",
            "Game Theory",
            "Bitmask"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 462,
        "slug": "minimum-moves-to-equal-array-elements-ii",
        "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/",
        "titulo": "Minimum Moves to Equal Array Elements II",
        "enunciado": "Given an integer array \nnums\n of size \nn\n, return \nthe minimum number of moves required to make all array elements equal\n.\n\n\nIn one move, you can increment or decrement an element of the array by \n1\n.\n\n\nTest cases are designed so that the answer will fit in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 2\n\nExplanation:\n\nOnly two moves are needed (remember each move increments or decrements one element):\n[\n1\n,2,3]  =>  [2,2,\n3\n]  =>  [2,2,2]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,10,2,9]\n\nOutput:\n 16\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Math",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 457,
        "slug": "circular-array-loop",
        "url": "https://leetcode.com/problems/circular-array-loop/",
        "titulo": "Circular Array Loop",
        "enunciado": "You are playing a game involving a \ncircular\n array of non-zero integers \nnums\n. Each \nnums[i]\n denotes the number of indices forward/backward you must move if you are located at index \ni\n:\n\n\n\n\nIf \nnums[i]\n is positive, move \nnums[i]\n steps \nforward\n, and\n\n\nIf \nnums[i]\n is negative, move \nnums[i]\n steps \nbackward\n.\n\n\n\n\nSince the array is \ncircular\n, you may assume that moving forward from the last element puts you on the first element, and moving backwards from the first element puts you on the last element.\n\n\nA \ncycle\n in the array consists of a sequence of indices \nseq\n of length \nk\n where:\n\n\n\n\nFollowing the movement rules above results in the repeating index sequence \nseq[0] -> seq[1] -> ... -> seq[k - 1] -> seq[0] -> ...\n\n\nEvery \nnums[seq[j]]\n is either \nall positive\n or \nall negative\n.\n\n\nk > 1\n\n\n\n\nReturn \ntrue\n if there is a \ncycle\n in \nnums\n, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n nums = [2,-1,1,2,2]\n\nOutput:\n true\n\nExplanation:\n The graph shows how the indices are connected. White nodes are jumping forward, while red is jumping backward.\nWe can see the cycle 0 --> 2 --> 3 --> 0 --> ..., and all of its nodes are white (jumping in the same direction).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n nums = [-1,-2,-3,-4,-5,6]\n\nOutput:\n false\n\nExplanation:\n The graph shows how the indices are connected. White nodes are jumping forward, while red is jumping backward.\nThe only cycle is of size 1, so we return false.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n nums = [1,-1,5,1,4]\n\nOutput:\n true\n\nExplanation:\n The graph shows how the indices are connected. White nodes are jumping forward, while red is jumping backward.\nWe can see the cycle 0 --> 1 --> 0 --> ..., and while it is of size > 1, it has a node jumping forward and a node jumping backward, so \nit is not a cycle\n.\nWe can see the cycle 3 --> 4 --> 3 --> ..., and all of its nodes are white (jumping in the same direction).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5000\n\n\n-1000 <= nums[i] <= 1000\n\n\nnums[i] != 0\n\n\n\n\n \n\n\nFollow up:\n Could you solve it in \nO(n)\n time complexity and \nO(1)\n extra space complexity?",
        "temas": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 456,
        "slug": "132-pattern",
        "url": "https://leetcode.com/problems/132-pattern/",
        "titulo": "132 Pattern",
        "enunciado": "Given an array of \nn\n integers \nnums\n, a \n132 pattern\n is a subsequence of three integers \nnums[i]\n, \nnums[j]\n and \nnums[k]\n such that \ni < j < k\n and \nnums[i] < nums[k] < nums[j]\n.\n\n\nReturn \ntrue\n if there is a \n132 pattern\n in \nnums\n, otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n false\n\nExplanation:\n There is no 132 pattern in the sequence.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,1,4,2]\n\nOutput:\n true\n\nExplanation:\n There is a 132 pattern in the sequence: [1, 4, 2].\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [-1,3,2,0]\n\nOutput:\n true\n\nExplanation:\n There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 2 * 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Stack",
            "Monotonic Stack",
            "Ordered Set"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 454,
        "slug": "4sum-ii",
        "url": "https://leetcode.com/problems/4sum-ii/",
        "titulo": "4Sum II",
        "enunciado": "Given four integer arrays \nnums1\n, \nnums2\n, \nnums3\n, and \nnums4\n all of length \nn\n, return the number of tuples \n(i, j, k, l)\n such that:\n\n\n\n\n0 <= i, j, k, l < n\n\n\nnums1[i] + nums2[j] + nums3[k] + nums4[l] == 0\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,2], nums2 = [-2,-1], nums3 = [-1,2], nums4 = [0,2]\n\nOutput:\n 2\n\nExplanation:\n\nThe two tuples are:\n1. (0, 0, 0, 1) -> nums1[0] + nums2[0] + nums3[0] + nums4[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -> nums1[1] + nums2[1] + nums3[0] + nums4[0] = 2 + (-1) + (-1) + 0 = 0\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [0], nums2 = [0], nums3 = [0], nums4 = [0]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums1.length\n\n\nn == nums2.length\n\n\nn == nums3.length\n\n\nn == nums4.length\n\n\n1 <= n <= 200\n\n\n-2\n28\n <= nums1[i], nums2[i], nums3[i], nums4[i] <= 2\n28",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 453,
        "slug": "minimum-moves-to-equal-array-elements",
        "url": "https://leetcode.com/problems/minimum-moves-to-equal-array-elements/",
        "titulo": "Minimum Moves to Equal Array Elements",
        "enunciado": "Given an integer array \nnums\n of size \nn\n, return \nthe minimum number of moves required to make all array elements equal\n.\n\n\nIn one move, you can increment \nn - 1\n elements of the array by \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 3\n\nExplanation:\n Only three moves are needed (remember each move increments two elements):\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,1,1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\nThe answer is guaranteed to fit in a \n32-bit\n integer.",
        "temas": [
            "Array",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 452,
        "slug": "minimum-number-of-arrows-to-burst-balloons",
        "url": "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/",
        "titulo": "Minimum Number of Arrows to Burst Balloons",
        "enunciado": "There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array \npoints\n where \npoints[i] = [x\nstart\n, x\nend\n]\n denotes a balloon whose \nhorizontal diameter\n stretches between \nx\nstart\n and \nx\nend\n. You do not know the exact y-coordinates of the balloons.\n\n\nArrows can be shot up \ndirectly vertically\n (in the positive y-direction) from different points along the x-axis. A balloon with \nx\nstart\n and \nx\nend\n is \nburst\n by an arrow shot at \nx\n if \nx\nstart\n <= x <= x\nend\n. There is \nno limit\n to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.\n\n\nGiven the array \npoints\n, return \nthe \nminimum\n number of arrows that must be shot to burst all balloons\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n points = [[10,16],[2,8],[1,6],[7,12]]\n\nOutput:\n 2\n\nExplanation:\n The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 6, bursting the balloons [2,8] and [1,6].\n- Shoot an arrow at x = 11, bursting the balloons [10,16] and [7,12].\n\n\n\nExample 2:\n\n\n\n\nInput:\n points = [[1,2],[3,4],[5,6],[7,8]]\n\nOutput:\n 4\n\nExplanation:\n One arrow needs to be shot for each balloon for a total of 4 arrows.\n\n\n\nExample 3:\n\n\n\n\nInput:\n points = [[1,2],[2,3],[3,4],[4,5]]\n\nOutput:\n 2\n\nExplanation:\n The balloons can be burst by 2 arrows:\n- Shoot an arrow at x = 2, bursting the balloons [1,2] and [2,3].\n- Shoot an arrow at x = 4, bursting the balloons [3,4] and [4,5].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= points.length <= 10\n5\n\n\npoints[i].length == 2\n\n\n-2\n31\n <= x\nstart\n < x\nend\n <= 2\n31\n - 1",
        "temas": [
            "Array",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 451,
        "slug": "sort-characters-by-frequency",
        "url": "https://leetcode.com/problems/sort-characters-by-frequency/",
        "titulo": "Sort Characters By Frequency",
        "enunciado": "Given a string \ns\n, sort it in \ndecreasing order\n based on the \nfrequency\n of the characters. The \nfrequency\n of a character is the number of times it appears in the string.\n\n\nReturn \nthe sorted string\n. If there are multiple answers, return \nany of them\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"tree\"\n\nOutput:\n \"eert\"\n\nExplanation:\n 'e' appears twice while 'r' and 't' both appear once.\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cccaaa\"\n\nOutput:\n \"aaaccc\"\n\nExplanation:\n Both 'c' and 'a' appear three times, so both \"cccaaa\" and \"aaaccc\" are valid answers.\nNote that \"cacaca\" is incorrect, as the same characters must be together.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"Aabb\"\n\nOutput:\n \"bbAa\"\n\nExplanation:\n \"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\nNote that 'A' and 'a' are treated as two different characters.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 * 10\n5\n\n\ns\n consists of uppercase and lowercase English letters and digits.",
        "temas": [
            "Hash Table",
            "String",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 450,
        "slug": "delete-node-in-a-bst",
        "url": "https://leetcode.com/problems/delete-node-in-a-bst/",
        "titulo": "Delete Node in a BST",
        "enunciado": "Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return \nthe \nroot node reference\n (possibly updated) of the BST\n.\n\n\nBasically, the deletion can be divided into two stages:\n\n\n\n\nSearch for a node to remove.\n\n\nIf the node is found, delete the node.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,3,6,2,4,null,7], key = 3\n\nOutput:\n [5,4,6,2,null,null,7]\n\nExplanation:\n Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is [5,4,6,2,null,null,7], shown in the above BST.\nPlease notice that another valid answer is [5,2,6,null,4,null,7] and it's also accepted.\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [5,3,6,2,4,null,7], key = 0\n\nOutput:\n [5,3,6,2,4,null,7]\n\nExplanation:\n The tree does not contain a node with value = 0.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [], key = 0\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 10\n4\n]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5\n\n\nEach node has a \nunique\n value.\n\n\nroot\n is a valid binary search tree.\n\n\n-10\n5\n <= key <= 10\n5\n\n\n\n\n \n\n\nFollow up:\n Could you solve it with time complexity \nO(height of tree)\n?",
        "temas": [
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 449,
        "slug": "serialize-and-deserialize-bst",
        "url": "https://leetcode.com/problems/serialize-and-deserialize-bst/",
        "titulo": "Serialize and Deserialize BST",
        "enunciado": "Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\n\n\nDesign an algorithm to serialize and deserialize a \nbinary search tree\n. There is no restriction on how your serialization/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.\n\n\nThe encoded string should be as compact as possible.\n\n\n \n\n\nExample 1:\n\n\nInput:\n root = [2,1,3]\n\nOutput:\n [2,1,3]\n\nExample 2:\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 10\n4\n]\n.\n\n\n0 <= Node.val <= 10\n4\n\n\nThe input tree is \nguaranteed\n to be a binary search tree.",
        "temas": [
            "String",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Design",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 447,
        "slug": "number-of-boomerangs",
        "url": "https://leetcode.com/problems/number-of-boomerangs/",
        "titulo": "Number of Boomerangs",
        "enunciado": "You are given \nn\n \npoints\n in the plane that are all \ndistinct\n, where \npoints[i] = [x\ni\n, y\ni\n]\n. A \nboomerang\n is a tuple of points \n(i, j, k)\n such that the distance between \ni\n and \nj\n equals the distance between \ni\n and \nk\n \n(the order of the tuple matters)\n.\n\n\nReturn \nthe number of boomerangs\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n points = [[0,0],[1,0],[2,0]]\n\nOutput:\n 2\n\nExplanation:\n The two boomerangs are [[1,0],[0,0],[2,0]] and [[1,0],[2,0],[0,0]].\n\n\n\nExample 2:\n\n\n\n\nInput:\n points = [[1,1],[2,2],[3,3]]\n\nOutput:\n 2\n\n\n\nExample 3:\n\n\n\n\nInput:\n points = [[1,1]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == points.length\n\n\n1 <= n <= 500\n\n\npoints[i].length == 2\n\n\n-10\n4\n <= x\ni\n, y\ni\n <= 10\n4\n\n\nAll the points are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 445,
        "slug": "add-two-numbers-ii",
        "url": "https://leetcode.com/problems/add-two-numbers-ii/",
        "titulo": "Add Two Numbers II",
        "enunciado": "You are given two \nnon-empty\n linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\n\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n l1 = [7,2,4,3], l2 = [5,6,4]\n\nOutput:\n [7,8,0,7]\n\n\n\nExample 2:\n\n\n\n\nInput:\n l1 = [2,4,3], l2 = [5,6,4]\n\nOutput:\n [8,0,7]\n\n\n\nExample 3:\n\n\n\n\nInput:\n l1 = [0], l2 = [0]\n\nOutput:\n [0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in each linked list is in the range \n[1, 100]\n.\n\n\n0 <= Node.val <= 9\n\n\nIt is guaranteed that the list represents a number that does not have leading zeros.\n\n\n\n\n \n\n\nFollow up:\n Could you solve it without reversing the input lists?",
        "temas": [
            "Linked List",
            "Math",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 443,
        "slug": "string-compression",
        "url": "https://leetcode.com/problems/string-compression/",
        "titulo": "String Compression",
        "enunciado": "Given an array of characters \nchars\n, compress it using the following algorithm:\n\n\nBegin with an empty string \ns\n. For each group of \nconsecutive repeating characters\n in \nchars\n:\n\n\n\n\nIf the group's length is \n1\n, append the character to \ns\n.\n\n\nOtherwise, append the character followed by the group's length.\n\n\n\n\nThe compressed string \ns\n \nshould not be returned separately\n, but instead, be stored \nin the input character array \nchars\n. Note that group lengths that are \n10\n or longer will be split into multiple characters in \nchars\n.\n\n\nAfter you are done \nmodifying the input array,\n return \nthe new length of the array\n.\n\n\nYou must write an algorithm that uses only constant extra space.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n chars = [\"a\",\"a\",\"b\",\"b\",\"c\",\"c\",\"c\"]\n\nOutput:\n Return 6, and the first 6 characters of the input array should be: [\"a\",\"2\",\"b\",\"2\",\"c\",\"3\"]\n\nExplanation:\n The groups are \"aa\", \"bb\", and \"ccc\". This compresses to \"a2b2c3\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n chars = [\"a\"]\n\nOutput:\n Return 1, and the first character of the input array should be: [\"a\"]\n\nExplanation:\n The only group is \"a\", which remains uncompressed since it's a single character.\n\n\n\nExample 3:\n\n\n\n\nInput:\n chars = [\"a\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\",\"b\"]\n\nOutput:\n Return 4, and the first 4 characters of the input array should be: [\"a\",\"b\",\"1\",\"2\"].\n\nExplanation:\n The groups are \"a\" and \"bbbbbbbbbbbb\". This compresses to \"ab12\".\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= chars.length <= 2000\n\n\nchars[i]\n is a lowercase English letter, uppercase English letter, digit, or symbol.",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 442,
        "slug": "find-all-duplicates-in-an-array",
        "url": "https://leetcode.com/problems/find-all-duplicates-in-an-array/",
        "titulo": "Find All Duplicates in an Array",
        "enunciado": "Given an integer array \nnums\n of length \nn\n where all the integers of \nnums\n are in the range \n[1, n]\n and each integer appears \nat most\n \ntwice\n, return \nan array of all the integers that appears \ntwice\n.\n\n\nYou must write an algorithm that runs in \nO(n)\n time and uses only \nconstant\n auxiliary space, excluding the space needed to store the output\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [4,3,2,7,8,2,3,1]\n\nOutput:\n [2,3]\n\nExample 2:\n\n\nInput:\n nums = [1,1,2]\n\nOutput:\n [1]\n\nExample 3:\n\n\nInput:\n nums = [1]\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\n1 <= nums[i] <= n\n\n\nEach element in \nnums\n appears \nonce\n or \ntwice\n.",
        "temas": [
            "Array",
            "Hash Table"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 438,
        "slug": "find-all-anagrams-in-a-string",
        "url": "https://leetcode.com/problems/find-all-anagrams-in-a-string/",
        "titulo": "Find All Anagrams in a String",
        "enunciado": "Given two strings \ns\n and \np\n, return an array of all the start indices of \np\n's \nanagrams\n in \ns\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"cbaebabacd\", p = \"abc\"\n\nOutput:\n [0,6]\n\nExplanation:\n\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"abab\", p = \"ab\"\n\nOutput:\n [0,1,2]\n\nExplanation:\n\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length, p.length <= 3 * 10\n4\n\n\ns\n and \np\n consist of lowercase English letters.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 437,
        "slug": "path-sum-iii",
        "url": "https://leetcode.com/problems/path-sum-iii/",
        "titulo": "Path Sum III",
        "enunciado": "Given the \nroot\n of a binary tree and an integer \ntargetSum\n, return \nthe number of paths where the sum of the values along the path equals\n \ntargetSum\n.\n\n\nThe path does not need to start or end at the root or a leaf, but it must go downwards (i.e., traveling only from parent nodes to child nodes).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [10,5,-3,3,2,null,11,3,-2,null,1], targetSum = 8\n\nOutput:\n 3\n\nExplanation:\n The paths that sum to 8 are shown.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 1000]\n.\n\n\n-10\n9\n <= Node.val <= 10\n9\n\n\n-1000 <= targetSum <= 1000",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 436,
        "slug": "find-right-interval",
        "url": "https://leetcode.com/problems/find-right-interval/",
        "titulo": "Find Right Interval",
        "enunciado": "You are given an array of \nintervals\n, where \nintervals[i] = [start\ni\n, end\ni\n]\n and each \nstart\ni\n is \nunique\n.\n\n\nThe \nright interval\n for an interval \ni\n is an interval \nj\n such that \nstart\nj\n >= end\ni\n and \nstart\nj\n is \nminimized\n. Note that \ni\n may equal \nj\n.\n\n\nReturn \nan array of \nright interval\n indices for each interval \ni\n. If no \nright interval\n exists for interval \ni\n, then put \n-1\n at index \ni\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n intervals = [[1,2]]\n\nOutput:\n [-1]\n\nExplanation:\n There is only one interval in the collection, so it outputs -1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n intervals = [[3,4],[2,3],[1,2]]\n\nOutput:\n [-1,0,1]\n\nExplanation:\n There is no right interval for [3,4].\nThe right interval for [2,3] is [3,4] since start\n0\n = 3 is the smallest start that is >= end\n1\n = 3.\nThe right interval for [1,2] is [2,3] since start\n1\n = 2 is the smallest start that is >= end\n2\n = 2.\n\n\n\nExample 3:\n\n\n\n\nInput:\n intervals = [[1,4],[2,3],[3,4]]\n\nOutput:\n [-1,2,-1]\n\nExplanation:\n There is no right interval for [1,4] and [3,4].\nThe right interval for [2,3] is [3,4] since start\n2\n = 3 is the smallest start that is >= end\n1\n = 3.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= intervals.length <= 2 * 10\n4\n\n\nintervals[i].length == 2\n\n\n-10\n6\n <= start\ni\n <= end\ni\n <= 10\n6\n\n\nThe start point of each interval is \nunique\n.",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 435,
        "slug": "non-overlapping-intervals",
        "url": "https://leetcode.com/problems/non-overlapping-intervals/",
        "titulo": "Non-overlapping Intervals",
        "enunciado": "Given an array of intervals \nintervals\n where \nintervals[i] = [start\ni\n, end\ni\n]\n, return \nthe minimum number of intervals you need to remove to make the rest of the intervals non-overlapping\n.\n\n\nNote\n that intervals which only touch at a point are \nnon-overlapping\n. For example, \n[1, 2]\n and \n[2, 3]\n are non-overlapping.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n intervals = [[1,2],[2,3],[3,4],[1,3]]\n\nOutput:\n 1\n\nExplanation:\n [1,3] can be removed and the rest of the intervals are non-overlapping.\n\n\n\nExample 2:\n\n\n\n\nInput:\n intervals = [[1,2],[1,2],[1,2]]\n\nOutput:\n 2\n\nExplanation:\n You need to remove two [1,2] to make the rest of the intervals non-overlapping.\n\n\n\nExample 3:\n\n\n\n\nInput:\n intervals = [[1,2],[2,3]]\n\nOutput:\n 0\n\nExplanation:\n You don't need to remove any of the intervals since they're already non-overlapping.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= intervals.length <= 10\n5\n\n\nintervals[i].length == 2\n\n\n-5 * 10\n4\n <= start\ni\n < end\ni\n <= 5 * 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 433,
        "slug": "minimum-genetic-mutation",
        "url": "https://leetcode.com/problems/minimum-genetic-mutation/",
        "titulo": "Minimum Genetic Mutation",
        "enunciado": "A gene string can be represented by an 8-character long string, with choices from \n'A'\n, \n'C'\n, \n'G'\n, and \n'T'\n.\n\n\nSuppose we need to investigate a mutation from a gene string \nstartGene\n to a gene string \nendGene\n where one mutation is defined as one single character changed in the gene string.\n\n\n\n\nFor example, \n\"AACCGGTT\" --> \"AACCGGTA\"\n is one mutation.\n\n\n\n\nThere is also a gene bank \nbank\n that records all the valid gene mutations. A gene must be in \nbank\n to make it a valid gene string.\n\n\nGiven the two gene strings \nstartGene\n and \nendGene\n and the gene bank \nbank\n, return \nthe minimum number of mutations needed to mutate from \nstartGene\n to \nendGene\n. If there is no such a mutation, return \n-1\n.\n\n\nNote that the starting point is assumed to be valid, so it might not be included in the bank.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n startGene = \"AACCGGTT\", endGene = \"AACCGGTA\", bank = [\"AACCGGTA\"]\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n startGene = \"AACCGGTT\", endGene = \"AAACGGTA\", bank = [\"AACCGGTA\",\"AACCGCTA\",\"AAACGGTA\"]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= bank.length <= 10\n\n\nstartGene.length == endGene.length == bank[i].length == 8\n\n\nstartGene\n, \nendGene\n, and \nbank[i]\n consist of only the characters \n['A', 'C', 'G', 'T']\n.",
        "temas": [
            "Hash Table",
            "String",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 424,
        "slug": "longest-repeating-character-replacement",
        "url": "https://leetcode.com/problems/longest-repeating-character-replacement/",
        "titulo": "Longest Repeating Character Replacement",
        "enunciado": "You are given a string \ns\n and an integer \nk\n. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most \nk\n times.\n\n\nReturn \nthe length of the longest substring containing the same letter you can get after performing the above operations\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"ABAB\", k = 2\n\nOutput:\n 4\n\nExplanation:\n Replace the two 'A's with two 'B's or vice versa.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"AABABBA\", k = 1\n\nOutput:\n 4\n\nExplanation:\n Replace the one 'A' in the middle with 'B' and form \"AABBBBA\".\nThe substring \"BBBB\" has the longest repeating letters, which is 4.\nThere may exists other ways to achieve this answer too.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns\n consists of only uppercase English letters.\n\n\n0 <= k <= s.length",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 423,
        "slug": "reconstruct-original-digits-from-english",
        "url": "https://leetcode.com/problems/reconstruct-original-digits-from-english/",
        "titulo": "Reconstruct Original Digits from English",
        "enunciado": "Given a string \ns\n containing an out-of-order English representation of digits \n0-9\n, return \nthe digits in \nascending\n order\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"owoztneoer\"\n\nOutput:\n \"012\"\n\nExample 2:\n\n\nInput:\n s = \"fviefuro\"\n\nOutput:\n \"45\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is one of the characters \n[\"e\",\"g\",\"f\",\"i\",\"h\",\"o\",\"n\",\"s\",\"r\",\"u\",\"t\",\"w\",\"v\",\"x\",\"z\"]\n.\n\n\ns\n is \nguaranteed\n to be valid.",
        "temas": [
            "Hash Table",
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 421,
        "slug": "maximum-xor-of-two-numbers-in-an-array",
        "url": "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array/",
        "titulo": "Maximum XOR of Two Numbers in an Array",
        "enunciado": "Given an integer array \nnums\n, return \nthe maximum result of \nnums[i] XOR nums[j]\n, where \n0 <= i <= j < n\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,10,5,25,2,8]\n\nOutput:\n 28\n\nExplanation:\n The maximum result is 5 XOR 25 = 28.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [14,70,53,83,49,91,36,80,92,51,66,70]\n\nOutput:\n 127\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n5\n\n\n0 <= nums[i] <= 2\n31\n - 1",
        "temas": [
            "Array",
            "Hash Table",
            "Bit Manipulation",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 419,
        "slug": "battleships-in-a-board",
        "url": "https://leetcode.com/problems/battleships-in-a-board/",
        "titulo": "Battleships in a Board",
        "enunciado": "Given an \nm x n\n matrix \nboard\n where each cell is a battleship \n'X'\n or empty \n'.'\n, return \nthe number of the \nbattleships\n on\n \nboard\n.\n\n\nBattleships\n can only be placed horizontally or vertically on \nboard\n. In other words, they can only be made of the shape \n1 x k\n (\n1\n row, \nk\n columns) or \nk x 1\n (\nk\n rows, \n1\n column), where \nk\n can be of any size. At least one horizontal or vertical cell separates between two battleships (i.e., there are no adjacent battleships).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[\"X\",\".\",\".\",\"X\"],[\".\",\".\",\".\",\"X\"],[\".\",\".\",\".\",\"X\"]]\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n board = [[\".\"]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == board.length\n\n\nn == board[i].length\n\n\n1 <= m, n <= 200\n\n\nboard[i][j]\n is either \n'.'\n or \n'X'\n.\n\n\n\n\n \n\n\nFollow up:\n Could you do it in one-pass, using only \nO(1)\n extra memory and without modifying the values \nboard\n?",
        "temas": [
            "Array",
            "Depth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 417,
        "slug": "pacific-atlantic-water-flow",
        "url": "https://leetcode.com/problems/pacific-atlantic-water-flow/",
        "titulo": "Pacific Atlantic Water Flow",
        "enunciado": "There is an \nm x n\n rectangular island that borders both the \nPacific Ocean\n and \nAtlantic Ocean\n. The \nPacific Ocean\n touches the island's left and top edges, and the \nAtlantic Ocean\n touches the island's right and bottom edges.\n\n\nThe island is partitioned into a grid of square cells. You are given an \nm x n\n integer matrix \nheights\n where \nheights[r][c]\n represents the \nheight above sea level\n of the cell at coordinate \n(r, c)\n.\n\n\nThe island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell's height is \nless than or equal to\n the current cell's height. Water can flow from any cell adjacent to an ocean into the ocean.\n\n\nReturn \na \n2D list\n of grid coordinates \nresult\n where \nresult[i] = [r\ni\n, c\ni\n]\n denotes that rain water can flow from cell \n(r\ni\n, c\ni\n)\n to \nboth\n the Pacific and Atlantic oceans\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n heights = [[1,2,2,3,5],[3,2,3,4,4],[2,4,5,3,1],[6,7,1,4,5],[5,1,1,2,4]]\n\nOutput:\n [[0,4],[1,3],[1,4],[2,2],[3,0],[3,1],[4,0]]\n\nExplanation:\n The following cells can flow to the Pacific and Atlantic oceans, as shown below:\n[0,4]: [0,4] -> Pacific Ocean \n       [0,4] -> Atlantic Ocean\n[1,3]: [1,3] -> [0,3] -> Pacific Ocean \n       [1,3] -> [1,4] -> Atlantic Ocean\n[1,4]: [1,4] -> [1,3] -> [0,3] -> Pacific Ocean \n       [1,4] -> Atlantic Ocean\n[2,2]: [2,2] -> [1,2] -> [0,2] -> Pacific Ocean \n       [2,2] -> [2,3] -> [2,4] -> Atlantic Ocean\n[3,0]: [3,0] -> Pacific Ocean \n       [3,0] -> [4,0] -> Atlantic Ocean\n[3,1]: [3,1] -> [3,0] -> Pacific Ocean \n       [3,1] -> [4,1] -> Atlantic Ocean\n[4,0]: [4,0] -> Pacific Ocean \n       [4,0] -> Atlantic Ocean\nNote that there are other possible paths for these cells to flow to the Pacific and Atlantic oceans.\n\n\n\nExample 2:\n\n\n\n\nInput:\n heights = [[1]]\n\nOutput:\n [[0,0]]\n\nExplanation:\n The water can flow from the only cell to the Pacific and Atlantic oceans.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == heights.length\n\n\nn == heights[r].length\n\n\n1 <= m, n <= 200\n\n\n0 <= heights[r][c] <= 10\n5",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 416,
        "slug": "partition-equal-subset-sum",
        "url": "https://leetcode.com/problems/partition-equal-subset-sum/",
        "titulo": "Partition Equal Subset Sum",
        "enunciado": "Given an integer array \nnums\n, return \ntrue\n \nif you can partition the array into two subsets such that the sum of the elements in both subsets is equal or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,5,11,5]\n\nOutput:\n true\n\nExplanation:\n The array can be partitioned as [1, 5, 5] and [11].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,5]\n\nOutput:\n false\n\nExplanation:\n The array cannot be partitioned into equal sum subsets.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 200\n\n\n1 <= nums[i] <= 100",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 413,
        "slug": "arithmetic-slices",
        "url": "https://leetcode.com/problems/arithmetic-slices/",
        "titulo": "Arithmetic Slices",
        "enunciado": "An integer array is called arithmetic if it consists of \nat least three elements\n and if the difference between any two consecutive elements is the same.\n\n\n\n\nFor example, \n[1,3,5,7,9]\n, \n[7,7,7,7]\n, and \n[3,-1,-5,-9]\n are arithmetic sequences.\n\n\n\n\nGiven an integer array \nnums\n, return \nthe number of arithmetic \nsubarrays\n of\n \nnums\n.\n\n\nA \nsubarray\n is a contiguous subsequence of the array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n 3\n\nExplanation:\n We have 3 arithmetic slices in nums: [1, 2, 3], [2, 3, 4] and [1,2,3,4] itself.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5000\n\n\n-1000 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 406,
        "slug": "queue-reconstruction-by-height",
        "url": "https://leetcode.com/problems/queue-reconstruction-by-height/",
        "titulo": "Queue Reconstruction by Height",
        "enunciado": "You are given an array of people, \npeople\n, which are the attributes of some people in a queue (not necessarily in order). Each \npeople[i] = [h\ni\n, k\ni\n]\n represents the \ni\nth\n person of height \nh\ni\n with \nexactly\n \nk\ni\n other people in front who have a height greater than or equal to \nh\ni\n.\n\n\nReconstruct and return \nthe queue that is represented by the input array \npeople\n. The returned queue should be formatted as an array \nqueue\n, where \nqueue[j] = [h\nj\n, k\nj\n]\n is the attributes of the \nj\nth\n person in the queue (\nqueue[0]\n is the person at the front of the queue).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n people = [[7,0],[4,4],[7,1],[5,0],[6,1],[5,2]]\n\nOutput:\n [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]]\n\nExplanation:\n\nPerson 0 has height 5 with no other people taller or the same height in front.\nPerson 1 has height 7 with no other people taller or the same height in front.\nPerson 2 has height 5 with two persons taller or the same height in front, which is person 0 and 1.\nPerson 3 has height 6 with one person taller or the same height in front, which is person 1.\nPerson 4 has height 4 with four people taller or the same height in front, which are people 0, 1, 2, and 3.\nPerson 5 has height 7 with one person taller or the same height in front, which is person 1.\nHence [[5,0],[7,0],[5,2],[6,1],[4,4],[7,1]] is the reconstructed queue.\n\n\n\nExample 2:\n\n\n\n\nInput:\n people = [[6,0],[5,0],[4,0],[3,2],[2,2],[1,4]]\n\nOutput:\n [[4,0],[5,0],[2,2],[3,2],[1,4],[6,0]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= people.length <= 2000\n\n\n0 <= h\ni\n <= 10\n6\n\n\n0 <= k\ni\n < people.length\n\n\nIt is guaranteed that the queue can be reconstructed.",
        "temas": [
            "Array",
            "Binary Indexed Tree",
            "Segment Tree",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 402,
        "slug": "remove-k-digits",
        "url": "https://leetcode.com/problems/remove-k-digits/",
        "titulo": "Remove K Digits",
        "enunciado": "Given string num representing a non-negative integer \nnum\n, and an integer \nk\n, return \nthe smallest possible integer after removing\n \nk\n \ndigits from\n \nnum\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n num = \"1432219\", k = 3\n\nOutput:\n \"1219\"\n\nExplanation:\n Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n\n\n\nExample 2:\n\n\n\n\nInput:\n num = \"10200\", k = 1\n\nOutput:\n \"200\"\n\nExplanation:\n Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n\n\n\nExample 3:\n\n\n\n\nInput:\n num = \"10\", k = 2\n\nOutput:\n \"0\"\n\nExplanation:\n Remove all the digits from the number and it is left with nothing which is 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= num.length <= 10\n5\n\n\nnum\n consists of only digits.\n\n\nnum\n does not have any leading zeros except for the zero itself.",
        "temas": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 400,
        "slug": "nth-digit",
        "url": "https://leetcode.com/problems/nth-digit/",
        "titulo": "Nth Digit",
        "enunciado": "Given an integer \nn\n, return the \nn\nth\n digit of the infinite integer sequence \n[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 3\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 11\n\nOutput:\n 0\n\nExplanation:\n The 11\nth\n digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2\n31\n - 1",
        "temas": [
            "Math",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 399,
        "slug": "evaluate-division",
        "url": "https://leetcode.com/problems/evaluate-division/",
        "titulo": "Evaluate Division",
        "enunciado": "You are given an array of variable pairs \nequations\n and an array of real numbers \nvalues\n, where \nequations[i] = [A\ni\n, B\ni\n]\n and \nvalues[i]\n represent the equation \nA\ni\n / B\ni\n = values[i]\n. Each \nA\ni\n or \nB\ni\n is a string that represents a single variable.\n\n\nYou are also given some \nqueries\n, where \nqueries[j] = [C\nj\n, D\nj\n]\n represents the \nj\nth\n query where you must find the answer for \nC\nj\n / D\nj\n = ?\n.\n\n\nReturn \nthe answers to all queries\n. If a single answer cannot be determined, return \n-1.0\n.\n\n\nNote:\n The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.\n\n\nNote: \nThe variables that do not occur in the list of equations are undefined, so the answer cannot be determined for them.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n equations = [[\"a\",\"b\"],[\"b\",\"c\"]], values = [2.0,3.0], queries = [[\"a\",\"c\"],[\"b\",\"a\"],[\"a\",\"e\"],[\"a\",\"a\"],[\"x\",\"x\"]]\n\nOutput:\n [6.00000,0.50000,-1.00000,1.00000,-1.00000]\n\nExplanation:\n \nGiven: \na / b = 2.0\n, \nb / c = 3.0\n\nqueries are: \na / c = ?\n, \nb / a = ?\n, \na / e = ?\n, \na / a = ?\n, \nx / x = ? \n\nreturn: [6.0, 0.5, -1.0, 1.0, -1.0 ]\nnote: x is undefined => -1.0\n\n\nExample 2:\n\n\n\n\nInput:\n equations = [[\"a\",\"b\"],[\"b\",\"c\"],[\"bc\",\"cd\"]], values = [1.5,2.5,5.0], queries = [[\"a\",\"c\"],[\"c\",\"b\"],[\"bc\",\"cd\"],[\"cd\",\"bc\"]]\n\nOutput:\n [3.75000,0.40000,5.00000,0.20000]\n\n\n\nExample 3:\n\n\n\n\nInput:\n equations = [[\"a\",\"b\"]], values = [0.5], queries = [[\"a\",\"b\"],[\"b\",\"a\"],[\"a\",\"c\"],[\"x\",\"y\"]]\n\nOutput:\n [0.50000,2.00000,-1.00000,-1.00000]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= equations.length <= 20\n\n\nequations[i].length == 2\n\n\n1 <= A\ni\n.length, B\ni\n.length <= 5\n\n\nvalues.length == equations.length\n\n\n0.0 < values[i] <= 20.0\n\n\n1 <= queries.length <= 20\n\n\nqueries[i].length == 2\n\n\n1 <= C\nj\n.length, D\nj\n.length <= 5\n\n\nA\ni\n, B\ni\n, C\nj\n, D\nj\n consist of lower case English letters and digits.",
        "temas": [
            "Array",
            "String",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Graph",
            "Shortest Path"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 398,
        "slug": "random-pick-index",
        "url": "https://leetcode.com/problems/random-pick-index/",
        "titulo": "Random Pick Index",
        "enunciado": "Given an integer array \nnums\n with possible \nduplicates\n, randomly output the index of a given \ntarget\n number. You can assume that the given target number must exist in the array.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution(int[] nums)\n Initializes the object with the array \nnums\n.\n\n\nint pick(int target)\n Picks a random index \ni\n from \nnums\n where \nnums[i] == target\n. If there are multiple valid i's, then each index should have an equal probability of returning.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Solution\", \"pick\", \"pick\", \"pick\"]\n[[[1, 2, 3, 3, 3]], [3], [1], [3]]\n\nOutput\n\n[null, 4, 0, 2]\n\n\nExplanation\n\nSolution solution = new Solution([1, 2, 3, 3, 3]);\nsolution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(1); // It should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(3); // It should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n4\n\n\n-2\n31\n <= nums[i] <= 2\n31\n - 1\n\n\ntarget\n is an integer from \nnums\n.\n\n\nAt most \n10\n4\n calls will be made to \npick\n.",
        "temas": [
            "Hash Table",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 397,
        "slug": "integer-replacement",
        "url": "https://leetcode.com/problems/integer-replacement/",
        "titulo": "Integer Replacement",
        "enunciado": "Given a positive integer \nn\n, you can apply one of the following operations:\n\n\n\n\nIf \nn\n is even, replace \nn\n with \nn / 2\n.\n\n\nIf \nn\n is odd, replace \nn\n with either \nn + 1\n or \nn - 1\n.\n\n\n\n\nReturn \nthe minimum number of operations needed for\n \nn\n \nto become\n \n1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 8\n\nOutput:\n 3\n\nExplanation:\n 8 -> 4 -> 2 -> 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 7\n\nOutput:\n 4\n\nExplanation: \n7 -> 8 -> 4 -> 2 -> 1\nor 7 -> 6 -> 3 -> 2 -> 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 4\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2\n31\n - 1",
        "temas": [
            "Dynamic Programming",
            "Greedy",
            "Bit Manipulation",
            "Memoization"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": false
    },
    {
        "id": 396,
        "slug": "rotate-function",
        "url": "https://leetcode.com/problems/rotate-function/",
        "titulo": "Rotate Function",
        "enunciado": "You are given an integer array \nnums\n of length \nn\n.\n\n\nAssume \narr\nk\n to be an array obtained by rotating \nnums\n by \nk\n positions clock-wise. We define the \nrotation function\n \nF\n on \nnums\n as follow:\n\n\n\n\nF(k) = 0 * arr\nk\n[0] + 1 * arr\nk\n[1] + ... + (n - 1) * arr\nk\n[n - 1].\n\n\n\n\nReturn \nthe maximum value of\n \nF(0), F(1), ..., F(n-1)\n.\n\n\nThe test cases are generated so that the answer fits in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [4,3,2,6]\n\nOutput:\n 26\n\nExplanation:\n\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [100]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 10\n5\n\n\n-100 <= nums[i] <= 100",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 395,
        "slug": "longest-substring-with-at-least-k-repeating-characters",
        "url": "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters/",
        "titulo": "Longest Substring with At Least K Repeating Characters",
        "enunciado": "Given a string \ns\n and an integer \nk\n, return \nthe length of the longest substring of\n \ns\n \nsuch that the frequency of each character in this substring is greater than or equal to\n \nk\n.\n\n\nif no such substring exists, return 0.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"aaabb\", k = 3\n\nOutput:\n 3\n\nExplanation:\n The longest substring is \"aaa\", as 'a' is repeated 3 times.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"ababbc\", k = 2\n\nOutput:\n 5\n\nExplanation:\n The longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n4\n\n\ns\n consists of only lowercase English letters.\n\n\n1 <= k <= 10\n5",
        "temas": [
            "Hash Table",
            "String",
            "Divide and Conquer",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 394,
        "slug": "decode-string",
        "url": "https://leetcode.com/problems/decode-string/",
        "titulo": "Decode String",
        "enunciado": "Given an encoded string, return its decoded string.\n\n\nThe encoding rule is: \nk[encoded_string]\n, where the \nencoded_string\n inside the square brackets is being repeated exactly \nk\n times. Note that \nk\n is guaranteed to be a positive integer.\n\n\nYou may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, \nk\n. For example, there will not be input like \n3a\n or \n2[4]\n.\n\n\nThe test cases are generated so that the length of the output will never exceed \n10\n5\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"3[a]2[bc]\"\n\nOutput:\n \"aaabcbc\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"3[a2[c]]\"\n\nOutput:\n \"accaccacc\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"2[abc]3[cd]ef\"\n\nOutput:\n \"abcabccdcdcdef\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 30\n\n\ns\n consists of lowercase English letters, digits, and square brackets \n'[]'\n.\n\n\ns\n is guaranteed to be \na valid\n input.\n\n\nAll the integers in \ns\n are in the range \n[1, 300]\n.",
        "temas": [
            "String",
            "Stack",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 393,
        "slug": "utf-8-validation",
        "url": "https://leetcode.com/problems/utf-8-validation/",
        "titulo": "UTF-8 Validation",
        "enunciado": "Given an integer array \ndata\n representing the data, return whether it is a valid \nUTF-8\n encoding (i.e. it translates to a sequence of valid UTF-8 encoded characters).\n\n\nA character in \nUTF8\n can be from \n1 to 4 bytes\n long, subjected to the following rules:\n\n\n\n\nFor a \n1-byte\n character, the first bit is a \n0\n, followed by its Unicode code.\n\n\nFor an \nn-bytes\n character, the first \nn\n bits are all one's, the \nn + 1\n bit is \n0\n, followed by \nn - 1\n bytes with the most significant \n2\n bits being \n10\n.\n\n\n\n\nThis is how the UTF-8 encoding would work:\n\n\n\n     Number of Bytes   |        UTF-8 Octet Sequence\n                       |              (binary)\n   --------------------+-----------------------------------------\n            1          |   0xxxxxxx\n            2          |   110xxxxx 10xxxxxx\n            3          |   1110xxxx 10xxxxxx 10xxxxxx\n            4          |   11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n\n\n\nx\n denotes a bit in the binary form of a byte that may be either \n0\n or \n1\n.\n\n\nNote: \nThe input is an array of integers. Only the \nleast significant 8 bits\n of each integer is used to store the data. This means each integer represents only 1 byte of data.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n data = [197,130,1]\n\nOutput:\n true\n\nExplanation:\n data represents the octet sequence: 11000101 10000010 00000001.\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\n\n\n\nExample 2:\n\n\n\n\nInput:\n data = [235,140,4]\n\nOutput:\n false\n\nExplanation:\n data represented the octet sequence: 11101011 10001100 00000100.\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\nThe next byte is a continuation byte which starts with 10 and that's correct.\nBut the second continuation byte does not start with 10, so it is invalid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= data.length <= 2 * 10\n4\n\n\n0 <= data[i] <= 255",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 390,
        "slug": "elimination-game",
        "url": "https://leetcode.com/problems/elimination-game/",
        "titulo": "Elimination Game",
        "enunciado": "You have a list \narr\n of all integers in the range \n[1, n]\n sorted in a strictly increasing order. Apply the following algorithm on \narr\n:\n\n\n\n\nStarting from left to right, remove the first number and every other number afterward until you reach the end of the list.\n\n\nRepeat the previous step again, but this time from right to left, remove the rightmost number and every other number from the remaining numbers.\n\n\nKeep repeating the steps again, alternating left to right and right to left, until a single number remains.\n\n\n\n\nGiven the integer \nn\n, return \nthe last number that remains in\n \narr\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 9\n\nOutput:\n 6\n\nExplanation:\n\narr = [\n1\n, 2, \n3\n, 4, \n5\n, 6, \n7\n, 8, \n9\n]\narr = [2, \n4\n, 6, \n8\n]\narr = [\n2\n, 6]\narr = [6]\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n9",
        "temas": [
            "Math",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 388,
        "slug": "longest-absolute-file-path",
        "url": "https://leetcode.com/problems/longest-absolute-file-path/",
        "titulo": "Longest Absolute File Path",
        "enunciado": "Suppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:\n\n\n\n\nHere, we have \ndir\n as the only directory in the root. \ndir\n contains two subdirectories, \nsubdir1\n and \nsubdir2\n. \nsubdir1\n contains a file \nfile1.ext\n and subdirectory \nsubsubdir1\n. \nsubdir2\n contains a subdirectory \nsubsubdir2\n, which contains a file \nfile2.ext\n.\n\n\nIn text form, it looks like this (with ⟶ representing the tab character):\n\n\n\ndir\n⟶ subdir1\n⟶ ⟶ file1.ext\n⟶ ⟶ subsubdir1\n⟶ subdir2\n⟶ ⟶ subsubdir2\n⟶ ⟶ ⟶ file2.ext\n\n\n\nIf we were to write this representation in code, it will look like this: \n\"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"\n. Note that the \n'\\n'\n and \n'\\t'\n are the new-line and tab characters.\n\n\nEvery file and directory has a unique \nabsolute path\n in the file system, which is the order of directories that must be opened to reach the file/directory itself, all concatenated by \n'/'s\n. Using the above example, the \nabsolute path\n to \nfile2.ext\n is \n\"dir/subdir2/subsubdir2/file2.ext\"\n. Each directory name consists of letters, digits, and/or spaces. Each file name is of the form \nname.extension\n, where \nname\n and \nextension\n consist of letters, digits, and/or spaces.\n\n\nGiven a string \ninput\n representing the file system in the explained format, return \nthe length of the \nlongest absolute path\n to a \nfile\n in the abstracted file system\n. If there is no file in the system, return \n0\n.\n\n\nNote\n that the testcases are generated such that the file system is valid and no file or directory name has length 0.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n input = \"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\"\n\nOutput:\n 20\n\nExplanation:\n We have only one file, and the absolute path is \"dir/subdir2/file.ext\" of length 20.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n input = \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"\n\nOutput:\n 32\n\nExplanation:\n We have two files:\n\"dir/subdir1/file1.ext\" of length 21\n\"dir/subdir2/subsubdir2/file2.ext\" of length 32.\nWe return 32 since it is the longest absolute path to a file.\n\n\n\nExample 3:\n\n\n\n\nInput:\n input = \"a\"\n\nOutput:\n 0\n\nExplanation:\n We do not have any files, just a single directory named \"a\".\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= input.length <= 10\n4\n\n\ninput\n may contain lowercase or uppercase English letters, a new line character \n'\\n'\n, a tab character \n'\\t'\n, a dot \n'.'\n, a space \n' '\n, and digits.\n\n\nAll file and directory names have \npositive\n length.",
        "temas": [
            "String",
            "Stack",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 386,
        "slug": "lexicographical-numbers",
        "url": "https://leetcode.com/problems/lexicographical-numbers/",
        "titulo": "Lexicographical Numbers",
        "enunciado": "Given an integer \nn\n, return all the numbers in the range \n[1, n]\n sorted in lexicographical order.\n\n\nYou must write an algorithm that runs in \nO(n)\n time and uses \nO(1)\n extra space. \n\n\n \n\n\nExample 1:\n\n\nInput:\n n = 13\n\nOutput:\n [1,10,11,12,13,2,3,4,5,6,7,8,9]\n\nExample 2:\n\n\nInput:\n n = 2\n\nOutput:\n [1,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 5 * 10\n4",
        "temas": [
            "Depth-First Search",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": false
    },
    {
        "id": 385,
        "slug": "mini-parser",
        "url": "https://leetcode.com/problems/mini-parser/",
        "titulo": "Mini Parser",
        "enunciado": "Given a string s represents the serialization of a nested list, implement a parser to deserialize it and return \nthe deserialized\n \nNestedInteger\n.\n\n\nEach element is either an integer or a list whose elements may also be integers or other lists.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"324\"\n\nOutput:\n 324\n\nExplanation:\n You should return a NestedInteger object which contains a single integer 324.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"[123,[456,[789]]]\"\n\nOutput:\n [123,[456,[789]]]\n\nExplanation:\n Return a NestedInteger object containing a nested list with 2 elements:\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 5 * 10\n4\n\n\ns\n consists of digits, square brackets \n\"[]\"\n, negative sign \n'-'\n, and commas \n','\n.\n\n\ns\n is the serialization of valid \nNestedInteger\n.\n\n\nAll the values in the input are in the range \n[-10\n6\n, 10\n6\n]\n.",
        "temas": [
            "String",
            "Stack",
            "Depth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 384,
        "slug": "shuffle-an-array",
        "url": "https://leetcode.com/problems/shuffle-an-array/",
        "titulo": "Shuffle an Array",
        "enunciado": "Given an integer array \nnums\n, design an algorithm to randomly shuffle the array. All permutations of the array should be \nequally likely\n as a result of the shuffling.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution(int[] nums)\n Initializes the object with the integer array \nnums\n.\n\n\nint[] reset()\n Resets the array to its original configuration and returns it.\n\n\nint[] shuffle()\n Returns a random shuffling of the array.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Solution\", \"shuffle\", \"reset\", \"shuffle\"]\n[[[1, 2, 3]], [], [], []]\n\nOutput\n\n[null, [3, 1, 2], [1, 2, 3], [1, 3, 2]]\n\n\nExplanation\n\nSolution solution = new Solution([1, 2, 3]);\nsolution.shuffle();    // Shuffle the array [1,2,3] and return its result.\n                       // Any permutation of [1,2,3] must be equally likely to be returned.\n                       // Example: return [3, 1, 2]\nsolution.reset();      // Resets the array back to its original configuration [1,2,3]. Return [1, 2, 3]\nsolution.shuffle();    // Returns the random shuffling of array [1,2,3]. Example: return [1, 3, 2]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 50\n\n\n-10\n6\n <= nums[i] <= 10\n6\n\n\nAll the elements of \nnums\n are \nunique\n.\n\n\nAt most \n10\n4\n calls \nin total\n will be made to \nreset\n and \nshuffle\n.",
        "temas": [
            "Array",
            "Math",
            "Design",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 382,
        "slug": "linked-list-random-node",
        "url": "https://leetcode.com/problems/linked-list-random-node/",
        "titulo": "Linked List Random Node",
        "enunciado": "Given a singly linked list, return a random node's value from the linked list. Each node must have the \nsame probability\n of being chosen.\n\n\nImplement the \nSolution\n class:\n\n\n\n\nSolution(ListNode head)\n Initializes the object with the head of the singly-linked list \nhead\n.\n\n\nint getRandom()\n Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"Solution\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\"]\n[[[1, 2, 3]], [], [], [], [], []]\n\nOutput\n\n[null, 1, 3, 2, 2, 3]\n\n\nExplanation\n\nSolution solution = new Solution([1, 2, 3]);\nsolution.getRandom(); // return 1\nsolution.getRandom(); // return 3\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 2\nsolution.getRandom(); // return 3\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the linked list will be in the range \n[1, 10\n4\n]\n.\n\n\n-10\n4\n <= Node.val <= 10\n4\n\n\nAt most \n10\n4\n calls will be made to \ngetRandom\n.\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nWhat if the linked list is extremely large and its length is unknown to you?\n\n\nCould you solve this efficiently without using extra space?",
        "temas": [
            "Linked List",
            "Math",
            "Reservoir Sampling",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 380,
        "slug": "insert-delete-getrandom-o1",
        "url": "https://leetcode.com/problems/insert-delete-getrandom-o1/",
        "titulo": "Insert Delete GetRandom O(1)",
        "enunciado": "Implement the \nRandomizedSet\n class:\n\n\n\n\nRandomizedSet()\n Initializes the \nRandomizedSet\n object.\n\n\nbool insert(int val)\n Inserts an item \nval\n into the set if not present. Returns \ntrue\n if the item was not present, \nfalse\n otherwise.\n\n\nbool remove(int val)\n Removes an item \nval\n from the set if present. Returns \ntrue\n if the item was present, \nfalse\n otherwise.\n\n\nint getRandom()\n Returns a random element from the current set of elements (it's guaranteed that at least one element exists when this method is called). Each element must have the \nsame probability\n of being returned.\n\n\n\n\nYou must implement the functions of the class such that each function works in \naverage\n \nO(1)\n time complexity.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"RandomizedSet\", \"insert\", \"remove\", \"insert\", \"getRandom\", \"remove\", \"insert\", \"getRandom\"]\n[[], [1], [2], [2], [], [1], [2], []]\n\nOutput\n\n[null, true, false, true, 2, true, false, 2]\n\n\nExplanation\n\nRandomizedSet randomizedSet = new RandomizedSet();\nrandomizedSet.insert(1); // Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomizedSet.remove(2); // Returns false as 2 does not exist in the set.\nrandomizedSet.insert(2); // Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomizedSet.getRandom(); // getRandom() should return either 1 or 2 randomly.\nrandomizedSet.remove(1); // Removes 1 from the set, returns true. Set now contains [2].\nrandomizedSet.insert(2); // 2 was already in the set, so return false.\nrandomizedSet.getRandom(); // Since 2 is the only number in the set, getRandom() will always return 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-2\n31\n <= val <= 2\n31\n - 1\n\n\nAt most \n2 * \n10\n5\n calls will be made to \ninsert\n, \nremove\n, and \ngetRandom\n.\n\n\nThere will be \nat least one\n element in the data structure when \ngetRandom\n is called.",
        "temas": [
            "Array",
            "Hash Table",
            "Math",
            "Design",
            "Randomized"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 378,
        "slug": "kth-smallest-element-in-a-sorted-matrix",
        "url": "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/",
        "titulo": "Kth Smallest Element in a Sorted Matrix",
        "enunciado": "Given an \nn x n\n \nmatrix\n where each of the rows and columns is sorted in ascending order, return \nthe\n \nk\nth\n \nsmallest element in the matrix\n.\n\n\nNote that it is the \nk\nth\n smallest element \nin the sorted order\n, not the \nk\nth\n \ndistinct\n element.\n\n\nYou must find a solution with a memory complexity better than \nO(n\n2\n)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n matrix = [[1,5,9],[10,11,13],[12,13,15]], k = 8\n\nOutput:\n 13\n\nExplanation:\n The elements in the matrix are [1,5,9,10,11,12,13,\n13\n,15], and the 8\nth\n smallest number is 13\n\n\n\nExample 2:\n\n\n\n\nInput:\n matrix = [[-5]], k = 1\n\nOutput:\n -5\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == matrix.length == matrix[i].length\n\n\n1 <= n <= 300\n\n\n-10\n9\n <= matrix[i][j] <= 10\n9\n\n\nAll the rows and columns of \nmatrix\n are \nguaranteed\n to be sorted in \nnon-decreasing order\n.\n\n\n1 <= k <= n\n2\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nCould you solve the problem with a constant memory (i.e., \nO(1)\n memory complexity)?\n\n\nCould you solve the problem in \nO(n)\n time complexity? The solution may be too advanced for an interview but you may find reading \nthis paper\n fun.",
        "temas": [
            "Array",
            "Binary Search",
            "Sorting",
            "Heap (Priority Queue)",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 377,
        "slug": "combination-sum-iv",
        "url": "https://leetcode.com/problems/combination-sum-iv/",
        "titulo": "Combination Sum IV",
        "enunciado": "Given an array of \ndistinct\n integers \nnums\n and a target integer \ntarget\n, return \nthe number of possible combinations that add up to\n \ntarget\n.\n\n\nThe test cases are generated so that the answer can fit in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3], target = 4\n\nOutput:\n 7\n\nExplanation:\n\nThe possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\nNote that different sequences are counted as different combinations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [9], target = 3\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 200\n\n\n1 <= nums[i] <= 1000\n\n\nAll the elements of \nnums\n are \nunique\n.\n\n\n1 <= target <= 1000\n\n\n\n\n \n\n\nFollow up:\n What if negative numbers are allowed in the given array? How does it change the problem? What limitation we need to add to the question to allow negative numbers?",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 376,
        "slug": "wiggle-subsequence",
        "url": "https://leetcode.com/problems/wiggle-subsequence/",
        "titulo": "Wiggle Subsequence",
        "enunciado": "A \nwiggle sequence\n is a sequence where the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with one element and a sequence with two non-equal elements are trivially wiggle sequences.\n\n\n\n\nFor example, \n[1, 7, 4, 9, 2, 5]\n is a \nwiggle sequence\n because the differences \n(6, -3, 5, -7, 3)\n alternate between positive and negative.\n\n\nIn contrast, \n[1, 4, 7, 2, 5]\n and \n[1, 7, 4, 5, 5]\n are not wiggle sequences. The first is not because its first two differences are positive, and the second is not because its last difference is zero.\n\n\n\n\nA \nsubsequence\n is obtained by deleting some elements (possibly zero) from the original sequence, leaving the remaining elements in their original order.\n\n\nGiven an integer array \nnums\n, return \nthe length of the longest \nwiggle subsequence\n of \nnums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,7,4,9,2,5]\n\nOutput:\n 6\n\nExplanation:\n The entire sequence is a wiggle sequence with differences (6, -3, 5, -7, 3).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,17,5,10,13,15,10,5,16,8]\n\nOutput:\n 7\n\nExplanation:\n There are several subsequences that achieve this length.\nOne is [1, 17, 10, 13, 10, 16, 8] with differences (16, -7, 3, -3, 6, -8).\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,6,7,8,9]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n0 <= nums[i] <= 1000\n\n\n\n\n \n\n\nFollow up:\n Could you solve this in \nO(n)\n time?",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 375,
        "slug": "guess-number-higher-or-lower-ii",
        "url": "https://leetcode.com/problems/guess-number-higher-or-lower-ii/",
        "titulo": "Guess Number Higher or Lower II",
        "enunciado": "We are playing the Guessing Game. The game will work as follows:\n\n\n\n\nI pick a number between \n1\n and \nn\n.\n\n\nYou guess a number.\n\n\nIf you guess the right number, \nyou win the game\n.\n\n\nIf you guess the wrong number, then I will tell you whether the number I picked is \nhigher or lower\n, and you will continue guessing.\n\n\nEvery time you guess a wrong number \nx\n, you will pay \nx\n dollars. If you run out of money, \nyou lose the game\n.\n\n\n\n\nGiven a particular \nn\n, return \nthe minimum amount of money you need to \nguarantee a win regardless of what number I pick\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 16\n\nExplanation:\n The winning strategy is as follows:\n- The range is [1,10]. Guess 7.\n    - If this is my number, your total is $0. Otherwise, you pay $7.\n    - If my number is higher, the range is [8,10]. Guess 9.\n        - If this is my number, your total is $7. Otherwise, you pay $9.\n        - If my number is higher, it must be 10. Guess 10. Your total is $7 + $9 = $16.\n        - If my number is lower, it must be 8. Guess 8. Your total is $7 + $9 = $16.\n    - If my number is lower, the range is [1,6]. Guess 3.\n        - If this is my number, your total is $7. Otherwise, you pay $3.\n        - If my number is higher, the range is [4,6]. Guess 5.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $5.\n            - If my number is higher, it must be 6. Guess 6. Your total is $7 + $3 + $5 = $15.\n            - If my number is lower, it must be 4. Guess 4. Your total is $7 + $3 + $5 = $15.\n        - If my number is lower, the range is [1,2]. Guess 1.\n            - If this is my number, your total is $7 + $3 = $10. Otherwise, you pay $1.\n            - If my number is higher, it must be 2. Guess 2. Your total is $7 + $3 + $1 = $11.\nThe worst case in all these scenarios is that you pay $16. Hence, you only need $16 to guarantee a win.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 0\n\nExplanation:\n There is only one possible number, so you can guess 1 and not have to pay anything.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 1\n\nExplanation:\n There are two possible numbers, 1 and 2.\n- Guess 1.\n    - If this is my number, your total is $0. Otherwise, you pay $1.\n    - If my number is higher, it must be 2. Guess 2. Your total is $1.\nThe worst case is that you pay $1.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 200",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Game Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 373,
        "slug": "find-k-pairs-with-smallest-sums",
        "url": "https://leetcode.com/problems/find-k-pairs-with-smallest-sums/",
        "titulo": "Find K Pairs with Smallest Sums",
        "enunciado": "You are given two integer arrays \nnums1\n and \nnums2\n sorted in \nnon-decreasing order\n and an integer \nk\n.\n\n\nDefine a pair \n(u, v)\n which consists of one element from the first array and one element from the second array.\n\n\nReturn \nthe\n \nk\n \npairs\n \n(u\n1\n, v\n1\n), (u\n2\n, v\n2\n), ..., (u\nk\n, v\nk\n)\n \nwith the smallest sums\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums1 = [1,7,11], nums2 = [2,4,6], k = 3\n\nOutput:\n [[1,2],[1,4],[1,6]]\n\nExplanation:\n The first 3 pairs are returned from the sequence: [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n\nOutput:\n [[1,1],[1,1]]\n\nExplanation:\n The first 2 pairs are returned from the sequence: [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums1.length, nums2.length <= 10\n5\n\n\n-10\n9\n <= nums1[i], nums2[i] <= 10\n9\n\n\nnums1\n and \nnums2\n both are sorted in \nnon-decreasing order\n.\n\n\n1 <= k <= 10\n4\n\n\nk <= nums1.length * nums2.length",
        "temas": [
            "Array",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 372,
        "slug": "super-pow",
        "url": "https://leetcode.com/problems/super-pow/",
        "titulo": "Super Pow",
        "enunciado": "Your task is to calculate \na\nb\n mod \n1337\n where \na\n is a positive integer and \nb\n is an extremely large positive integer given in the form of an array.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n a = 2, b = [3]\n\nOutput:\n 8\n\n\n\nExample 2:\n\n\n\n\nInput:\n a = 2, b = [1,0]\n\nOutput:\n 1024\n\n\n\nExample 3:\n\n\n\n\nInput:\n a = 1, b = [4,3,3,8,5,2]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= a <= 2\n31\n - 1\n\n\n1 <= b.length <= 2000\n\n\n0 <= b[i] <= 9\n\n\nb\n does not contain leading zeros.",
        "temas": [
            "Math",
            "Divide and Conquer"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 371,
        "slug": "sum-of-two-integers",
        "url": "https://leetcode.com/problems/sum-of-two-integers/",
        "titulo": "Sum of Two Integers",
        "enunciado": "Given two integers \na\n and \nb\n, return \nthe sum of the two integers without using the operators\n \n+\n \nand\n \n-\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n a = 1, b = 2\n\nOutput:\n 3\n\nExample 2:\n\n\nInput:\n a = 2, b = 3\n\nOutput:\n 5\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-1000 <= a, b <= 1000",
        "temas": [
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 368,
        "slug": "largest-divisible-subset",
        "url": "https://leetcode.com/problems/largest-divisible-subset/",
        "titulo": "Largest Divisible Subset",
        "enunciado": "Given a set of \ndistinct\n positive integers \nnums\n, return the largest subset \nanswer\n such that every pair \n(answer[i], answer[j])\n of elements in this subset satisfies:\n\n\n\n\nanswer[i] % answer[j] == 0\n, or\n\n\nanswer[j] % answer[i] == 0\n\n\n\n\nIf there are multiple solutions, return any of them.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n [1,2]\n\nExplanation:\n [1,3] is also accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,4,8]\n\nOutput:\n [1,2,4,8]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 2 * 10\n9\n\n\nAll the integers in \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 365,
        "slug": "water-and-jug-problem",
        "url": "https://leetcode.com/problems/water-and-jug-problem/",
        "titulo": "Water and Jug Problem",
        "enunciado": "You are given two jugs with capacities \nx\n liters and \ny\n liters. You have an infinite water supply. Return whether the total amount of water in both jugs may reach \ntarget\n using the following operations:\n\n\n\n\nFill either jug completely with water.\n\n\nCompletely empty either jug.\n\n\nPour water from one jug into another until the receiving jug is full, or the transferring jug is empty.\n\n\n\n\n \n\n\nExample 1: \n\n\n\n\nInput: \n \n x = 3, y = 5, target = 4 \n\n\nOutput: \n \n true \n\n\nExplanation:\n\n\nFollow these steps to reach a total of 4 liters:\n\n\n\n\nFill the 5-liter jug (0, 5).\n\n\nPour from the 5-liter jug into the 3-liter jug, leaving 2 liters (3, 2).\n\n\nEmpty the 3-liter jug (0, 2).\n\n\nTransfer the 2 liters from the 5-liter jug to the 3-liter jug (2, 0).\n\n\nFill the 5-liter jug again (2, 5).\n\n\nPour from the 5-liter jug into the 3-liter jug until the 3-liter jug is full. This leaves 4 liters in the 5-liter jug (3, 4).\n\n\nEmpty the 3-liter jug. Now, you have exactly 4 liters in the 5-liter jug (0, 4).\n\n\n\n\nReference: The \nDie Hard\n example.\n\n\n\n\nExample 2: \n\n\n\n\nInput: \n \n x = 2, y = 6, target = 5 \n\n\nOutput: \n \n false \n\n\n\n\nExample 3: \n\n\n\n\nInput: \n \n x = 1, y = 2, target = 3 \n\n\nOutput: \n \n true \n\n\nExplanation:\n Fill both jugs. The total amount of water in both jugs is equal to 3 now.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= x, y, target <= 10\n3",
        "temas": [
            "Math",
            "Depth-First Search",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 357,
        "slug": "count-numbers-with-unique-digits",
        "url": "https://leetcode.com/problems/count-numbers-with-unique-digits/",
        "titulo": "Count Numbers with Unique Digits",
        "enunciado": "Given an integer \nn\n, return the count of all numbers with unique digits, \nx\n, where \n0 <= x < 10\nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 91\n\nExplanation:\n The answer should be the total numbers in the range of 0 ≤ x < 100, excluding 11,22,33,44,55,66,77,88,99\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 0\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 8",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 355,
        "slug": "design-twitter",
        "url": "https://leetcode.com/problems/design-twitter/",
        "titulo": "Design Twitter",
        "enunciado": "Design a simplified version of Twitter where users can post tweets, follow/unfollow another user, and is able to see the \n10\n most recent tweets in the user's news feed.\n\n\nImplement the \nTwitter\n class:\n\n\n\n\nTwitter()\n Initializes your twitter object.\n\n\nvoid postTweet(int userId, int tweetId)\n Composes a new tweet with ID \ntweetId\n by the user \nuserId\n. Each call to this function will be made with a unique \ntweetId\n.\n\n\nList<Integer> getNewsFeed(int userId)\n Retrieves the \n10\n most recent tweet IDs in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be \nordered from most recent to least recent\n.\n\n\nvoid follow(int followerId, int followeeId)\n The user with ID \nfollowerId\n started following the user with ID \nfolloweeId\n.\n\n\nvoid unfollow(int followerId, int followeeId)\n The user with ID \nfollowerId\n started unfollowing the user with ID \nfolloweeId\n.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Twitter\", \"postTweet\", \"getNewsFeed\", \"follow\", \"postTweet\", \"getNewsFeed\", \"unfollow\", \"getNewsFeed\"]\n[[], [1, 5], [1], [1, 2], [2, 6], [1], [1, 2], [1]]\n\nOutput\n\n[null, null, [5], null, null, [6, 5], null, [5]]\n\n\nExplanation\n\nTwitter twitter = new Twitter();\ntwitter.postTweet(1, 5); // User 1 posts a new tweet (id = 5).\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 1 tweet id -> [5]. return [5]\ntwitter.follow(1, 2);    // User 1 follows user 2.\ntwitter.postTweet(2, 6); // User 2 posts a new tweet (id = 6).\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 2 tweet ids -> [6, 5]. Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.unfollow(1, 2);  // User 1 unfollows user 2.\ntwitter.getNewsFeed(1);  // User 1's news feed should return a list with 1 tweet id -> [5], since user 1 is no longer following user 2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= userId, followerId, followeeId <= 500\n\n\n0 <= tweetId <= 10\n4\n\n\nAll the tweets have \nunique\n IDs.\n\n\nAt most \n3 * 10\n4\n calls will be made to \npostTweet\n, \ngetNewsFeed\n, \nfollow\n, and \nunfollow\n.\n\n\nA user cannot follow himself.",
        "temas": [
            "Hash Table",
            "Linked List",
            "Design",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 347,
        "slug": "top-k-frequent-elements",
        "url": "https://leetcode.com/problems/top-k-frequent-elements/",
        "titulo": "Top K Frequent Elements",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \nthe\n \nk\n \nmost frequent elements\n. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [1,1,1,2,2,3], k = 2\n\nOutput:\n [1,2]\n\nExample 2:\n\n\nInput:\n nums = [1], k = 1\n\nOutput:\n [1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\nk\n is in the range \n[1, the number of unique elements in the array]\n.\n\n\nIt is \nguaranteed\n that the answer is \nunique\n.\n\n\n\n\n \n\n\nFollow up:\n Your algorithm's time complexity must be better than \nO(n log n)\n, where n is the array's size.",
        "temas": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Bucket Sort",
            "Counting",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 343,
        "slug": "integer-break",
        "url": "https://leetcode.com/problems/integer-break/",
        "titulo": "Integer Break",
        "enunciado": "Given an integer \nn\n, break it into the sum of \nk\n \npositive integers\n, where \nk >= 2\n, and maximize the product of those integers.\n\n\nReturn \nthe maximum product you can get\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n 1\n\nExplanation:\n 2 = 1 + 1, 1 × 1 = 1.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 36\n\nExplanation:\n 10 = 3 + 3 + 4, 3 × 3 × 4 = 36.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= n <= 58",
        "temas": [
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 341,
        "slug": "flatten-nested-list-iterator",
        "url": "https://leetcode.com/problems/flatten-nested-list-iterator/",
        "titulo": "Flatten Nested List Iterator",
        "enunciado": "You are given a nested list of integers \nnestedList\n. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.\n\n\nImplement the \nNestedIterator\n class:\n\n\n\n\nNestedIterator(List<NestedInteger> nestedList)\n Initializes the iterator with the nested list \nnestedList\n.\n\n\nint next()\n Returns the next integer in the nested list.\n\n\nboolean hasNext()\n Returns \ntrue\n if there are still some integers in the nested list and \nfalse\n otherwise.\n\n\n\n\nYour code will be tested with the following pseudocode:\n\n\n\ninitialize iterator with nestedList\nres = []\nwhile iterator.hasNext()\n    append iterator.next() to the end of res\nreturn res\n\n\n\nIf \nres\n matches the expected flattened list, then your code will be judged as correct.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nestedList = [[1,1],2,[1,1]]\n\nOutput:\n [1,1,2,1,1]\n\nExplanation:\n By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,1,2,1,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n nestedList = [1,[4,[6]]]\n\nOutput:\n [1,4,6]\n\nExplanation:\n By calling next repeatedly until hasNext returns false, the order of elements returned by next should be: [1,4,6].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nestedList.length <= 500\n\n\nThe values of the integers in the nested list is in the range \n[-10\n6\n, 10\n6\n]\n.",
        "temas": [
            "Stack",
            "Tree",
            "Depth-First Search",
            "Design",
            "Queue",
            "Iterator"
        ],
        "dificuldade": "Média",
        "tema_principal": "Stack",
        "has_image": false
    },
    {
        "id": 337,
        "slug": "house-robber-iii",
        "url": "https://leetcode.com/problems/house-robber-iii/",
        "titulo": "House Robber III",
        "enunciado": "The thief has found himself a new place for his thievery again. There is only one entrance to this area, called \nroot\n.\n\n\nBesides the \nroot\n, each house has one and only one parent house. After a tour, the smart thief realized that all houses in this place form a binary tree. It will automatically contact the police if \ntwo directly-linked houses were broken into on the same night\n.\n\n\nGiven the \nroot\n of the binary tree, return \nthe maximum amount of money the thief can rob \nwithout alerting the police\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,2,3,null,3,null,1]\n\nOutput:\n 7\n\nExplanation:\n Maximum amount of money the thief can rob = 3 + 3 + 1 = 7.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [3,4,5,1,3,null,1]\n\nOutput:\n 9\n\nExplanation:\n Maximum amount of money the thief can rob = 4 + 5 = 9.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n0 <= Node.val <= 10\n4",
        "temas": [
            "Dynamic Programming",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 334,
        "slug": "increasing-triplet-subsequence",
        "url": "https://leetcode.com/problems/increasing-triplet-subsequence/",
        "titulo": "Increasing Triplet Subsequence",
        "enunciado": "Given an integer array \nnums\n, return \ntrue\n if there exists a triple of indices \n(i, j, k)\n such that \ni < j < k\n and \nnums[i] < nums[j] < nums[k]\n. If no such indices exists, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5]\n\nOutput:\n true\n\nExplanation:\n Any triplet where i < j < k is valid.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [5,4,3,2,1]\n\nOutput:\n false\n\nExplanation:\n No triplet exists.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [2,1,5,0,4,6]\n\nOutput:\n true\n\nExplanation:\n The triplet (3, 4, 5) is valid because nums[3] == 0 < nums[4] == 4 < nums[5] == 6.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5 * 10\n5\n\n\n-2\n31\n <= nums[i] <= 2\n31\n - 1\n\n\n\n\n \n\n\nFollow up:\n Could you implement a solution that runs in \nO(n)\n time complexity and \nO(1)\n space complexity?",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 331,
        "slug": "verify-preorder-serialization-of-a-binary-tree",
        "url": "https://leetcode.com/problems/verify-preorder-serialization-of-a-binary-tree/",
        "titulo": "Verify Preorder Serialization of a Binary Tree",
        "enunciado": "One way to serialize a binary tree is to use \npreorder traversal\n. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as \n'#'\n.\n\n\n\n\nFor example, the above binary tree can be serialized to the string \n\"9,3,4,#,#,1,#,#,2,#,6,#,#\"\n, where \n'#'\n represents a null node.\n\n\nGiven a string of comma-separated values \npreorder\n, return \ntrue\n if it is a correct preorder traversal serialization of a binary tree.\n\n\nIt is \nguaranteed\n that each comma-separated value in the string must be either an integer or a character \n'#'\n representing null pointer.\n\n\nYou may assume that the input format is always valid.\n\n\n\n\nFor example, it could never contain two consecutive commas, such as \n\"1,,3\"\n.\n\n\n\n\nNote: \nYou are not allowed to reconstruct the tree.\n\n\n \n\n\nExample 1:\n\n\nInput:\n preorder = \"9,3,4,#,#,1,#,#,2,#,6,#,#\"\n\nOutput:\n true\n\nExample 2:\n\n\nInput:\n preorder = \"1,#\"\n\nOutput:\n false\n\nExample 3:\n\n\nInput:\n preorder = \"9,#,#,1\"\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= preorder.length <= 10\n4\n\n\npreorder\n consist of integers in the range \n[0, 100]\n and \n'#'\n separated by commas \n','\n.",
        "temas": [
            "String",
            "Stack",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 328,
        "slug": "odd-even-linked-list",
        "url": "https://leetcode.com/problems/odd-even-linked-list/",
        "titulo": "Odd Even Linked List",
        "enunciado": "Given the \nhead\n of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return \nthe reordered list\n.\n\n\nThe \nfirst\n node is considered \nodd\n, and the \nsecond\n node is \neven\n, and so on.\n\n\nNote that the relative order inside both the even and odd groups should remain as it was in the input.\n\n\nYou must solve the problem in \nO(1)\n extra space complexity and \nO(n)\n time complexity.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5]\n\nOutput:\n [1,3,5,2,4]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [2,1,3,5,6,4,7]\n\nOutput:\n [2,3,6,7,1,5,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the linked list is in the range \n[0, 10\n4\n]\n.\n\n\n-10\n6\n <= Node.val <= 10\n6",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 324,
        "slug": "wiggle-sort-ii",
        "url": "https://leetcode.com/problems/wiggle-sort-ii/",
        "titulo": "Wiggle Sort II",
        "enunciado": "Given an integer array \nnums\n, reorder it such that \nnums[0] < nums[1] > nums[2] < nums[3]...\n.\n\n\nYou may assume the input array always has a valid answer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,5,1,1,6,4]\n\nOutput:\n [1,6,1,5,1,4]\n\nExplanation:\n [1,4,1,5,1,6] is also accepted.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,3,2,2,3,1]\n\nOutput:\n [2,3,1,3,1,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5 * 10\n4\n\n\n0 <= nums[i] <= 5000\n\n\nIt is guaranteed that there will be an answer for the given input \nnums\n.\n\n\n\n\n \n\n\nFollow Up:\n Can you do it in \nO(n)\n time and/or \nin-place\n with \nO(1)\n extra space?",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Greedy",
            "Sorting",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 322,
        "slug": "coin-change",
        "url": "https://leetcode.com/problems/coin-change/",
        "titulo": "Coin Change",
        "enunciado": "You are given an integer array \ncoins\n representing coins of different denominations and an integer \namount\n representing a total amount of money.\n\n\nReturn \nthe fewest number of coins that you need to make up that amount\n. If that amount of money cannot be made up by any combination of the coins, return \n-1\n.\n\n\nYou may assume that you have an infinite number of each kind of coin.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n coins = [1,2,5], amount = 11\n\nOutput:\n 3\n\nExplanation:\n 11 = 5 + 5 + 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n coins = [2], amount = 3\n\nOutput:\n -1\n\n\n\nExample 3:\n\n\n\n\nInput:\n coins = [1], amount = 0\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= coins.length <= 12\n\n\n1 <= coins[i] <= 2\n31\n - 1\n\n\n0 <= amount <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 319,
        "slug": "bulb-switcher",
        "url": "https://leetcode.com/problems/bulb-switcher/",
        "titulo": "Bulb Switcher",
        "enunciado": "There are \nn\n bulbs that are initially off. You first turn on all the bulbs, then you turn off every second bulb.\n\n\nOn the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the \ni\nth\n round, you toggle every \ni\n bulb. For the \nn\nth\n round, you only toggle the last bulb.\n\n\nReturn \nthe number of bulbs that are on after \nn\n rounds\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 1\n\nExplanation:\n At first, the three bulbs are [off, off, off].\nAfter the first round, the three bulbs are [on, on, on].\nAfter the second round, the three bulbs are [on, off, on].\nAfter the third round, the three bulbs are [on, off, off]. \nSo you should return 1 because there is only one bulb is on.\n\n\nExample 2:\n\n\n\n\nInput:\n n = 0\n\nOutput:\n 0\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10\n9",
        "temas": [
            "Math",
            "Brainteaser"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 318,
        "slug": "maximum-product-of-word-lengths",
        "url": "https://leetcode.com/problems/maximum-product-of-word-lengths/",
        "titulo": "Maximum Product of Word Lengths",
        "enunciado": "Given a string array \nwords\n, return \nthe maximum value of\n \nlength(word[i]) * length(word[j])\n \nwhere the two words do not share common letters\n. If no such two words exist, return \n0\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n words = [\"abcw\",\"baz\",\"foo\",\"bar\",\"xtfn\",\"abcdef\"]\n\nOutput:\n 16\n\nExplanation:\n The two words can be \"abcw\", \"xtfn\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n words = [\"a\",\"ab\",\"abc\",\"d\",\"cd\",\"bcd\",\"abcd\"]\n\nOutput:\n 4\n\nExplanation:\n The two words can be \"ab\", \"cd\".\n\n\n\nExample 3:\n\n\n\n\nInput:\n words = [\"a\",\"aa\",\"aaa\",\"aaaa\"]\n\nOutput:\n 0\n\nExplanation:\n No such pair of words.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= words.length <= 1000\n\n\n1 <= words[i].length <= 1000\n\n\nwords[i]\n consists only of lowercase English letters.",
        "temas": [
            "Array",
            "String",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 316,
        "slug": "remove-duplicate-letters",
        "url": "https://leetcode.com/problems/remove-duplicate-letters/",
        "titulo": "Remove Duplicate Letters",
        "enunciado": "Given a string \ns\n, remove duplicate letters so that every letter appears once and only once. You must make sure your result is \nthe smallest in lexicographical order\n among all possible results.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"bcabc\"\n\nOutput:\n \"abc\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cbacdcbc\"\n\nOutput:\n \"acdb\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n4\n\n\ns\n consists of lowercase English letters.\n\n\n\n\n \n\n\nNote:\n This question is the same as 1081: \nhttps://leetcode.com/problems/smallest-subsequence-of-distinct-characters/",
        "temas": [
            "String",
            "Stack",
            "Greedy",
            "Monotonic Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 313,
        "slug": "super-ugly-number",
        "url": "https://leetcode.com/problems/super-ugly-number/",
        "titulo": "Super Ugly Number",
        "enunciado": "A \nsuper ugly number\n is a positive integer whose prime factors are in the array \nprimes\n.\n\n\nGiven an integer \nn\n and an array of integers \nprimes\n, return \nthe\n \nn\nth\n \nsuper ugly number\n.\n\n\nThe \nn\nth\n \nsuper ugly number\n is \nguaranteed\n to fit in a \n32-bit\n signed integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 12, primes = [2,7,13,19]\n\nOutput:\n 32\n\nExplanation:\n [1,2,4,7,8,13,14,16,19,26,28,32] is the sequence of the first 12 super ugly numbers given primes = [2,7,13,19].\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1, primes = [2,3,5]\n\nOutput:\n 1\n\nExplanation:\n 1 has no prime factors, therefore all of its prime factors are in the array primes = [2,3,5].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\n1 <= primes.length <= 100\n\n\n2 <= primes[i] <= 1000\n\n\nprimes[i]\n is \nguaranteed\n to be a prime number.\n\n\nAll the values of \nprimes\n are \nunique\n and sorted in \nascending order\n.",
        "temas": [
            "Array",
            "Math",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 310,
        "slug": "minimum-height-trees",
        "url": "https://leetcode.com/problems/minimum-height-trees/",
        "titulo": "Minimum Height Trees",
        "enunciado": "A tree is an undirected graph in which any two vertices are connected by \nexactly\n one path. In other words, any connected graph without simple cycles is a tree.\n\n\nGiven a tree of \nn\n nodes labelled from \n0\n to \nn - 1\n, and an array of \nn - 1\n \nedges\n where \nedges[i] = [a\ni\n, b\ni\n]\n indicates that there is an undirected edge between the two nodes \na\ni\n and \nb\ni\n in the tree, you can choose any node of the tree as the root. When you select a node \nx\n as the root, the result tree has height \nh\n. Among all possible rooted trees, those with minimum height (i.e. \nmin(h)\n)  are called \nminimum height trees\n (MHTs).\n\n\nReturn \na list of all \nMHTs'\n root labels\n. You can return the answer in \nany order\n.\n\n\nThe \nheight\n of a rooted tree is the number of edges on the longest downward path between the root and a leaf.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 4, edges = [[1,0],[1,2],[1,3]]\n\nOutput:\n [1]\n\nExplanation:\n As shown, the height of the tree is 1 when the root is the node with label 1 which is the only MHT.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n n = 6, edges = [[3,0],[3,1],[3,2],[3,4],[5,4]]\n\nOutput:\n [3,4]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 2 * 10\n4\n\n\nedges.length == n - 1\n\n\n0 <= a\ni\n, b\ni\n < n\n\n\na\ni\n != b\ni\n\n\nAll the pairs \n(a\ni\n, b\ni\n)\n are distinct.\n\n\nThe given input is \nguaranteed\n to be a tree and there will be \nno repeated\n edges.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": true
    },
    {
        "id": 309,
        "slug": "best-time-to-buy-and-sell-stock-with-cooldown",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/",
        "titulo": "Best Time to Buy and Sell Stock with Cooldown",
        "enunciado": "You are given an array \nprices\n where \nprices[i]\n is the price of a given stock on the \ni\nth\n day.\n\n\nFind the maximum profit you can achieve. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times) with the following restrictions:\n\n\n\n\nAfter you sell your stock, you cannot buy stock on the next day (i.e., cooldown one day).\n\n\n\n\nNote:\n You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n prices = [1,2,3,0,2]\n\nOutput:\n 3\n\nExplanation:\n transactions = [buy, sell, cooldown, buy, sell]\n\n\n\nExample 2:\n\n\n\n\nInput:\n prices = [1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= prices.length <= 5000\n\n\n0 <= prices[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 307,
        "slug": "range-sum-query-mutable",
        "url": "https://leetcode.com/problems/range-sum-query-mutable/",
        "titulo": "Range Sum Query - Mutable",
        "enunciado": "Given an integer array \nnums\n, handle multiple queries of the following types:\n\n\n\n\nUpdate\n the value of an element in \nnums\n.\n\n\nCalculate the \nsum\n of the elements of \nnums\n between indices \nleft\n and \nright\n \ninclusive\n where \nleft <= right\n.\n\n\n\n\nImplement the \nNumArray\n class:\n\n\n\n\nNumArray(int[] nums)\n Initializes the object with the integer array \nnums\n.\n\n\nvoid update(int index, int val)\n \nUpdates\n the value of \nnums[index]\n to be \nval\n.\n\n\nint sumRange(int left, int right)\n Returns the \nsum\n of the elements of \nnums\n between indices \nleft\n and \nright\n \ninclusive\n (i.e. \nnums[left] + nums[left + 1] + ... + nums[right]\n).\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"NumArray\", \"sumRange\", \"update\", \"sumRange\"]\n[[[1, 3, 5]], [0, 2], [1, 2], [0, 2]]\n\nOutput\n\n[null, 9, null, 8]\n\n\nExplanation\n\nNumArray numArray = new NumArray([1, 3, 5]);\nnumArray.sumRange(0, 2); // return 1 + 3 + 5 = 9\nnumArray.update(1, 2);   // nums = [1, 2, 5]\nnumArray.sumRange(0, 2); // return 1 + 2 + 5 = 8\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\n-100 <= nums[i] <= 100\n\n\n0 <= index < nums.length\n\n\n-100 <= val <= 100\n\n\n0 <= left <= right < nums.length\n\n\nAt most \n3 * 10\n4\n calls will be made to \nupdate\n and \nsumRange\n.",
        "temas": [
            "Array",
            "Design",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 306,
        "slug": "additive-number",
        "url": "https://leetcode.com/problems/additive-number/",
        "titulo": "Additive Number",
        "enunciado": "An \nadditive number\n is a string whose digits can form an \nadditive sequence\n.\n\n\nA valid \nadditive sequence\n should contain \nat least\n three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\n\n\nGiven a string containing only digits, return \ntrue\n if it is an \nadditive number\n or \nfalse\n otherwise.\n\n\nNote:\n Numbers in the additive sequence \ncannot\n have leading zeros, so sequence \n1, 2, 03\n or \n1, 02, 3\n is invalid.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \"112358\"\n\nOutput:\n true\n\nExplanation:\n \nThe digits can form an additive sequence: 1, 1, 2, 3, 5, 8. \n1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n\n\n\nExample 2:\n\n\n\n\nInput:\n \"199100199\"\n\nOutput:\n true\n\nExplanation:\n \nThe additive sequence is: 1, 99, 100, 199. \n1 + 99 = 100, 99 + 100 = 199\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num.length <= 35\n\n\nnum\n consists only of digits.\n\n\n\n\n \n\n\nFollow up:\n How would you handle overflow for very large input integers?",
        "temas": [
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 304,
        "slug": "range-sum-query-2d-immutable",
        "url": "https://leetcode.com/problems/range-sum-query-2d-immutable/",
        "titulo": "Range Sum Query 2D - Immutable",
        "enunciado": "Given a 2D matrix \nmatrix\n, handle multiple queries of the following type:\n\n\n\n\nCalculate the \nsum\n of the elements of \nmatrix\n inside the rectangle defined by its \nupper left corner\n \n(row1, col1)\n and \nlower right corner\n \n(row2, col2)\n.\n\n\n\n\nImplement the \nNumMatrix\n class:\n\n\n\n\nNumMatrix(int[][] matrix)\n Initializes the object with the integer matrix \nmatrix\n.\n\n\nint sumRegion(int row1, int col1, int row2, int col2)\n Returns the \nsum\n of the elements of \nmatrix\n inside the rectangle defined by its \nupper left corner\n \n(row1, col1)\n and \nlower right corner\n \n(row2, col2)\n.\n\n\n\n\nYou must design an algorithm where \nsumRegion\n works on \nO(1)\n time complexity.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"NumMatrix\", \"sumRegion\", \"sumRegion\", \"sumRegion\"]\n[[[[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]], [2, 1, 4, 3], [1, 1, 2, 2], [1, 2, 2, 4]]\n\nOutput\n\n[null, 8, 11, 12]\n\n\nExplanation\n\nNumMatrix numMatrix = new NumMatrix([[3, 0, 1, 4, 2], [5, 6, 3, 2, 1], [1, 2, 0, 1, 5], [4, 1, 0, 1, 7], [1, 0, 3, 0, 5]]);\nnumMatrix.sumRegion(2, 1, 4, 3); // return 8 (i.e sum of the red rectangle)\nnumMatrix.sumRegion(1, 1, 2, 2); // return 11 (i.e sum of the green rectangle)\nnumMatrix.sumRegion(1, 2, 2, 4); // return 12 (i.e sum of the blue rectangle)\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 200\n\n\n-10\n4\n <= matrix[i][j] <= 10\n4\n\n\n0 <= row1 <= row2 < m\n\n\n0 <= col1 <= col2 < n\n\n\nAt most \n10\n4\n calls will be made to \nsumRegion\n.",
        "temas": [
            "Array",
            "Design",
            "Matrix",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 300,
        "slug": "longest-increasing-subsequence",
        "url": "https://leetcode.com/problems/longest-increasing-subsequence/",
        "titulo": "Longest Increasing Subsequence",
        "enunciado": "Given an integer array \nnums\n, return \nthe length of the longest \nstrictly increasing \nsubsequence\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,9,2,5,3,7,101,18]\n\nOutput:\n 4\n\nExplanation:\n The longest increasing subsequence is [2,3,7,101], therefore the length is 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,0,3,2,3]\n\nOutput:\n 4\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [7,7,7,7,7,7,7]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2500\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n Can you come up with an algorithm that runs in \nO(n log(n))\n time complexity?",
        "temas": [
            "Array",
            "Binary Search",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 299,
        "slug": "bulls-and-cows",
        "url": "https://leetcode.com/problems/bulls-and-cows/",
        "titulo": "Bulls and Cows",
        "enunciado": "You are playing the \nBulls and Cows\n game with your friend.\n\n\nYou write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:\n\n\n\n\nThe number of \"bulls\", which are digits in the guess that are in the correct position.\n\n\nThe number of \"cows\", which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.\n\n\n\n\nGiven the secret number \nsecret\n and your friend's guess \nguess\n, return \nthe hint for your friend's guess\n.\n\n\nThe hint should be formatted as \n\"xAyB\"\n, where \nx\n is the number of bulls and \ny\n is the number of cows. Note that both \nsecret\n and \nguess\n may contain duplicate digits.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n secret = \"1807\", guess = \"7810\"\n\nOutput:\n \"1A3B\"\n\nExplanation:\n Bulls are connected with a '|' and cows are underlined:\n\"1807\"\n  |\n\"\n7\n8\n10\n\"\n\n\nExample 2:\n\n\n\n\nInput:\n secret = \"1123\", guess = \"0111\"\n\nOutput:\n \"1A1B\"\n\nExplanation:\n Bulls are connected with a '|' and cows are underlined:\n\"1123\"        \"1123\"\n  |      or     |\n\"01\n1\n1\"        \"011\n1\n\"\nNote that only one of the two unmatched 1s is counted as a cow since the non-bull digits can only be rearranged to allow one 1 to be a bull.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= secret.length, guess.length <= 1000\n\n\nsecret.length == guess.length\n\n\nsecret\n and \nguess\n consist of digits only.",
        "temas": [
            "Hash Table",
            "String",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 289,
        "slug": "game-of-life",
        "url": "https://leetcode.com/problems/game-of-life/",
        "titulo": "Game of Life",
        "enunciado": "According to \nWikipedia's article\n: \"The \nGame of Life\n, also known simply as \nLife\n, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\n\n\nThe board is made up of an \nm x n\n grid of cells, where each cell has an initial state: \nlive\n (represented by a \n1\n) or \ndead\n (represented by a \n0\n). Each cell interacts with its \neight neighbors\n (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\n\n\n\n\nAny live cell with fewer than two live neighbors dies as if caused by under-population.\n\n\nAny live cell with two or three live neighbors lives on to the next generation.\n\n\nAny live cell with more than three live neighbors dies, as if by over-population.\n\n\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\n\n\n\n\nThe next state of the board is determined by applying the above rules simultaneously to every cell in the current state of the \nm x n\n grid \nboard\n. In this process, births and deaths occur \nsimultaneously\n.\n\n\nGiven the current state of the \nboard\n, \nupdate\n the \nboard\n to reflect its next state.\n\n\nNote\n that you do not need to return anything.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]]\n\nOutput:\n [[0,0,0],[1,0,1],[0,1,1],[0,1,0]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n board = [[1,1],[1,0]]\n\nOutput:\n [[1,1],[1,1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == board.length\n\n\nn == board[i].length\n\n\n1 <= m, n <= 25\n\n\nboard[i][j]\n is \n0\n or \n1\n.\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nCould you solve it in-place? Remember that the board needs to be updated simultaneously: You cannot update some cells first and then use their updated values to update other cells.\n\n\nIn this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches upon the border of the array (i.e., live cells reach the border). How would you address these problems?",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 287,
        "slug": "find-the-duplicate-number",
        "url": "https://leetcode.com/problems/find-the-duplicate-number/",
        "titulo": "Find the Duplicate Number",
        "enunciado": "Given an array of integers \nnums\n containing \nn + 1\n integers where each integer is in the range \n[1, n]\n inclusive.\n\n\nThere is only \none repeated number\n in \nnums\n, return \nthis repeated number\n.\n\n\nYou must solve the problem \nwithout\n modifying the array \nnums\n and using only constant extra space.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,3,4,2,2]\n\nOutput:\n 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,1,3,4,2]\n\nOutput:\n 3\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [3,3,3,3,3]\n\nOutput:\n 3\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n5\n\n\nnums.length == n + 1\n\n\n1 <= nums[i] <= n\n\n\nAll the integers in \nnums\n appear only \nonce\n except for \nprecisely one integer\n which appears \ntwo or more\n times.\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nHow can we prove that at least one duplicate number must exist in \nnums\n?\n\n\nCan you solve the problem in linear runtime complexity?",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 284,
        "slug": "peeking-iterator",
        "url": "https://leetcode.com/problems/peeking-iterator/",
        "titulo": "Peeking Iterator",
        "enunciado": "Design an iterator that supports the \npeek\n operation on an existing iterator in addition to the \nhasNext\n and the \nnext\n operations.\n\n\nImplement the \nPeekingIterator\n class:\n\n\n\n\nPeekingIterator(Iterator<int> nums)\n Initializes the object with the given integer iterator \niterator\n.\n\n\nint next()\n Returns the next element in the array and moves the pointer to the next element.\n\n\nboolean hasNext()\n Returns \ntrue\n if there are still elements in the array.\n\n\nint peek()\n Returns the next element in the array \nwithout\n moving the pointer.\n\n\n\n\nNote:\n Each language may have a different implementation of the constructor and \nIterator\n, but they all support the \nint next()\n and \nboolean hasNext()\n functions.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"PeekingIterator\", \"next\", \"peek\", \"next\", \"next\", \"hasNext\"]\n[[[1, 2, 3]], [], [], [], [], []]\n\nOutput\n\n[null, 1, 2, 2, 3, false]\n\n\nExplanation\n\nPeekingIterator peekingIterator = new PeekingIterator([1, 2, 3]); // [\n1\n,2,3]\npeekingIterator.next();    // return 1, the pointer moves to the next element [1,\n2\n,3].\npeekingIterator.peek();    // return 2, the pointer does not move [1,\n2\n,3].\npeekingIterator.next();    // return 2, the pointer moves to the next element [1,2,\n3\n]\npeekingIterator.next();    // return 3, the pointer moves to the next element [1,2,3]\npeekingIterator.hasNext(); // return False\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n1 <= nums[i] <= 1000\n\n\nAll the calls to \nnext\n and \npeek\n are valid.\n\n\nAt most \n1000\n calls will be made to \nnext\n, \nhasNext\n, and \npeek\n.\n\n\n\n\n \n\n\nFollow up:\n How would you extend your design to be generic and work with all types, not just integer?",
        "temas": [
            "Array",
            "Design",
            "Iterator"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 279,
        "slug": "perfect-squares",
        "url": "https://leetcode.com/problems/perfect-squares/",
        "titulo": "Perfect Squares",
        "enunciado": "Given an integer \nn\n, return \nthe least number of perfect square numbers that sum to\n \nn\n.\n\n\nA \nperfect square\n is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, \n1\n, \n4\n, \n9\n, and \n16\n are perfect squares while \n3\n and \n11\n are not.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 12\n\nOutput:\n 3\n\nExplanation:\n 12 = 4 + 4 + 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 13\n\nOutput:\n 2\n\nExplanation:\n 13 = 4 + 9.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 10\n4",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Breadth-First Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 275,
        "slug": "h-index-ii",
        "url": "https://leetcode.com/problems/h-index-ii/",
        "titulo": "H-Index II",
        "enunciado": "Given an array of integers \ncitations\n where \ncitations[i]\n is the number of citations a researcher received for their \ni\nth\n paper and \ncitations\n is sorted in \nnon-descending order\n, return \nthe researcher's h-index\n.\n\n\nAccording to the \ndefinition of h-index on Wikipedia\n: The h-index is defined as the maximum value of \nh\n such that the given researcher has published at least \nh\n papers that have each been cited at least \nh\n times.\n\n\nYou must write an algorithm that runs in logarithmic time.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n citations = [0,1,3,5,6]\n\nOutput:\n 3\n\nExplanation:\n [0,1,3,5,6] means the researcher has 5 papers in total and each of them had received 0, 1, 3, 5, 6 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n citations = [1,2,100]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == citations.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= citations[i] <= 1000\n\n\ncitations\n is sorted in \nascending order\n.",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 274,
        "slug": "h-index",
        "url": "https://leetcode.com/problems/h-index/",
        "titulo": "H-Index",
        "enunciado": "Given an array of integers \ncitations\n where \ncitations[i]\n is the number of citations a researcher received for their \ni\nth\n paper, return \nthe researcher's h-index\n.\n\n\nAccording to the \ndefinition of h-index on Wikipedia\n: The h-index is defined as the maximum value of \nh\n such that the given researcher has published at least \nh\n papers that have each been cited at least \nh\n times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n citations = [3,0,6,1,5]\n\nOutput:\n 3\n\nExplanation:\n [3,0,6,1,5] means the researcher has 5 papers in total and each of them had received 3, 0, 6, 1, 5 citations respectively.\nSince the researcher has 3 papers with at least 3 citations each and the remaining two with no more than 3 citations each, their h-index is 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n citations = [1,3,1]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == citations.length\n\n\n1 <= n <= 5000\n\n\n0 <= citations[i] <= 1000",
        "temas": [
            "Array",
            "Sorting",
            "Counting Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 264,
        "slug": "ugly-number-ii",
        "url": "https://leetcode.com/problems/ugly-number-ii/",
        "titulo": "Ugly Number II",
        "enunciado": "An \nugly number\n is a positive integer whose prime factors are limited to \n2\n, \n3\n, and \n5\n.\n\n\nGiven an integer \nn\n, return \nthe\n \nn\nth\n \nugly number\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 12\n\nExplanation:\n [1, 2, 3, 4, 5, 6, 8, 9, 10, 12] is the sequence of the first 10 ugly numbers.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\nExplanation:\n 1 has no prime factors, therefore all of its prime factors are limited to 2, 3, and 5.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 1690",
        "temas": [
            "Hash Table",
            "Math",
            "Dynamic Programming",
            "Heap (Priority Queue)"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 260,
        "slug": "single-number-iii",
        "url": "https://leetcode.com/problems/single-number-iii/",
        "titulo": "Single Number III",
        "enunciado": "Given an integer array \nnums\n, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in \nany order\n.\n\n\nYou must write an algorithm that runs in linear runtime complexity and uses only constant extra space.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,1,3,2,5]\n\nOutput:\n [3,5]\n\nExplanation: \n [5, 3] is also a valid answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-1,0]\n\nOutput:\n [-1,0]\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [0,1]\n\nOutput:\n [1,0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 3 * 10\n4\n\n\n-2\n31\n <= nums[i] <= 2\n31\n - 1\n\n\nEach integer in \nnums\n will appear twice, only two integers will appear once.",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 241,
        "slug": "different-ways-to-add-parentheses",
        "url": "https://leetcode.com/problems/different-ways-to-add-parentheses/",
        "titulo": "Different Ways to Add Parentheses",
        "enunciado": "Given a string \nexpression\n of numbers and operators, return \nall possible results from computing all the different possible ways to group numbers and operators\n. You may return the answer in \nany order\n.\n\n\nThe test cases are generated such that the output values fit in a 32-bit integer and the number of different results does not exceed \n10\n4\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n expression = \"2-1-1\"\n\nOutput:\n [0,2]\n\nExplanation:\n\n((2-1)-1) = 0 \n(2-(1-1)) = 2\n\n\n\nExample 2:\n\n\n\n\nInput:\n expression = \"2*3-4*5\"\n\nOutput:\n [-34,-14,-10,-10,10]\n\nExplanation:\n\n(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= expression.length <= 20\n\n\nexpression\n consists of digits and the operator \n'+'\n, \n'-'\n, and \n'*'\n.\n\n\nAll the integer values in the input expression are in the range \n[0, 99]\n.\n\n\nThe integer values in the input expression do not have a leading \n'-'\n or \n'+'\n denoting the sign.",
        "temas": [
            "Math",
            "String",
            "Dynamic Programming",
            "Recursion",
            "Memoization"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 240,
        "slug": "search-a-2d-matrix-ii",
        "url": "https://leetcode.com/problems/search-a-2d-matrix-ii/",
        "titulo": "Search a 2D Matrix II",
        "enunciado": "Write an efficient algorithm that searches for a value \ntarget\n in an \nm x n\n integer matrix \nmatrix\n. This matrix has the following properties:\n\n\n\n\nIntegers in each row are sorted in ascending from left to right.\n\n\nIntegers in each column are sorted in ascending from top to bottom.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 5\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[1,4,7,11,15],[2,5,8,12,19],[3,6,9,16,22],[10,13,14,17,24],[18,21,23,26,30]], target = 20\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= n, m <= 300\n\n\n-10\n9\n <= matrix[i][j] <= 10\n9\n\n\nAll the integers in each row are \nsorted\n in ascending order.\n\n\nAll the integers in each column are \nsorted\n in ascending order.\n\n\n-10\n9\n <= target <= 10\n9",
        "temas": [
            "Array",
            "Binary Search",
            "Divide and Conquer",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 238,
        "slug": "product-of-array-except-self",
        "url": "https://leetcode.com/problems/product-of-array-except-self/",
        "titulo": "Product of Array Except Self",
        "enunciado": "Given an integer array \nnums\n, return \nan array\n \nanswer\n \nsuch that\n \nanswer[i]\n \nis equal to the product of all the elements of\n \nnums\n \nexcept\n \nnums[i]\n.\n\n\nThe product of any prefix or suffix of \nnums\n is \nguaranteed\n to fit in a \n32-bit\n integer.\n\n\nYou must write an algorithm that runs in \nO(n)\n time and without using the division operation.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [1,2,3,4]\n\nOutput:\n [24,12,8,6]\n\nExample 2:\n\n\nInput:\n nums = [-1,1,0,-3,3]\n\nOutput:\n [0,0,9,0,0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= nums.length <= 10\n5\n\n\n-30 <= nums[i] <= 30\n\n\nThe input is generated such that \nanswer[i]\n is \nguaranteed\n to fit in a \n32-bit\n integer.\n\n\n\n\n \n\n\nFollow up:\n Can you solve the problem in \nO(1)\n extra space complexity? (The output array \ndoes not\n count as extra space for space complexity analysis.)",
        "temas": [
            "Array",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 237,
        "slug": "delete-node-in-a-linked-list",
        "url": "https://leetcode.com/problems/delete-node-in-a-linked-list/",
        "titulo": "Delete Node in a Linked List",
        "enunciado": "There is a singly-linked list \nhead\n and we want to delete a node \nnode\n in it.\n\n\nYou are given the node to be deleted \nnode\n. You will \nnot be given access\n to the first node of \nhead\n.\n\n\nAll the values of the linked list are \nunique\n, and it is guaranteed that the given node \nnode\n is not the last node in the linked list.\n\n\nDelete the given node. Note that by deleting the node, we do not mean removing it from memory. We mean:\n\n\n\n\nThe value of the given node should not exist in the linked list.\n\n\nThe number of nodes in the linked list should decrease by one.\n\n\nAll the values before \nnode\n should be in the same order.\n\n\nAll the values after \nnode\n should be in the same order.\n\n\n\n\nCustom testing:\n\n\n\n\nFor the input, you should provide the entire linked list \nhead\n and the node to be given \nnode\n. \nnode\n should not be the last node of the list and should be an actual node in the list.\n\n\nWe will build the linked list and pass the node to your function.\n\n\nThe output will be the entire list after calling your function.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [4,5,1,9], node = 5\n\nOutput:\n [4,1,9]\n\nExplanation: \nYou are given the second node with value 5, the linked list should become 4 -> 1 -> 9 after calling your function.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [4,5,1,9], node = 1\n\nOutput:\n [4,5,9]\n\nExplanation: \nYou are given the third node with value 1, the linked list should become 4 -> 5 -> 9 after calling your function.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of the nodes in the given list is in the range \n[2, 1000]\n.\n\n\n-1000 <= Node.val <= 1000\n\n\nThe value of each node in the list is \nunique\n.\n\n\nThe \nnode\n to be deleted is \nin the list\n and is \nnot a tail\n node.",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 236,
        "slug": "lowest-common-ancestor-of-a-binary-tree",
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/",
        "titulo": "Lowest Common Ancestor of a Binary Tree",
        "enunciado": "Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\n\n\nAccording to the \ndefinition of LCA on Wikipedia\n: “The lowest common ancestor is defined between two nodes \np\n and \nq\n as the lowest node in \nT\n that has both \np\n and \nq\n as descendants (where we allow \na node to be a descendant of itself\n).”\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n\nOutput:\n 3\n\nExplanation:\n The LCA of nodes 5 and 1 is 3.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n\nOutput:\n 5\n\nExplanation:\n The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [1,2], p = 1, q = 2\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[2, 10\n5\n]\n.\n\n\n-10\n9\n <= Node.val <= 10\n9\n\n\nAll \nNode.val\n are \nunique\n.\n\n\np != q\n\n\np\n and \nq\n will exist in the tree.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 235,
        "slug": "lowest-common-ancestor-of-a-binary-search-tree",
        "url": "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",
        "titulo": "Lowest Common Ancestor of a Binary Search Tree",
        "enunciado": "Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.\n\n\nAccording to the \ndefinition of LCA on Wikipedia\n: “The lowest common ancestor is defined between two nodes \np\n and \nq\n as the lowest node in \nT\n that has both \np\n and \nq\n as descendants (where we allow \na node to be a descendant of itself\n).”\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\n\nOutput:\n 6\n\nExplanation:\n The LCA of nodes 2 and 8 is 6.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\n\nOutput:\n 2\n\nExplanation:\n The LCA of nodes 2 and 4 is 2, since a node can be a descendant of itself according to the LCA definition.\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [2,1], p = 2, q = 1\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[2, 10\n5\n]\n.\n\n\n-10\n9\n <= Node.val <= 10\n9\n\n\nAll \nNode.val\n are \nunique\n.\n\n\np != q\n\n\np\n and \nq\n will exist in the BST.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 230,
        "slug": "kth-smallest-element-in-a-bst",
        "url": "https://leetcode.com/problems/kth-smallest-element-in-a-bst/",
        "titulo": "Kth Smallest Element in a BST",
        "enunciado": "Given the \nroot\n of a binary search tree, and an integer \nk\n, return \nthe\n \nk\nth\n \nsmallest value (\n1-indexed\n) of all the values of the nodes in the tree\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,1,4,null,2], k = 1\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [5,3,6,2,4,null,null,1], k = 3\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is \nn\n.\n\n\n1 <= k <= n <= 10\n4\n\n\n0 <= Node.val <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n If the BST is modified often (i.e., we can do insert and delete operations) and you need to find the kth smallest frequently, how would you optimize?",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 229,
        "slug": "majority-element-ii",
        "url": "https://leetcode.com/problems/majority-element-ii/",
        "titulo": "Majority Element II",
        "enunciado": "Given an integer array of size \nn\n, find all elements that appear more than \n⌊ n/3 ⌋\n times.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,2,3]\n\nOutput:\n [3]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1]\n\nOutput:\n [1]\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2]\n\nOutput:\n [1,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5 * 10\n4\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\n\n\n \n\n\nFollow up:\n Could you solve the problem in linear time and in \nO(1)\n space?",
        "temas": [
            "Array",
            "Hash Table",
            "Sorting",
            "Counting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 227,
        "slug": "basic-calculator-ii",
        "url": "https://leetcode.com/problems/basic-calculator-ii/",
        "titulo": "Basic Calculator II",
        "enunciado": "Given a string \ns\n which represents an expression, \nevaluate this expression and return its value\n. \n\n\nThe integer division should truncate toward zero.\n\n\nYou may assume that the given expression is always valid. All intermediate results will be in the range of \n[-2\n31\n, 2\n31\n - 1]\n.\n\n\nNote:\n You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as \neval()\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"3+2*2\"\n\nOutput:\n 7\n\nExample 2:\n\n\nInput:\n s = \" 3/2 \"\n\nOutput:\n 1\n\nExample 3:\n\n\nInput:\n s = \" 3+5 / 2 \"\n\nOutput:\n 5\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 3 * 10\n5\n\n\ns\n consists of integers and operators \n('+', '-', '*', '/')\n separated by some number of spaces.\n\n\ns\n represents \na valid expression\n.\n\n\nAll the integers in the expression are non-negative integers in the range \n[0, 2\n31\n - 1]\n.\n\n\nThe answer is \nguaranteed\n to fit in a \n32-bit integer\n.",
        "temas": [
            "Math",
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 223,
        "slug": "rectangle-area",
        "url": "https://leetcode.com/problems/rectangle-area/",
        "titulo": "Rectangle Area",
        "enunciado": "Given the coordinates of two \nrectilinear\n rectangles in a 2D plane, return \nthe total area covered by the two rectangles\n.\n\n\nThe first rectangle is defined by its \nbottom-left\n corner \n(ax1, ay1)\n and its \ntop-right\n corner \n(ax2, ay2)\n.\n\n\nThe second rectangle is defined by its \nbottom-left\n corner \n(bx1, by1)\n and its \ntop-right\n corner \n(bx2, by2)\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n ax1 = -3, ay1 = 0, ax2 = 3, ay2 = 4, bx1 = 0, by1 = -1, bx2 = 9, by2 = 2\n\nOutput:\n 45\n\n\n\nExample 2:\n\n\n\n\nInput:\n ax1 = -2, ay1 = -2, ax2 = 2, ay2 = 2, bx1 = -2, by1 = -2, bx2 = 2, by2 = 2\n\nOutput:\n 16\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-10\n4\n <= ax1 <= ax2 <= 10\n4\n\n\n-10\n4\n <= ay1 <= ay2 <= 10\n4\n\n\n-10\n4\n <= bx1 <= bx2 <= 10\n4\n\n\n-10\n4\n <= by1 <= by2 <= 10\n4",
        "temas": [
            "Math",
            "Geometry"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 221,
        "slug": "maximal-square",
        "url": "https://leetcode.com/problems/maximal-square/",
        "titulo": "Maximal Square",
        "enunciado": "Given an \nm x n\n binary \nmatrix\n filled with \n0\n's and \n1\n's, \nfind the largest square containing only\n \n1\n's \nand return its area\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[\"1\",\"0\",\"1\",\"0\",\"0\"],[\"1\",\"0\",\"1\",\"1\",\"1\"],[\"1\",\"1\",\"1\",\"1\",\"1\"],[\"1\",\"0\",\"0\",\"1\",\"0\"]]\n\nOutput:\n 4\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[\"0\",\"1\"],[\"1\",\"0\"]]\n\nOutput:\n 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n matrix = [[\"0\"]]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 300\n\n\nmatrix[i][j]\n is \n'0'\n or \n'1'\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 216,
        "slug": "combination-sum-iii",
        "url": "https://leetcode.com/problems/combination-sum-iii/",
        "titulo": "Combination Sum III",
        "enunciado": "Find all valid combinations of \nk\n numbers that sum up to \nn\n such that the following conditions are true:\n\n\n\n\nOnly numbers \n1\n through \n9\n are used.\n\n\nEach number is used \nat most once\n.\n\n\n\n\nReturn \na list of all possible valid combinations\n. The list must not contain the same combination twice, and the combinations may be returned in any order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n k = 3, n = 7\n\nOutput:\n [[1,2,4]]\n\nExplanation:\n\n1 + 2 + 4 = 7\nThere are no other valid combinations.\n\n\nExample 2:\n\n\n\n\nInput:\n k = 3, n = 9\n\nOutput:\n [[1,2,6],[1,3,5],[2,3,4]]\n\nExplanation:\n\n1 + 2 + 6 = 9\n1 + 3 + 5 = 9\n2 + 3 + 4 = 9\nThere are no other valid combinations.\n\n\n\nExample 3:\n\n\n\n\nInput:\n k = 4, n = 1\n\nOutput:\n []\n\nExplanation:\n There are no valid combinations.\nUsing 4 different numbers in the range [1,9], the smallest sum we can get is 1+2+3+4 = 10 and since 10 > 1, there are no valid combination.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= k <= 9\n\n\n1 <= n <= 60",
        "temas": [
            "Array",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 215,
        "slug": "kth-largest-element-in-an-array",
        "url": "https://leetcode.com/problems/kth-largest-element-in-an-array/",
        "titulo": "Kth Largest Element in an Array",
        "enunciado": "Given an integer array \nnums\n and an integer \nk\n, return \nthe\n \nk\nth\n \nlargest element in the array\n.\n\n\nNote that it is the \nk\nth\n largest element in the sorted order, not the \nk\nth\n distinct element.\n\n\nCan you solve it without sorting?\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [3,2,1,5,6,4], k = 2\n\nOutput:\n 5\n\nExample 2:\n\n\nInput:\n nums = [3,2,3,1,2,4,5,5,6], k = 4\n\nOutput:\n 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= k <= nums.length <= 10\n5\n\n\n-10\n4\n <= nums[i] <= 10\n4",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Sorting",
            "Heap (Priority Queue)",
            "Quickselect"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 213,
        "slug": "house-robber-ii",
        "url": "https://leetcode.com/problems/house-robber-ii/",
        "titulo": "House Robber II",
        "enunciado": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are \narranged in a circle.\n That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and \nit will automatically contact the police if two adjacent houses were broken into on the same night\n.\n\n\nGiven an integer array \nnums\n representing the amount of money of each house, return \nthe maximum amount of money you can rob tonight \nwithout alerting the police\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,2]\n\nOutput:\n 3\n\nExplanation:\n You cannot rob house 1 (money = 2) and then rob house 3 (money = 2), because they are adjacent houses.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3,1]\n\nOutput:\n 4\n\nExplanation:\n Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n0 <= nums[i] <= 1000",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 211,
        "slug": "design-add-and-search-words-data-structure",
        "url": "https://leetcode.com/problems/design-add-and-search-words-data-structure/",
        "titulo": "Design Add and Search Words Data Structure",
        "enunciado": "Design a data structure that supports adding new words and finding if a string matches any previously added string.\n\n\nImplement the \nWordDictionary\n class:\n\n\n\n\nWordDictionary()\n Initializes the object.\n\n\nvoid addWord(word)\n Adds \nword\n to the data structure, it can be matched later.\n\n\nbool search(word)\n Returns \ntrue\n if there is any string in the data structure that matches \nword\n or \nfalse\n otherwise. \nword\n may contain dots \n'.'\n where dots can be matched with any letter.\n\n\n\n\n \n\n\nExample:\n\n\n\n\nInput\n\n[\"WordDictionary\",\"addWord\",\"addWord\",\"addWord\",\"search\",\"search\",\"search\",\"search\"]\n[[],[\"bad\"],[\"dad\"],[\"mad\"],[\"pad\"],[\"bad\"],[\".ad\"],[\"b..\"]]\n\nOutput\n\n[null,null,null,null,false,true,true,true]\n\n\nExplanation\n\nWordDictionary wordDictionary = new WordDictionary();\nwordDictionary.addWord(\"bad\");\nwordDictionary.addWord(\"dad\");\nwordDictionary.addWord(\"mad\");\nwordDictionary.search(\"pad\"); // return False\nwordDictionary.search(\"bad\"); // return True\nwordDictionary.search(\".ad\"); // return True\nwordDictionary.search(\"b..\"); // return True\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length <= 25\n\n\nword\n in \naddWord\n consists of lowercase English letters.\n\n\nword\n in \nsearch\n consist of \n'.'\n or lowercase English letters.\n\n\nThere will be at most \n2\n dots in \nword\n for \nsearch\n queries.\n\n\nAt most \n10\n4\n calls will be made to \naddWord\n and \nsearch\n.",
        "temas": [
            "String",
            "Depth-First Search",
            "Design",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 210,
        "slug": "course-schedule-ii",
        "url": "https://leetcode.com/problems/course-schedule-ii/",
        "titulo": "Course Schedule II",
        "enunciado": "There are a total of \nnumCourses\n courses you have to take, labeled from \n0\n to \nnumCourses - 1\n. You are given an array \nprerequisites\n where \nprerequisites[i] = [a\ni\n, b\ni\n]\n indicates that you \nmust\n take course \nb\ni\n first if you want to take course \na\ni\n.\n\n\n\n\nFor example, the pair \n[0, 1]\n, indicates that to take course \n0\n you have to first take course \n1\n.\n\n\n\n\nReturn \nthe ordering of courses you should take to finish all courses\n. If there are many valid answers, return \nany\n of them. If it is impossible to finish all courses, return \nan empty array\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n numCourses = 2, prerequisites = [[1,0]]\n\nOutput:\n [0,1]\n\nExplanation:\n There are a total of 2 courses to take. To take course 1 you should have finished course 0. So the correct course order is [0,1].\n\n\n\nExample 2:\n\n\n\n\nInput:\n numCourses = 4, prerequisites = [[1,0],[2,0],[3,1],[3,2]]\n\nOutput:\n [0,2,1,3]\n\nExplanation:\n There are a total of 4 courses to take. To take course 3 you should have finished both courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0.\nSo one correct course order is [0,1,2,3]. Another correct ordering is [0,2,1,3].\n\n\n\nExample 3:\n\n\n\n\nInput:\n numCourses = 1, prerequisites = []\n\nOutput:\n [0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= numCourses <= 2000\n\n\n0 <= prerequisites.length <= numCourses * (numCourses - 1)\n\n\nprerequisites[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < numCourses\n\n\na\ni\n != b\ni\n\n\nAll the pairs \n[a\ni\n, b\ni\n]\n are \ndistinct\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": false
    },
    {
        "id": 209,
        "slug": "minimum-size-subarray-sum",
        "url": "https://leetcode.com/problems/minimum-size-subarray-sum/",
        "titulo": "Minimum Size Subarray Sum",
        "enunciado": "Given an array of positive integers \nnums\n and a positive integer \ntarget\n, return \nthe \nminimal length\n of a \nsubarray\n whose sum is greater than or equal to\n \ntarget\n. If there is no such subarray, return \n0\n instead.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n target = 7, nums = [2,3,1,2,4,3]\n\nOutput:\n 2\n\nExplanation:\n The subarray [4,3] has the minimal length under the problem constraint.\n\n\n\nExample 2:\n\n\n\n\nInput:\n target = 4, nums = [1,4,4]\n\nOutput:\n 1\n\n\n\nExample 3:\n\n\n\n\nInput:\n target = 11, nums = [1,1,1,1,1,1,1,1]\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= target <= 10\n9\n\n\n1 <= nums.length <= 10\n5\n\n\n1 <= nums[i] <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n If you have figured out the \nO(n)\n solution, try coding another solution of which the time complexity is \nO(n log(n))\n.",
        "temas": [
            "Array",
            "Binary Search",
            "Sliding Window",
            "Prefix Sum"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 208,
        "slug": "implement-trie-prefix-tree",
        "url": "https://leetcode.com/problems/implement-trie-prefix-tree/",
        "titulo": "Implement Trie (Prefix Tree)",
        "enunciado": "A \ntrie\n (pronounced as \"try\") or \nprefix tree\n is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.\n\n\nImplement the Trie class:\n\n\n\n\nTrie()\n Initializes the trie object.\n\n\nvoid insert(String word)\n Inserts the string \nword\n into the trie.\n\n\nboolean search(String word)\n Returns \ntrue\n if the string \nword\n is in the trie (i.e., was inserted before), and \nfalse\n otherwise.\n\n\nboolean startsWith(String prefix)\n Returns \ntrue\n if there is a previously inserted string \nword\n that has the prefix \nprefix\n, and \nfalse\n otherwise.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"Trie\", \"insert\", \"search\", \"search\", \"startsWith\", \"insert\", \"search\"]\n[[], [\"apple\"], [\"apple\"], [\"app\"], [\"app\"], [\"app\"], [\"app\"]]\n\nOutput\n\n[null, null, true, false, true, null, true]\n\n\nExplanation\n\nTrie trie = new Trie();\ntrie.insert(\"apple\");\ntrie.search(\"apple\");   // return True\ntrie.search(\"app\");     // return False\ntrie.startsWith(\"app\"); // return True\ntrie.insert(\"app\");\ntrie.search(\"app\");     // return True\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= word.length, prefix.length <= 2000\n\n\nword\n and \nprefix\n consist only of lowercase English letters.\n\n\nAt most \n3 * 10\n4\n calls \nin total\n will be made to \ninsert\n, \nsearch\n, and \nstartsWith\n.",
        "temas": [
            "Hash Table",
            "String",
            "Design",
            "Trie"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 207,
        "slug": "course-schedule",
        "url": "https://leetcode.com/problems/course-schedule/",
        "titulo": "Course Schedule",
        "enunciado": "There are a total of \nnumCourses\n courses you have to take, labeled from \n0\n to \nnumCourses - 1\n. You are given an array \nprerequisites\n where \nprerequisites[i] = [a\ni\n, b\ni\n]\n indicates that you \nmust\n take course \nb\ni\n first if you want to take course \na\ni\n.\n\n\n\n\nFor example, the pair \n[0, 1]\n, indicates that to take course \n0\n you have to first take course \n1\n.\n\n\n\n\nReturn \ntrue\n if you can finish all courses. Otherwise, return \nfalse\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n numCourses = 2, prerequisites = [[1,0]]\n\nOutput:\n true\n\nExplanation:\n There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0. So it is possible.\n\n\n\nExample 2:\n\n\n\n\nInput:\n numCourses = 2, prerequisites = [[1,0],[0,1]]\n\nOutput:\n false\n\nExplanation:\n There are a total of 2 courses to take. \nTo take course 1 you should have finished course 0, and to take course 0 you should also have finished course 1. So it is impossible.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= numCourses <= 2000\n\n\n0 <= prerequisites.length <= 5000\n\n\nprerequisites[i].length == 2\n\n\n0 <= a\ni\n, b\ni\n < numCourses\n\n\nAll the pairs prerequisites[i] are \nunique\n.",
        "temas": [
            "Depth-First Search",
            "Breadth-First Search",
            "Graph",
            "Topological Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Depth-First Search",
        "has_image": false
    },
    {
        "id": 204,
        "slug": "count-primes",
        "url": "https://leetcode.com/problems/count-primes/",
        "titulo": "Count Primes",
        "enunciado": "Given an integer \nn\n, return \nthe number of prime numbers that are strictly less than\n \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 10\n\nOutput:\n 4\n\nExplanation:\n There are 4 prime numbers less than 10, they are 2, 3, 5, 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 0\n\nOutput:\n 0\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 5 * 10\n6",
        "temas": [
            "Array",
            "Math",
            "Enumeration",
            "Number Theory"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 201,
        "slug": "bitwise-and-of-numbers-range",
        "url": "https://leetcode.com/problems/bitwise-and-of-numbers-range/",
        "titulo": "Bitwise AND of Numbers Range",
        "enunciado": "Given two integers \nleft\n and \nright\n that represent the range \n[left, right]\n, return \nthe bitwise AND of all numbers in this range, inclusive\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n left = 5, right = 7\n\nOutput:\n 4\n\n\n\nExample 2:\n\n\n\n\nInput:\n left = 0, right = 0\n\nOutput:\n 0\n\n\n\nExample 3:\n\n\n\n\nInput:\n left = 1, right = 2147483647\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= left <= right <= 2\n31\n - 1",
        "temas": [
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Bit Manipulation",
        "has_image": false
    },
    {
        "id": 200,
        "slug": "number-of-islands",
        "url": "https://leetcode.com/problems/number-of-islands/",
        "titulo": "Number of Islands",
        "enunciado": "Given an \nm x n\n 2D binary grid \ngrid\n which represents a map of \n'1'\ns (land) and \n'0'\ns (water), return \nthe number of islands\n.\n\n\nAn \nisland\n is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n grid = [\n  [\"1\",\"1\",\"1\",\"1\",\"0\"],\n  [\"1\",\"1\",\"0\",\"1\",\"0\"],\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"0\",\"0\",\"0\",\"0\",\"0\"]\n]\n\nOutput:\n 1\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"1\",\"1\",\"0\",\"0\",\"0\"],\n  [\"0\",\"0\",\"1\",\"0\",\"0\"],\n  [\"0\",\"0\",\"0\",\"1\",\"1\"]\n]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 300\n\n\ngrid[i][j]\n is \n'0'\n or \n'1'\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 199,
        "slug": "binary-tree-right-side-view",
        "url": "https://leetcode.com/problems/binary-tree-right-side-view/",
        "titulo": "Binary Tree Right Side View",
        "enunciado": "Given the \nroot\n of a binary tree, imagine yourself standing on the \nright side\n of it, return \nthe values of the nodes you can see ordered from top to bottom\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nroot = [1,2,3,null,5,null,4]\n\n\nOutput:\n \n[1,3,4]\n\n\nExplanation:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nroot = [1,2,3,4,null,null,null,5]\n\n\nOutput:\n \n[1,3,4,5]\n\n\nExplanation:\n\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nroot = [1,null,3]\n\n\nOutput:\n \n[1,3]\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nroot = []\n\n\nOutput:\n \n[]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 100]\n.\n\n\n-100 <= Node.val <= 100",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 198,
        "slug": "house-robber",
        "url": "https://leetcode.com/problems/house-robber/",
        "titulo": "House Robber",
        "enunciado": "You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and \nit will automatically contact the police if two adjacent houses were broken into on the same night\n.\n\n\nGiven an integer array \nnums\n representing the amount of money of each house, return \nthe maximum amount of money you can rob tonight \nwithout alerting the police\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,1]\n\nOutput:\n 4\n\nExplanation:\n Rob house 1 (money = 1) and then rob house 3 (money = 3).\nTotal amount you can rob = 1 + 3 = 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,7,9,3,1]\n\nOutput:\n 12\n\nExplanation:\n Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\nTotal amount you can rob = 2 + 9 + 1 = 12.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n0 <= nums[i] <= 400",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 189,
        "slug": "rotate-array",
        "url": "https://leetcode.com/problems/rotate-array/",
        "titulo": "Rotate Array",
        "enunciado": "Given an integer array \nnums\n, rotate the array to the right by \nk\n steps, where \nk\n is non-negative.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,4,5,6,7], k = 3\n\nOutput:\n [5,6,7,1,2,3,4]\n\nExplanation:\n\nrotate 1 steps to the right: [7,1,2,3,4,5,6]\nrotate 2 steps to the right: [6,7,1,2,3,4,5]\nrotate 3 steps to the right: [5,6,7,1,2,3,4]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-1,-100,3,99], k = 2\n\nOutput:\n [3,99,-1,-100]\n\nExplanation:\n \nrotate 1 steps to the right: [99,-1,-100,3]\nrotate 2 steps to the right: [3,99,-1,-100]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-2\n31\n <= nums[i] <= 2\n31\n - 1\n\n\n0 <= k <= 10\n5\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nTry to come up with as many solutions as you can. There are at least \nthree\n different ways to solve this problem.\n\n\nCould you do it in-place with \nO(1)\n extra space?",
        "temas": [
            "Array",
            "Math",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 187,
        "slug": "repeated-dna-sequences",
        "url": "https://leetcode.com/problems/repeated-dna-sequences/",
        "titulo": "Repeated DNA Sequences",
        "enunciado": "The \nDNA sequence\n is composed of a series of nucleotides abbreviated as \n'A'\n, \n'C'\n, \n'G'\n, and \n'T'\n.\n\n\n\n\nFor example, \n\"ACGAATTCCG\"\n is a \nDNA sequence\n.\n\n\n\n\nWhen studying \nDNA\n, it is useful to identify repeated sequences within the DNA.\n\n\nGiven a string \ns\n that represents a \nDNA sequence\n, return all the \n10\n-letter-long\n sequences (substrings) that occur more than once in a DNA molecule. You may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT\"\n\nOutput:\n [\"AAAAACCCCC\",\"CCCCCAAAAA\"]\n\nExample 2:\n\n\nInput:\n s = \"AAAAAAAAAAAAA\"\n\nOutput:\n [\"AAAAAAAAAA\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n5\n\n\ns[i]\n is either \n'A'\n, \n'C'\n, \n'G'\n, or \n'T'\n.",
        "temas": [
            "Hash Table",
            "String",
            "Bit Manipulation",
            "Sliding Window",
            "Rolling Hash",
            "Hash Function"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 179,
        "slug": "largest-number",
        "url": "https://leetcode.com/problems/largest-number/",
        "titulo": "Largest Number",
        "enunciado": "Given a list of non-negative integers \nnums\n, arrange them such that they form the largest number and return it.\n\n\nSince the result may be very large, so you need to return a string instead of an integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [10,2]\n\nOutput:\n \"210\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,30,34,5,9]\n\nOutput:\n \"9534330\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "String",
            "Greedy",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 173,
        "slug": "binary-search-tree-iterator",
        "url": "https://leetcode.com/problems/binary-search-tree-iterator/",
        "titulo": "Binary Search Tree Iterator",
        "enunciado": "Implement the \nBSTIterator\n class that represents an iterator over the \nin-order traversal\n of a binary search tree (BST):\n\n\n\n\nBSTIterator(TreeNode root)\n Initializes an object of the \nBSTIterator\n class. The \nroot\n of the BST is given as part of the constructor. The pointer should be initialized to a non-existent number smaller than any element in the BST.\n\n\nboolean hasNext()\n Returns \ntrue\n if there exists a number in the traversal to the right of the pointer, otherwise returns \nfalse\n.\n\n\nint next()\n Moves the pointer to the right, then returns the number at the pointer.\n\n\n\n\nNotice that by initializing the pointer to a non-existent smallest number, the first call to \nnext()\n will return the smallest element in the BST.\n\n\nYou may assume that \nnext()\n calls will always be valid. That is, there will be at least a next number in the in-order traversal when \nnext()\n is called.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput\n\n[\"BSTIterator\", \"next\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\", \"next\", \"hasNext\"]\n[[[7, 3, 15, null, null, 9, 20]], [], [], [], [], [], [], [], [], []]\n\nOutput\n\n[null, 3, 7, true, 9, true, 15, true, 20, false]\n\n\nExplanation\n\nBSTIterator bSTIterator = new BSTIterator([7, 3, 15, null, null, 9, 20]);\nbSTIterator.next();    // return 3\nbSTIterator.next();    // return 7\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 9\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 15\nbSTIterator.hasNext(); // return True\nbSTIterator.next();    // return 20\nbSTIterator.hasNext(); // return False\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n5\n]\n.\n\n\n0 <= Node.val <= 10\n6\n\n\nAt most \n10\n5\n calls will be made to \nhasNext\n, and \nnext\n.\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nCould you implement \nnext()\n and \nhasNext()\n to run in average \nO(1)\n time and use \nO(h)\n memory, where \nh\n is the height of the tree?",
        "temas": [
            "Stack",
            "Tree",
            "Design",
            "Binary Search Tree",
            "Binary Tree",
            "Iterator"
        ],
        "dificuldade": "Média",
        "tema_principal": "Stack",
        "has_image": true
    },
    {
        "id": 172,
        "slug": "factorial-trailing-zeroes",
        "url": "https://leetcode.com/problems/factorial-trailing-zeroes/",
        "titulo": "Factorial Trailing Zeroes",
        "enunciado": "Given an integer \nn\n, return \nthe number of trailing zeroes in \nn!\n.\n\n\nNote that \nn! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 0\n\nExplanation:\n 3! = 6, no trailing zero.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 5\n\nOutput:\n 1\n\nExplanation:\n 5! = 120, one trailing zero.\n\n\n\nExample 3:\n\n\n\n\nInput:\n n = 0\n\nOutput:\n 0\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n Could you write a solution that works in logarithmic time complexity?",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 167,
        "slug": "two-sum-ii-input-array-is-sorted",
        "url": "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/",
        "titulo": "Two Sum II - Input Array Is Sorted",
        "enunciado": "Given a \n1-indexed\n array of integers \nnumbers\n that is already \nsorted in non-decreasing order\n, find two numbers such that they add up to a specific \ntarget\n number. Let these two numbers be \nnumbers[index\n1\n]\n and \nnumbers[index\n2\n]\n where \n1 <= index\n1\n < index\n2\n <= numbers.length\n.\n\n\nReturn\n the indices of the two numbers, \nindex\n1\n and \nindex\n2\n, \nadded by one\n as an integer array \n[index\n1\n, index\n2\n]\n of length 2.\n\n\nThe tests are generated such that there is \nexactly one solution\n. You \nmay not\n use the same element twice.\n\n\nYour solution must use only constant extra space.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n numbers = [\n2\n,\n7\n,11,15], target = 9\n\nOutput:\n [1,2]\n\nExplanation:\n The sum of 2 and 7 is 9. Therefore, index\n1\n = 1, index\n2\n = 2. We return [1, 2].\n\n\n\nExample 2:\n\n\n\n\nInput:\n numbers = [\n2\n,3,\n4\n], target = 6\n\nOutput:\n [1,3]\n\nExplanation:\n The sum of 2 and 4 is 6. Therefore index\n1\n = 1, index\n2\n = 3. We return [1, 3].\n\n\n\nExample 3:\n\n\n\n\nInput:\n numbers = [\n-1\n,\n0\n], target = -1\n\nOutput:\n [1,2]\n\nExplanation:\n The sum of -1 and 0 is -1. Therefore index\n1\n = 1, index\n2\n = 2. We return [1, 2].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n2 <= numbers.length <= 3 * 10\n4\n\n\n-1000 <= numbers[i] <= 1000\n\n\nnumbers\n is sorted in \nnon-decreasing order\n.\n\n\n-1000 <= target <= 1000\n\n\nThe tests are generated such that there is \nexactly one solution\n.",
        "temas": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 166,
        "slug": "fraction-to-recurring-decimal",
        "url": "https://leetcode.com/problems/fraction-to-recurring-decimal/",
        "titulo": "Fraction to Recurring Decimal",
        "enunciado": "Given two integers representing the \nnumerator\n and \ndenominator\n of a fraction, return \nthe fraction in string format\n.\n\n\nIf the fractional part is repeating, enclose the repeating part in parentheses.\n\n\nIf multiple answers are possible, return \nany of them\n.\n\n\nIt is \nguaranteed\n that the length of the answer string is less than \n10\n4\n for all the given inputs.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n numerator = 1, denominator = 2\n\nOutput:\n \"0.5\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n numerator = 2, denominator = 1\n\nOutput:\n \"2\"\n\n\n\nExample 3:\n\n\n\n\nInput:\n numerator = 4, denominator = 333\n\nOutput:\n \"0.(012)\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-2\n31\n <= numerator, denominator <= 2\n31\n - 1\n\n\ndenominator != 0",
        "temas": [
            "Hash Table",
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 165,
        "slug": "compare-version-numbers",
        "url": "https://leetcode.com/problems/compare-version-numbers/",
        "titulo": "Compare Version Numbers",
        "enunciado": "Given two \nversion strings\n, \nversion1\n and \nversion2\n, compare them. A version string consists of \nrevisions\n separated by dots \n'.'\n. The \nvalue of the revision\n is its \ninteger conversion\n ignoring leading zeros.\n\n\nTo compare version strings, compare their revision values in \nleft-to-right order\n. If one of the version strings has fewer revisions, treat the missing revision values as \n0\n.\n\n\nReturn the following:\n\n\n\n\nIf \nversion1 < version2\n, return -1.\n\n\nIf \nversion1 > version2\n, return 1.\n\n\nOtherwise, return 0.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nversion1 = \"1.2\", version2 = \"1.10\"\n\n\nOutput:\n \n-1\n\n\nExplanation:\n\n\nversion1's second revision is \"2\" and version2's second revision is \"10\": 2 < 10, so version1 < version2.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nversion1 = \"1.01\", version2 = \"1.001\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nIgnoring leading zeroes, both \"01\" and \"001\" represent the same integer \"1\".\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nversion1 = \"1.0\", version2 = \"1.0.0.0\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nversion1 has less revisions, which means every missing revision are treated as \"0\".\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= version1.length, version2.length <= 500\n\n\nversion1\n and \nversion2\n only contain digits and \n'.'\n.\n\n\nversion1\n and \nversion2\n \nare valid version numbers\n.\n\n\nAll the given revisions in \nversion1\n and \nversion2\n can be stored in a \n32-bit integer\n.",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 164,
        "slug": "maximum-gap",
        "url": "https://leetcode.com/problems/maximum-gap/",
        "titulo": "Maximum Gap",
        "enunciado": "Given an integer array \nnums\n, return \nthe maximum difference between two successive elements in its sorted form\n. If the array contains less than two elements, return \n0\n.\n\n\nYou must write an algorithm that runs in linear time and uses linear extra space.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,6,9,1]\n\nOutput:\n 3\n\nExplanation:\n The sorted form of the array is [1,3,6,9], either (3,6) or (6,9) has the maximum difference 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [10]\n\nOutput:\n 0\n\nExplanation:\n The array contains less than 2 elements, therefore return 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n0 <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Sorting",
            "Bucket Sort",
            "Radix Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 162,
        "slug": "find-peak-element",
        "url": "https://leetcode.com/problems/find-peak-element/",
        "titulo": "Find Peak Element",
        "enunciado": "A peak element is an element that is strictly greater than its neighbors.\n\n\nGiven a \n0-indexed\n integer array \nnums\n, find a peak element, and return its index. If the array contains multiple peaks, return the index to \nany of the peaks\n.\n\n\nYou may imagine that \nnums[-1] = nums[n] = -∞\n. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.\n\n\nYou must write an algorithm that runs in \nO(log n)\n time.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3,1]\n\nOutput:\n 2\n\nExplanation:\n 3 is a peak element and your function should return the index number 2.\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,1,3,5,6,4]\n\nOutput:\n 5\n\nExplanation:\n Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 1000\n\n\n-2\n31\n <= nums[i] <= 2\n31\n - 1\n\n\nnums[i] != nums[i + 1]\n for all valid \ni\n.",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 155,
        "slug": "min-stack",
        "url": "https://leetcode.com/problems/min-stack/",
        "titulo": "Min Stack",
        "enunciado": "Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.\n\n\nImplement the \nMinStack\n class:\n\n\n\n\nMinStack()\n initializes the stack object.\n\n\nvoid push(int val)\n pushes the element \nval\n onto the stack.\n\n\nvoid pop()\n removes the element on the top of the stack.\n\n\nint top()\n gets the top element of the stack.\n\n\nint getMin()\n retrieves the minimum element in the stack.\n\n\n\n\nYou must implement a solution with \nO(1)\n time complexity for each function.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"MinStack\",\"push\",\"push\",\"push\",\"getMin\",\"pop\",\"top\",\"getMin\"]\n[[],[-2],[0],[-3],[],[],[],[]]\n\n\nOutput\n\n[null,null,null,null,-3,null,0,-2]\n\n\nExplanation\n\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin(); // return -3\nminStack.pop();\nminStack.top();    // return 0\nminStack.getMin(); // return -2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-2\n31\n <= val <= 2\n31\n - 1\n\n\nMethods \npop\n, \ntop\n and \ngetMin\n operations will always be called on \nnon-empty\n stacks.\n\n\nAt most \n3 * 10\n4\n calls will be made to \npush\n, \npop\n, \ntop\n, and \ngetMin\n.",
        "temas": [
            "Stack",
            "Design"
        ],
        "dificuldade": "Média",
        "tema_principal": "Stack",
        "has_image": false
    },
    {
        "id": 153,
        "slug": "find-minimum-in-rotated-sorted-array",
        "url": "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/",
        "titulo": "Find Minimum in Rotated Sorted Array",
        "enunciado": "Suppose an array of length \nn\n sorted in ascending order is \nrotated\n between \n1\n and \nn\n times. For example, the array \nnums = [0,1,2,4,5,6,7]\n might become:\n\n\n\n\n[4,5,6,7,0,1,2]\n if it was rotated \n4\n times.\n\n\n[0,1,2,4,5,6,7]\n if it was rotated \n7\n times.\n\n\n\n\nNotice that \nrotating\n an array \n[a[0], a[1], a[2], ..., a[n-1]]\n 1 time results in the array \n[a[n-1], a[0], a[1], a[2], ..., a[n-2]]\n.\n\n\nGiven the sorted rotated array \nnums\n of \nunique\n elements, return \nthe minimum element of this array\n.\n\n\nYou must write an algorithm that runs in \nO(log n) time\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [3,4,5,1,2]\n\nOutput:\n 1\n\nExplanation:\n The original array was [1,2,3,4,5] rotated 3 times.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [4,5,6,7,0,1,2]\n\nOutput:\n 0\n\nExplanation:\n The original array was [0,1,2,4,5,6,7] and it was rotated 4 times.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [11,13,15,17]\n\nOutput:\n 11\n\nExplanation:\n The original array was [11,13,15,17] and it was rotated 4 times. \n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 5000\n\n\n-5000 <= nums[i] <= 5000\n\n\nAll the integers of \nnums\n are \nunique\n.\n\n\nnums\n is sorted and rotated between \n1\n and \nn\n times.",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 152,
        "slug": "maximum-product-subarray",
        "url": "https://leetcode.com/problems/maximum-product-subarray/",
        "titulo": "Maximum Product Subarray",
        "enunciado": "Given an integer array \nnums\n, find a \nsubarray\n that has the largest product, and return \nthe product\n.\n\n\nThe test cases are generated so that the answer will fit in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,-2,4]\n\nOutput:\n 6\n\nExplanation:\n [2,3] has the largest product 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [-2,0,-1]\n\nOutput:\n 0\n\nExplanation:\n The result cannot be 2, because [-2,-1] is not a subarray.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 2 * 10\n4\n\n\n-10 <= nums[i] <= 10\n\n\nThe product of any subarray of \nnums\n is \nguaranteed\n to fit in a \n32-bit\n integer.",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 151,
        "slug": "reverse-words-in-a-string",
        "url": "https://leetcode.com/problems/reverse-words-in-a-string/",
        "titulo": "Reverse Words in a String",
        "enunciado": "Given an input string \ns\n, reverse the order of the \nwords\n.\n\n\nA \nword\n is defined as a sequence of non-space characters. The \nwords\n in \ns\n will be separated by at least one space.\n\n\nReturn \na string of the words in reverse order concatenated by a single space.\n\n\nNote\n that \ns\n may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"the sky is blue\"\n\nOutput:\n \"blue is sky the\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"  hello world  \"\n\nOutput:\n \"world hello\"\n\nExplanation:\n Your reversed string should not contain leading or trailing spaces.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"a good   example\"\n\nOutput:\n \"example good a\"\n\nExplanation:\n You need to reduce multiple spaces between two words to a single space in the reversed string.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 10\n4\n\n\ns\n contains English letters (upper-case and lower-case), digits, and spaces \n' '\n.\n\n\nThere is \nat least one\n word in \ns\n.\n\n\n\n\n \n\n\nFollow-up: \nIf the string data type is mutable in your language, can you solve it \nin-place\n with \nO(1)\n extra space?",
        "temas": [
            "Two Pointers",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 150,
        "slug": "evaluate-reverse-polish-notation",
        "url": "https://leetcode.com/problems/evaluate-reverse-polish-notation/",
        "titulo": "Evaluate Reverse Polish Notation",
        "enunciado": "You are given an array of strings \ntokens\n that represents an arithmetic expression in a \nReverse Polish Notation\n.\n\n\nEvaluate the expression. Return \nan integer that represents the value of the expression\n.\n\n\nNote\n that:\n\n\n\n\nThe valid operators are \n'+'\n, \n'-'\n, \n'*'\n, and \n'/'\n.\n\n\nEach operand may be an integer or another expression.\n\n\nThe division between two integers always \ntruncates toward zero\n.\n\n\nThere will not be any division by zero.\n\n\nThe input represents a valid arithmetic expression in a reverse polish notation.\n\n\nThe answer and all the intermediate calculations can be represented in a \n32-bit\n integer.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n tokens = [\"2\",\"1\",\"+\",\"3\",\"*\"]\n\nOutput:\n 9\n\nExplanation:\n ((2 + 1) * 3) = 9\n\n\n\nExample 2:\n\n\n\n\nInput:\n tokens = [\"4\",\"13\",\"5\",\"/\",\"+\"]\n\nOutput:\n 6\n\nExplanation:\n (4 + (13 / 5)) = 6\n\n\n\nExample 3:\n\n\n\n\nInput:\n tokens = [\"10\",\"6\",\"9\",\"3\",\"+\",\"-11\",\"*\",\"/\",\"*\",\"17\",\"+\",\"5\",\"+\"]\n\nOutput:\n 22\n\nExplanation:\n ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= tokens.length <= 10\n4\n\n\ntokens[i]\n is either an operator: \n\"+\"\n, \n\"-\"\n, \n\"*\"\n, or \n\"/\"\n, or an integer in the range \n[-200, 200]\n.",
        "temas": [
            "Array",
            "Math",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 148,
        "slug": "sort-list",
        "url": "https://leetcode.com/problems/sort-list/",
        "titulo": "Sort List",
        "enunciado": "Given the \nhead\n of a linked list, return \nthe list after sorting it in \nascending order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [4,2,1,3]\n\nOutput:\n [1,2,3,4]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [-1,5,3,4,0]\n\nOutput:\n [-1,0,3,4,5]\n\n\n\nExample 3:\n\n\n\n\nInput:\n head = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[0, 5 * 10\n4\n]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5\n\n\n\n\n \n\n\nFollow up:\n Can you sort the linked list in \nO(n logn)\n time and \nO(1)\n memory (i.e. constant space)?",
        "temas": [
            "Linked List",
            "Two Pointers",
            "Divide and Conquer",
            "Sorting",
            "Merge Sort"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 147,
        "slug": "insertion-sort-list",
        "url": "https://leetcode.com/problems/insertion-sort-list/",
        "titulo": "Insertion Sort List",
        "enunciado": "Given the \nhead\n of a singly linked list, sort the list using \ninsertion sort\n, and return \nthe sorted list's head\n.\n\n\nThe steps of the \ninsertion sort\n algorithm:\n\n\n\n\nInsertion sort iterates, consuming one input element each repetition and growing a sorted output list.\n\n\nAt each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list and inserts it there.\n\n\nIt repeats until no input elements remain.\n\n\n\n\nThe following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [4,2,1,3]\n\nOutput:\n [1,2,3,4]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [-1,5,3,4,0]\n\nOutput:\n [-1,0,3,4,5]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[1, 5000]\n.\n\n\n-5000 <= Node.val <= 5000",
        "temas": [
            "Linked List",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 146,
        "slug": "lru-cache",
        "url": "https://leetcode.com/problems/lru-cache/",
        "titulo": "LRU Cache",
        "enunciado": "Design a data structure that follows the constraints of a \nLeast Recently Used (LRU) cache\n.\n\n\nImplement the \nLRUCache\n class:\n\n\n\n\nLRUCache(int capacity)\n Initialize the LRU cache with \npositive\n size \ncapacity\n.\n\n\nint get(int key)\n Return the value of the \nkey\n if the key exists, otherwise return \n-1\n.\n\n\nvoid put(int key, int value)\n Update the value of the \nkey\n if the \nkey\n exists. Otherwise, add the \nkey-value\n pair to the cache. If the number of keys exceeds the \ncapacity\n from this operation, \nevict\n the least recently used key.\n\n\n\n\nThe functions \nget\n and \nput\n must each run in \nO(1)\n average time complexity.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput\n\n[\"LRUCache\", \"put\", \"put\", \"get\", \"put\", \"get\", \"put\", \"get\", \"get\", \"get\"]\n[[2], [1, 1], [2, 2], [1], [3, 3], [2], [4, 4], [1], [3], [4]]\n\nOutput\n\n[null, null, null, 1, null, -1, null, -1, 3, 4]\n\n\nExplanation\n\nLRUCache lRUCache = new LRUCache(2);\nlRUCache.put(1, 1); // cache is {1=1}\nlRUCache.put(2, 2); // cache is {1=1, 2=2}\nlRUCache.get(1);    // return 1\nlRUCache.put(3, 3); // LRU key was 2, evicts key 2, cache is {1=1, 3=3}\nlRUCache.get(2);    // returns -1 (not found)\nlRUCache.put(4, 4); // LRU key was 1, evicts key 1, cache is {4=4, 3=3}\nlRUCache.get(1);    // return -1 (not found)\nlRUCache.get(3);    // return 3\nlRUCache.get(4);    // return 4\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= capacity <= 3000\n\n\n0 <= key <= 10\n4\n\n\n0 <= value <= 10\n5\n\n\nAt most \n2 * 10\n5\n calls will be made to \nget\n and \nput\n.",
        "temas": [
            "Hash Table",
            "Linked List",
            "Design",
            "Doubly-Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 143,
        "slug": "reorder-list",
        "url": "https://leetcode.com/problems/reorder-list/",
        "titulo": "Reorder List",
        "enunciado": "You are given the head of a singly linked-list. The list can be represented as:\n\n\n\nL\n0\n → L\n1\n → … → L\nn - 1\n → L\nn\n\n\n\n\nReorder the list to be on the following form:\n\n\n\nL\n0\n → L\nn\n → L\n1\n → L\nn - 1\n → L\n2\n → L\nn - 2\n → …\n\n\n\nYou may not modify the values in the list's nodes. Only nodes themselves may be changed.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4]\n\nOutput:\n [1,4,2,3]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5]\n\nOutput:\n [1,5,2,4,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[1, 5 * 10\n4\n]\n.\n\n\n1 <= Node.val <= 1000",
        "temas": [
            "Linked List",
            "Two Pointers",
            "Stack",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 142,
        "slug": "linked-list-cycle-ii",
        "url": "https://leetcode.com/problems/linked-list-cycle-ii/",
        "titulo": "Linked List Cycle II",
        "enunciado": "Given the \nhead\n of a linked list, return \nthe node where the cycle begins. If there is no cycle, return \nnull\n.\n\n\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the \nnext\n pointer. Internally, \npos\n is used to denote the index of the node that tail's \nnext\n pointer is connected to (\n0-indexed\n). It is \n-1\n if there is no cycle. \nNote that\n \npos\n \nis not passed as a parameter\n.\n\n\nDo not modify\n the linked list.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [3,2,0,-4], pos = 1\n\nOutput:\n tail connects to node index 1\n\nExplanation:\n There is a cycle in the linked list, where tail connects to the second node.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,2], pos = 0\n\nOutput:\n tail connects to node index 0\n\nExplanation:\n There is a cycle in the linked list, where tail connects to the first node.\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n head = [1], pos = -1\n\nOutput:\n no cycle\n\nExplanation:\n There is no cycle in the linked list.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of the nodes in the list is in the range \n[0, 10\n4\n]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5\n\n\npos\n is \n-1\n or a \nvalid index\n in the linked-list.\n\n\n\n\n \n\n\nFollow up:\n Can you solve it using \nO(1)\n (i.e. constant) memory?",
        "temas": [
            "Hash Table",
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 139,
        "slug": "word-break",
        "url": "https://leetcode.com/problems/word-break/",
        "titulo": "Word Break",
        "enunciado": "Given a string \ns\n and a dictionary of strings \nwordDict\n, return \ntrue\n if \ns\n can be segmented into a space-separated sequence of one or more dictionary words.\n\n\nNote\n that the same word in the dictionary may be reused multiple times in the segmentation.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"leetcode\", wordDict = [\"leet\",\"code\"]\n\nOutput:\n true\n\nExplanation:\n Return true because \"leetcode\" can be segmented as \"leet code\".\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"applepenapple\", wordDict = [\"apple\",\"pen\"]\n\nOutput:\n true\n\nExplanation:\n Return true because \"applepenapple\" can be segmented as \"apple pen apple\".\nNote that you are allowed to reuse a dictionary word.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"catsandog\", wordDict = [\"cats\",\"dog\",\"sand\",\"and\",\"cat\"]\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 300\n\n\n1 <= wordDict.length <= 1000\n\n\n1 <= wordDict[i].length <= 20\n\n\ns\n and \nwordDict[i]\n consist of only lowercase English letters.\n\n\nAll the strings of \nwordDict\n are \nunique\n.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Dynamic Programming",
            "Trie",
            "Memoization"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 138,
        "slug": "copy-list-with-random-pointer",
        "url": "https://leetcode.com/problems/copy-list-with-random-pointer/",
        "titulo": "Copy List with Random Pointer",
        "enunciado": "A linked list of length \nn\n is given such that each node contains an additional random pointer, which could point to any node in the list, or \nnull\n.\n\n\nConstruct a \ndeep copy\n of the list. The deep copy should consist of exactly \nn\n \nbrand new\n nodes, where each new node has its value set to the value of its corresponding original node. Both the \nnext\n and \nrandom\n pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. \nNone of the pointers in the new list should point to nodes in the original list\n.\n\n\nFor example, if there are two nodes \nX\n and \nY\n in the original list, where \nX.random --> Y\n, then for the corresponding two nodes \nx\n and \ny\n in the copied list, \nx.random --> y\n.\n\n\nReturn \nthe head of the copied linked list\n.\n\n\nThe linked list is represented in the input/output as a list of \nn\n nodes. Each node is represented as a pair of \n[val, random_index]\n where:\n\n\n\n\nval\n: an integer representing \nNode.val\n\n\nrandom_index\n: the index of the node (range from \n0\n to \nn-1\n) that the \nrandom\n pointer points to, or \nnull\n if it does not point to any node.\n\n\n\n\nYour code will \nonly\n be given the \nhead\n of the original linked list.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [[7,null],[13,0],[11,4],[10,2],[1,0]]\n\nOutput:\n [[7,null],[13,0],[11,4],[10,2],[1,0]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [[1,1],[2,1]]\n\nOutput:\n [[1,1],[2,1]]\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n head = [[3,null],[3,0],[3,null]]\n\nOutput:\n [[3,null],[3,0],[3,null]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= n <= 1000\n\n\n-10\n4\n <= Node.val <= 10\n4\n\n\nNode.random\n is \nnull\n or is pointing to some node in the linked list.",
        "temas": [
            "Hash Table",
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 137,
        "slug": "single-number-ii",
        "url": "https://leetcode.com/problems/single-number-ii/",
        "titulo": "Single Number II",
        "enunciado": "Given an integer array \nnums\n where every element appears \nthree times\n except for one, which appears \nexactly once\n. \nFind the single element and return it\n.\n\n\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [2,2,3,2]\n\nOutput:\n 3\n\nExample 2:\n\n\nInput:\n nums = [0,1,0,1,0,1,99]\n\nOutput:\n 99\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\n-2\n31\n <= nums[i] <= 2\n31\n - 1\n\n\nEach element in \nnums\n appears exactly \nthree times\n except for one element which appears \nonce\n.",
        "temas": [
            "Array",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 134,
        "slug": "gas-station",
        "url": "https://leetcode.com/problems/gas-station/",
        "titulo": "Gas Station",
        "enunciado": "There are \nn\n gas stations along a circular route, where the amount of gas at the \ni\nth\n station is \ngas[i]\n.\n\n\nYou have a car with an unlimited gas tank and it costs \ncost[i]\n of gas to travel from the \ni\nth\n station to its next \n(i + 1)\nth\n station. You begin the journey with an empty tank at one of the gas stations.\n\n\nGiven two integer arrays \ngas\n and \ncost\n, return \nthe starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return\n \n-1\n. If there exists a solution, it is \nguaranteed\n to be \nunique\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n gas = [1,2,3,4,5], cost = [3,4,5,1,2]\n\nOutput:\n 3\n\nExplanation:\n\nStart at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.\n\n\n\nExample 2:\n\n\n\n\nInput:\n gas = [2,3,4], cost = [3,4,3]\n\nOutput:\n -1\n\nExplanation:\n\nYou can't start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet's start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can't travel around the circuit once no matter where you start.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == gas.length == cost.length\n\n\n1 <= n <= 10\n5\n\n\n0 <= gas[i], cost[i] <= 10\n4\n\n\nThe input is generated such that the answer is unique.",
        "temas": [
            "Array",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 133,
        "slug": "clone-graph",
        "url": "https://leetcode.com/problems/clone-graph/",
        "titulo": "Clone Graph",
        "enunciado": "Given a reference of a node in a \nconnected\n undirected graph.\n\n\nReturn a \ndeep copy\n (clone) of the graph.\n\n\nEach node in the graph contains a value (\nint\n) and a list (\nList[Node]\n) of its neighbors.\n\n\n\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n}\n\n\n\n \n\n\nTest case format:\n\n\nFor simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with \nval == 1\n, the second node with \nval == 2\n, and so on. The graph is represented in the test case using an adjacency list.\n\n\nAn adjacency list\n is a collection of unordered \nlists\n used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.\n\n\nThe given node will always be the first node with \nval = 1\n. You must return the \ncopy of the given node\n as a reference to the cloned graph.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n adjList = [[2,4],[1,3],[2,4],[1,3]]\n\nOutput:\n [[2,4],[1,3],[2,4],[1,3]]\n\nExplanation:\n There are 4 nodes in the graph.\n1st node (val = 1)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n2nd node (val = 2)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n3rd node (val = 3)'s neighbors are 2nd node (val = 2) and 4th node (val = 4).\n4th node (val = 4)'s neighbors are 1st node (val = 1) and 3rd node (val = 3).\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n adjList = [[]]\n\nOutput:\n [[]]\n\nExplanation:\n Note that the input contains one empty list. The graph consists of only one node with val = 1 and it does not have any neighbors.\n\n\n\nExample 3:\n\n\n\n\nInput:\n adjList = []\n\nOutput:\n []\n\nExplanation:\n This an empty graph, it does not have any nodes.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the graph is in the range \n[0, 100]\n.\n\n\n1 <= Node.val <= 100\n\n\nNode.val\n is unique for each node.\n\n\nThere are no repeated edges and no self-loops in the graph.\n\n\nThe Graph is connected and all nodes can be visited starting from the given node.",
        "temas": [
            "Hash Table",
            "Depth-First Search",
            "Breadth-First Search",
            "Graph"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 131,
        "slug": "palindrome-partitioning",
        "url": "https://leetcode.com/problems/palindrome-partitioning/",
        "titulo": "Palindrome Partitioning",
        "enunciado": "Given a string \ns\n, partition \ns\n such that every \nsubstring\n of the partition is a \npalindrome\n. Return \nall possible palindrome partitioning of \ns\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n s = \"aab\"\n\nOutput:\n [[\"a\",\"a\",\"b\"],[\"aa\",\"b\"]]\n\nExample 2:\n\n\nInput:\n s = \"a\"\n\nOutput:\n [[\"a\"]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 16\n\n\ns\n contains only lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 130,
        "slug": "surrounded-regions",
        "url": "https://leetcode.com/problems/surrounded-regions/",
        "titulo": "Surrounded Regions",
        "enunciado": "You are given an \nm x n\n matrix \nboard\n containing \nletters\n \n'X'\n and \n'O'\n, \ncapture regions\n that are \nsurrounded\n:\n\n\n\n\nConnect\n: A cell is connected to adjacent cells horizontally or vertically.\n\n\nRegion\n: To form a region \nconnect every\n \n'O'\n cell.\n\n\nSurround\n: The region is surrounded with \n'X'\n cells if you can \nconnect the region \nwith \n'X'\n cells and none of the region cells are on the edge of the \nboard\n.\n\n\n\n\nTo capture a \nsurrounded region\n, replace all \n'O'\ns with \n'X'\ns \nin-place\n within the original board. You do not need to return anything.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nboard = [[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"O\",\"X\"],[\"X\",\"X\",\"O\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n\n\nOutput:\n \n[[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"X\",\"X\",\"X\"],[\"X\",\"O\",\"X\",\"X\"]]\n\n\nExplanation:\n\n\n\n\nIn the above diagram, the bottom region is not captured because it is on the edge of the board and cannot be surrounded.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nboard = [[\"X\"]]\n\n\nOutput:\n \n[[\"X\"]]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == board.length\n\n\nn == board[i].length\n\n\n1 <= m, n <= 200\n\n\nboard[i][j]\n is \n'X'\n or \n'O'\n.",
        "temas": [
            "Array",
            "Depth-First Search",
            "Breadth-First Search",
            "Union Find",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 129,
        "slug": "sum-root-to-leaf-numbers",
        "url": "https://leetcode.com/problems/sum-root-to-leaf-numbers/",
        "titulo": "Sum Root to Leaf Numbers",
        "enunciado": "You are given the \nroot\n of a binary tree containing digits from \n0\n to \n9\n only.\n\n\nEach root-to-leaf path in the tree represents a number.\n\n\n\n\nFor example, the root-to-leaf path \n1 -> 2 -> 3\n represents the number \n123\n.\n\n\n\n\nReturn \nthe total sum of all root-to-leaf numbers\n. Test cases are generated so that the answer will fit in a \n32-bit\n integer.\n\n\nA \nleaf\n node is a node with no children.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3]\n\nOutput:\n 25\n\nExplanation:\n\nThe root-to-leaf path \n1->2\n represents the number \n12\n.\nThe root-to-leaf path \n1->3\n represents the number \n13\n.\nTherefore, sum = 12 + 13 = \n25\n.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [4,9,0,5,1]\n\nOutput:\n 1026\n\nExplanation:\n\nThe root-to-leaf path \n4->9->5\n represents the number 495.\nThe root-to-leaf path \n4->9->1\n represents the number 491.\nThe root-to-leaf path \n4->0\n represents the number 40.\nTherefore, sum = 495 + 491 + 40 = \n1026\n.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 1000]\n.\n\n\n0 <= Node.val <= 9\n\n\nThe depth of the tree will not exceed \n10\n.",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 128,
        "slug": "longest-consecutive-sequence",
        "url": "https://leetcode.com/problems/longest-consecutive-sequence/",
        "titulo": "Longest Consecutive Sequence",
        "enunciado": "Given an unsorted array of integers \nnums\n, return \nthe length of the longest consecutive elements sequence.\n\n\nYou must write an algorithm that runs in \nO(n)\n time.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [100,4,200,1,3,2]\n\nOutput:\n 4\n\nExplanation:\n The longest consecutive elements sequence is \n[1, 2, 3, 4]\n. Therefore its length is 4.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,3,7,2,5,8,4,6,0,1]\n\nOutput:\n 9\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,0,1,2]\n\nOutput:\n 3\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9",
        "temas": [
            "Array",
            "Hash Table",
            "Union Find"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 122,
        "slug": "best-time-to-buy-and-sell-stock-ii",
        "url": "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/",
        "titulo": "Best Time to Buy and Sell Stock II",
        "enunciado": "You are given an integer array \nprices\n where \nprices[i]\n is the price of a given stock on the \ni\nth\n day.\n\n\nOn each day, you may decide to buy and/or sell the stock. You can only hold \nat most one\n share of the stock at any time. However, you can buy it then immediately sell it on the \nsame day\n.\n\n\nFind and return \nthe \nmaximum\n profit you can achieve\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n prices = [7,1,5,3,6,4]\n\nOutput:\n 7\n\nExplanation:\n Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\nTotal profit is 4 + 3 = 7.\n\n\n\nExample 2:\n\n\n\n\nInput:\n prices = [1,2,3,4,5]\n\nOutput:\n 4\n\nExplanation:\n Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\nTotal profit is 4.\n\n\n\nExample 3:\n\n\n\n\nInput:\n prices = [7,6,4,3,1]\n\nOutput:\n 0\n\nExplanation:\n There is no way to make a positive profit, so we never buy the stock to achieve the maximum profit of 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= prices.length <= 3 * 10\n4\n\n\n0 <= prices[i] <= 10\n4",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 120,
        "slug": "triangle",
        "url": "https://leetcode.com/problems/triangle/",
        "titulo": "Triangle",
        "enunciado": "Given a \ntriangle\n array, return \nthe minimum path sum from top to bottom\n.\n\n\nFor each step, you may move to an adjacent number of the row below. More formally, if you are on index \ni\n on the current row, you may move to either index \ni\n or index \ni + 1\n on the next row.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n triangle = [[2],[3,4],[6,5,7],[4,1,8,3]]\n\nOutput:\n 11\n\nExplanation:\n The triangle looks like:\n   \n2\n\n  \n3\n 4\n 6 \n5\n 7\n4 \n1\n 8 3\nThe minimum path sum from top to bottom is 2 + 3 + 5 + 1 = 11 (underlined above).\n\n\n\nExample 2:\n\n\n\n\nInput:\n triangle = [[-10]]\n\nOutput:\n -10\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= triangle.length <= 200\n\n\ntriangle[0].length == 1\n\n\ntriangle[i].length == triangle[i - 1].length + 1\n\n\n-10\n4\n <= triangle[i][j] <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n Could you do this using only \nO(n)\n extra space, where \nn\n is the total number of rows in the triangle?",
        "temas": [
            "Array",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 117,
        "slug": "populating-next-right-pointers-in-each-node-ii",
        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/",
        "titulo": "Populating Next Right Pointers in Each Node II",
        "enunciado": "Given a binary tree\n\n\n\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n\n\n\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to \nNULL\n.\n\n\nInitially, all next pointers are set to \nNULL\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,null,7]\n\nOutput:\n [1,#,2,3,#,4,5,7,#]\n\nExplanation: \nGiven the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 6000]\n.\n\n\n-100 <= Node.val <= 100\n\n\n\n\n \n\n\nFollow-up:\n\n\n\n\nYou may only use constant extra space.\n\n\nThe recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.",
        "temas": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 116,
        "slug": "populating-next-right-pointers-in-each-node",
        "url": "https://leetcode.com/problems/populating-next-right-pointers-in-each-node/",
        "titulo": "Populating Next Right Pointers in Each Node",
        "enunciado": "You are given a \nperfect binary tree\n where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:\n\n\n\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n\n\n\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to \nNULL\n.\n\n\nInitially, all next pointers are set to \nNULL\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,3,4,5,6,7]\n\nOutput:\n [1,#,2,3,#,4,5,6,7,#]\n\nExplanation: \nGiven the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with '#' signifying the end of each level.\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 2\n12\n - 1]\n.\n\n\n-1000 <= Node.val <= 1000\n\n\n\n\n \n\n\nFollow-up:\n\n\n\n\nYou may only use constant extra space.\n\n\nThe recursive approach is fine. You may assume implicit stack space does not count as extra space for this problem.",
        "temas": [
            "Linked List",
            "Tree",
            "Depth-First Search",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 114,
        "slug": "flatten-binary-tree-to-linked-list",
        "url": "https://leetcode.com/problems/flatten-binary-tree-to-linked-list/",
        "titulo": "Flatten Binary Tree to Linked List",
        "enunciado": "Given the \nroot\n of a binary tree, flatten the tree into a \"linked list\":\n\n\n\n\nThe \"linked list\" should use the same \nTreeNode\n class where the \nright\n child pointer points to the next node in the list and the \nleft\n child pointer is always \nnull\n.\n\n\nThe \"linked list\" should be in the same order as a \npre-order\n traversal\n of the binary tree.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,2,5,3,4,null,6]\n\nOutput:\n [1,null,2,null,3,null,4,null,5,null,6]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [0]\n\nOutput:\n [0]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 2000]\n.\n\n\n-100 <= Node.val <= 100\n\n\n\n\n \n\n\nFollow up:\n Can you flatten the tree in-place (with \nO(1)\n extra space)?",
        "temas": [
            "Linked List",
            "Stack",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 113,
        "slug": "path-sum-ii",
        "url": "https://leetcode.com/problems/path-sum-ii/",
        "titulo": "Path Sum II",
        "enunciado": "Given the \nroot\n of a binary tree and an integer \ntargetSum\n, return \nall \nroot-to-leaf\n paths where the sum of the node values in the path equals \ntargetSum\n. Each path should be returned as a list of the node \nvalues\n, not node references\n.\n\n\nA \nroot-to-leaf\n path is a path starting from the root and ending at any leaf node. A \nleaf\n is a node with no children.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\n\nOutput:\n [[5,4,11,2],[5,8,4,5]]\n\nExplanation:\n There are two paths whose sum equals targetSum:\n5 + 4 + 11 + 2 = 22\n5 + 8 + 4 + 5 = 22\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [1,2,3], targetSum = 5\n\nOutput:\n []\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = [1,2], targetSum = 0\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 5000]\n.\n\n\n-1000 <= Node.val <= 1000\n\n\n-1000 <= targetSum <= 1000",
        "temas": [
            "Backtracking",
            "Tree",
            "Depth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Backtracking",
        "has_image": true
    },
    {
        "id": 109,
        "slug": "convert-sorted-list-to-binary-search-tree",
        "url": "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree/",
        "titulo": "Convert Sorted List to Binary Search Tree",
        "enunciado": "Given the \nhead\n of a singly linked list where elements are sorted in \nascending order\n, convert \nit to a \nheight-balanced\n \nbinary search tree\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [-10,-3,0,5,9]\n\nOutput:\n [0,-3,9,-10,null,5]\n\nExplanation:\n One possible answer is [0,-3,9,-10,null,5], which represents the shown height balanced BST.\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in \nhead\n is in the range \n[0, 2 * 10\n4\n]\n.\n\n\n-10\n5\n <= Node.val <= 10\n5",
        "temas": [
            "Linked List",
            "Divide and Conquer",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 107,
        "slug": "binary-tree-level-order-traversal-ii",
        "url": "https://leetcode.com/problems/binary-tree-level-order-traversal-ii/",
        "titulo": "Binary Tree Level Order Traversal II",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe bottom-up level order traversal of its nodes' values\n. (i.e., from left to right, level by level from leaf to root).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,9,20,null,null,15,7]\n\nOutput:\n [[15,7],[9,20],[3]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n [[1]]\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 2000]\n.\n\n\n-1000 <= Node.val <= 1000",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 106,
        "slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal/",
        "titulo": "Construct Binary Tree from Inorder and Postorder Traversal",
        "enunciado": "Given two integer arrays \ninorder\n and \npostorder\n where \ninorder\n is the inorder traversal of a binary tree and \npostorder\n is the postorder traversal of the same tree, construct and return \nthe binary tree\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n inorder = [9,3,15,20,7], postorder = [9,15,7,20,3]\n\nOutput:\n [3,9,20,null,null,15,7]\n\n\n\nExample 2:\n\n\n\n\nInput:\n inorder = [-1], postorder = [-1]\n\nOutput:\n [-1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= inorder.length <= 3000\n\n\npostorder.length == inorder.length\n\n\n-3000 <= inorder[i], postorder[i] <= 3000\n\n\ninorder\n and \npostorder\n consist of \nunique\n values.\n\n\nEach value of \npostorder\n also appears in \ninorder\n.\n\n\ninorder\n is \nguaranteed\n to be the inorder traversal of the tree.\n\n\npostorder\n is \nguaranteed\n to be the postorder traversal of the tree.",
        "temas": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 105,
        "slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "url": "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/",
        "titulo": "Construct Binary Tree from Preorder and Inorder Traversal",
        "enunciado": "Given two integer arrays \npreorder\n and \ninorder\n where \npreorder\n is the preorder traversal of a binary tree and \ninorder\n is the inorder traversal of the same tree, construct and return \nthe binary tree\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n preorder = [3,9,20,15,7], inorder = [9,3,15,20,7]\n\nOutput:\n [3,9,20,null,null,15,7]\n\n\n\nExample 2:\n\n\n\n\nInput:\n preorder = [-1], inorder = [-1]\n\nOutput:\n [-1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= preorder.length <= 3000\n\n\ninorder.length == preorder.length\n\n\n-3000 <= preorder[i], inorder[i] <= 3000\n\n\npreorder\n and \ninorder\n consist of \nunique\n values.\n\n\nEach value of \ninorder\n also appears in \npreorder\n.\n\n\npreorder\n is \nguaranteed\n to be the preorder traversal of the tree.\n\n\ninorder\n is \nguaranteed\n to be the inorder traversal of the tree.",
        "temas": [
            "Array",
            "Hash Table",
            "Divide and Conquer",
            "Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 103,
        "slug": "binary-tree-zigzag-level-order-traversal",
        "url": "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/",
        "titulo": "Binary Tree Zigzag Level Order Traversal",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe zigzag level order traversal of its nodes' values\n. (i.e., from left to right, then right to left for the next level and alternate between).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,9,20,null,null,15,7]\n\nOutput:\n [[3],[20,9],[15,7]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n [[1]]\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 2000]\n.\n\n\n-100 <= Node.val <= 100",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 102,
        "slug": "binary-tree-level-order-traversal",
        "url": "https://leetcode.com/problems/binary-tree-level-order-traversal/",
        "titulo": "Binary Tree Level Order Traversal",
        "enunciado": "Given the \nroot\n of a binary tree, return \nthe level order traversal of its nodes' values\n. (i.e., from left to right, level by level).\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [3,9,20,null,null,15,7]\n\nOutput:\n [[3],[9,20],[15,7]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n root = [1]\n\nOutput:\n [[1]]\n\n\n\nExample 3:\n\n\n\n\nInput:\n root = []\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[0, 2000]\n.\n\n\n-1000 <= Node.val <= 1000",
        "temas": [
            "Tree",
            "Breadth-First Search",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 99,
        "slug": "recover-binary-search-tree",
        "url": "https://leetcode.com/problems/recover-binary-search-tree/",
        "titulo": "Recover Binary Search Tree",
        "enunciado": "You are given the \nroot\n of a binary search tree (BST), where the values of \nexactly\n two nodes of the tree were swapped by mistake. \nRecover the tree without changing its structure\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [1,3,null,null,2]\n\nOutput:\n [3,1,null,null,2]\n\nExplanation:\n 3 cannot be a left child of 1 because 3 > 1. Swapping 1 and 3 makes the BST valid.\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [3,1,4,null,null,2]\n\nOutput:\n [2,1,4,null,null,3]\n\nExplanation:\n 2 cannot be in the right subtree of 3 because 2 < 3. Swapping 2 and 3 makes the BST valid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[2, 1000]\n.\n\n\n-2\n31\n <= Node.val <= 2\n31\n - 1\n\n\n\n\n \n\n\nFollow up:\n A solution using \nO(n)\n space is pretty straight-forward. Could you devise a constant \nO(1)\n space solution?",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 98,
        "slug": "validate-binary-search-tree",
        "url": "https://leetcode.com/problems/validate-binary-search-tree/",
        "titulo": "Validate Binary Search Tree",
        "enunciado": "Given the \nroot\n of a binary tree, \ndetermine if it is a valid binary search tree (BST)\n.\n\n\nA \nvalid BST\n is defined as follows:\n\n\n\n\nThe left \nsubtree\n of a node contains only nodes with keys \nless than\n the node's key.\n\n\nThe right subtree of a node contains only nodes with keys \ngreater than\n the node's key.\n\n\nBoth the left and right subtrees must also be binary search trees.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n root = [2,1,3]\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n root = [5,1,4,null,null,3,6]\n\nOutput:\n false\n\nExplanation:\n The root node's value is 5 but its right child's value is 4.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the tree is in the range \n[1, 10\n4\n]\n.\n\n\n-2\n31\n <= Node.val <= 2\n31\n - 1",
        "temas": [
            "Tree",
            "Depth-First Search",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Tree",
        "has_image": true
    },
    {
        "id": 97,
        "slug": "interleaving-string",
        "url": "https://leetcode.com/problems/interleaving-string/",
        "titulo": "Interleaving String",
        "enunciado": "Given strings \ns1\n, \ns2\n, and \ns3\n, find whether \ns3\n is formed by an \ninterleaving\n of \ns1\n and \ns2\n.\n\n\nAn \ninterleaving\n of two strings \ns\n and \nt\n is a configuration where \ns\n and \nt\n are divided into \nn\n and \nm\n \nsubstrings\n respectively, such that:\n\n\n\n\ns = s\n1\n + s\n2\n + ... + s\nn\n\n\nt = t\n1\n + t\n2\n + ... + t\nm\n\n\n|n - m| <= 1\n\n\nThe \ninterleaving\n is \ns\n1\n + t\n1\n + s\n2\n + t\n2\n + s\n3\n + t\n3\n + ...\n or \nt\n1\n + s\n1\n + t\n2\n + s\n2\n + t\n3\n + s\n3\n + ...\n\n\n\n\nNote:\n \na + b\n is the concatenation of strings \na\n and \nb\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbcbcac\"\n\nOutput:\n true\n\nExplanation:\n One way to obtain s3 is:\nSplit s1 into s1 = \"aa\" + \"bc\" + \"c\", and s2 into s2 = \"dbbc\" + \"a\".\nInterleaving the two splits, we get \"aa\" + \"dbbc\" + \"bc\" + \"a\" + \"c\" = \"aadbbcbcac\".\nSince s3 can be obtained by interleaving s1 and s2, we return true.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s1 = \"aabcc\", s2 = \"dbbca\", s3 = \"aadbbbaccc\"\n\nOutput:\n false\n\nExplanation:\n Notice how it is impossible to interleave s2 with any other string to obtain s3.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s1 = \"\", s2 = \"\", s3 = \"\"\n\nOutput:\n true\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= s1.length, s2.length <= 100\n\n\n0 <= s3.length <= 200\n\n\ns1\n, \ns2\n, and \ns3\n consist of lowercase English letters.\n\n\n\n\n \n\n\nFollow up:\n Could you solve it using only \nO(s2.length)\n additional memory space?",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": true
    },
    {
        "id": 96,
        "slug": "unique-binary-search-trees",
        "url": "https://leetcode.com/problems/unique-binary-search-trees/",
        "titulo": "Unique Binary Search Trees",
        "enunciado": "Given an integer \nn\n, return \nthe number of structurally unique \nBST'\ns (binary search trees) which has exactly \nn\n nodes of unique values from\n \n1\n \nto\n \nn\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3\n\nOutput:\n 5\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 19",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 95,
        "slug": "unique-binary-search-trees-ii",
        "url": "https://leetcode.com/problems/unique-binary-search-trees-ii/",
        "titulo": "Unique Binary Search Trees II",
        "enunciado": "Given an integer \nn\n, return \nall the structurally unique \nBST'\ns (binary search trees), which has exactly \nn\n nodes of unique values from\n \n1\n \nto\n \nn\n. Return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3\n\nOutput:\n [[1,null,2,null,3],[1,null,3,2],[2,1,3],[3,1,null,null,2],[3,2,null,1]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n [[1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 8",
        "temas": [
            "Dynamic Programming",
            "Backtracking",
            "Tree",
            "Binary Search Tree",
            "Binary Tree"
        ],
        "dificuldade": "Média",
        "tema_principal": "Dynamic Programming",
        "has_image": true
    },
    {
        "id": 93,
        "slug": "restore-ip-addresses",
        "url": "https://leetcode.com/problems/restore-ip-addresses/",
        "titulo": "Restore IP Addresses",
        "enunciado": "A \nvalid IP address\n consists of exactly four integers separated by single dots. Each integer is between \n0\n and \n255\n (\ninclusive\n) and cannot have leading zeros.\n\n\n\n\nFor example, \n\"0.1.2.201\"\n and \n\"192.168.1.1\"\n are \nvalid\n IP addresses, but \n\"0.011.255.245\"\n, \n\"192.168.1.312\"\n and \n\"192.168@1.1\"\n are \ninvalid\n IP addresses.\n\n\n\n\nGiven a string \ns\n containing only digits, return \nall possible valid IP addresses that can be formed by inserting dots into \ns\n. You are \nnot\n allowed to reorder or remove any digits in \ns\n. You may return the valid IP addresses in \nany\n order.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"25525511135\"\n\nOutput:\n [\"255.255.11.135\",\"255.255.111.35\"]\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"0000\"\n\nOutput:\n [\"0.0.0.0\"]\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"101023\"\n\nOutput:\n [\"1.0.10.23\",\"1.0.102.3\",\"10.1.0.23\",\"10.10.2.3\",\"101.0.2.3\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 20\n\n\ns\n consists of digits only.",
        "temas": [
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 92,
        "slug": "reverse-linked-list-ii",
        "url": "https://leetcode.com/problems/reverse-linked-list-ii/",
        "titulo": "Reverse Linked List II",
        "enunciado": "Given the \nhead\n of a singly linked list and two integers \nleft\n and \nright\n where \nleft <= right\n, reverse the nodes of the list from position \nleft\n to position \nright\n, and return \nthe reversed list\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5], left = 2, right = 4\n\nOutput:\n [1,4,3,2,5]\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = [5], left = 1, right = 1\n\nOutput:\n [5]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is \nn\n.\n\n\n1 <= n <= 500\n\n\n-500 <= Node.val <= 500\n\n\n1 <= left <= right <= n\n\n\n\n\n \n\n\nFollow up:\n Could you do it in one pass?",
        "temas": [
            "Linked List"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 91,
        "slug": "decode-ways",
        "url": "https://leetcode.com/problems/decode-ways/",
        "titulo": "Decode Ways",
        "enunciado": "You have intercepted a secret message encoded as a string of numbers. The message is \ndecoded\n via the following mapping:\n\n\n\"1\" -> 'A'\n\n\"2\" -> 'B'\n\n...\n\n\"25\" -> 'Y'\n\n\"26\" -> 'Z'\n\n\nHowever, while decoding the message, you realize that there are many different ways you can decode the message because some codes are contained in other codes (\n\"2\"\n and \n\"5\"\n vs \n\"25\"\n).\n\n\nFor example, \n\"11106\"\n can be decoded into:\n\n\n\n\n\"AAJF\"\n with the grouping \n(1, 1, 10, 6)\n\n\n\"KJF\"\n with the grouping \n(11, 10, 6)\n\n\nThe grouping \n(1, 11, 06)\n is invalid because \n\"06\"\n is not a valid code (only \n\"6\"\n is valid).\n\n\n\n\nNote: there may be strings that are impossible to decode.\n\n\n\nGiven a string s containing only digits, return the \nnumber of ways\n to \ndecode\n it. If the entire string cannot be decoded in any valid way, return \n0\n.\n\n\nThe test cases are generated so that the answer fits in a \n32-bit\n integer.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"12\"\n\n\nOutput:\n \n2\n\n\nExplanation:\n\n\n\"12\" could be decoded as \"AB\" (1 2) or \"L\" (12).\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \"226\"\n\n\nOutput:\n \n3\n\n\nExplanation:\n\n\n\"226\" could be decoded as \"BZ\" (2 26), \"VF\" (22 6), or \"BBF\" (2 2 6).\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"06\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\"06\" cannot be mapped to \"F\" because of the leading zero (\"6\" is different from \"06\"). In this case, the string is not a valid encoding, so return 0.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 100\n\n\ns\n contains only digits and may contain leading zero(s).",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 90,
        "slug": "subsets-ii",
        "url": "https://leetcode.com/problems/subsets-ii/",
        "titulo": "Subsets II",
        "enunciado": "Given an integer array \nnums\n that may contain duplicates, return \nall possible\n \nsubsets\n (the power set)\n.\n\n\nThe solution set \nmust not\n contain duplicate subsets. Return the solution in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [1,2,2]\n\nOutput:\n [[],[1],[1,2],[1,2,2],[2],[2,2]]\n\nExample 2:\n\n\nInput:\n nums = [0]\n\nOutput:\n [[],[0]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n\n\n-10 <= nums[i] <= 10",
        "temas": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 89,
        "slug": "gray-code",
        "url": "https://leetcode.com/problems/gray-code/",
        "titulo": "Gray Code",
        "enunciado": "An \nn-bit gray code sequence\n is a sequence of \n2\nn\n integers where:\n\n\n\n\nEvery integer is in the \ninclusive\n range \n[0, 2\nn\n - 1]\n,\n\n\nThe first integer is \n0\n,\n\n\nAn integer appears \nno more than once\n in the sequence,\n\n\nThe binary representation of every pair of \nadjacent\n integers differs by \nexactly one bit\n, and\n\n\nThe binary representation of the \nfirst\n and \nlast\n integers differs by \nexactly one bit\n.\n\n\n\n\nGiven an integer \nn\n, return \nany valid \nn-bit gray code sequence\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 2\n\nOutput:\n [0,1,3,2]\n\nExplanation:\n\nThe binary representation of [0,1,3,2] is [00,01,11,10].\n- 0\n0\n and 0\n1\n differ by one bit\n- \n0\n1 and \n1\n1 differ by one bit\n- 1\n1\n and 1\n0\n differ by one bit\n- \n1\n0 and \n0\n0 differ by one bit\n[0,2,3,1] is also a valid gray code sequence, whose binary representation is [00,10,11,01].\n- \n0\n0 and \n1\n0 differ by one bit\n- 1\n0\n and 1\n1\n differ by one bit\n- \n1\n1 and \n0\n1 differ by one bit\n- 0\n1\n and 0\n0\n differ by one bit\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n [0,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 16",
        "temas": [
            "Math",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 86,
        "slug": "partition-list",
        "url": "https://leetcode.com/problems/partition-list/",
        "titulo": "Partition List",
        "enunciado": "Given the \nhead\n of a linked list and a value \nx\n, partition it such that all nodes \nless than\n \nx\n come before nodes \ngreater than or equal\n to \nx\n.\n\n\nYou should \npreserve\n the original relative order of the nodes in each of the two partitions.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,4,3,2,5,2], x = 3\n\nOutput:\n [1,2,2,4,3,5]\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = [2,1], x = 2\n\nOutput:\n [1,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[0, 200]\n.\n\n\n-100 <= Node.val <= 100\n\n\n-200 <= x <= 200",
        "temas": [
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 82,
        "slug": "remove-duplicates-from-sorted-list-ii",
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/",
        "titulo": "Remove Duplicates from Sorted List II",
        "enunciado": "Given the \nhead\n of a sorted linked list, \ndelete all nodes that have duplicate numbers, leaving only distinct numbers from the original list\n. Return \nthe linked list \nsorted\n as well\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,3,4,4,5]\n\nOutput:\n [1,2,5]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [1,1,1,2,3]\n\nOutput:\n [2,3]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[0, 300]\n.\n\n\n-100 <= Node.val <= 100\n\n\nThe list is guaranteed to be \nsorted\n in ascending order.",
        "temas": [
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 81,
        "slug": "search-in-rotated-sorted-array-ii",
        "url": "https://leetcode.com/problems/search-in-rotated-sorted-array-ii/",
        "titulo": "Search in Rotated Sorted Array II",
        "enunciado": "There is an integer array \nnums\n sorted in non-decreasing order (not necessarily with \ndistinct\n values).\n\n\nBefore being passed to your function, \nnums\n is \nrotated\n at an unknown pivot index \nk\n (\n0 <= k < nums.length\n) such that the resulting array is \n[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]\n (\n0-indexed\n). For example, \n[0,1,2,4,4,4,5,6,6,7]\n might be rotated at pivot index \n5\n and become \n[4,5,6,6,7,0,1,2,4,4]\n.\n\n\nGiven the array \nnums\n \nafter\n the rotation and an integer \ntarget\n, return \ntrue\n if \ntarget\n is in \nnums\n, or \nfalse\n if it is not in \nnums\n.\n\n\nYou must decrease the overall operation steps as much as possible.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [2,5,6,0,0,1,2], target = 0\n\nOutput:\n true\n\nExample 2:\n\n\nInput:\n nums = [2,5,6,0,0,1,2], target = 3\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5000\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\nnums\n is guaranteed to be rotated at some pivot.\n\n\n-10\n4\n <= target <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n This problem is similar to \nSearch in Rotated Sorted Array\n, but \nnums\n may contain \nduplicates\n. Would this affect the runtime complexity? How and why?",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 80,
        "slug": "remove-duplicates-from-sorted-array-ii",
        "url": "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/",
        "titulo": "Remove Duplicates from Sorted Array II",
        "enunciado": "Given an integer array \nnums\n sorted in \nnon-decreasing order\n, remove some duplicates \nin-place\n such that each unique element appears \nat most twice\n. The \nrelative order\n of the elements should be kept the \nsame\n.\n\n\nSince it is impossible to change the length of the array in some languages, you must instead have the result be placed in the \nfirst part\n of the array \nnums\n. More formally, if there are \nk\n elements after removing the duplicates, then the first \nk\n elements of \nnums\n should hold the final result. It does not matter what you leave beyond the first \nk\n elements.\n\n\nReturn \nk\n after placing the final result in the first \nk\n slots of \nnums\n.\n\n\nDo \nnot\n allocate extra space for another array. You must do this by \nmodifying the input array \nin-place\n with O(1) extra memory.\n\n\nCustom Judge:\n\n\nThe judge will test your solution with the following code:\n\n\n\nint[] nums = [...]; // Input array\nint[] expectedNums = [...]; // The expected answer with correct length\n\nint k = removeDuplicates(nums); // Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\n\n\n\nIf all assertions pass, then your solution will be \naccepted\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,1,2,2,3]\n\nOutput:\n 5, nums = [1,1,2,2,3,_]\n\nExplanation:\n Your function should return k = 5, with the first five elements of nums being 1, 1, 2, 2 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,0,1,1,1,1,2,3,3]\n\nOutput:\n 7, nums = [0,0,1,1,2,3,3,_,_]\n\nExplanation:\n Your function should return k = 7, with the first seven elements of nums being 0, 0, 1, 1, 2, 3 and 3 respectively.\nIt does not matter what you leave beyond the returned k (hence they are underscores).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 3 * 10\n4\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\nnums\n is sorted in \nnon-decreasing\n order.",
        "temas": [
            "Array",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 79,
        "slug": "word-search",
        "url": "https://leetcode.com/problems/word-search/",
        "titulo": "Word Search",
        "enunciado": "Given an \nm x n\n grid of characters \nboard\n and a string \nword\n, return \ntrue\n \nif\n \nword\n \nexists in the grid\n.\n\n\nThe word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCCED\"\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"SEE\"\n\nOutput:\n true\n\n\n\nExample 3:\n\n\n\n\n\n\nInput:\n board = [[\"A\",\"B\",\"C\",\"E\"],[\"S\",\"F\",\"C\",\"S\"],[\"A\",\"D\",\"E\",\"E\"]], word = \"ABCB\"\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == board.length\n\n\nn = board[i].length\n\n\n1 <= m, n <= 6\n\n\n1 <= word.length <= 15\n\n\nboard\n and \nword\n consists of only lowercase and uppercase English letters.\n\n\n\n\n \n\n\nFollow up:\n Could you use search pruning to make your solution faster with a larger \nboard\n?",
        "temas": [
            "Array",
            "String",
            "Backtracking",
            "Depth-First Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 78,
        "slug": "subsets",
        "url": "https://leetcode.com/problems/subsets/",
        "titulo": "Subsets",
        "enunciado": "Given an integer array \nnums\n of \nunique\n elements, return \nall possible\n \nsubsets\n \n(the power set)\n.\n\n\nThe solution set \nmust not\n contain duplicate subsets. Return the solution in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0]\n\nOutput:\n [[],[0]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n\n\n-10 <= nums[i] <= 10\n\n\nAll the numbers of \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 77,
        "slug": "combinations",
        "url": "https://leetcode.com/problems/combinations/",
        "titulo": "Combinations",
        "enunciado": "Given two integers \nn\n and \nk\n, return \nall possible combinations of\n \nk\n \nnumbers chosen from the range\n \n[1, n]\n.\n\n\nYou may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n n = 4, k = 2\n\nOutput:\n [[1,2],[1,3],[1,4],[2,3],[2,4],[3,4]]\n\nExplanation:\n There are 4 choose 2 = 6 total combinations.\nNote that combinations are unordered, i.e., [1,2] and [2,1] are considered to be the same combination.\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1, k = 1\n\nOutput:\n [[1]]\n\nExplanation:\n There is 1 choose 1 = 1 total combination.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 20\n\n\n1 <= k <= n",
        "temas": [
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Backtracking",
        "has_image": false
    },
    {
        "id": 75,
        "slug": "sort-colors",
        "url": "https://leetcode.com/problems/sort-colors/",
        "titulo": "Sort Colors",
        "enunciado": "Given an array \nnums\n with \nn\n objects colored red, white, or blue, sort them \nin-place\n \nso that objects of the same color are adjacent, with the colors in the order red, white, and blue.\n\n\nWe will use the integers \n0\n, \n1\n, and \n2\n to represent the color red, white, and blue, respectively.\n\n\nYou must solve this problem without using the library's sort function.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,0,2,1,1,0]\n\nOutput:\n [0,0,1,1,2,2]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,0,1]\n\nOutput:\n [0,1,2]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == nums.length\n\n\n1 <= n <= 300\n\n\nnums[i]\n is either \n0\n, \n1\n, or \n2\n.\n\n\n\n\n \n\n\nFollow up:\n Could you come up with a one-pass algorithm using only constant extra space?",
        "temas": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 74,
        "slug": "search-a-2d-matrix",
        "url": "https://leetcode.com/problems/search-a-2d-matrix/",
        "titulo": "Search a 2D Matrix",
        "enunciado": "You are given an \nm x n\n integer matrix \nmatrix\n with the following two properties:\n\n\n\n\nEach row is sorted in non-decreasing order.\n\n\nThe first integer of each row is greater than the last integer of the previous row.\n\n\n\n\nGiven an integer \ntarget\n, return \ntrue\n \nif\n \ntarget\n \nis in\n \nmatrix\n \nor\n \nfalse\n \notherwise\n.\n\n\nYou must write a solution in \nO(log(m * n))\n time complexity.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 13\n\nOutput:\n false\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 100\n\n\n-10\n4\n <= matrix[i][j], target <= 10\n4",
        "temas": [
            "Array",
            "Binary Search",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 73,
        "slug": "set-matrix-zeroes",
        "url": "https://leetcode.com/problems/set-matrix-zeroes/",
        "titulo": "Set Matrix Zeroes",
        "enunciado": "Given an \nm x n\n integer matrix \nmatrix\n, if an element is \n0\n, set its entire row and column to \n0\n's.\n\n\nYou must do it \nin place\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[1,1,1],[1,0,1],[1,1,1]]\n\nOutput:\n [[1,0,1],[0,0,0],[1,0,1]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]]\n\nOutput:\n [[0,0,0,0],[0,4,5,0],[0,3,1,0]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[0].length\n\n\n1 <= m, n <= 200\n\n\n-2\n31\n <= matrix[i][j] <= 2\n31\n - 1\n\n\n\n\n \n\n\nFollow up:\n\n\n\n\nA straightforward solution using \nO(mn)\n space is probably a bad idea.\n\n\nA simple improvement uses \nO(m + n)\n space, but still not the best solution.\n\n\nCould you devise a constant space solution?",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 72,
        "slug": "edit-distance",
        "url": "https://leetcode.com/problems/edit-distance/",
        "titulo": "Edit Distance",
        "enunciado": "Given two strings \nword1\n and \nword2\n, return \nthe minimum number of operations required to convert \nword1\n to \nword2\n.\n\n\nYou have the following three operations permitted on a word:\n\n\n\n\nInsert a character\n\n\nDelete a character\n\n\nReplace a character\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n word1 = \"horse\", word2 = \"ros\"\n\nOutput:\n 3\n\nExplanation:\n \nhorse -> rorse (replace 'h' with 'r')\nrorse -> rose (remove 'r')\nrose -> ros (remove 'e')\n\n\n\nExample 2:\n\n\n\n\nInput:\n word1 = \"intention\", word2 = \"execution\"\n\nOutput:\n 5\n\nExplanation:\n \nintention -> inention (remove 't')\ninention -> enention (replace 'i' with 'e')\nenention -> exention (replace 'n' with 'x')\nexention -> exection (replace 'n' with 'c')\nexection -> execution (insert 'u')\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= word1.length, word2.length <= 500\n\n\nword1\n and \nword2\n consist of lowercase English letters.",
        "temas": [
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 71,
        "slug": "simplify-path",
        "url": "https://leetcode.com/problems/simplify-path/",
        "titulo": "Simplify Path",
        "enunciado": "You are given an \nabsolute\n path for a Unix-style file system, which always begins with a slash \n'/'\n. Your task is to transform this absolute path into its \nsimplified canonical path\n.\n\n\nThe \nrules\n of a Unix-style file system are as follows:\n\n\n\n\nA single period \n'.'\n represents the current directory.\n\n\nA double period \n'..'\n represents the previous/parent directory.\n\n\nMultiple consecutive slashes such as \n'//'\n and \n'///'\n are treated as a single slash \n'/'\n.\n\n\nAny sequence of periods that does \nnot match\n the rules above should be treated as a \nvalid directory or\n \nfile \nname\n. For example, \n'...' \nand \n'....'\n are valid directory or file names.\n\n\n\n\nThe simplified canonical path should follow these \nrules\n:\n\n\n\n\nThe path must start with a single slash \n'/'\n.\n\n\nDirectories within the path must be separated by exactly one slash \n'/'\n.\n\n\nThe path must not end with a slash \n'/'\n, unless it is the root directory.\n\n\nThe path must not have any single or double periods (\n'.'\n and \n'..'\n) used to denote current or parent directories.\n\n\n\n\nReturn the \nsimplified canonical path\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \npath = \"/home/\"\n\n\nOutput:\n \n\"/home\"\n\n\nExplanation:\n\n\nThe trailing slash should be removed.\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \npath = \"/home//foo/\"\n\n\nOutput:\n \n\"/home/foo\"\n\n\nExplanation:\n\n\nMultiple consecutive slashes are replaced by a single one.\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \npath = \"/home/user/Documents/../Pictures\"\n\n\nOutput:\n \n\"/home/user/Pictures\"\n\n\nExplanation:\n\n\nA double period \n\"..\"\n refers to the directory up a level (the parent directory).\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \npath = \"/../\"\n\n\nOutput:\n \n\"/\"\n\n\nExplanation:\n\n\nGoing one level up from the root directory is not possible.\n\n\n\n\nExample 5:\n\n\n\n\nInput:\n \npath = \"/.../a/../b/c/../d/./\"\n\n\nOutput:\n \n\"/.../b/d\"\n\n\nExplanation:\n\n\n\"...\"\n is a valid name for a directory in this problem.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= path.length <= 3000\n\n\npath\n consists of English letters, digits, period \n'.'\n, slash \n'/'\n or \n'_'\n.\n\n\npath\n is a valid absolute Unix path.",
        "temas": [
            "String",
            "Stack"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 64,
        "slug": "minimum-path-sum",
        "url": "https://leetcode.com/problems/minimum-path-sum/",
        "titulo": "Minimum Path Sum",
        "enunciado": "Given a \nm x n\n \ngrid\n filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.\n\n\nNote:\n You can only move either down or right at any point in time.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n grid = [[1,3,1],[1,5,1],[4,2,1]]\n\nOutput:\n 7\n\nExplanation:\n Because the path 1 → 3 → 1 → 1 → 1 minimizes the sum.\n\n\n\nExample 2:\n\n\n\n\nInput:\n grid = [[1,2,3],[4,5,6]]\n\nOutput:\n 12\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == grid.length\n\n\nn == grid[i].length\n\n\n1 <= m, n <= 200\n\n\n0 <= grid[i][j] <= 200",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 63,
        "slug": "unique-paths-ii",
        "url": "https://leetcode.com/problems/unique-paths-ii/",
        "titulo": "Unique Paths II",
        "enunciado": "You are given an \nm x n\n integer array \ngrid\n. There is a robot initially located at the \ntop-left corner\n (i.e., \ngrid[0][0]\n). The robot tries to move to the \nbottom-right corner\n (i.e., \ngrid[m - 1][n - 1]\n). The robot can only move either down or right at any point in time.\n\n\nAn obstacle and space are marked as \n1\n or \n0\n respectively in \ngrid\n. A path that the robot takes cannot include \nany\n square that is an obstacle.\n\n\nReturn \nthe number of possible unique paths that the robot can take to reach the bottom-right corner\n.\n\n\nThe testcases are generated so that the answer will be less than or equal to \n2 * 10\n9\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n obstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]\n\nOutput:\n 2\n\nExplanation:\n There is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -> Right -> Down -> Down\n2. Down -> Down -> Right -> Right\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n obstacleGrid = [[0,1],[0,0]]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == obstacleGrid.length\n\n\nn == obstacleGrid[i].length\n\n\n1 <= m, n <= 100\n\n\nobstacleGrid[i][j]\n is \n0\n or \n1\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 62,
        "slug": "unique-paths",
        "url": "https://leetcode.com/problems/unique-paths/",
        "titulo": "Unique Paths",
        "enunciado": "There is a robot on an \nm x n\n grid. The robot is initially located at the \ntop-left corner\n (i.e., \ngrid[0][0]\n). The robot tries to move to the \nbottom-right corner\n (i.e., \ngrid[m - 1][n - 1]\n). The robot can only move either down or right at any point in time.\n\n\nGiven the two integers \nm\n and \nn\n, return \nthe number of possible unique paths that the robot can take to reach the bottom-right corner\n.\n\n\nThe test cases are generated so that the answer will be less than or equal to \n2 * 10\n9\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n m = 3, n = 7\n\nOutput:\n 28\n\n\n\nExample 2:\n\n\n\n\nInput:\n m = 3, n = 2\n\nOutput:\n 3\n\nExplanation:\n From the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Down -> Down\n2. Down -> Down -> Right\n3. Down -> Right -> Down\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= m, n <= 100",
        "temas": [
            "Math",
            "Dynamic Programming",
            "Combinatorics"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": true
    },
    {
        "id": 61,
        "slug": "rotate-list",
        "url": "https://leetcode.com/problems/rotate-list/",
        "titulo": "Rotate List",
        "enunciado": "Given the \nhead\n of a linked list, rotate the list to the right by \nk\n places.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5], k = 2\n\nOutput:\n [4,5,1,2,3]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n head = [0,1,2], k = 4\n\nOutput:\n [2,0,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[0, 500]\n.\n\n\n-100 <= Node.val <= 100\n\n\n0 <= k <= 2 * 10\n9",
        "temas": [
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 59,
        "slug": "spiral-matrix-ii",
        "url": "https://leetcode.com/problems/spiral-matrix-ii/",
        "titulo": "Spiral Matrix II",
        "enunciado": "Given a positive integer \nn\n, generate an \nn x n\n \nmatrix\n filled with elements from \n1\n to \nn\n2\n in spiral order.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n n = 3\n\nOutput:\n [[1,2,3],[8,9,4],[7,6,5]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n n = 1\n\nOutput:\n [[1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 20",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 57,
        "slug": "insert-interval",
        "url": "https://leetcode.com/problems/insert-interval/",
        "titulo": "Insert Interval",
        "enunciado": "You are given an array of non-overlapping intervals \nintervals\n where \nintervals[i] = [start\ni\n, end\ni\n]\n represent the start and the end of the \ni\nth\n interval and \nintervals\n is sorted in ascending order by \nstart\ni\n. You are also given an interval \nnewInterval = [start, end]\n that represents the start and end of another interval.\n\n\nInsert \nnewInterval\n into \nintervals\n such that \nintervals\n is still sorted in ascending order by \nstart\ni\n and \nintervals\n still does not have any overlapping intervals (merge overlapping intervals if necessary).\n\n\nReturn \nintervals\n after the insertion\n.\n\n\nNote\n that you don't need to modify \nintervals\n in-place. You can make a new array and return it.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n intervals = [[1,3],[6,9]], newInterval = [2,5]\n\nOutput:\n [[1,5],[6,9]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]\n\nOutput:\n [[1,2],[3,10],[12,16]]\n\nExplanation:\n Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= intervals.length <= 10\n4\n\n\nintervals[i].length == 2\n\n\n0 <= start\ni\n <= end\ni\n <= 10\n5\n\n\nintervals\n is sorted by \nstart\ni\n in \nascending\n order.\n\n\nnewInterval.length == 2\n\n\n0 <= start <= end <= 10\n5",
        "temas": [
            "Array"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 56,
        "slug": "merge-intervals",
        "url": "https://leetcode.com/problems/merge-intervals/",
        "titulo": "Merge Intervals",
        "enunciado": "Given an array of \nintervals\n where \nintervals[i] = [start\ni\n, end\ni\n]\n, merge all overlapping intervals, and return \nan array of the non-overlapping intervals that cover all the intervals in the input\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n intervals = [[1,3],[2,6],[8,10],[15,18]]\n\nOutput:\n [[1,6],[8,10],[15,18]]\n\nExplanation:\n Since intervals [1,3] and [2,6] overlap, merge them into [1,6].\n\n\n\nExample 2:\n\n\n\n\nInput:\n intervals = [[1,4],[4,5]]\n\nOutput:\n [[1,5]]\n\nExplanation:\n Intervals [1,4] and [4,5] are considered overlapping.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= intervals.length <= 10\n4\n\n\nintervals[i].length == 2\n\n\n0 <= start\ni\n <= end\ni\n <= 10\n4",
        "temas": [
            "Array",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 55,
        "slug": "jump-game",
        "url": "https://leetcode.com/problems/jump-game/",
        "titulo": "Jump Game",
        "enunciado": "You are given an integer array \nnums\n. You are initially positioned at the array's \nfirst index\n, and each element in the array represents your maximum jump length at that position.\n\n\nReturn \ntrue\n if you can reach the last index, or \nfalse\n otherwise\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,1,1,4]\n\nOutput:\n true\n\nExplanation:\n Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,2,1,0,4]\n\nOutput:\n false\n\nExplanation:\n You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n0 <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 54,
        "slug": "spiral-matrix",
        "url": "https://leetcode.com/problems/spiral-matrix/",
        "titulo": "Spiral Matrix",
        "enunciado": "Given an \nm x n\n \nmatrix\n, return \nall elements of the\n \nmatrix\n \nin spiral order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput:\n [1,2,3,6,9,8,7,4,5]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\n\nOutput:\n [1,2,3,4,8,12,11,10,9,5,6,7]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nm == matrix.length\n\n\nn == matrix[i].length\n\n\n1 <= m, n <= 10\n\n\n-100 <= matrix[i][j] <= 100",
        "temas": [
            "Array",
            "Matrix",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 53,
        "slug": "maximum-subarray",
        "url": "https://leetcode.com/problems/maximum-subarray/",
        "titulo": "Maximum Subarray",
        "enunciado": "Given an integer array \nnums\n, find the \nsubarray\n with the largest sum, and return \nits sum\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [-2,1,-3,4,-1,2,1,-5,4]\n\nOutput:\n 6\n\nExplanation:\n The subarray [4,-1,2,1] has the largest sum 6.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1]\n\nOutput:\n 1\n\nExplanation:\n The subarray [1] has the largest sum 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [5,4,-1,7,8]\n\nOutput:\n 23\n\nExplanation:\n The subarray [5,4,-1,7,8] has the largest sum 23.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n5\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\n\n\n \n\n\nFollow up:\n If you have figured out the \nO(n)\n solution, try coding another solution using the \ndivide and conquer\n approach, which is more subtle.",
        "temas": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 50,
        "slug": "powx-n",
        "url": "https://leetcode.com/problems/powx-n/",
        "titulo": "Pow(x, n)",
        "enunciado": "Implement \npow(x, n)\n, which calculates \nx\n raised to the power \nn\n (i.e., \nx\nn\n).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n x = 2.00000, n = 10\n\nOutput:\n 1024.00000\n\n\n\nExample 2:\n\n\n\n\nInput:\n x = 2.10000, n = 3\n\nOutput:\n 9.26100\n\n\n\nExample 3:\n\n\n\n\nInput:\n x = 2.00000, n = -2\n\nOutput:\n 0.25000\n\nExplanation:\n 2\n-2\n = 1/2\n2\n = 1/4 = 0.25\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-100.0 < x < 100.0\n\n\n-2\n31\n <= n <= 2\n31\n-1\n\n\nn\n is an integer.\n\n\nEither \nx\n is not zero or \nn > 0\n.\n\n\n-10\n4\n <= x\nn\n <= 10\n4",
        "temas": [
            "Math",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 49,
        "slug": "group-anagrams",
        "url": "https://leetcode.com/problems/group-anagrams/",
        "titulo": "Group Anagrams",
        "enunciado": "Given an array of strings \nstrs\n, group the \nanagrams\n together. You can return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nstrs = [\"eat\",\"tea\",\"tan\",\"ate\",\"nat\",\"bat\"]\n\n\nOutput:\n \n[[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]]\n\n\nExplanation:\n\n\n\n\nThere is no string in strs that can be rearranged to form \n\"bat\"\n.\n\n\nThe strings \n\"nat\"\n and \n\"tan\"\n are anagrams as they can be rearranged to form each other.\n\n\nThe strings \n\"ate\"\n, \n\"eat\"\n, and \n\"tea\"\n are anagrams as they can be rearranged to form each other.\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nstrs = [\"\"]\n\n\nOutput:\n \n[[\"\"]]\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nstrs = [\"a\"]\n\n\nOutput:\n \n[[\"a\"]]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= strs.length <= 10\n4\n\n\n0 <= strs[i].length <= 100\n\n\nstrs[i]\n consists of lowercase English letters.",
        "temas": [
            "Array",
            "Hash Table",
            "String",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 48,
        "slug": "rotate-image",
        "url": "https://leetcode.com/problems/rotate-image/",
        "titulo": "Rotate Image",
        "enunciado": "You are given an \nn x n\n 2D \nmatrix\n representing an image, rotate the image by \n90\n degrees (clockwise).\n\n\nYou have to rotate the image \nin-place\n, which means you have to modify the input 2D matrix directly. \nDO NOT\n allocate another 2D matrix and do the rotation.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n matrix = [[1,2,3],[4,5,6],[7,8,9]]\n\nOutput:\n [[7,4,1],[8,5,2],[9,6,3]]\n\n\n\nExample 2:\n\n\n\n\n\n\nInput:\n matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]\n\nOutput:\n [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == matrix.length == matrix[i].length\n\n\n1 <= n <= 20\n\n\n-1000 <= matrix[i][j] <= 1000",
        "temas": [
            "Array",
            "Math",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 47,
        "slug": "permutations-ii",
        "url": "https://leetcode.com/problems/permutations-ii/",
        "titulo": "Permutations II",
        "enunciado": "Given a collection of numbers, \nnums\n, that might contain duplicates, return \nall possible unique permutations \nin any order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,1,2]\n\nOutput:\n\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 8\n\n\n-10 <= nums[i] <= 10",
        "temas": [
            "Array",
            "Backtracking",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 46,
        "slug": "permutations",
        "url": "https://leetcode.com/problems/permutations/",
        "titulo": "Permutations",
        "enunciado": "Given an array \nnums\n of distinct integers, return all the possible \npermutations\n. You can return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n\nExample 2:\n\n\nInput:\n nums = [0,1]\n\nOutput:\n [[0,1],[1,0]]\n\nExample 3:\n\n\nInput:\n nums = [1]\n\nOutput:\n [[1]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 6\n\n\n-10 <= nums[i] <= 10\n\n\nAll the integers of \nnums\n are \nunique\n.",
        "temas": [
            "Array",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 45,
        "slug": "jump-game-ii",
        "url": "https://leetcode.com/problems/jump-game-ii/",
        "titulo": "Jump Game II",
        "enunciado": "You are given a \n0-indexed\n array of integers \nnums\n of length \nn\n. You are initially positioned at \nnums[0]\n.\n\n\nEach element \nnums[i]\n represents the maximum length of a forward jump from index \ni\n. In other words, if you are at \nnums[i]\n, you can jump to any \nnums[i + j]\n where:\n\n\n\n\n0 <= j <= nums[i]\n and\n\n\ni + j < n\n\n\n\n\nReturn \nthe minimum number of jumps to reach \nnums[n - 1]\n. The test cases are generated such that you can reach \nnums[n - 1]\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [2,3,1,1,4]\n\nOutput:\n 2\n\nExplanation:\n The minimum number of jumps to reach the last index is 2. Jump 1 step from index 0 to 1, then 3 steps to the last index.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,3,0,1,4]\n\nOutput:\n 2\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 10\n4\n\n\n0 <= nums[i] <= 1000\n\n\nIt's guaranteed that you can reach \nnums[n - 1]\n.",
        "temas": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 43,
        "slug": "multiply-strings",
        "url": "https://leetcode.com/problems/multiply-strings/",
        "titulo": "Multiply Strings",
        "enunciado": "Given two non-negative integers \nnum1\n and \nnum2\n represented as strings, return the product of \nnum1\n and \nnum2\n, also represented as a string.\n\n\nNote:\n You must not use any built-in BigInteger library or convert the inputs to integer directly.\n\n\n \n\n\nExample 1:\n\n\nInput:\n num1 = \"2\", num2 = \"3\"\n\nOutput:\n \"6\"\n\nExample 2:\n\n\nInput:\n num1 = \"123\", num2 = \"456\"\n\nOutput:\n \"56088\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num1.length, num2.length <= 200\n\n\nnum1\n and \nnum2\n consist of digits only.\n\n\nBoth \nnum1\n and \nnum2\n do not contain any leading zero, except the number \n0\n itself.",
        "temas": [
            "Math",
            "String",
            "Simulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 40,
        "slug": "combination-sum-ii",
        "url": "https://leetcode.com/problems/combination-sum-ii/",
        "titulo": "Combination Sum II",
        "enunciado": "Given a collection of candidate numbers (\ncandidates\n) and a target number (\ntarget\n), find all unique combinations in \ncandidates\n where the candidate numbers sum to \ntarget\n.\n\n\nEach number in \ncandidates\n may only be used \nonce\n in the combination.\n\n\nNote:\n The solution set must not contain duplicate combinations.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n candidates = [10,1,2,7,6,1,5], target = 8\n\nOutput:\n \n[\n[1,1,6],\n[1,2,5],\n[1,7],\n[2,6]\n]\n\n\n\nExample 2:\n\n\n\n\nInput:\n candidates = [2,5,2,1,2], target = 5\n\nOutput:\n \n[\n[1,2,2],\n[5]\n]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= candidates.length <= 100\n\n\n1 <= candidates[i] <= 50\n\n\n1 <= target <= 30",
        "temas": [
            "Array",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 39,
        "slug": "combination-sum",
        "url": "https://leetcode.com/problems/combination-sum/",
        "titulo": "Combination Sum",
        "enunciado": "Given an array of \ndistinct\n integers \ncandidates\n and a target integer \ntarget\n, return \na list of all \nunique combinations\n of \ncandidates\n where the chosen numbers sum to \ntarget\n.\n You may return the combinations in \nany order\n.\n\n\nThe \nsame\n number may be chosen from \ncandidates\n an \nunlimited number of times\n. Two combinations are unique if the \nfrequency\n of at least one of the chosen numbers is different.\n\n\nThe test cases are generated such that the number of unique combinations that sum up to \ntarget\n is less than \n150\n combinations for the given input.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n candidates = [2,3,6,7], target = 7\n\nOutput:\n [[2,2,3],[7]]\n\nExplanation:\n\n2 and 3 are candidates, and 2 + 2 + 3 = 7. Note that 2 can be used multiple times.\n7 is a candidate, and 7 = 7.\nThese are the only two combinations.\n\n\n\nExample 2:\n\n\n\n\nInput:\n candidates = [2,3,5], target = 8\n\nOutput:\n [[2,2,2,2],[2,3,3],[3,5]]\n\n\n\nExample 3:\n\n\n\n\nInput:\n candidates = [2], target = 1\n\nOutput:\n []\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= candidates.length <= 30\n\n\n2 <= candidates[i] <= 40\n\n\nAll elements of \ncandidates\n are \ndistinct\n.\n\n\n1 <= target <= 40",
        "temas": [
            "Array",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 38,
        "slug": "count-and-say",
        "url": "https://leetcode.com/problems/count-and-say/",
        "titulo": "Count and Say",
        "enunciado": "The \ncount-and-say\n sequence is a sequence of digit strings defined by the recursive formula:\n\n\n\n\ncountAndSay(1) = \"1\"\n\n\ncountAndSay(n)\n is the run-length encoding of \ncountAndSay(n - 1)\n.\n\n\n\n\nRun-length encoding\n (RLE) is a string compression method that works by replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and the number marking the count of the characters (length of the run). For example, to compress the string \n\"3322251\"\n we replace \n\"33\"\n with \n\"23\"\n, replace \n\"222\"\n with \n\"32\"\n, replace \n\"5\"\n with \n\"15\"\n and replace \n\"1\"\n with \n\"11\"\n. Thus the compressed string becomes \n\"23321511\"\n.\n\n\nGiven a positive integer \nn\n, return \nthe \nn\nth\n element of the \ncount-and-say\n sequence\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nn = 4\n\n\nOutput:\n \n\"1211\"\n\n\nExplanation:\n\n\n\ncountAndSay(1) = \"1\"\ncountAndSay(2) = RLE of \"1\" = \"11\"\ncountAndSay(3) = RLE of \"11\" = \"21\"\ncountAndSay(4) = RLE of \"21\" = \"1211\"\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nn = 1\n\n\nOutput:\n \n\"1\"\n\n\nExplanation:\n\n\nThis is the base case.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 30\n\n\n\n\n \n\n\nFollow up:\n Could you solve it iteratively?",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 36,
        "slug": "valid-sudoku",
        "url": "https://leetcode.com/problems/valid-sudoku/",
        "titulo": "Valid Sudoku",
        "enunciado": "Determine if a \n9 x 9\n Sudoku board is valid. Only the filled cells need to be validated \naccording to the following rules\n:\n\n\n\n\nEach row must contain the digits \n1-9\n without repetition.\n\n\nEach column must contain the digits \n1-9\n without repetition.\n\n\nEach of the nine \n3 x 3\n sub-boxes of the grid must contain the digits \n1-9\n without repetition.\n\n\n\n\nNote:\n\n\n\n\nA Sudoku board (partially filled) could be valid but is not necessarily solvable.\n\n\nOnly the filled cells need to be validated according to the mentioned rules.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n board = \n[[\"5\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n\nOutput:\n true\n\n\n\nExample 2:\n\n\n\n\nInput:\n board = \n[[\"8\",\"3\",\".\",\".\",\"7\",\".\",\".\",\".\",\".\"]\n,[\"6\",\".\",\".\",\"1\",\"9\",\"5\",\".\",\".\",\".\"]\n,[\".\",\"9\",\"8\",\".\",\".\",\".\",\".\",\"6\",\".\"]\n,[\"8\",\".\",\".\",\".\",\"6\",\".\",\".\",\".\",\"3\"]\n,[\"4\",\".\",\".\",\"8\",\".\",\"3\",\".\",\".\",\"1\"]\n,[\"7\",\".\",\".\",\".\",\"2\",\".\",\".\",\".\",\"6\"]\n,[\".\",\"6\",\".\",\".\",\".\",\".\",\"2\",\"8\",\".\"]\n,[\".\",\".\",\".\",\"4\",\"1\",\"9\",\".\",\".\",\"5\"]\n,[\".\",\".\",\".\",\".\",\"8\",\".\",\".\",\"7\",\"9\"]]\n\nOutput:\n false\n\nExplanation:\n Same as Example 1, except with the \n5\n in the top left corner being modified to \n8\n. Since there are two 8's in the top left 3x3 sub-box, it is invalid.\n\n\n\n \n\n\nConstraints:\n\n\n\n\nboard.length == 9\n\n\nboard[i].length == 9\n\n\nboard[i][j]\n is a digit \n1-9\n or \n'.'\n.",
        "temas": [
            "Array",
            "Hash Table",
            "Matrix"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 34,
        "slug": "find-first-and-last-position-of-element-in-sorted-array",
        "url": "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",
        "titulo": "Find First and Last Position of Element in Sorted Array",
        "enunciado": "Given an array of integers \nnums\n sorted in non-decreasing order, find the starting and ending position of a given \ntarget\n value.\n\n\nIf \ntarget\n is not found in the array, return \n[-1, -1]\n.\n\n\nYou must write an algorithm with \nO(log n)\n runtime complexity.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [5,7,7,8,8,10], target = 8\n\nOutput:\n [3,4]\n\nExample 2:\n\n\nInput:\n nums = [5,7,7,8,8,10], target = 6\n\nOutput:\n [-1,-1]\n\nExample 3:\n\n\nInput:\n nums = [], target = 0\n\nOutput:\n [-1,-1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= nums.length <= 10\n5\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\nnums\n is a non-decreasing array.\n\n\n-10\n9\n <= target <= 10\n9",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 33,
        "slug": "search-in-rotated-sorted-array",
        "url": "https://leetcode.com/problems/search-in-rotated-sorted-array/",
        "titulo": "Search in Rotated Sorted Array",
        "enunciado": "There is an integer array \nnums\n sorted in ascending order (with \ndistinct\n values).\n\n\nPrior to being passed to your function, \nnums\n is \npossibly rotated\n at an unknown pivot index \nk\n (\n1 <= k < nums.length\n) such that the resulting array is \n[nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]]\n (\n0-indexed\n). For example, \n[0,1,2,4,5,6,7]\n might be rotated at pivot index \n3\n and become \n[4,5,6,7,0,1,2]\n.\n\n\nGiven the array \nnums\n \nafter\n the possible rotation and an integer \ntarget\n, return \nthe index of \ntarget\n if it is in \nnums\n, or \n-1\n if it is not in \nnums\n.\n\n\nYou must write an algorithm with \nO(log n)\n runtime complexity.\n\n\n \n\n\nExample 1:\n\n\nInput:\n nums = [4,5,6,7,0,1,2], target = 0\n\nOutput:\n 4\n\nExample 2:\n\n\nInput:\n nums = [4,5,6,7,0,1,2], target = 3\n\nOutput:\n -1\n\nExample 3:\n\n\nInput:\n nums = [1], target = 0\n\nOutput:\n -1\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 5000\n\n\n-10\n4\n <= nums[i] <= 10\n4\n\n\nAll values of \nnums\n are \nunique\n.\n\n\nnums\n is an ascending array that is possibly rotated.\n\n\n-10\n4\n <= target <= 10\n4",
        "temas": [
            "Array",
            "Binary Search"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 31,
        "slug": "next-permutation",
        "url": "https://leetcode.com/problems/next-permutation/",
        "titulo": "Next Permutation",
        "enunciado": "A \npermutation\n of an array of integers is an arrangement of its members into a sequence or linear order.\n\n\n\n\nFor example, for \narr = [1,2,3]\n, the following are all the permutations of \narr\n: \n[1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1]\n.\n\n\n\n\nThe \nnext permutation\n of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the \nnext permutation\n of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).\n\n\n\n\nFor example, the next permutation of \narr = [1,2,3]\n is \n[1,3,2]\n.\n\n\nSimilarly, the next permutation of \narr = [2,3,1]\n is \n[3,1,2]\n.\n\n\nWhile the next permutation of \narr = [3,2,1]\n is \n[1,2,3]\n because \n[3,2,1]\n does not have a lexicographical larger rearrangement.\n\n\n\n\nGiven an array of integers \nnums\n, \nfind the next permutation of\n \nnums\n.\n\n\nThe replacement must be \nin place\n and use only constant extra memory.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,2,3]\n\nOutput:\n [1,3,2]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [3,2,1]\n\nOutput:\n [1,2,3]\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [1,1,5]\n\nOutput:\n [1,5,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 100\n\n\n0 <= nums[i] <= 100",
        "temas": [
            "Array",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 29,
        "slug": "divide-two-integers",
        "url": "https://leetcode.com/problems/divide-two-integers/",
        "titulo": "Divide Two Integers",
        "enunciado": "Given two integers \ndividend\n and \ndivisor\n, divide two integers \nwithout\n using multiplication, division, and mod operator.\n\n\nThe integer division should truncate toward zero, which means losing its fractional part. For example, \n8.345\n would be truncated to \n8\n, and \n-2.7335\n would be truncated to \n-2\n.\n\n\nReturn \nthe \nquotient\n after dividing \ndividend\n by \ndivisor\n.\n\n\nNote: \nAssume we are dealing with an environment that could only store integers within the \n32-bit\n signed integer range: \n[−2\n31\n, 2\n31\n − 1]\n. For this problem, if the quotient is \nstrictly greater than\n \n2\n31\n - 1\n, then return \n2\n31\n - 1\n, and if the quotient is \nstrictly less than\n \n-2\n31\n, then return \n-2\n31\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n dividend = 10, divisor = 3\n\nOutput:\n 3\n\nExplanation:\n 10/3 = 3.33333.. which is truncated to 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n dividend = 7, divisor = -3\n\nOutput:\n -2\n\nExplanation:\n 7/-3 = -2.33333.. which is truncated to -2.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-2\n31\n <= dividend, divisor <= 2\n31\n - 1\n\n\ndivisor != 0",
        "temas": [
            "Math",
            "Bit Manipulation"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 24,
        "slug": "swap-nodes-in-pairs",
        "url": "https://leetcode.com/problems/swap-nodes-in-pairs/",
        "titulo": "Swap Nodes in Pairs",
        "enunciado": "Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nhead = [1,2,3,4]\n\n\nOutput:\n \n[2,1,4,3]\n\n\nExplanation:\n\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nhead = []\n\n\nOutput:\n \n[]\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nhead = [1]\n\n\nOutput:\n \n[1]\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \nhead = [1,2,3]\n\n\nOutput:\n \n[2,1,3]\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is in the range \n[0, 100]\n.\n\n\n0 <= Node.val <= 100",
        "temas": [
            "Linked List",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 22,
        "slug": "generate-parentheses",
        "url": "https://leetcode.com/problems/generate-parentheses/",
        "titulo": "Generate Parentheses",
        "enunciado": "Given \nn\n pairs of parentheses, write a function to \ngenerate all combinations of well-formed parentheses\n.\n\n\n \n\n\nExample 1:\n\n\nInput:\n n = 3\n\nOutput:\n [\"((()))\",\"(()())\",\"(())()\",\"()(())\",\"()()()\"]\n\nExample 2:\n\n\nInput:\n n = 1\n\nOutput:\n [\"()\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= n <= 8",
        "temas": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 19,
        "slug": "remove-nth-node-from-end-of-list",
        "url": "https://leetcode.com/problems/remove-nth-node-from-end-of-list/",
        "titulo": "Remove Nth Node From End of List",
        "enunciado": "Given the \nhead\n of a linked list, remove the \nn\nth\n node from the end of the list and return its head.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n head = [1,2,3,4,5], n = 2\n\nOutput:\n [1,2,3,5]\n\n\n\nExample 2:\n\n\n\n\nInput:\n head = [1], n = 1\n\nOutput:\n []\n\n\n\nExample 3:\n\n\n\n\nInput:\n head = [1,2], n = 1\n\nOutput:\n [1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in the list is \nsz\n.\n\n\n1 <= sz <= 30\n\n\n0 <= Node.val <= 100\n\n\n1 <= n <= sz\n\n\n\n\n \n\n\nFollow up:\n Could you do this in one pass?",
        "temas": [
            "Linked List",
            "Two Pointers"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    },
    {
        "id": 18,
        "slug": "4sum",
        "url": "https://leetcode.com/problems/4sum/",
        "titulo": "4Sum",
        "enunciado": "Given an array \nnums\n of \nn\n integers, return \nan array of all the \nunique\n quadruplets\n \n[nums[a], nums[b], nums[c], nums[d]]\n such that:\n\n\n\n\n0 <= a, b, c, d < n\n\n\na\n, \nb\n, \nc\n, and \nd\n are \ndistinct\n.\n\n\nnums[a] + nums[b] + nums[c] + nums[d] == target\n\n\n\n\nYou may return the answer in \nany order\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [1,0,-1,0,-2,2], target = 0\n\nOutput:\n [[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]]\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [2,2,2,2,2], target = 8\n\nOutput:\n [[2,2,2,2]]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= nums.length <= 200\n\n\n-10\n9\n <= nums[i] <= 10\n9\n\n\n-10\n9\n <= target <= 10\n9",
        "temas": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 17,
        "slug": "letter-combinations-of-a-phone-number",
        "url": "https://leetcode.com/problems/letter-combinations-of-a-phone-number/",
        "titulo": "Letter Combinations of a Phone Number",
        "enunciado": "Given a string containing digits from \n2-9\n inclusive, return all possible letter combinations that the number could represent. Return the answer in \nany order\n.\n\n\nA mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n digits = \"23\"\n\nOutput:\n [\"ad\",\"ae\",\"af\",\"bd\",\"be\",\"bf\",\"cd\",\"ce\",\"cf\"]\n\n\n\nExample 2:\n\n\n\n\nInput:\n digits = \"\"\n\nOutput:\n []\n\n\n\nExample 3:\n\n\n\n\nInput:\n digits = \"2\"\n\nOutput:\n [\"a\",\"b\",\"c\"]\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= digits.length <= 4\n\n\ndigits[i]\n is a digit in the range \n['2', '9']\n.",
        "temas": [
            "Hash Table",
            "String",
            "Backtracking"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": true
    },
    {
        "id": 16,
        "slug": "3sum-closest",
        "url": "https://leetcode.com/problems/3sum-closest/",
        "titulo": "3Sum Closest",
        "enunciado": "Given an integer array \nnums\n of length \nn\n and an integer \ntarget\n, find three integers in \nnums\n such that the sum is closest to \ntarget\n.\n\n\nReturn \nthe sum of the three integers\n.\n\n\nYou may assume that each input would have exactly one solution.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [-1,2,1,-4], target = 1\n\nOutput:\n 2\n\nExplanation:\n The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,0,0], target = 1\n\nOutput:\n 0\n\nExplanation:\n The sum that is closest to the target is 0. (0 + 0 + 0 = 0).\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 500\n\n\n-1000 <= nums[i] <= 1000\n\n\n-10\n4\n <= target <= 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 15,
        "slug": "3sum",
        "url": "https://leetcode.com/problems/3sum/",
        "titulo": "3Sum",
        "enunciado": "Given an integer array nums, return all the triplets \n[nums[i], nums[j], nums[k]]\n such that \ni != j\n, \ni != k\n, and \nj != k\n, and \nnums[i] + nums[j] + nums[k] == 0\n.\n\n\nNotice that the solution set must not contain duplicate triplets.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n nums = [-1,0,1,2,-1,-4]\n\nOutput:\n [[-1,-1,2],[-1,0,1]]\n\nExplanation:\n \nnums[0] + nums[1] + nums[2] = (-1) + 0 + 1 = 0.\nnums[1] + nums[2] + nums[4] = 0 + 1 + (-1) = 0.\nnums[0] + nums[3] + nums[4] = (-1) + 2 + (-1) = 0.\nThe distinct triplets are [-1,0,1] and [-1,-1,2].\nNotice that the order of the output and the order of the triplets does not matter.\n\n\n\nExample 2:\n\n\n\n\nInput:\n nums = [0,1,1]\n\nOutput:\n []\n\nExplanation:\n The only possible triplet does not sum up to 0.\n\n\n\nExample 3:\n\n\n\n\nInput:\n nums = [0,0,0]\n\nOutput:\n [[0,0,0]]\n\nExplanation:\n The only possible triplet sums up to 0.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n3 <= nums.length <= 3000\n\n\n-10\n5\n <= nums[i] <= 10\n5",
        "temas": [
            "Array",
            "Two Pointers",
            "Sorting"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": false
    },
    {
        "id": 12,
        "slug": "integer-to-roman",
        "url": "https://leetcode.com/problems/integer-to-roman/",
        "titulo": "Integer to Roman",
        "enunciado": "Seven different symbols represent Roman numerals with the following values:\n\n\n\n\n\n\n\n\nSymbol\n\n\nValue\n\n\n\n\n\n\n\n\n\n\nI\n\n\n1\n\n\n\n\n\n\nV\n\n\n5\n\n\n\n\n\n\nX\n\n\n10\n\n\n\n\n\n\nL\n\n\n50\n\n\n\n\n\n\nC\n\n\n100\n\n\n\n\n\n\nD\n\n\n500\n\n\n\n\n\n\nM\n\n\n1000\n\n\n\n\n\n\n\n\nRoman numerals are formed by appending the conversions of decimal place values from highest to lowest. Converting a decimal place value into a Roman numeral has the following rules:\n\n\n\n\nIf the value does not start with 4 or 9, select the symbol of the maximal value that can be subtracted from the input, append that symbol to the result, subtract its value, and convert the remainder to a Roman numeral.\n\n\nIf the value starts with 4 or 9 use the \nsubtractive form\n representing one symbol subtracted from the following symbol, for example, 4 is 1 (\nI\n) less than 5 (\nV\n): \nIV\n and 9 is 1 (\nI\n) less than 10 (\nX\n): \nIX\n. Only the following subtractive forms are used: 4 (\nIV\n), 9 (\nIX\n), 40 (\nXL\n), 90 (\nXC\n), 400 (\nCD\n) and 900 (\nCM\n).\n\n\nOnly powers of 10 (\nI\n, \nX\n, \nC\n, \nM\n) can be appended consecutively at most 3 times to represent multiples of 10. You cannot append 5 (\nV\n), 50 (\nL\n), or 500 (\nD\n) multiple times. If you need to append a symbol 4 times use the \nsubtractive form\n.\n\n\n\n\nGiven an integer, convert it to a Roman numeral.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \nnum = 3749\n\n\nOutput:\n \n\"MMMDCCXLIX\"\n\n\nExplanation:\n\n\n\n3000 = MMM as 1000 (M) + 1000 (M) + 1000 (M)\n 700 = DCC as 500 (D) + 100 (C) + 100 (C)\n  40 = XL as 10 (X) less of 50 (L)\n   9 = IX as 1 (I) less of 10 (X)\nNote: 49 is not 1 (I) less of 50 (L) because the conversion is based on decimal places\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \nnum = 58\n\n\nOutput:\n \n\"LVIII\"\n\n\nExplanation:\n\n\n\n50 = L\n 8 = VIII\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \nnum = 1994\n\n\nOutput:\n \n\"MCMXCIV\"\n\n\nExplanation:\n\n\n\n1000 = M\n 900 = CM\n  90 = XC\n   4 = IV\n\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= num <= 3999",
        "temas": [
            "Hash Table",
            "Math",
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 11,
        "slug": "container-with-most-water",
        "url": "https://leetcode.com/problems/container-with-most-water/",
        "titulo": "Container With Most Water",
        "enunciado": "You are given an integer array \nheight\n of length \nn\n. There are \nn\n vertical lines drawn such that the two endpoints of the \ni\nth\n line are \n(i, 0)\n and \n(i, height[i])\n.\n\n\nFind two lines that together with the x-axis form a container, such that the container contains the most water.\n\n\nReturn \nthe maximum amount of water a container can store\n.\n\n\nNotice\n that you may not slant the container.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n height = [1,8,6,2,5,4,8,3,7]\n\nOutput:\n 49\n\nExplanation:\n The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain is 49.\n\n\n\nExample 2:\n\n\n\n\nInput:\n height = [1,1]\n\nOutput:\n 1\n\n\n\n \n\n\nConstraints:\n\n\n\n\nn == height.length\n\n\n2 <= n <= 10\n5\n\n\n0 <= height[i] <= 10\n4",
        "temas": [
            "Array",
            "Two Pointers",
            "Greedy"
        ],
        "dificuldade": "Média",
        "tema_principal": "Array",
        "has_image": true
    },
    {
        "id": 8,
        "slug": "string-to-integer-atoi",
        "url": "https://leetcode.com/problems/string-to-integer-atoi/",
        "titulo": "String to Integer (atoi)",
        "enunciado": "Implement the \nmyAtoi(string s)\n function, which converts a string to a 32-bit signed integer.\n\n\nThe algorithm for \nmyAtoi(string s)\n is as follows:\n\n\n\n\nWhitespace\n: Ignore any leading whitespace (\n\" \"\n).\n\n\nSignedness\n: Determine the sign by checking if the next character is \n'-'\n or \n'+'\n, assuming positivity if neither present.\n\n\nConversion\n: Read the integer by skipping leading zeros until a non-digit character is encountered or the end of the string is reached. If no digits were read, then the result is 0.\n\n\nRounding\n: If the integer is out of the 32-bit signed integer range \n[-2\n31\n, 2\n31\n - 1]\n, then round the integer to remain in the range. Specifically, integers less than \n-2\n31\n should be rounded to \n-2\n31\n, and integers greater than \n2\n31\n - 1\n should be rounded to \n2\n31\n - 1\n.\n\n\n\n\nReturn the integer as the final result.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n \ns = \"42\"\n\n\nOutput:\n \n42\n\n\nExplanation:\n\n\n\nThe underlined characters are what is read in and the caret is the current reader position.\nStep 1: \"42\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"42\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"\n42\n\" (\"42\" is read in)\n           ^\n\n\n\n\n\nExample 2:\n\n\n\n\nInput:\n \ns = \" -042\"\n\n\nOutput:\n \n-42\n\n\nExplanation:\n\n\n\nStep 1: \"\n   \n-042\" (leading whitespace is read and ignored)\n            ^\nStep 2: \"   \n-\n042\" ('-' is read, so the result should be negative)\n             ^\nStep 3: \"   -\n042\n\" (\"042\" is read in, leading zeros ignored in the result)\n               ^\n\n\n\n\n\nExample 3:\n\n\n\n\nInput:\n \ns = \"1337c0d3\"\n\n\nOutput:\n \n1337\n\n\nExplanation:\n\n\n\nStep 1: \"1337c0d3\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"1337c0d3\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"\n1337\nc0d3\" (\"1337\" is read in; reading stops because the next character is a non-digit)\n             ^\n\n\n\n\n\nExample 4:\n\n\n\n\nInput:\n \ns = \"0-1\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\n\nStep 1: \"0-1\" (no characters read because there is no leading whitespace)\n         ^\nStep 2: \"0-1\" (no characters read because there is neither a '-' nor '+')\n         ^\nStep 3: \"\n0\n-1\" (\"0\" is read in; reading stops because the next character is a non-digit)\n          ^\n\n\n\n\n\nExample 5:\n\n\n\n\nInput:\n \ns = \"words and 987\"\n\n\nOutput:\n \n0\n\n\nExplanation:\n\n\nReading stops at the first non-digit character 'w'.\n\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= s.length <= 200\n\n\ns\n consists of English letters (lower-case and upper-case), digits (\n0-9\n), \n' '\n, \n'+'\n, \n'-'\n, and \n'.'\n.",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 7,
        "slug": "reverse-integer",
        "url": "https://leetcode.com/problems/reverse-integer/",
        "titulo": "Reverse Integer",
        "enunciado": "Given a signed 32-bit integer \nx\n, return \nx\n with its digits reversed\n. If reversing \nx\n causes the value to go outside the signed 32-bit integer range \n[-2\n31\n, 2\n31\n - 1]\n, then return \n0\n.\n\n\nAssume the environment does not allow you to store 64-bit integers (signed or unsigned).\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n x = 123\n\nOutput:\n 321\n\n\n\nExample 2:\n\n\n\n\nInput:\n x = -123\n\nOutput:\n -321\n\n\n\nExample 3:\n\n\n\n\nInput:\n x = 120\n\nOutput:\n 21\n\n\n\n \n\n\nConstraints:\n\n\n\n\n-2\n31\n <= x <= 2\n31\n - 1",
        "temas": [
            "Math"
        ],
        "dificuldade": "Média",
        "tema_principal": "Math",
        "has_image": false
    },
    {
        "id": 6,
        "slug": "zigzag-conversion",
        "url": "https://leetcode.com/problems/zigzag-conversion/",
        "titulo": "Zigzag Conversion",
        "enunciado": "The string \n\"PAYPALISHIRING\"\n is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\n\n\n\nP   A   H   N\nA P L S I I G\nY   I   R\n\n\n\nAnd then read line by line: \n\"PAHNAPLSIIGYIR\"\n\n\nWrite the code that will take a string and make this conversion given a number of rows:\n\n\n\nstring convert(string s, int numRows);\n\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"PAYPALISHIRING\", numRows = 3\n\nOutput:\n \"PAHNAPLSIIGYIR\"\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"PAYPALISHIRING\", numRows = 4\n\nOutput:\n \"PINALSIGYAHRPI\"\n\nExplanation:\n\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"A\", numRows = 1\n\nOutput:\n \"A\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns\n consists of English letters (lower-case and upper-case), \n','\n and \n'.'\n.\n\n\n1 <= numRows <= 1000",
        "temas": [
            "String"
        ],
        "dificuldade": "Média",
        "tema_principal": "String",
        "has_image": false
    },
    {
        "id": 5,
        "slug": "longest-palindromic-substring",
        "url": "https://leetcode.com/problems/longest-palindromic-substring/",
        "titulo": "Longest Palindromic Substring",
        "enunciado": "Given a string \ns\n, return \nthe longest\n \npalindromic\n \nsubstring\n in \ns\n.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"babad\"\n\nOutput:\n \"bab\"\n\nExplanation:\n \"aba\" is also a valid answer.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"cbbd\"\n\nOutput:\n \"bb\"\n\n\n\n \n\n\nConstraints:\n\n\n\n\n1 <= s.length <= 1000\n\n\ns\n consist of only digits and English letters.",
        "temas": [
            "Two Pointers",
            "String",
            "Dynamic Programming"
        ],
        "dificuldade": "Média",
        "tema_principal": "Two Pointers",
        "has_image": false
    },
    {
        "id": 3,
        "slug": "longest-substring-without-repeating-characters",
        "url": "https://leetcode.com/problems/longest-substring-without-repeating-characters/",
        "titulo": "Longest Substring Without Repeating Characters",
        "enunciado": "Given a string \ns\n, find the length of the \nlongest\n \nsubstring\n without duplicate characters.\n\n\n \n\n\nExample 1:\n\n\n\n\nInput:\n s = \"abcabcbb\"\n\nOutput:\n 3\n\nExplanation:\n The answer is \"abc\", with the length of 3.\n\n\n\nExample 2:\n\n\n\n\nInput:\n s = \"bbbbb\"\n\nOutput:\n 1\n\nExplanation:\n The answer is \"b\", with the length of 1.\n\n\n\nExample 3:\n\n\n\n\nInput:\n s = \"pwwkew\"\n\nOutput:\n 3\n\nExplanation:\n The answer is \"wke\", with the length of 3.\nNotice that the answer must be a substring, \"pwke\" is a subsequence and not a substring.\n\n\n\n \n\n\nConstraints:\n\n\n\n\n0 <= s.length <= 5 * 10\n4\n\n\ns\n consists of English letters, digits, symbols and spaces.",
        "temas": [
            "Hash Table",
            "String",
            "Sliding Window"
        ],
        "dificuldade": "Média",
        "tema_principal": "Hash Table",
        "has_image": false
    },
    {
        "id": 2,
        "slug": "add-two-numbers",
        "url": "https://leetcode.com/problems/add-two-numbers/",
        "titulo": "Add Two Numbers",
        "enunciado": "You are given two \nnon-empty\n linked lists representing two non-negative integers. The digits are stored in \nreverse order\n, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\n\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\n\n \n\n\nExample 1:\n\n\n\n\n\n\nInput:\n l1 = [2,4,3], l2 = [5,6,4]\n\nOutput:\n [7,0,8]\n\nExplanation:\n 342 + 465 = 807.\n\n\n\nExample 2:\n\n\n\n\nInput:\n l1 = [0], l2 = [0]\n\nOutput:\n [0]\n\n\n\nExample 3:\n\n\n\n\nInput:\n l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]\n\nOutput:\n [8,9,9,9,0,0,0,1]\n\n\n\n \n\n\nConstraints:\n\n\n\n\nThe number of nodes in each linked list is in the range \n[1, 100]\n.\n\n\n0 <= Node.val <= 9\n\n\nIt is guaranteed that the list represents a number that does not have leading zeros.",
        "temas": [
            "Linked List",
            "Math",
            "Recursion"
        ],
        "dificuldade": "Média",
        "tema_principal": "Linked List",
        "has_image": true
    }
]